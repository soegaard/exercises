<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <meta name="viewport" content="initial-scale=1.0, width=device-width, height=device-height, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta charset="utf-8"/>
    <title></title>
  </head>
  <script>
<![CDATA[
// The following contains the Whalesong runtime.


(function(window, undefined) {
    // dyoo: this library has been modified slightly so it checks to see
    // if window.jQuery has already been installed.  This is to prevent an ugly issue
    // with regards to a memory leak if one tries to repeatedly load jQuery.
    // NOTE: this portion of the file (jquery-protect-header.js) is intentionally
    // unbalanced.  It'll be closed up by jquery-protect-footer.js.
    if (!window.jQuery) {
/*!
 * jQuery JavaScript Library v1.6.2
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Thu Jun 30 14:16:56 2011 -0400
 */
(function( window, undefined ) {

// Use the correct document accordingly with window argument (sandbox)
var document = window.document,
	navigator = window.navigator,
	location = window.location;
var jQuery = (function() {

// Define a local copy of jQuery
var jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// (both of which we optimize for)
	quickExpr = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Check if a string has a non-whitespace character in it
	rnotwhite = /\S/,

	// Used for trimming whitespace
	trimLeft = /^\s+/,
	trimRight = /\s+$/,

	// Check for digits
	rdigit = /\d/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,

	// Useragent RegExp
	rwebkit = /(webkit)[ \/]([\w.]+)/,
	ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
	rmsie = /(msie) ([\w.]+)/,
	rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,

	// Matches dashed string for camelizing
	rdashAlpha = /-([a-z])/ig,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	},

	// Keep a UserAgent string for use with jQuery.browser
	userAgent = navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,

	// The deferred used on DOM ready
	readyList,

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString = Object.prototype.toString,
	hasOwn = Object.prototype.hasOwnProperty,
	push = Array.prototype.push,
	slice = Array.prototype.slice,
	trim = String.prototype.trim,
	indexOf = Array.prototype.indexOf,

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// The body element only exists once, optimize finding it
		if ( selector === "body" && !context && document.body ) {
			this.context = document;
			this[0] = document.body;
			this.selector = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			// Are we dealing with HTML string or an ID?
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = quickExpr.exec( selector );
			}

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = (context ? context.ownerDocument || context : document);

					// If a single string is passed in and it's a single tag
					// just do a createElement and skip the rest
					ret = rsingleTag.exec( selector );

					if ( ret ) {
						if ( jQuery.isPlainObject( context ) ) {
							selector = [ document.createElement( ret[1] ) ];
							jQuery.fn.attr.call( selector, context, true );

						} else {
							selector = [ doc.createElement( ret[1] ) ];
						}

					} else {
						ret = jQuery.buildFragment( [ match[1] ], [ doc ] );
						selector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes;
					}

					return jQuery.merge( this, selector );

				// HANDLE: $("#id")
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return (context || rootjQuery).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if (selector.selector !== undefined) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.6.2",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return slice.call( this, 0 );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret = this.constructor();

		if ( jQuery.isArray( elems ) ) {
			push.apply( ret, elems );

		} else {
			jQuery.merge( ret, elems );
		}

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + (this.selector ? " " : "") + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Attach the listeners
		jQuery.bindReady();

		// Add the callback
		readyList.done( fn );

		return this;
	},

	eq: function( i ) {
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, +i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ),
			"slice", slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {
		// Either a released hold or an DOMready/load event and not yet ready
		if ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {
			// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
			if ( !document.body ) {
				return setTimeout( jQuery.ready, 1 );
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.trigger ) {
				jQuery( document ).trigger( "ready" ).unbind( "ready" );
			}
		}
	},

	bindReady: function() {
		if ( readyList ) {
			return;
		}

		readyList = jQuery._Deferred();

		// Catch cases where $(document).ready() is called after the
		// browser event has already occurred.
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			return setTimeout( jQuery.ready, 1 );
		}

		// Mozilla, Opera and webkit nightlies currently support this event
		if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else if ( document.attachEvent ) {
			// ensure firing before onload,
			// maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var toplevel = false;

			try {
				toplevel = window.frameElement == null;
			} catch(e) {}

			if ( document.documentElement.doScroll && toplevel ) {
				doScrollCheck();
			}
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	// A crude way of determining if an object is a window
	isWindow: function( obj ) {
		return obj && typeof obj === "object" && "setInterval" in obj;
	},

	isNaN: function( obj ) {
		return obj == null || !rdigit.test( obj ) || isNaN( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		// Not own constructor property must be Object
		if ( obj.constructor &&
			!hasOwn.call(obj, "constructor") &&
			!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		for ( var name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw msg;
	},

	parseJSON: function( data ) {
		if ( typeof data !== "string" || !data ) {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return (new Function( "return " + data ))();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	// (xml & tmp used internally)
	parseXML: function( data , xml , tmp ) {

		if ( window.DOMParser ) { // Standard
			tmp = new DOMParser();
			xml = tmp.parseFromString( data , "text/xml" );
		} else { // IE
			xml = new ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}

		tmp = xml.documentElement;

		if ( ! tmp || ! tmp.nodeName || tmp.nodeName === "parsererror" ) {
			jQuery.error( "Invalid XML: " + data );
		}

		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Converts a dashed string to camelCased string;
	// Used by both the css and data modules
	camelCase: function( string ) {
		return string.replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i = 0,
			length = object.length,
			isObj = length === undefined || jQuery.isFunction( object );

		if ( args ) {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.apply( object[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( object[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return object;
	},

	// Use native String.trim function wherever possible
	trim: trim ?
		function( text ) {
			return text == null ?
				"" :
				trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				text.toString().replace( trimLeft, "" ).replace( trimRight, "" );
		},

	// results is for internal usage only
	makeArray: function( array, results ) {
		var ret = results || [];

		if ( array != null ) {
			// The window, strings (and functions) also have 'length'
			// The extra typeof function check is to prevent crashes
			// in Safari 2 (See: #3039)
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			var type = jQuery.type( array );

			if ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {
				push.call( ret, array );
			} else {
				jQuery.merge( ret, array );
			}
		}

		return ret;
	},

	inArray: function( elem, array ) {

		if ( indexOf ) {
			return indexOf.call( array, elem );
		}

		for ( var i = 0, length = array.length; i < length; i++ ) {
			if ( array[ i ] === elem ) {
				return i;
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var i = first.length,
			j = 0;

		if ( typeof second.length === "number" ) {
			for ( var l = second.length; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var ret = [], retVal;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i = 0, length = elems.length; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key, ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		if ( typeof context === "string" ) {
			var tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		var args = slice.call( arguments, 2 ),
			proxy = function() {
				return fn.apply( context, args.concat( slice.call( arguments ) ) );
			};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;

		return proxy;
	},

	// Mutifunctional method to get and set values to a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, key, value, exec, fn, pass ) {
		var length = elems.length;

		// Setting many attributes
		if ( typeof key === "object" ) {
			for ( var k in key ) {
				jQuery.access( elems, k, key[k], exec, fn, value );
			}
			return elems;
		}

		// Setting one attribute
		if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = !pass && exec && jQuery.isFunction(value);

			for ( var i = 0; i < length; i++ ) {
				fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
			}

			return elems;
		}

		// Getting an attribute
		return length ? fn( elems[0], key ) : undefined;
	},

	now: function() {
		return (new Date()).getTime();
	},

	// Use of jQuery.browser is frowned upon.
	// More details: http://docs.jquery.com/Utilities/jQuery.browser
	uaMatch: function( ua ) {
		ua = ua.toLowerCase();

		var match = rwebkit.exec( ua ) ||
			ropera.exec( ua ) ||
			rmsie.exec( ua ) ||
			ua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||
			[];

		return { browser: match[1] || "", version: match[2] || "0" };
	},

	sub: function() {
		function jQuerySub( selector, context ) {
			return new jQuerySub.fn.init( selector, context );
		}
		jQuery.extend( true, jQuerySub, this );
		jQuerySub.superclass = this;
		jQuerySub.fn = jQuerySub.prototype = this();
		jQuerySub.fn.constructor = jQuerySub;
		jQuerySub.sub = this.sub;
		jQuerySub.fn.init = function init( selector, context ) {
			if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
				context = jQuerySub( context );
			}

			return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
		};
		jQuerySub.fn.init.prototype = jQuerySub.fn;
		var rootjQuerySub = jQuerySub(document);
		return jQuerySub;
	},

	browser: {}
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

browserMatch = jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
	jQuery.browser[ browserMatch.browser ] = true;
	jQuery.browser.version = browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
	jQuery.browser.safari = true;
}

// IE doesn't match non-breaking spaces with \s
if ( rnotwhite.test( "\xA0" ) ) {
	trimLeft = /^[\s\xA0]+/;
	trimRight = /[\s\xA0]+$/;
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
	DOMContentLoaded = function() {
		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
		jQuery.ready();
	};

} else if ( document.attachEvent ) {
	DOMContentLoaded = function() {
		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( document.readyState === "complete" ) {
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	};
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
	if ( jQuery.isReady ) {
		return;
	}

	try {
		// If IE is used, use the trick by Diego Perini
		// http://javascript.nwbox.com/IEContentLoaded/
		document.documentElement.doScroll("left");
	} catch(e) {
		setTimeout( doScrollCheck, 1 );
		return;
	}

	// and execute any waiting functions
	jQuery.ready();
}

return jQuery;

})();


var // Promise methods
	promiseMethods = "done fail isResolved isRejected promise then always pipe".split( " " ),
	// Static reference to slice
	sliceDeferred = [].slice;

jQuery.extend({
	// Create a simple deferred (one callbacks list)
	_Deferred: function() {
		var // callbacks list
			callbacks = [],
			// stored [ context , args ]
			fired,
			// to avoid firing when already doing so
			firing,
			// flag to know if the deferred has been cancelled
			cancelled,
			// the deferred itself
			deferred  = {

				// done( f1, f2, ...)
				done: function() {
					if ( !cancelled ) {
						var args = arguments,
							i,
							length,
							elem,
							type,
							_fired;
						if ( fired ) {
							_fired = fired;
							fired = 0;
						}
						for ( i = 0, length = args.length; i < length; i++ ) {
							elem = args[ i ];
							type = jQuery.type( elem );
							if ( type === "array" ) {
								deferred.done.apply( deferred, elem );
							} else if ( type === "function" ) {
								callbacks.push( elem );
							}
						}
						if ( _fired ) {
							deferred.resolveWith( _fired[ 0 ], _fired[ 1 ] );
						}
					}
					return this;
				},

				// resolve with given context and args
				resolveWith: function( context, args ) {
					if ( !cancelled && !fired && !firing ) {
						// make sure args are available (#8421)
						args = args || [];
						firing = 1;
						try {
							while( callbacks[ 0 ] ) {
								callbacks.shift().apply( context, args );
							}
						}
						finally {
							fired = [ context, args ];
							firing = 0;
						}
					}
					return this;
				},

				// resolve with this as context and given arguments
				resolve: function() {
					deferred.resolveWith( this, arguments );
					return this;
				},

				// Has this deferred been resolved?
				isResolved: function() {
					return !!( firing || fired );
				},

				// Cancel
				cancel: function() {
					cancelled = 1;
					callbacks = [];
					return this;
				}
			};

		return deferred;
	},

	// Full fledged deferred (two callbacks list)
	Deferred: function( func ) {
		var deferred = jQuery._Deferred(),
			failDeferred = jQuery._Deferred(),
			promise;
		// Add errorDeferred methods, then and promise
		jQuery.extend( deferred, {
			then: function( doneCallbacks, failCallbacks ) {
				deferred.done( doneCallbacks ).fail( failCallbacks );
				return this;
			},
			always: function() {
				return deferred.done.apply( deferred, arguments ).fail.apply( this, arguments );
			},
			fail: failDeferred.done,
			rejectWith: failDeferred.resolveWith,
			reject: failDeferred.resolve,
			isRejected: failDeferred.isResolved,
			pipe: function( fnDone, fnFail ) {
				return jQuery.Deferred(function( newDefer ) {
					jQuery.each( {
						done: [ fnDone, "resolve" ],
						fail: [ fnFail, "reject" ]
					}, function( handler, data ) {
						var fn = data[ 0 ],
							action = data[ 1 ],
							returned;
						if ( jQuery.isFunction( fn ) ) {
							deferred[ handler ](function() {
								returned = fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise().then( newDefer.resolve, newDefer.reject );
								} else {
									newDefer[ action ]( returned );
								}
							});
						} else {
							deferred[ handler ]( newDefer[ action ] );
						}
					});
				}).promise();
			},
			// Get a promise for this deferred
			// If obj is provided, the promise aspect is added to the object
			promise: function( obj ) {
				if ( obj == null ) {
					if ( promise ) {
						return promise;
					}
					promise = obj = {};
				}
				var i = promiseMethods.length;
				while( i-- ) {
					obj[ promiseMethods[i] ] = deferred[ promiseMethods[i] ];
				}
				return obj;
			}
		});
		// Make sure only one callback list will be used
		deferred.done( failDeferred.cancel ).fail( deferred.cancel );
		// Unexpose cancel
		delete deferred.cancel;
		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}
		return deferred;
	},

	// Deferred helper
	when: function( firstParam ) {
		var args = arguments,
			i = 0,
			length = args.length,
			count = length,
			deferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?
				firstParam :
				jQuery.Deferred();
		function resolveFunc( i ) {
			return function( value ) {
				args[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				if ( !( --count ) ) {
					// Strange bug in FF4:
					// Values changed onto the arguments object sometimes end up as undefined values
					// outside the $.when method. Cloning the object into a fresh array solves the issue
					deferred.resolveWith( deferred, sliceDeferred.call( args, 0 ) );
				}
			};
		}
		if ( length > 1 ) {
			for( ; i < length; i++ ) {
				if ( args[ i ] && jQuery.isFunction( args[ i ].promise ) ) {
					args[ i ].promise().then( resolveFunc(i), deferred.reject );
				} else {
					--count;
				}
			}
			if ( !count ) {
				deferred.resolveWith( deferred, args );
			}
		} else if ( deferred !== firstParam ) {
			deferred.resolveWith( deferred, length ? [ firstParam ] : [] );
		}
		return deferred.promise();
	}
});



jQuery.support = (function() {

	var div = document.createElement( "div" ),
		documentElement = document.documentElement,
		all,
		a,
		select,
		opt,
		input,
		marginDiv,
		support,
		fragment,
		body,
		testElementParent,
		testElement,
		testElementStyle,
		tds,
		events,
		eventName,
		i,
		isSupported;

	// Preliminary tests
	div.setAttribute("className", "t");
	div.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";

	all = div.getElementsByTagName( "*" );
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return {};
	}

	// First batch of supports tests
	select = document.createElement( "select" );
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName( "input" )[ 0 ];

	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName( "tbody" ).length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName( "link" ).length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute( "href" ) === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.55$/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent( "onclick" );
	}

	// Check if a radio maintains it's value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute("type", "radio");
	support.radioValue = input.value === "t";

	input.setAttribute("checked", "checked");
	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.firstChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	div.innerHTML = "";

	// Figure out if the W3C box model works as expected
	div.style.width = div.style.paddingLeft = "1px";

	body = document.getElementsByTagName( "body" )[ 0 ];
	// We use our own, invisible, body unless the body is already present
	// in which case we use a div (#9239)
	testElement = document.createElement( body ? "div" : "body" );
	testElementStyle = {
		visibility: "hidden",
		width: 0,
		height: 0,
		border: 0,
		margin: 0
	};
	if ( body ) {
		jQuery.extend( testElementStyle, {
			position: "absolute",
			left: -1000,
			top: -1000
		});
	}
	for ( i in testElementStyle ) {
		testElement.style[ i ] = testElementStyle[ i ];
	}
	testElement.appendChild( div );
	testElementParent = body || documentElement;
	testElementParent.insertBefore( testElement, testElementParent.firstChild );

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	support.boxModel = div.offsetWidth === 2;

	if ( "zoom" in div.style ) {
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		// (IE < 8 does this)
		div.style.display = "inline";
		div.style.zoom = 1;
		support.inlineBlockNeedsLayout = ( div.offsetWidth === 2 );

		// Check if elements with layout shrink-wrap their children
		// (IE 6 does this)
		div.style.display = "";
		div.innerHTML = "<div style='width:4px;'></div>";
		support.shrinkWrapBlocks = ( div.offsetWidth !== 2 );
	}

	div.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
	tds = div.getElementsByTagName( "td" );

	// Check if table cells still have offsetWidth/Height when they are set
	// to display:none and there are still other visible table cells in a
	// table row; if so, offsetWidth/Height are not reliable for use when
	// determining if an element has been hidden directly using
	// display:none (it is still safe to use offsets if a parent element is
	// hidden; don safety goggles and see bug #4512 for more information).
	// (only IE 8 fails this test)
	isSupported = ( tds[ 0 ].offsetHeight === 0 );

	tds[ 0 ].style.display = "";
	tds[ 1 ].style.display = "none";

	// Check if empty table cells still have offsetWidth/Height
	// (IE < 8 fail this test)
	support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );
	div.innerHTML = "";

	// Check if div with explicit width and no margin-right incorrectly
	// gets computed margin-right based on width of container. For more
	// info see bug #3333
	// Fails in WebKit before Feb 2011 nightlies
	// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
	if ( document.defaultView && document.defaultView.getComputedStyle ) {
		marginDiv = document.createElement( "div" );
		marginDiv.style.width = "0";
		marginDiv.style.marginRight = "0";
		div.appendChild( marginDiv );
		support.reliableMarginRight =
			( parseInt( ( document.defaultView.getComputedStyle( marginDiv, null ) || { marginRight: 0 } ).marginRight, 10 ) || 0 ) === 0;
	}

	// Remove the body element we added
	testElement.innerHTML = "";
	testElementParent.removeChild( testElement );

	// Technique from Juriy Zaytsev
	// http://thinkweb2.com/projects/prototype/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for( i in {
			submit: 1,
			change: 1,
			focusin: 1
		} ) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	// Null connected elements to avoid leaks in IE
	testElement = fragment = select = opt = body = marginDiv = div = input = null;

	return support;
})();

// Keep track of boxModel
jQuery.boxModel = jQuery.support.boxModel;




var rbrace = /^(?:\{.*\}|\[.*\])$/,
	rmultiDash = /([a-z])([A-Z])/g;

jQuery.extend({
	cache: {},

	// Please use with caution
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];

		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var internalKey = jQuery.expando, getByName = typeof name === "string", thisCache,

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ jQuery.expando ] : elem[ jQuery.expando ] && jQuery.expando;

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || (pvt && id && !cache[ id ][ internalKey ])) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ jQuery.expando ] = id = ++jQuery.uuid;
			} else {
				id = jQuery.expando;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// TODO: This is a hack for 1.5 ONLY. Avoids exposing jQuery
			// metadata on plain JS objects when the object is serialized using
			// JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ][ internalKey ] = jQuery.extend(cache[ id ][ internalKey ], name);
			} else {
				cache[ id ] = jQuery.extend(cache[ id ], name);
			}
		}

		thisCache = cache[ id ];

		// Internal jQuery data is stored in a separate object inside the object's data
		// cache in order to avoid key collisions between internal data and user-defined
		// data
		if ( pvt ) {
			if ( !thisCache[ internalKey ] ) {
				thisCache[ internalKey ] = {};
			}

			thisCache = thisCache[ internalKey ];
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// TODO: This is a hack for 1.5 ONLY. It will be removed in 1.6. Users should
		// not attempt to inspect the internal events object using jQuery.data, as this
		// internal data object is undocumented and subject to change.
		if ( name === "events" && !thisCache[name] ) {
			return thisCache[ internalKey ] && thisCache[ internalKey ].events;
		}

		return getByName ? 
			// Check for both converted-to-camel and non-converted data property names
			thisCache[ jQuery.camelCase( name ) ] || thisCache[ name ] :
			thisCache;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var internalKey = jQuery.expando, isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,

			// See jQuery.data for more information
			id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {
			var thisCache = pvt ? cache[ id ][ internalKey ] : cache[ id ];

			if ( thisCache ) {
				delete thisCache[ name ];

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !isEmptyDataObject(thisCache) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( pvt ) {
			delete cache[ id ][ internalKey ];

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject(cache[ id ]) ) {
				return;
			}
		}

		var internalCache = cache[ id ][ internalKey ];

		// Browsers that fail expando deletion also refuse to delete expandos on
		// the window, but it will allow it on all other JS objects; other browsers
		// don't care
		if ( jQuery.support.deleteExpando || cache != window ) {
			delete cache[ id ];
		} else {
			cache[ id ] = null;
		}

		// We destroyed the entire user cache at once because it's faster than
		// iterating through each key, but we need to continue to persist internal
		// data if it existed
		if ( internalCache ) {
			cache[ id ] = {};
			// TODO: This is a hack for 1.5 ONLY. Avoids exposing jQuery
			// metadata on plain JS objects when the object is serialized using
			// JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}

			cache[ id ][ internalKey ] = internalCache;

		// Otherwise, we need to eliminate the expando on the node to avoid
		// false lookups in the cache for entries that no longer exist
		} else if ( isNode ) {
			// IE does not allow us to delete expando properties from nodes,
			// nor does it have a removeAttribute function on Document nodes;
			// we must handle all of these cases
			if ( jQuery.support.deleteExpando ) {
				delete elem[ jQuery.expando ];
			} else if ( elem.removeAttribute ) {
				elem.removeAttribute( jQuery.expando );
			} else {
				elem[ jQuery.expando ] = null;
			}
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		if ( elem.nodeName ) {
			var match = jQuery.noData[ elem.nodeName.toLowerCase() ];

			if ( match ) {
				return !(match === true || elem.getAttribute("classid") !== match);
			}
		}

		return true;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var data = null;

		if ( typeof key === "undefined" ) {
			if ( this.length ) {
				data = jQuery.data( this[0] );

				if ( this[0].nodeType === 1 ) {
			    var attr = this[0].attributes, name;
					for ( var i = 0, l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( name.indexOf( "data-" ) === 0 ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( this[0], name, data[ name ] );
						}
					}
				}
			}

			return data;

		} else if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		var parts = key.split(".");
		parts[1] = parts[1] ? "." + parts[1] : "";

		if ( value === undefined ) {
			data = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);

			// Try to fetch any internally stored data first
			if ( data === undefined && this.length ) {
				data = jQuery.data( this[0], key );
				data = dataAttr( this[0], key, data );
			}

			return data === undefined && parts[1] ?
				this.data( parts[0] ) :
				data;

		} else {
			return this.each(function() {
				var $this = jQuery( this ),
					args = [ parts[0], value ];

				$this.triggerHandler( "setData" + parts[1] + "!", args );
				jQuery.data( this, key, value );
				$this.triggerHandler( "changeData" + parts[1] + "!", args );
			});
		}
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		var name = "data-" + key.replace( rmultiDash, "$1-$2" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				!jQuery.isNaN( data ) ? parseFloat( data ) :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// TODO: This is a hack for 1.5 ONLY to allow objects with a single toJSON
// property to be considered empty objects; this property always exists in
// order to make sure JSON.stringify does not expose internal metadata
function isEmptyDataObject( obj ) {
	for ( var name in obj ) {
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}




function handleQueueMarkDefer( elem, type, src ) {
	var deferDataKey = type + "defer",
		queueDataKey = type + "queue",
		markDataKey = type + "mark",
		defer = jQuery.data( elem, deferDataKey, undefined, true );
	if ( defer &&
		( src === "queue" || !jQuery.data( elem, queueDataKey, undefined, true ) ) &&
		( src === "mark" || !jQuery.data( elem, markDataKey, undefined, true ) ) ) {
		// Give room for hard-coded callbacks to fire first
		// and eventually mark/queue something else on the element
		setTimeout( function() {
			if ( !jQuery.data( elem, queueDataKey, undefined, true ) &&
				!jQuery.data( elem, markDataKey, undefined, true ) ) {
				jQuery.removeData( elem, deferDataKey, true );
				defer.resolve();
			}
		}, 0 );
	}
}

jQuery.extend({

	_mark: function( elem, type ) {
		if ( elem ) {
			type = (type || "fx") + "mark";
			jQuery.data( elem, type, (jQuery.data(elem,type,undefined,true) || 0) + 1, true );
		}
	},

	_unmark: function( force, elem, type ) {
		if ( force !== true ) {
			type = elem;
			elem = force;
			force = false;
		}
		if ( elem ) {
			type = type || "fx";
			var key = type + "mark",
				count = force ? 0 : ( (jQuery.data( elem, key, undefined, true) || 1 ) - 1 );
			if ( count ) {
				jQuery.data( elem, key, count, true );
			} else {
				jQuery.removeData( elem, key, true );
				handleQueueMarkDefer( elem, type, "mark" );
			}
		}
	},

	queue: function( elem, type, data ) {
		if ( elem ) {
			type = (type || "fx") + "queue";
			var q = jQuery.data( elem, type, undefined, true );
			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !q || jQuery.isArray(data) ) {
					q = jQuery.data( elem, type, jQuery.makeArray(data), true );
				} else {
					q.push( data );
				}
			}
			return q || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			fn = queue.shift(),
			defer;

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
		}

		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift("inprogress");
			}

			fn.call(elem, function() {
				jQuery.dequeue(elem, type);
			});
		}

		if ( !queue.length ) {
			jQuery.removeData( elem, type + "queue", true );
			handleQueueMarkDefer( elem, type, "queue" );
		}
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
		}

		if ( data === undefined ) {
			return jQuery.queue( this[0], type );
		}
		return this.each(function() {
			var queue = jQuery.queue( this, type, data );

			if ( type === "fx" && queue[0] !== "inprogress" ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
		type = type || "fx";

		return this.queue( type, function() {
			var elem = this;
			setTimeout(function() {
				jQuery.dequeue( elem, type );
			}, time );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, object ) {
		if ( typeof type !== "string" ) {
			object = type;
			type = undefined;
		}
		type = type || "fx";
		var defer = jQuery.Deferred(),
			elements = this,
			i = elements.length,
			count = 1,
			deferDataKey = type + "defer",
			queueDataKey = type + "queue",
			markDataKey = type + "mark",
			tmp;
		function resolve() {
			if ( !( --count ) ) {
				defer.resolveWith( elements, [ elements ] );
			}
		}
		while( i-- ) {
			if (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||
					( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||
						jQuery.data( elements[ i ], markDataKey, undefined, true ) ) &&
					jQuery.data( elements[ i ], deferDataKey, jQuery._Deferred(), true ) )) {
				count++;
				tmp.done( resolve );
			}
		}
		resolve();
		return defer.promise();
	}
});




var rclass = /[\n\t\r]/g,
	rspace = /\s+/,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea)?$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	rinvalidChar = /\:|^on/,
	formHook, boolHook;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, name, value, true, jQuery.attr );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},
	
	prop: function( name, value ) {
		return jQuery.access( this, name, value, true, jQuery.prop );
	},
	
	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, i, l, elem, className, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}

		if ( (value && typeof value === "string") || value === undefined ) {
			classNames = (value || "").split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 && elem.className ) {
					if ( value ) {
						className = (" " + elem.className + " ").replace( rclass, " " );
						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							className = className.replace(" " + classNames[ c ] + " ", " ");
						}
						elem.className = jQuery.trim( className );

					} else {
						elem.className = "";
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space seperated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ";
		for ( var i = 0, l = this.length; i < l; i++ ) {
			if ( (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret,
			elem = this[0];
		
		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.nodeName.toLowerCase() ] || jQuery.valHooks[ elem.type ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ? 
					// handle most common string cases
					ret.replace(rreturn, "") : 
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return undefined;
		}

		var isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var self = jQuery(this), val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.nodeName.toLowerCase() ] || jQuery.valHooks[ this.type ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value,
					index = elem.selectedIndex,
					values = [],
					options = elem.options,
					one = elem.type === "select-one";

				// Nothing was selected
				if ( index < 0 ) {
					return null;
				}

				// Loop through all the selected options
				for ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {
					var option = options[ i ];

					// Don't return options that are disabled or in a disabled optgroup
					if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()
				if ( one && !values.length && options.length ) {
					return jQuery( options[ index ] ).val();
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	attrFn: {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true
	},
	
	attrFix: {
		// Always normalize to ensure hook usage
		tabindex: "tabIndex"
	},
	
	attr: function( elem, name, value, pass ) {
		var nType = elem.nodeType;
		
		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return undefined;
		}

		if ( pass && name in jQuery.attrFn ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( !("getAttribute" in elem) ) {
			return jQuery.prop( elem, name, value );
		}

		var ret, hooks,
			notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// Normalize the name if needed
		if ( notxml ) {
			name = jQuery.attrFix[ name ] || name;

			hooks = jQuery.attrHooks[ name ];

			if ( !hooks ) {
				// Use boolHook for boolean attributes
				if ( rboolean.test( name ) ) {

					hooks = boolHook;

				// Use formHook for forms and if the name contains certain characters
				} else if ( formHook && name !== "className" &&
					(jQuery.nodeName( elem, "form" ) || rinvalidChar.test( name )) ) {

					hooks = formHook;
				}
			}
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return undefined;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, "" + value );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, name ) {
		var propName;
		if ( elem.nodeType === 1 ) {
			name = jQuery.attrFix[ name ] || name;
		
			if ( jQuery.support.getSetAttribute ) {
				// Use removeAttribute in browsers that support it
				elem.removeAttribute( name );
			} else {
				jQuery.attr( elem, name, "" );
				elem.removeAttributeNode( elem.getAttributeNode( name ) );
			}

			// Set corresponding property to false for boolean attributes
			if ( rboolean.test( name ) && (propName = jQuery.propFix[ name ] || name) in elem ) {
				elem[ propName ] = false;
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabIndex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		},
		// Use the value property for back compat
		// Use the formHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( formHook && jQuery.nodeName( elem, "button" ) ) {
					return formHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( formHook && jQuery.nodeName( elem, "button" ) ) {
					return formHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},
	
	prop: function( elem, name, value ) {
		var nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return undefined;
		}

		var ret, hooks,
			notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return (elem[ name ] = value);
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== undefined ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},
	
	propHooks: {}
});

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		return jQuery.prop( elem, name ) ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !jQuery.support.getSetAttribute ) {

	// propFix is more comprehensive and contains all fixes
	jQuery.attrFix = jQuery.propFix;
	
	// Use this for any attribute on a form in IE6/7
	formHook = jQuery.attrHooks.name = jQuery.attrHooks.title = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			// Return undefined if nodeValue is empty string
			return ret && ret.nodeValue !== "" ?
				ret.nodeValue :
				undefined;
		},
		set: function( elem, value, name ) {
			// Check form objects in IE (multiple bugs related)
			// Only use nodeValue if the attribute node exists on the form
			var ret = elem.getAttributeNode( name );
			if ( ret ) {
				ret.nodeValue = value;
				return value;
			}
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return (elem.style.cssText = "" + value);
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	});
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return (elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0);
			}
		}
	});
});




var rnamespaces = /\.(.*)$/,
	rformElems = /^(?:textarea|input|select)$/i,
	rperiod = /\./g,
	rspaces = / /g,
	rescape = /[^\w\s.|`]/g,
	fcleanup = function( nm ) {
		return nm.replace(rescape, "\\$&");
	};

/*
 * A number of helper functions used for managing events.
 * Many of the ideas behind this code originated from
 * Dean Edwards' addEvent library.
 */
jQuery.event = {

	// Bind an event to an element
	// Original by Dean Edwards
	add: function( elem, types, handler, data ) {
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		if ( handler === false ) {
			handler = returnFalse;
		} else if ( !handler ) {
			// Fixes bug #7229. Fix recommended by jdalton
			return;
		}

		var handleObjIn, handleObj;

		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
		}

		// Make sure that the function being executed has a unique ID
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure
		var elemData = jQuery._data( elem );

		// If no elemData is found then we must be trying to bind to one of the
		// banned noData elements
		if ( !elemData ) {
			return;
		}

		var events = elemData.events,
			eventHandle = elemData.handle;

		if ( !events ) {
			elemData.events = events = {};
		}

		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.handle.apply( eventHandle.elem, arguments ) :
					undefined;
			};
		}

		// Add elem as a property of the handle function
		// This is to prevent a memory leak with non-native events in IE.
		eventHandle.elem = elem;

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = types.split(" ");

		var type, i = 0, namespaces;

		while ( (type = types[ i++ ]) ) {
			handleObj = handleObjIn ?
				jQuery.extend({}, handleObjIn) :
				{ handler: handler, data: data };

			// Namespaced event handlers
			if ( type.indexOf(".") > -1 ) {
				namespaces = type.split(".");
				type = namespaces.shift();
				handleObj.namespace = namespaces.slice(0).sort().join(".");

			} else {
				namespaces = [];
				handleObj.namespace = "";
			}

			handleObj.type = type;
			if ( !handleObj.guid ) {
				handleObj.guid = handler.guid;
			}

			// Get the current list of functions bound to this event
			var handlers = events[ type ],
				special = jQuery.event.special[ type ] || {};

			// Init the event handler queue
			if ( !handlers ) {
				handlers = events[ type ] = [];

				// Check for a special event handler
				// Only use addEventListener/attachEvent if the special
				// events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add the function to the element's handler list
			handlers.push( handleObj );

			// Keep track of which events have been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, pos ) {
		// don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		if ( handler === false ) {
			handler = returnFalse;
		}

		var ret, type, fn, j, i = 0, all, namespaces, namespace, special, eventType, handleObj, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem ),
			events = elemData && elemData.events;

		if ( !elemData || !events ) {
			return;
		}

		// types is actually an event object here
		if ( types && types.type ) {
			handler = types.handler;
			types = types.type;
		}

		// Unbind all events for the element
		if ( !types || typeof types === "string" && types.charAt(0) === "." ) {
			types = types || "";

			for ( type in events ) {
				jQuery.event.remove( elem, type + types );
			}

			return;
		}

		// Handle multiple events separated by a space
		// jQuery(...).unbind("mouseover mouseout", fn);
		types = types.split(" ");

		while ( (type = types[ i++ ]) ) {
			origType = type;
			handleObj = null;
			all = type.indexOf(".") < 0;
			namespaces = [];

			if ( !all ) {
				// Namespaced event handlers
				namespaces = type.split(".");
				type = namespaces.shift();

				namespace = new RegExp("(^|\\.)" +
					jQuery.map( namespaces.slice(0).sort(), fcleanup ).join("\\.(?:.*\\.)?") + "(\\.|$)");
			}

			eventType = events[ type ];

			if ( !eventType ) {
				continue;
			}

			if ( !handler ) {
				for ( j = 0; j < eventType.length; j++ ) {
					handleObj = eventType[ j ];

					if ( all || namespace.test( handleObj.namespace ) ) {
						jQuery.event.remove( elem, origType, handleObj.handler, j );
						eventType.splice( j--, 1 );
					}
				}

				continue;
			}

			special = jQuery.event.special[ type ] || {};

			for ( j = pos || 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( handler.guid === handleObj.guid ) {
					// remove the given handler for the given type
					if ( all || namespace.test( handleObj.namespace ) ) {
						if ( pos == null ) {
							eventType.splice( j--, 1 );
						}

						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}

					if ( pos != null ) {
						break;
					}
				}
			}

			// remove generic event handler if no more handlers exist
			if ( eventType.length === 0 || pos != null && eventType.length === 1 ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				ret = null;
				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			var handle = elemData.handle;
			if ( handle ) {
				handle.elem = null;
			}

			delete elemData.events;
			delete elemData.handle;

			if ( jQuery.isEmptyObject( elemData ) ) {
				jQuery.removeData( elem, undefined, true );
			}
		}
	},
	
	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Event object or event type
		var type = event.type || event,
			namespaces = [],
			exclusive;

		if ( type.indexOf("!") >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.exclusive = exclusive;
		event.namespace = namespaces.join(".");
		event.namespace_re = new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") + "(\\.|$)");
		
		// triggerHandler() and global events don't bubble or run the default action
		if ( onlyHandlers || !elem ) {
			event.preventDefault();
			event.stopPropagation();
		}

		// Handle a global trigger
		if ( !elem ) {
			// TODO: Stop taunting the data cache; remove global events and always attach to document
			jQuery.each( jQuery.cache, function() {
				// internalKey variable is just used to make it easier to find
				// and potentially change this stuff later; currently it just
				// points to jQuery.expando
				var internalKey = jQuery.expando,
					internalCache = this[ internalKey ];
				if ( internalCache && internalCache.events && internalCache.events[ type ] ) {
					jQuery.event.trigger( event, data, internalCache.handle.elem );
				}
			});
			return;
		}

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		event.target = elem;

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		var cur = elem,
			// IE doesn't like method names with a colon (#3533, #8272)
			ontype = type.indexOf(":") < 0 ? "on" + type : "";

		// Fire event on the current element, then bubble up the DOM tree
		do {
			var handle = jQuery._data( cur, "handle" );

			event.currentTarget = cur;
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Trigger an inline bound script
			if ( ontype && jQuery.acceptData( cur ) && cur[ ontype ] && cur[ ontype ].apply( cur, data ) === false ) {
				event.result = false;
				event.preventDefault();
			}

			// Bubble up to document, then to window
			cur = cur.parentNode || cur.ownerDocument || cur === event.target.ownerDocument && window;
		} while ( cur && !event.isPropagationStopped() );

		// If nobody prevented the default action, do it now
		if ( !event.isDefaultPrevented() ) {
			var old,
				special = jQuery.event.special[ type ] || {};

			if ( (!special._default || special._default.call( elem.ownerDocument, event ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction)() check here because IE6/7 fails that test.
				// IE<9 dies on focus to hidden element (#1486), may want to revisit a try/catch.
				try {
					if ( ontype && elem[ type ] ) {
						// Don't re-trigger an onFOO event when we call its FOO() method
						old = elem[ ontype ];

						if ( old ) {
							elem[ ontype ] = null;
						}

						jQuery.event.triggered = type;
						elem[ type ]();
					}
				} catch ( ieError ) {}

				if ( old ) {
					elem[ ontype ] = old;
				}

				jQuery.event.triggered = undefined;
			}
		}
		
		return event.result;
	},

	handle: function( event ) {
		event = jQuery.event.fix( event || window.event );
		// Snapshot the handlers list since a called handler may add/remove events.
		var handlers = ((jQuery._data( this, "events" ) || {})[ event.type ] || []).slice(0),
			run_all = !event.exclusive && !event.namespace,
			args = Array.prototype.slice.call( arguments, 0 );

		// Use the fix-ed Event rather than the (read-only) native event
		args[0] = event;
		event.currentTarget = this;

		for ( var j = 0, l = handlers.length; j < l; j++ ) {
			var handleObj = handlers[ j ];

			// Triggered event must 1) be non-exclusive and have no namespace, or
			// 2) have namespace(s) a subset or equal to those in the bound event.
			if ( run_all || event.namespace_re.test( handleObj.namespace ) ) {
				// Pass in a reference to the handler function itself
				// So that we can later remove it
				event.handler = handleObj.handler;
				event.data = handleObj.data;
				event.handleObj = handleObj;

				var ret = handleObj.handler.apply( this, args );

				if ( ret !== undefined ) {
					event.result = ret;
					if ( ret === false ) {
						event.preventDefault();
						event.stopPropagation();
					}
				}

				if ( event.isImmediatePropagationStopped() ) {
					break;
				}
			}
		}
		return event.result;
	},

	props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// store a copy of the original event object
		// and "clone" to set read-only properties
		var originalEvent = event;
		event = jQuery.Event( originalEvent );

		for ( var i = this.props.length, prop; i; ) {
			prop = this.props[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary
		if ( !event.target ) {
			// Fixes #1925 where srcElement might not be defined either
			event.target = event.srcElement || document;
		}

		// check if target is a textnode (safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Add relatedTarget, if necessary
		if ( !event.relatedTarget && event.fromElement ) {
			event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;
		}

		// Calculate pageX/Y if missing and clientX/Y available
		if ( event.pageX == null && event.clientX != null ) {
			var eventDocument = event.target.ownerDocument || document,
				doc = eventDocument.documentElement,
				body = eventDocument.body;

			event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
			event.pageY = event.clientY + (doc && doc.scrollTop  || body && body.scrollTop  || 0) - (doc && doc.clientTop  || body && body.clientTop  || 0);
		}

		// Add which for key events
		if ( event.which == null && (event.charCode != null || event.keyCode != null) ) {
			event.which = event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)
		if ( !event.metaKey && event.ctrlKey ) {
			event.metaKey = event.ctrlKey;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		// Note: button is not normalized, so don't use it
		if ( !event.which && event.button !== undefined ) {
			event.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));
		}

		return event;
	},

	// Deprecated, use jQuery.guid instead
	guid: 1E8,

	// Deprecated, use jQuery.proxy instead
	proxy: jQuery.proxy,

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: jQuery.bindReady,
			teardown: jQuery.noop
		},

		live: {
			add: function( handleObj ) {
				jQuery.event.add( this,
					liveConvert( handleObj.origType, handleObj.selector ),
					jQuery.extend({}, handleObj, {handler: liveHandler, guid: handleObj.handler.guid}) );
			},

			remove: function( handleObj ) {
				jQuery.event.remove( this, liveConvert( handleObj.origType, handleObj.selector ), handleObj );
			}
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		if ( elem.detachEvent ) {
			elem.detachEvent( "on" + type, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !this.preventDefault ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = (src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault()) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// timeStamp is buggy for some events on Firefox(#3843)
	// So we won't rely on the native value
	this.timeStamp = jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Checks if an event happened on an element within another element
// Used in jQuery.event.special.mouseenter and mouseleave handlers
var withinElement = function( event ) {

	// Check if mouse(over|out) are still within the same parent element
	var related = event.relatedTarget,
		inside = false,
		eventType = event.type;

	event.type = event.data;

	if ( related !== this ) {

		if ( related ) {
			inside = jQuery.contains( this, related );
		}

		if ( !inside ) {

			jQuery.event.handle.apply( this, arguments );

			event.type = eventType;
		}
	}
},

// In case of event delegation, we only need to rename the event.type,
// liveHandler will take care of the rest.
delegate = function( event ) {
	event.type = event.data;
	jQuery.event.handle.apply( this, arguments );
};

// Create mouseenter and mouseleave events
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		setup: function( data ) {
			jQuery.event.add( this, fix, data && data.selector ? delegate : withinElement, orig );
		},
		teardown: function( data ) {
			jQuery.event.remove( this, fix, data && data.selector ? delegate : withinElement );
		}
	};
});

// submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function( data, namespaces ) {
			if ( !jQuery.nodeName( this, "form" ) ) {
				jQuery.event.add(this, "click.specialSubmit", function( e ) {
					var elem = e.target,
						type = elem.type;

					if ( (type === "submit" || type === "image") && jQuery( elem ).closest("form").length ) {
						trigger( "submit", this, arguments );
					}
				});

				jQuery.event.add(this, "keypress.specialSubmit", function( e ) {
					var elem = e.target,
						type = elem.type;

					if ( (type === "text" || type === "password") && jQuery( elem ).closest("form").length && e.keyCode === 13 ) {
						trigger( "submit", this, arguments );
					}
				});

			} else {
				return false;
			}
		},

		teardown: function( namespaces ) {
			jQuery.event.remove( this, ".specialSubmit" );
		}
	};

}

// change delegation, happens here so we have bind.
if ( !jQuery.support.changeBubbles ) {

	var changeFilters,

	getVal = function( elem ) {
		var type = elem.type, val = elem.value;

		if ( type === "radio" || type === "checkbox" ) {
			val = elem.checked;

		} else if ( type === "select-multiple" ) {
			val = elem.selectedIndex > -1 ?
				jQuery.map( elem.options, function( elem ) {
					return elem.selected;
				}).join("-") :
				"";

		} else if ( jQuery.nodeName( elem, "select" ) ) {
			val = elem.selectedIndex;
		}

		return val;
	},

	testChange = function testChange( e ) {
		var elem = e.target, data, val;

		if ( !rformElems.test( elem.nodeName ) || elem.readOnly ) {
			return;
		}

		data = jQuery._data( elem, "_change_data" );
		val = getVal(elem);

		// the current data will be also retrieved by beforeactivate
		if ( e.type !== "focusout" || elem.type !== "radio" ) {
			jQuery._data( elem, "_change_data", val );
		}

		if ( data === undefined || val === data ) {
			return;
		}

		if ( data != null || val ) {
			e.type = "change";
			e.liveFired = undefined;
			jQuery.event.trigger( e, arguments[1], elem );
		}
	};

	jQuery.event.special.change = {
		filters: {
			focusout: testChange,

			beforedeactivate: testChange,

			click: function( e ) {
				var elem = e.target, type = jQuery.nodeName( elem, "input" ) ? elem.type : "";

				if ( type === "radio" || type === "checkbox" || jQuery.nodeName( elem, "select" ) ) {
					testChange.call( this, e );
				}
			},

			// Change has to be called before submit
			// Keydown will be called before keypress, which is used in submit-event delegation
			keydown: function( e ) {
				var elem = e.target, type = jQuery.nodeName( elem, "input" ) ? elem.type : "";

				if ( (e.keyCode === 13 && !jQuery.nodeName( elem, "textarea" ) ) ||
					(e.keyCode === 32 && (type === "checkbox" || type === "radio")) ||
					type === "select-multiple" ) {
					testChange.call( this, e );
				}
			},

			// Beforeactivate happens also before the previous element is blurred
			// with this event you can't trigger a change event, but you can store
			// information
			beforeactivate: function( e ) {
				var elem = e.target;
				jQuery._data( elem, "_change_data", getVal(elem) );
			}
		},

		setup: function( data, namespaces ) {
			if ( this.type === "file" ) {
				return false;
			}

			for ( var type in changeFilters ) {
				jQuery.event.add( this, type + ".specialChange", changeFilters[type] );
			}

			return rformElems.test( this.nodeName );
		},

		teardown: function( namespaces ) {
			jQuery.event.remove( this, ".specialChange" );

			return rformElems.test( this.nodeName );
		}
	};

	changeFilters = jQuery.event.special.change.filters;

	// Handle when the input is .focus()'d
	changeFilters.focus = changeFilters.beforeactivate;
}

function trigger( type, elem, args ) {
	// Piggyback on a donor event to simulate a different one.
	// Fake originalEvent to avoid donor's stopPropagation, but if the
	// simulated event prevents default then we do the same on the donor.
	// Don't pass args or remember liveFired; they apply to the donor event.
	var event = jQuery.extend( {}, args[ 0 ] );
	event.type = type;
	event.originalEvent = {};
	event.liveFired = undefined;
	jQuery.event.handle.call( elem, event );
	if ( event.isDefaultPrevented() ) {
		args[ 0 ].preventDefault();
	}
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0;

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};

		function handler( donor ) {
			// Donor event is always a native one; fix it and switch its type.
			// Let focusin/out handler cancel the donor focus/blur event.
			var e = jQuery.event.fix( donor );
			e.type = fix;
			e.originalEvent = {};
			jQuery.event.trigger( e, null, e.target );
			if ( e.isDefaultPrevented() ) {
				donor.preventDefault();
			}
		}
	});
}

jQuery.each(["bind", "one"], function( i, name ) {
	jQuery.fn[ name ] = function( type, data, fn ) {
		var handler;

		// Handle object literals
		if ( typeof type === "object" ) {
			for ( var key in type ) {
				this[ name ](key, data, type[key], fn);
			}
			return this;
		}

		if ( arguments.length === 2 || data === false ) {
			fn = data;
			data = undefined;
		}

		if ( name === "one" ) {
			handler = function( event ) {
				jQuery( this ).unbind( event, handler );
				return fn.apply( this, arguments );
			};
			handler.guid = fn.guid || jQuery.guid++;
		} else {
			handler = fn;
		}

		if ( type === "unload" && name !== "one" ) {
			this.one( type, data, fn );

		} else {
			for ( var i = 0, l = this.length; i < l; i++ ) {
				jQuery.event.add( this[i], type, handler, data );
			}
		}

		return this;
	};
});

jQuery.fn.extend({
	unbind: function( type, fn ) {
		// Handle object literals
		if ( typeof type === "object" && !type.preventDefault ) {
			for ( var key in type ) {
				this.unbind(key, type[key]);
			}

		} else {
			for ( var i = 0, l = this.length; i < l; i++ ) {
				jQuery.event.remove( this[i], type, fn );
			}
		}

		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.live( types, data, fn, selector );
	},

	undelegate: function( selector, types, fn ) {
		if ( arguments.length === 0 ) {
			return this.unbind( "live" );

		} else {
			return this.die( types, null, fn, selector );
		}
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},

	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery.data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery.data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

var liveMap = {
	focus: "focusin",
	blur: "focusout",
	mouseenter: "mouseover",
	mouseleave: "mouseout"
};

jQuery.each(["live", "die"], function( i, name ) {
	jQuery.fn[ name ] = function( types, data, fn, origSelector /* Internal Use Only */ ) {
		var type, i = 0, match, namespaces, preType,
			selector = origSelector || this.selector,
			context = origSelector ? this : jQuery( this.context );

		if ( typeof types === "object" && !types.preventDefault ) {
			for ( var key in types ) {
				context[ name ]( key, data, types[key], selector );
			}

			return this;
		}

		if ( name === "die" && !types &&
					origSelector && origSelector.charAt(0) === "." ) {

			context.unbind( origSelector );

			return this;
		}

		if ( data === false || jQuery.isFunction( data ) ) {
			fn = data || returnFalse;
			data = undefined;
		}

		types = (types || "").split(" ");

		while ( (type = types[ i++ ]) != null ) {
			match = rnamespaces.exec( type );
			namespaces = "";

			if ( match )  {
				namespaces = match[0];
				type = type.replace( rnamespaces, "" );
			}

			if ( type === "hover" ) {
				types.push( "mouseenter" + namespaces, "mouseleave" + namespaces );
				continue;
			}

			preType = type;

			if ( liveMap[ type ] ) {
				types.push( liveMap[ type ] + namespaces );
				type = type + namespaces;

			} else {
				type = (liveMap[ type ] || type) + namespaces;
			}

			if ( name === "live" ) {
				// bind live handler
				for ( var j = 0, l = context.length; j < l; j++ ) {
					jQuery.event.add( context[j], "live." + liveConvert( type, selector ),
						{ data: data, selector: selector, handler: fn, origType: type, origHandler: fn, preType: preType } );
				}

			} else {
				// unbind live handler
				context.unbind( "live." + liveConvert( type, selector ), fn );
			}
		}

		return this;
	};
});

function liveHandler( event ) {
	var stop, maxLevel, related, match, handleObj, elem, j, i, l, data, close, namespace, ret,
		elems = [],
		selectors = [],
		events = jQuery._data( this, "events" );

	// Make sure we avoid non-left-click bubbling in Firefox (#3861) and disabled elements in IE (#6911)
	if ( event.liveFired === this || !events || !events.live || event.target.disabled || event.button && event.type === "click" ) {
		return;
	}

	if ( event.namespace ) {
		namespace = new RegExp("(^|\\.)" + event.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)");
	}

	event.liveFired = this;

	var live = events.live.slice(0);

	for ( j = 0; j < live.length; j++ ) {
		handleObj = live[j];

		if ( handleObj.origType.replace( rnamespaces, "" ) === event.type ) {
			selectors.push( handleObj.selector );

		} else {
			live.splice( j--, 1 );
		}
	}

	match = jQuery( event.target ).closest( selectors, event.currentTarget );

	for ( i = 0, l = match.length; i < l; i++ ) {
		close = match[i];

		for ( j = 0; j < live.length; j++ ) {
			handleObj = live[j];

			if ( close.selector === handleObj.selector && (!namespace || namespace.test( handleObj.namespace )) && !close.elem.disabled ) {
				elem = close.elem;
				related = null;

				// Those two events require additional checking
				if ( handleObj.preType === "mouseenter" || handleObj.preType === "mouseleave" ) {
					event.type = handleObj.preType;
					related = jQuery( event.relatedTarget ).closest( handleObj.selector )[0];

					// Make sure not to accidentally match a child element with the same selector
					if ( related && jQuery.contains( elem, related ) ) {
						related = elem;
					}
				}

				if ( !related || related !== elem ) {
					elems.push({ elem: elem, handleObj: handleObj, level: close.level });
				}
			}
		}
	}

	for ( i = 0, l = elems.length; i < l; i++ ) {
		match = elems[i];

		if ( maxLevel && match.level > maxLevel ) {
			break;
		}

		event.currentTarget = match.elem;
		event.data = match.handleObj.data;
		event.handleObj = match.handleObj;

		ret = match.handleObj.origHandler.apply( match.elem, arguments );

		if ( ret === false || event.isPropagationStopped() ) {
			maxLevel = match.level;

			if ( ret === false ) {
				stop = false;
			}
			if ( event.isImmediatePropagationStopped() ) {
				break;
			}
		}
	}

	return stop;
}

function liveConvert( type, selector ) {
	return (type && type !== "*" ? type + "." : "") + selector.replace(rperiod, "`").replace(rspaces, "&");
}

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.bind( name, data, fn ) :
			this.trigger( name );
	};

	if ( jQuery.attrFn ) {
		jQuery.attrFn[ name ] = true;
	}
});



/*!
 * Sizzle CSS Selector Engine
 *  Copyright 2011, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	done = 0,
	toString = Object.prototype.toString,
	hasDuplicate = false,
	baseHasDuplicate = true,
	rBackslash = /\\/g,
	rNonWord = /\W/;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function() {
	baseHasDuplicate = false;
	return 0;
});

var Sizzle = function( selector, context, results, seed ) {
	results = results || [];
	context = context || document;

	var origContext = context;

	if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
		return [];
	}
	
	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	var m, set, checkSet, extra, ret, cur, pop, i,
		prune = true,
		contextXML = Sizzle.isXML( context ),
		parts = [],
		soFar = selector;
	
	// Reset the position of the chunker regexp (start from head)
	do {
		chunker.exec( "" );
		m = chunker.exec( soFar );

		if ( m ) {
			soFar = m[3];
		
			parts.push( m[1] );
		
			if ( m[2] ) {
				extra = m[3];
				break;
			}
		}
	} while ( m );

	if ( parts.length > 1 && origPOS.exec( selector ) ) {

		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
			set = posProcess( parts[0] + parts[1], context );

		} else {
			set = Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector = parts.shift();

				if ( Expr.relative[ selector ] ) {
					selector += parts.shift();
				}
				
				set = posProcess( selector, set );
			}
		}

	} else {
		// Take a shortcut and set the context if the root selector is an ID
		// (but not if it'll be faster if the inner selector is an ID)
		if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
				Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {

			ret = Sizzle.find( parts.shift(), context, contextXML );
			context = ret.expr ?
				Sizzle.filter( ret.expr, ret.set )[0] :
				ret.set[0];
		}

		if ( context ) {
			ret = seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );

			set = ret.expr ?
				Sizzle.filter( ret.expr, ret.set ) :
				ret.set;

			if ( parts.length > 0 ) {
				checkSet = makeArray( set );

			} else {
				prune = false;
			}

			while ( parts.length ) {
				cur = parts.pop();
				pop = cur;

				if ( !Expr.relative[ cur ] ) {
					cur = "";
				} else {
					pop = parts.pop();
				}

				if ( pop == null ) {
					pop = context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}

		} else {
			checkSet = parts = [];
		}
	}

	if ( !checkSet ) {
		checkSet = set;
	}

	if ( !checkSet ) {
		Sizzle.error( cur || selector );
	}

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );

		} else if ( context && context.nodeType === 1 ) {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}

		} else {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] );
				}
			}
		}

	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort = function( results ) {
	if ( sortOrder ) {
		hasDuplicate = baseHasDuplicate;
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			for ( var i = 1; i < results.length; i++ ) {
				if ( results[i] === results[ i - 1 ] ) {
					results.splice( i--, 1 );
				}
			}
		}
	}

	return results;
};

Sizzle.matches = function( expr, set ) {
	return Sizzle( expr, null, null, set );
};

Sizzle.matchesSelector = function( node, expr ) {
	return Sizzle( expr, null, null, [node] ).length > 0;
};

Sizzle.find = function( expr, context, isXML ) {
	var set;

	if ( !expr ) {
		return [];
	}

	for ( var i = 0, l = Expr.order.length; i < l; i++ ) {
		var match,
			type = Expr.order[i];
		
		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
			var left = match[1];
			match.splice( 1, 1 );

			if ( left.substr( left.length - 1 ) !== "\\" ) {
				match[1] = (match[1] || "").replace( rBackslash, "" );
				set = Expr.find[ type ]( match, context, isXML );

				if ( set != null ) {
					expr = expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( "*" ) :
			[];
	}

	return { set: set, expr: expr };
};

Sizzle.filter = function( expr, set, inplace, not ) {
	var match, anyFound,
		old = expr,
		result = [],
		curLoop = set,
		isXMLFilter = set && set[0] && Sizzle.isXML( set[0] );

	while ( expr && set.length ) {
		for ( var type in Expr.filter ) {
			if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {
				var found, item,
					filter = Expr.filter[ type ],
					left = match[1];

				anyFound = false;

				match.splice(1,1);

				if ( left.substr( left.length - 1 ) === "\\" ) {
					continue;
				}

				if ( curLoop === result ) {
					result = [];
				}

				if ( Expr.preFilter[ type ] ) {
					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

					if ( !match ) {
						anyFound = found = true;

					} else if ( match === true ) {
						continue;
					}
				}

				if ( match ) {
					for ( var i = 0; (item = curLoop[i]) != null; i++ ) {
						if ( item ) {
							found = filter( item, match, i, curLoop );
							var pass = not ^ !!found;

							if ( inplace && found != null ) {
								if ( pass ) {
									anyFound = true;

								} else {
									curLoop[i] = false;
								}

							} else if ( pass ) {
								result.push( item );
								anyFound = true;
							}
						}
					}
				}

				if ( found !== undefined ) {
					if ( !inplace ) {
						curLoop = result;
					}

					expr = expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		// Improper expression
		if ( expr === old ) {
			if ( anyFound == null ) {
				Sizzle.error( expr );

			} else {
				break;
			}
		}

		old = expr;
	}

	return curLoop;
};

Sizzle.error = function( msg ) {
	throw "Syntax error, unrecognized expression: " + msg;
};

var Expr = Sizzle.selectors = {
	order: [ "ID", "NAME", "TAG" ],

	match: {
		ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
		PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
	},

	leftMatch: {},

	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},

	attrHandle: {
		href: function( elem ) {
			return elem.getAttribute( "href" );
		},
		type: function( elem ) {
			return elem.getAttribute( "type" );
		}
	},

	relative: {
		"+": function(checkSet, part){
			var isPartStr = typeof part === "string",
				isTag = isPartStr && !rNonWord.test( part ),
				isPartStrNotTag = isPartStr && !isTag;

			if ( isTag ) {
				part = part.toLowerCase();
			}

			for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
				if ( (elem = checkSet[i]) ) {
					while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

					checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?
						elem || false :
						elem === part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},

		">": function( checkSet, part ) {
			var elem,
				isPartStr = typeof part === "string",
				i = 0,
				l = checkSet.length;

			if ( isPartStr && !rNonWord.test( part ) ) {
				part = part.toLowerCase();

				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						var parent = elem.parentNode;
						checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;
					}
				}

			} else {
				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						checkSet[i] = isPartStr ?
							elem.parentNode :
							elem.parentNode === part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},

		"": function(checkSet, part, isXML){
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );
		},

		"~": function( checkSet, part, isXML ) {
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );
		}
	},

	find: {
		ID: function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [m] : [];
			}
		},

		NAME: function( match, context ) {
			if ( typeof context.getElementsByName !== "undefined" ) {
				var ret = [],
					results = context.getElementsByName( match[1] );

				for ( var i = 0, l = results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") === match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length === 0 ? null : ret;
			}
		},

		TAG: function( match, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( match[1] );
			}
		}
	},
	preFilter: {
		CLASS: function( match, curLoop, inplace, result, not, isXML ) {
			match = " " + match[1].replace( rBackslash, "" ) + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0) ) {
						if ( !inplace ) {
							result.push( elem );
						}

					} else if ( inplace ) {
						curLoop[i] = false;
					}
				}
			}

			return false;
		},

		ID: function( match ) {
			return match[1].replace( rBackslash, "" );
		},

		TAG: function( match, curLoop ) {
			return match[1].replace( rBackslash, "" ).toLowerCase();
		},

		CHILD: function( match ) {
			if ( match[1] === "nth" ) {
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				match[2] = match[2].replace(/^\+|\s*/g, '');

				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
				var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(
					match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are negative
				match[2] = (test[1] + (test[2] || 1)) - 0;
				match[3] = test[3] - 0;
			}
			else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			// TODO: Move to normal caching system
			match[0] = done++;

			return match;
		},

		ATTR: function( match, curLoop, inplace, result, not, isXML ) {
			var name = match[1] = match[1].replace( rBackslash, "" );
			
			if ( !isXML && Expr.attrMap[name] ) {
				match[1] = Expr.attrMap[name];
			}

			// Handle if an un-quoted value was used
			match[4] = ( match[4] || match[5] || "" ).replace( rBackslash, "" );

			if ( match[2] === "~=" ) {
				match[4] = " " + match[4] + " ";
			}

			return match;
		},

		PSEUDO: function( match, curLoop, inplace, result, not ) {
			if ( match[1] === "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
					match[3] = Sizzle(match[3], null, null, curLoop);

				} else {
					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);

					if ( !inplace ) {
						result.push.apply( result, ret );
					}

					return false;
				}

			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
				return true;
			}
			
			return match;
		},

		POS: function( match ) {
			match.unshift( true );

			return match;
		}
	},
	
	filters: {
		enabled: function( elem ) {
			return elem.disabled === false && elem.type !== "hidden";
		},

		disabled: function( elem ) {
			return elem.disabled === true;
		},

		checked: function( elem ) {
			return elem.checked === true;
		},
		
		selected: function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}
			
			return elem.selected === true;
		},

		parent: function( elem ) {
			return !!elem.firstChild;
		},

		empty: function( elem ) {
			return !elem.firstChild;
		},

		has: function( elem, i, match ) {
			return !!Sizzle( match[3], elem ).length;
		},

		header: function( elem ) {
			return (/h\d/i).test( elem.nodeName );
		},

		text: function( elem ) {
			var attr = elem.getAttribute( "type" ), type = elem.type;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc) 
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" && "text" === type && ( attr === type || attr === null );
		},

		radio: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type;
		},

		checkbox: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type;
		},

		file: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "file" === elem.type;
		},

		password: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "password" === elem.type;
		},

		submit: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "submit" === elem.type;
		},

		image: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "image" === elem.type;
		},

		reset: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "reset" === elem.type;
		},

		button: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && "button" === elem.type || name === "button";
		},

		input: function( elem ) {
			return (/input|select|textarea|button/i).test( elem.nodeName );
		},

		focus: function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		}
	},
	setFilters: {
		first: function( elem, i ) {
			return i === 0;
		},

		last: function( elem, i, match, array ) {
			return i === array.length - 1;
		},

		even: function( elem, i ) {
			return i % 2 === 0;
		},

		odd: function( elem, i ) {
			return i % 2 === 1;
		},

		lt: function( elem, i, match ) {
			return i < match[3] - 0;
		},

		gt: function( elem, i, match ) {
			return i > match[3] - 0;
		},

		nth: function( elem, i, match ) {
			return match[3] - 0 === i;
		},

		eq: function( elem, i, match ) {
			return match[3] - 0 === i;
		}
	},
	filter: {
		PSEUDO: function( elem, match, i, array ) {
			var name = match[1],
				filter = Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );

			} else if ( name === "contains" ) {
				return (elem.textContent || elem.innerText || Sizzle.getText([ elem ]) || "").indexOf(match[3]) >= 0;

			} else if ( name === "not" ) {
				var not = match[3];

				for ( var j = 0, l = not.length; j < l; j++ ) {
					if ( not[j] === elem ) {
						return false;
					}
				}

				return true;

			} else {
				Sizzle.error( name );
			}
		},

		CHILD: function( elem, match ) {
			var type = match[1],
				node = elem;

			switch ( type ) {
				case "only":
				case "first":
					while ( (node = node.previousSibling) )	 {
						if ( node.nodeType === 1 ) { 
							return false; 
						}
					}

					if ( type === "first" ) { 
						return true; 
					}

					node = elem;

				case "last":
					while ( (node = node.nextSibling) )	 {
						if ( node.nodeType === 1 ) { 
							return false; 
						}
					}

					return true;

				case "nth":
					var first = match[2],
						last = match[3];

					if ( first === 1 && last === 0 ) {
						return true;
					}
					
					var doneName = match[0],
						parent = elem.parentNode;
	
					if ( parent && (parent.sizcache !== doneName || !elem.nodeIndex) ) {
						var count = 0;
						
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								node.nodeIndex = ++count;
							}
						} 

						parent.sizcache = doneName;
					}
					
					var diff = elem.nodeIndex - last;

					if ( first === 0 ) {
						return diff === 0;

					} else {
						return ( diff % first === 0 && diff / first >= 0 );
					}
			}
		},

		ID: function( elem, match ) {
			return elem.nodeType === 1 && elem.getAttribute("id") === match;
		},

		TAG: function( elem, match ) {
			return (match === "*" && elem.nodeType === 1) || elem.nodeName.toLowerCase() === match;
		},
		
		CLASS: function( elem, match ) {
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},

		ATTR: function( elem, match ) {
			var name = match[1],
				result = Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] != null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value = result + "",
				type = match[2],
				check = match[4];

			return result == null ?
				type === "!=" :
				type === "=" ?
				value === check :
				type === "*=" ?
				value.indexOf(check) >= 0 :
				type === "~=" ?
				(" " + value + " ").indexOf(check) >= 0 :
				!check ?
				value && result !== false :
				type === "!=" ?
				value !== check :
				type === "^=" ?
				value.indexOf(check) === 0 :
				type === "$=" ?
				value.substr(value.length - check.length) === check :
				type === "|=" ?
				value === check || value.substr(0, check.length + 1) === check + "-" :
				false;
		},

		POS: function( elem, match, i, array ) {
			var name = match[2],
				filter = Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS = Expr.match.POS,
	fescape = function(all, num){
		return "\\" + (num - 0 + 1);
	};

for ( var type in Expr.match ) {
	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );
	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );
}

var makeArray = function( array, results ) {
	array = Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}
	
	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
// Also verifies that the returned array holds DOM nodes
// (which is not the case in the Blackberry browser)
try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;

// Provide a fallback method if it does not work
} catch( e ) {
	makeArray = function( array, results ) {
		var i = 0,
			ret = results || [];

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );

		} else {
			if ( typeof array.length === "number" ) {
				for ( var l = array.length; i < l; i++ ) {
					ret.push( array[i] );
				}

			} else {
				for ( ; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder, siblingCheck;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			return a.compareDocumentPosition ? -1 : 1;
		}

		return a.compareDocumentPosition(b) & 4 ? -1 : 1;
	};

} else {
	sortOrder = function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

	siblingCheck = function( a, b, ret ) {
		if ( a === b ) {
			return ret;
		}

		var cur = a.nextSibling;

		while ( cur ) {
			if ( cur === b ) {
				return -1;
			}

			cur = cur.nextSibling;
		}

		return 1;
	};
}

// Utility function for retreiving the text value of an array of DOM nodes
Sizzle.getText = function( elems ) {
	var ret = "", elem;

	for ( var i = 0; elems[i]; i++ ) {
		elem = elems[i];

		// Get the text from text nodes and CDATA nodes
		if ( elem.nodeType === 3 || elem.nodeType === 4 ) {
			ret += elem.nodeValue;

		// Traverse everything else, except comment nodes
		} else if ( elem.nodeType !== 8 ) {
			ret += Sizzle.getText( elem.childNodes );
		}
	}

	return ret;
};

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form = document.createElement("div"),
		id = "script" + (new Date()).getTime(),
		root = document.documentElement;

	form.innerHTML = "<a name='" + id + "'/>";

	// Inject it into the root element, check its status, and remove it quickly
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( document.getElementById( id ) ) {
		Expr.find.ID = function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);

				return m ?
					m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?
						[m] :
						undefined :
					[];
			}
		};

		Expr.filter.ID = function( elem, match ) {
			var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");

			return elem.nodeType === 1 && node && node.nodeValue === match;
		};
	}

	root.removeChild( form );

	// release memory in IE
	root = form = null;
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div = document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG = function( match, context ) {
			var results = context.getElementsByTagName( match[1] );

			// Filter out possible comments
			if ( match[1] === "*" ) {
				var tmp = [];

				for ( var i = 0; results[i]; i++ ) {
					if ( results[i].nodeType === 1 ) {
						tmp.push( results[i] );
					}
				}

				results = tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML = "<a href='#'></a>";

	if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
			div.firstChild.getAttribute("href") !== "#" ) {

		Expr.attrHandle.href = function( elem ) {
			return elem.getAttribute( "href", 2 );
		};
	}

	// release memory in IE
	div = null;
})();

if ( document.querySelectorAll ) {
	(function(){
		var oldSizzle = Sizzle,
			div = document.createElement("div"),
			id = "__sizzle__";

		div.innerHTML = "<p class='TEST'></p>";

		// Safari can't handle uppercase or unicode characters when
		// in quirks mode.
		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
			return;
		}
	
		Sizzle = function( query, context, extra, seed ) {
			context = context || document;

			// Only use querySelectorAll on non-XML documents
			// (ID selectors don't work in non-HTML documents)
			if ( !seed && !Sizzle.isXML(context) ) {
				// See if we find a selector to speed up
				var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec( query );
				
				if ( match && (context.nodeType === 1 || context.nodeType === 9) ) {
					// Speed-up: Sizzle("TAG")
					if ( match[1] ) {
						return makeArray( context.getElementsByTagName( query ), extra );
					
					// Speed-up: Sizzle(".CLASS")
					} else if ( match[2] && Expr.find.CLASS && context.getElementsByClassName ) {
						return makeArray( context.getElementsByClassName( match[2] ), extra );
					}
				}
				
				if ( context.nodeType === 9 ) {
					// Speed-up: Sizzle("body")
					// The body element only exists once, optimize finding it
					if ( query === "body" && context.body ) {
						return makeArray( [ context.body ], extra );
						
					// Speed-up: Sizzle("#ID")
					} else if ( match && match[3] ) {
						var elem = context.getElementById( match[3] );

						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {
							// Handle the case where IE and Opera return items
							// by name instead of ID
							if ( elem.id === match[3] ) {
								return makeArray( [ elem ], extra );
							}
							
						} else {
							return makeArray( [], extra );
						}
					}
					
					try {
						return makeArray( context.querySelectorAll(query), extra );
					} catch(qsaError) {}

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					var oldContext = context,
						old = context.getAttribute( "id" ),
						nid = old || id,
						hasParent = context.parentNode,
						relativeHierarchySelector = /^\s*[+~]/.test( query );

					if ( !old ) {
						context.setAttribute( "id", nid );
					} else {
						nid = nid.replace( /'/g, "\\$&" );
					}
					if ( relativeHierarchySelector && hasParent ) {
						context = context.parentNode;
					}

					try {
						if ( !relativeHierarchySelector || hasParent ) {
							return makeArray( context.querySelectorAll( "[id='" + nid + "'] " + query ), extra );
						}

					} catch(pseudoError) {
					} finally {
						if ( !old ) {
							oldContext.removeAttribute( "id" );
						}
					}
				}
			}
		
			return oldSizzle(query, context, extra, seed);
		};

		for ( var prop in oldSizzle ) {
			Sizzle[ prop ] = oldSizzle[ prop ];
		}

		// release memory in IE
		div = null;
	})();
}

(function(){
	var html = document.documentElement,
		matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;

	if ( matches ) {
		// Check to see if it's possible to do matchesSelector
		// on a disconnected node (IE 9 fails this)
		var disconnectedMatch = !matches.call( document.createElement( "div" ), "div" ),
			pseudoWorks = false;

		try {
			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( document.documentElement, "[test!='']:sizzle" );
	
		} catch( pseudoError ) {
			pseudoWorks = true;
		}

		Sizzle.matchesSelector = function( node, expr ) {
			// Make sure that attribute selectors are quoted
			expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

			if ( !Sizzle.isXML( node ) ) {
				try { 
					if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {
						var ret = matches.call( node, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || !disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9, so check for that
								node.document && node.document.nodeType !== 11 ) {
							return ret;
						}
					}
				} catch(e) {}
			}

			return Sizzle(expr, null, null, [node]).length > 0;
		};
	}
})();

(function(){
	var div = document.createElement("div");

	div.innerHTML = "<div class='test e'></div><div class='test'></div>";

	// Opera can't find a second classname (in 9.6)
	// Also, make sure that getElementsByClassName actually exists
	if ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {
		return;
	}

	// Safari caches class attributes, doesn't catch changes (in 3.2)
	div.lastChild.className = "e";

	if ( div.getElementsByClassName("e").length === 1 ) {
		return;
	}
	
	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS = function( match, context, isXML ) {
		if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	// release memory in IE
	div = null;
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;

			elem = elem[dir];

			while ( elem ) {
				if ( elem.sizcache === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 && !isXML ){
					elem.sizcache = doneName;
					elem.sizset = i;
				}

				if ( elem.nodeName.toLowerCase() === cur ) {
					match = elem;
					break;
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;
			
			elem = elem[dir];

			while ( elem ) {
				if ( elem.sizcache === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 ) {
					if ( !isXML ) {
						elem.sizcache = doneName;
						elem.sizset = i;
					}

					if ( typeof cur !== "string" ) {
						if ( elem === cur ) {
							match = true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match = elem;
						break;
					}
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

if ( document.documentElement.contains ) {
	Sizzle.contains = function( a, b ) {
		return a !== b && (a.contains ? a.contains(b) : true);
	};

} else if ( document.documentElement.compareDocumentPosition ) {
	Sizzle.contains = function( a, b ) {
		return !!(a.compareDocumentPosition(b) & 16);
	};

} else {
	Sizzle.contains = function() {
		return false;
	};
}

Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833) 
	var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;

	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

var posProcess = function( selector, context ) {
	var match,
		tmpSet = [],
		later = "",
		root = context.nodeType ? [context] : context;

	// Position selectors must be done after the filter
	// And so must :not(positional) so we move all PSEUDOs to the end
	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
		later += match[0];
		selector = selector.replace( Expr.match.PSEUDO, "" );
	}

	selector = Expr.relative[selector] ? selector + "*" : selector;

	for ( var i = 0, l = root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet );
	}

	return Sizzle.filter( later, tmpSet );
};

// EXPOSE
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.filters;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})();


var runtil = /Until$/,
	rparentsprev = /^(?:parents|prevUntil|prevAll)/,
	// Note: This RegExp should be improved, or likely pulled from Sizzle
	rmultiselector = /,/,
	isSimple = /^.[^:#\[\.,]*$/,
	slice = Array.prototype.slice,
	POS = jQuery.expr.match.POS,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var self = this,
			i, l;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		var ret = this.pushStack( "", "find", selector ),
			length, n, r;

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var targets = jQuery( target );
		return this.filter(function() {
			for ( var i = 0, l = targets.length; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && ( typeof selector === "string" ?
			jQuery.filter( selector, this ).length > 0 :
			this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var ret = [], i, l, cur = this[0];
		
		// Array
		if ( jQuery.isArray( selectors ) ) {
			var match, selector,
				matches = {},
				level = 1;

			if ( cur && selectors.length ) {
				for ( i = 0, l = selectors.length; i < l; i++ ) {
					selector = selectors[i];

					if ( !matches[ selector ] ) {
						matches[ selector ] = POS.test( selector ) ?
							jQuery( selector, context || this.context ) :
							selector;
					}
				}

				while ( cur && cur.ownerDocument && cur !== context ) {
					for ( selector in matches ) {
						match = matches[ selector ];

						if ( match.jquery ? match.index( cur ) > -1 : jQuery( cur ).is( match ) ) {
							ret.push({ selector: selector, elem: cur, level: level });
						}
					}

					cur = cur.parentNode;
					level++;
				}
			}

			return ret;
		}

		// String
		var pos = POS.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( i = 0, l = this.length; i < l; i++ ) {
			cur = this[i];

			while ( cur ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;

				} else {
					cur = cur.parentNode;
					if ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {
						break;
					}
				}
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {
		if ( !elem || typeof elem === "string" ) {
			return jQuery.inArray( this[0],
				// If it receives a string, the selector is used
				// If it receives nothing, the siblings are used
				elem ? jQuery( elem ) : this.parent().children() );
		}
		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	andSelf: function() {
		return this.add( this.prevObject );
	}
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return jQuery.nth( elem, 2, "nextSibling" );
	},
	prev: function( elem ) {
		return jQuery.nth( elem, 2, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( elem.parentNode.firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.makeArray( elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until ),
			// The variable 'args' was introduced in
			// https://github.com/jquery/jquery/commit/52a0238
			// to work around a bug in Chrome 10 (Dev) and should be removed when the bug is fixed.
			// http://code.google.com/p/v8/issues/detail?id=1050
			args = slice.call(arguments);

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, args.join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	nth: function( cur, result, dir, elem ) {
		result = result || 1;
		var num = 0;

		for ( ; cur; cur = cur[dir] ) {
			if ( cur.nodeType === 1 && ++num === result ) {
				break;
			}
		}

		return cur;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return (elem === qualifier) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return (jQuery.inArray( elem, qualifier ) >= 0) === keep;
	});
}




var rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnocache = /<(?:script|object|embed|option|style)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	};

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( text ) {
		if ( jQuery.isFunction(text) ) {
			return this.each(function(i) {
				var self = jQuery( this );

				self.text( text.call(this, i, self.text()) );
			});
		}

		if ( typeof text !== "object" && text !== undefined ) {
			return this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );
		}

		return jQuery.text( this );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		return this.each(function() {
			jQuery( this ).wrapAll( html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		} else if ( arguments.length ) {
			var set = jQuery(arguments[0]);
			set.push.apply( set, this.toArray() );
			return this.pushStack( set, "before", arguments );
		}
	},

	after: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		} else if ( arguments.length ) {
			var set = this.pushStack( this, "after", arguments );
			set.push.apply( set, jQuery(arguments[0]).toArray() );
			return set;
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		if ( value === undefined ) {
			return this[0] && this[0].nodeType === 1 ?
				this[0].innerHTML.replace(rinlinejQuery, "") :
				null;

		// See if we can take a shortcut and just use innerHTML
		} else if ( typeof value === "string" && !rnocache.test( value ) &&
			(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) &&
			!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {

			value = value.replace(rxhtmlTag, "<$1></$2>");

			try {
				for ( var i = 0, l = this.length; i < l; i++ ) {
					// Remove element nodes and prevent memory leaks
					if ( this[i].nodeType === 1 ) {
						jQuery.cleanData( this[i].getElementsByTagName("*") );
						this[i].innerHTML = value;
					}
				}

			// If using innerHTML throws an exception, use the fallback method
			} catch(e) {
				this.empty().append( value );
			}

		} else if ( jQuery.isFunction( value ) ) {
			this.each(function(i){
				var self = jQuery( this );

				self.html( value.call(this, i, self.html()) );
			});

		} else {
			this.empty().append( value );
		}

		return this;
	},

	replaceWith: function( value ) {
		if ( this[0] && this[0].parentNode ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		} else {
			return this.length ?
				this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
				this;
		}
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {
		var results, first, fragment, parent,
			value = args[0],
			scripts = [];

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback, true );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call(this, i, table ? self.html() : undefined);
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			parent = value && value.parentNode;

			// If we're in a fragment, just use that instead of building a new one
			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {
				results = { fragment: parent };

			} else {
				results = jQuery.buildFragment( args, this, scripts );
			}

			fragment = results.fragment;

			if ( fragment.childNodes.length === 1 ) {
				first = fragment = fragment.firstChild;
			} else {
				first = fragment.firstChild;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				for ( var i = 0, l = this.length, lastIndex = l - 1; i < l; i++ ) {
					callback.call(
						table ?
							root(this[i], first) :
							this[i],
						// Make sure that we do not leak memory by inadvertently discarding
						// the original fragment (which might have attached data) instead of
						// using it; in addition, use the original fragment object for the last
						// item instead of first because it can end up being emptied incorrectly
						// in certain situations (Bug #8070).
						// Fragments from the fragment cache must always be cloned and never used
						// in place.
						results.cacheable || (l > 1 && i < lastIndex) ?
							jQuery.clone( fragment, true, true ) :
							fragment
					);
				}
			}

			if ( scripts.length ) {
				jQuery.each( scripts, evalScript );
			}
		}

		return this;
	}
});

function root( elem, cur ) {
	return jQuery.nodeName(elem, "table") ?
		(elem.getElementsByTagName("tbody")[0] ||
		elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
		elem;
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var internalKey = jQuery.expando,
		oldData = jQuery.data( src ),
		curData = jQuery.data( dest, oldData );

	// Switch to use the internal data object, if it exists, for the next
	// stage of data copying
	if ( (oldData = oldData[ internalKey ]) ) {
		var events = oldData.events;
				curData = curData[ internalKey ] = jQuery.extend({}, oldData);

		if ( events ) {
			delete curData.handle;
			curData.events = {};

			for ( var type in events ) {
				for ( var i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type + ( events[ type ][ i ].namespace ? "." : "" ) + events[ type ][ i ].namespace, events[ type ][ i ], events[ type ][ i ].data );
				}
			}
		}
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 fail to clone children inside object elements that use
	// the proprietary classid attribute value (rather than the type
	// attribute) to identify the type of content to display
	if ( nodeName === "object" ) {
		dest.outerHTML = src.outerHTML;

	} else if ( nodeName === "input" && (src.type === "checkbox" || src.type === "radio") ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set
		if ( src.checked ) {
			dest.defaultChecked = dest.checked = src.checked;
		}

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, nodes, scripts ) {
	var fragment, cacheable, cacheresults, doc;

  // nodes may contain either an explicit document object,
  // a jQuery collection or context object.
  // If nodes[0] contains a valid object to assign to doc
  if ( nodes && nodes[0] ) {
    doc = nodes[0].ownerDocument || nodes[0];
  }

  // Ensure that an attr object doesn't incorrectly stand in as a document object
	// Chrome and Firefox seem to allow this to occur and will throw exception
	// Fixes #8950
	if ( !doc.createDocumentFragment ) {
		doc = document;
	}

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	if ( args.length === 1 && typeof args[0] === "string" && args[0].length < 512 && doc === document &&
		args[0].charAt(0) === "<" && !rnocache.test( args[0] ) && (jQuery.support.checkClone || !rchecked.test( args[0] )) ) {

		cacheable = true;

		cacheresults = jQuery.fragments[ args[0] ];
		if ( cacheresults && cacheresults !== 1 ) {
			fragment = cacheresults;
		}
	}

	if ( !fragment ) {
		fragment = doc.createDocumentFragment();
		jQuery.clean( args, doc, fragment, scripts );
	}

	if ( cacheable ) {
		jQuery.fragments[ args[0] ] = cacheresults ? fragment : 1;
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var ret = [],
			insert = jQuery( selector ),
			parent = this.length === 1 && this[0].parentNode;

		if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
			insert[ original ]( this[0] );
			return this;

		} else {
			for ( var i = 0, l = insert.length; i < l; i++ ) {
				var elems = (i > 0 ? this.clone(true) : this).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( "getElementsByTagName" in elem ) {
		return elem.getElementsByTagName( "*" );

	} else if ( "querySelectorAll" in elem ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( elem.type === "checkbox" || elem.type === "radio" ) {
		elem.defaultChecked = elem.checked;
	}
}
// Finds all inputs and passes them to fixDefaultChecked
function findInputs( elem ) {
	if ( jQuery.nodeName( elem, "input" ) ) {
		fixDefaultChecked( elem );
	} else if ( "getElementsByTagName" in elem ) {
		jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var clone = elem.cloneNode(true),
				srcElements,
				destElements,
				i;

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName
			// instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				cloneFixAttributes( srcElements[i], destElements[i] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var checkScriptType;

		context = context || document;

		// !context.createElement fails in IE with an error but returns typeof 'object'
		if ( typeof context.createElement === "undefined" ) {
			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;
		}

		var ret = [], j;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Trim whitespace, otherwise indexOf won't work as expected
					var tag = (rtagName.exec( elem ) || ["", ""])[1].toLowerCase(),
						wrap = wrapMap[ tag ] || wrapMap._default,
						depth = wrap[0],
						div = context.createElement("div");

					// Go to html and back, then peel off extra wrappers
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						var hasBody = rtbody.test(elem),
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;
				}
			}

			// Resets defaultChecked for any radios and checkboxes
			// about to be appended to the DOM in IE 6/7 (#8060)
			var len;
			if ( !jQuery.support.appendChecked ) {
				if ( elem[0] && typeof (len = elem.length) === "number" ) {
					for ( j = 0; j < len; j++ ) {
						findInputs( elem[j] );
					}
				} else {
					findInputs( elem );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				ret = jQuery.merge( ret, elem );
			}
		}

		if ( fragment ) {
			checkScriptType = function( elem ) {
				return !elem.type || rscriptType.test( elem.type );
			};
			for ( i = 0; ret[i]; i++ ) {
				if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript") ) {
					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( ret[i] ) : ret[i] );

				} else {
					if ( ret[i].nodeType === 1 ) {
						var jsTags = jQuery.grep( ret[i].getElementsByTagName( "script" ), checkScriptType );

						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
					}
					fragment.appendChild( ret[i] );
				}
			}
		}

		return ret;
	},

	cleanData: function( elems ) {
		var data, id, cache = jQuery.cache, internalKey = jQuery.expando, special = jQuery.event.special,
			deleteExpando = jQuery.support.deleteExpando;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
				continue;
			}

			id = elem[ jQuery.expando ];

			if ( id ) {
				data = cache[ id ] && cache[ id ][ internalKey ];

				if ( data && data.events ) {
					for ( var type in data.events ) {
						if ( special[ type ] ) {
							jQuery.event.remove( elem, type );

						// This is a shortcut to avoid jQuery.event.remove's overhead
						} else {
							jQuery.removeEvent( elem, type, data.handle );
						}
					}

					// Null the DOM reference to avoid IE6/7/8 leak (#7054)
					if ( data.handle ) {
						data.handle.elem = null;
					}
				}

				if ( deleteExpando ) {
					delete elem[ jQuery.expando ];

				} else if ( elem.removeAttribute ) {
					elem.removeAttribute( jQuery.expando );
				}

				delete cache[ id ];
			}
		}
	}
});

function evalScript( i, elem ) {
	if ( elem.src ) {
		jQuery.ajax({
			url: elem.src,
			async: false,
			dataType: "script"
		});
	} else {
		jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "/*$0*/" ) );
	}

	if ( elem.parentNode ) {
		elem.parentNode.removeChild( elem );
	}
}



var ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	// fixed for IE9, see #8346
	rupper = /([A-Z]|^ms)/g,
	rnumpx = /^-?\d+(?:px)?$/i,
	rnum = /^-?\d/,
	rrelNum = /^[+\-]=/,
	rrelNumFilter = /[^+\-\.\de]+/g,

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssWidth = [ "Left", "Right" ],
	cssHeight = [ "Top", "Bottom" ],
	curCSS,

	getComputedStyle,
	currentStyle;

jQuery.fn.css = function( name, value ) {
	// Setting 'undefined' is a no-op
	if ( arguments.length === 2 && value === undefined ) {
		return this;
	}

	return jQuery.access( this, name, value, true, function( elem, name, value ) {
		return value !== undefined ?
			jQuery.style( elem, name, value ) :
			jQuery.css( elem, name );
	});
};

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity", "opacity" );
					return ret === "" ? "1" : ret;

				} else {
					return elem.style.opacity;
				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, origName = jQuery.camelCase( name ),
			style = elem.style, hooks = jQuery.cssHooks[ origName ];

		name = jQuery.cssProps[ origName ] || origName;

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Make sure that NaN and null values aren't set. See: #7116
			if ( type === "number" && isNaN( value ) || value == null ) {
				return;
			}

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && rrelNum.test( value ) ) {
				value = +value.replace( rrelNumFilter, "" ) + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra ) {
		var ret, hooks;

		// Make sure that we're working with the right name
		name = jQuery.camelCase( name );
		hooks = jQuery.cssHooks[ name ];
		name = jQuery.cssProps[ name ] || name;

		// cssFloat needs a special treatment
		if ( name === "cssFloat" ) {
			name = "float";
		}

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {
			return ret;

		// Otherwise, if a way to get the computed value exists, use that
		} else if ( curCSS ) {
			return curCSS( elem, name );
		}
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var old = {};

		// Remember the old values, and insert the new ones
		for ( var name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}
	}
});

// DEPRECATED, Use jQuery.css() instead
jQuery.curCSS = jQuery.css;

jQuery.each(["height", "width"], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			var val;

			if ( computed ) {
				if ( elem.offsetWidth !== 0 ) {
					return getWH( elem, name, extra );
				} else {
					jQuery.swap( elem, cssShow, function() {
						val = getWH( elem, name, extra );
					});
				}

				return val;
			}
		},

		set: function( elem, value ) {
			if ( rnumpx.test( value ) ) {
				// ignore negative width and height values #1599
				value = parseFloat( value );

				if ( value >= 0 ) {
					return value + "px";
				}

			} else {
				return value;
			}
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( parseFloat( RegExp.$1 ) / 100 ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle;

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// Set the alpha filter to set the opacity
			var opacity = jQuery.isNaN( value ) ?
				"" :
				"alpha(opacity=" + value * 100 + ")",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery(function() {
	// This hook cannot be added until DOM ready because the support test
	// for it is not run until after DOM ready
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				var ret;
				jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						ret = curCSS( elem, "margin-right", "marginRight" );
					} else {
						ret = elem.style.marginRight;
					}
				});
				return ret;
			}
		};
	}
});

if ( document.defaultView && document.defaultView.getComputedStyle ) {
	getComputedStyle = function( elem, name ) {
		var ret, defaultView, computedStyle;

		name = name.replace( rupper, "-$1" ).toLowerCase();

		if ( !(defaultView = elem.ownerDocument.defaultView) ) {
			return undefined;
		}

		if ( (computedStyle = defaultView.getComputedStyle( elem, null )) ) {
			ret = computedStyle.getPropertyValue( name );
			if ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
				ret = jQuery.style( elem, name );
			}
		}

		return ret;
	};
}

if ( document.documentElement.currentStyle ) {
	currentStyle = function( elem, name ) {
		var left,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			rsLeft = elem.runtimeStyle && elem.runtimeStyle[ name ],
			style = elem.style;

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		if ( !rnumpx.test( ret ) && rnum.test( ret ) ) {
			// Remember the original values
			left = style.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : (ret || 0);
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

curCSS = getComputedStyle || currentStyle;

function getWH( elem, name, extra ) {

	// Start with offset property
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		which = name === "width" ? cssWidth : cssHeight;

	if ( val > 0 ) {
		if ( extra !== "border" ) {
			jQuery.each( which, function() {
				if ( !extra ) {
					val -= parseFloat( jQuery.css( elem, "padding" + this ) ) || 0;
				}
				if ( extra === "margin" ) {
					val += parseFloat( jQuery.css( elem, extra + this ) ) || 0;
				} else {
					val -= parseFloat( jQuery.css( elem, "border" + this + "Width" ) ) || 0;
				}
			});
		}

		return val + "px";
	}

	// Fall back to computed then uncomputed css if necessary
	val = curCSS( elem, name, name );
	if ( val < 0 || val == null ) {
		val = elem.style[ name ] || 0;
	}
	// Normalize "", auto, and prepare for extra
	val = parseFloat( val ) || 0;

	// Add padding, border, margin
	if ( extra ) {
		jQuery.each( which, function() {
			val += parseFloat( jQuery.css( elem, "padding" + this ) ) || 0;
			if ( extra !== "padding" ) {
				val += parseFloat( jQuery.css( elem, "border" + this + "Width" ) ) || 0;
			}
			if ( extra === "margin" ) {
				val += parseFloat( jQuery.css( elem, extra + this ) ) || 0;
			}
		});
	}

	return val + "px";
}

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		var width = elem.offsetWidth,
			height = elem.offsetHeight;

		return (width === 0 && height === 0) || (!jQuery.support.reliableHiddenOffsets && (elem.style.display || jQuery.css( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	rinput = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rselectTextarea = /^(?:select|textarea)/i,
	rspacesAjax = /\s+/,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Document location
	ajaxLocation,

	// Document location segments
	ajaxLocParts;

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		if ( jQuery.isFunction( func ) ) {
			var dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),
				i = 0,
				length = dataTypes.length,
				dataType,
				list,
				placeBefore;

			// For each dataType in the dataTypeExpression
			for(; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters ),
		selection;

	for(; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

jQuery.fn.extend({
	load: function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );

		// Don't do a request if no elements are being requested
		} else if ( !this.length ) {
			return this;
		}

		var off = url.indexOf( " " );
		if ( off >= 0 ) {
			var selector = url.slice( off, url.length );
			url = url.slice( 0, off );
		}

		// Default to a GET request
		var type = "GET";

		// If the second parameter was provided
		if ( params ) {
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback = params;
				params = undefined;

			// Otherwise, build a param string
			} else if ( typeof params === "object" ) {
				params = jQuery.param( params, jQuery.ajaxSettings.traditional );
				type = "POST";
			}
		}

		var self = this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			// Complete callback (responseText is used internally)
			complete: function( jqXHR, status, responseText ) {
				// Store the response as specified by the jqXHR object
				responseText = jqXHR.responseText;
				// If successful, inject the HTML into all the matched elements
				if ( jqXHR.isResolved() ) {
					// #4825: Get the actual response in case
					// a dataFilter is present in ajaxSettings
					jqXHR.done(function( r ) {
						responseText = r;
					});
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div>")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(responseText.replace(rscript, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						responseText );
				}

				if ( callback ) {
					self.each( callback, [ responseText, status, jqXHR ] );
				}
			}
		});

		return this;
	},

	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},

	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.bind( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function ( target, settings ) {
		if ( !settings ) {
			// Only one parameter, we extend ajaxSettings
			settings = target;
			target = jQuery.extend( true, jQuery.ajaxSettings, settings );
		} else {
			// target was provided, we extend into it
			jQuery.extend( true, target, jQuery.ajaxSettings, settings );
		}
		// Flatten fields we don't want deep extended
		for( var field in { context: 1, url: 1 } ) {
			if ( field in settings ) {
				target[ field ] = settings[ field ];
			} else if( field in jQuery.ajaxSettings ) {
				target[ field ] = jQuery.ajaxSettings[ field ];
			}
		}
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": "*/*"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery._Deferred(),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// ifModified key
			ifModifiedKey,
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// The jqXHR state
			state = 0,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || "abort";
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, statusText, responses, headers ) {

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status ? 4 : 0;

			var isSuccess,
				success,
				error,
				response = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,
				lastModified,
				etag;

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					if ( ( lastModified = jqXHR.getResponseHeader( "Last-Modified" ) ) ) {
						jQuery.lastModified[ ifModifiedKey ] = lastModified;
					}
					if ( ( etag = jqXHR.getResponseHeader( "Etag" ) ) ) {
						jQuery.etag[ ifModifiedKey ] = etag;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					try {
						success = ajaxConvert( s, response );
						statusText = "success";
						isSuccess = true;
					} catch(e) {
						// We have a parsererror
						statusText = "parsererror";
						error = e;
					}
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = statusText;

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.resolveWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.done;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.then( tmp, tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( rspacesAjax );

		// Determine if a cross-domain request is in order
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefiler, stop there
		if ( state === 2 ) {
			return false;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( (ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", */*; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already
				jqXHR.abort();
				return false;

		}

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( status < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					jQuery.error( e );
				}
			}
		}

		return jqXHR;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a, traditional ) {
		var s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : value;
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( var prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	}
});

function buildParams( prefix, obj, traditional, add ) {
	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" || jQuery.isArray(v) ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && obj != null && typeof obj === "object" ) {
		// Serialize object item.
		for ( var name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// This is still on the jQuery object... for now
// Want to move this to jQuery.ajax some day
jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields,
		ct,
		type,
		finalDataType,
		firstDataType;

	// Fill responseXXX fields
	for( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	var dataTypes = s.dataTypes,
		converters = {},
		i,
		key,
		length = dataTypes.length,
		tmp,
		// Current and previous dataTypes
		current = dataTypes[ 0 ],
		prev,
		// Conversion expression
		conversion,
		// Conversion function
		conv,
		// Conversion functions (transitive conversion)
		conv1,
		conv2;

	// For each dataType in the chain
	for( i = 1; i < length; i++ ) {

		// Create converters map
		// with lowercased keys
		if ( i === 1 ) {
			for( key in s.converters ) {
				if( typeof key === "string" ) {
					converters[ key.toLowerCase() ] = s.converters[ key ];
				}
			}
		}

		// Get the dataTypes
		prev = current;
		current = dataTypes[ i ];

		// If current is auto dataType, update it to prev
		if( current === "*" ) {
			current = prev;
		// If no auto and dataTypes are actually different
		} else if ( prev !== "*" && prev !== current ) {

			// Get the converter
			conversion = prev + " " + current;
			conv = converters[ conversion ] || converters[ "* " + current ];

			// If there is no direct converter, search transitively
			if ( !conv ) {
				conv2 = undefined;
				for( conv1 in converters ) {
					tmp = conv1.split( " " );
					if ( tmp[ 0 ] === prev || tmp[ 0 ] === "*" ) {
						conv2 = converters[ tmp[1] + " " + current ];
						if ( conv2 ) {
							conv1 = converters[ conv1 ];
							if ( conv1 === true ) {
								conv = conv2;
							} else if ( conv2 === true ) {
								conv = conv1;
							}
							break;
						}
					}
				}
			}
			// If we found no converter, dispatch an error
			if ( !( conv || conv2 ) ) {
				jQuery.error( "No conversion from " + conversion.replace(" "," to ") );
			}
			// If found converter is not an equivalence
			if ( conv !== true ) {
				// Convert with 1 or 2 converters accordingly
				response = conv ? conv( response ) : conv2( conv1(response) );
			}
		}
	}
	return response;
}




var jsc = jQuery.now(),
	jsre = /(\=)\?(&|$)|\?\?/i;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		return jQuery.expando + "_" + ( jsc++ );
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var inspectData = s.contentType === "application/x-www-form-urlencoded" &&
		( typeof s.data === "string" );

	if ( s.dataTypes[ 0 ] === "jsonp" ||
		s.jsonp !== false && ( jsre.test( s.url ) ||
				inspectData && jsre.test( s.data ) ) ) {

		var responseContainer,
			jsonpCallback = s.jsonpCallback =
				jQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,
			previous = window[ jsonpCallback ],
			url = s.url,
			data = s.data,
			replace = "$1" + jsonpCallback + "$2";

		if ( s.jsonp !== false ) {
			url = url.replace( jsre, replace );
			if ( s.url === url ) {
				if ( inspectData ) {
					data = data.replace( jsre, replace );
				}
				if ( s.data === data ) {
					// Add callback manually
					url += (/\?/.test( url ) ? "&" : "?") + s.jsonp + "=" + jsonpCallback;
				}
			}
		}

		s.url = url;
		s.data = data;

		// Install callback
		window[ jsonpCallback ] = function( response ) {
			responseContainer = [ response ];
		};

		// Clean-up function
		jqXHR.always(function() {
			// Set callback back to previous value
			window[ jsonpCallback ] = previous;
			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( previous ) ) {
				window[ jsonpCallback ]( responseContainer[ 0 ] );
			}
		});

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( jsonpCallback + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Delegate to script
		return "script";
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});




var // #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0,
	xhrCallbacks;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var xhr = s.xhr(),
						handle,
						i;

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occured
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}
									responses.text = xhr.responseText;

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					// if we're in sync mode or it's in cache
					// and has been retrieved directly (IE6 & IE7)
					// we need to manually fire the callback
					if ( !s.async || xhr.readyState === 4 ) {
						callback();
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}




var elemdisplay = {},
	iframe, iframeDoc,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
	timerId,
	fxAttrs = [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
		// opacity animations
		[ "opacity" ]
	],
	fxNow,
	requestAnimationFrame = window.webkitRequestAnimationFrame ||
		window.mozRequestAnimationFrame ||
		window.oRequestAnimationFrame;

jQuery.fn.extend({
	show: function( speed, easing, callback ) {
		var elem, display;

		if ( speed || speed === 0 ) {
			return this.animate( genFx("show", 3), speed, easing, callback);

		} else {
			for ( var i = 0, j = this.length; i < j; i++ ) {
				elem = this[i];

				if ( elem.style ) {
					display = elem.style.display;

					// Reset the inline display of this element to learn if it is
					// being hidden by cascaded rules or not
					if ( !jQuery._data(elem, "olddisplay") && display === "none" ) {
						display = elem.style.display = "";
					}

					// Set elements which have been overridden with display: none
					// in a stylesheet to whatever the default browser style is
					// for such an element
					if ( display === "" && jQuery.css( elem, "display" ) === "none" ) {
						jQuery._data(elem, "olddisplay", defaultDisplay(elem.nodeName));
					}
				}
			}

			// Set the display of most of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				elem = this[i];

				if ( elem.style ) {
					display = elem.style.display;

					if ( display === "" || display === "none" ) {
						elem.style.display = jQuery._data(elem, "olddisplay") || "";
					}
				}
			}

			return this;
		}
	},

	hide: function( speed, easing, callback ) {
		if ( speed || speed === 0 ) {
			return this.animate( genFx("hide", 3), speed, easing, callback);

		} else {
			for ( var i = 0, j = this.length; i < j; i++ ) {
				if ( this[i].style ) {
					var display = jQuery.css( this[i], "display" );

					if ( display !== "none" && !jQuery._data( this[i], "olddisplay" ) ) {
						jQuery._data( this[i], "olddisplay", display );
					}
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				if ( this[i].style ) {
					this[i].style.display = "none";
				}
			}

			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2, callback ) {
		var bool = typeof fn === "boolean";

		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
			this._toggle.apply( this, arguments );

		} else if ( fn == null || bool ) {
			this.each(function() {
				var state = bool ? fn : jQuery(this).is(":hidden");
				jQuery(this)[ state ? "show" : "hide" ]();
			});

		} else {
			this.animate(genFx("toggle", 3), fn, fn2, callback);
		}

		return this;
	},

	fadeTo: function( speed, to, easing, callback ) {
		return this.filter(":hidden").css("opacity", 0).show().end()
					.animate({opacity: to}, speed, easing, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall = jQuery.speed(speed, easing, callback);

		if ( jQuery.isEmptyObject( prop ) ) {
			return this.each( optall.complete, [ false ] );
		}

		// Do not change referenced properties as per-property easing will be lost
		prop = jQuery.extend( {}, prop );

		return this[ optall.queue === false ? "each" : "queue" ](function() {
			// XXX 'this' does not always have a nodeName when running the
			// test suite

			if ( optall.queue === false ) {
				jQuery._mark( this );
			}

			var opt = jQuery.extend( {}, optall ),
				isElement = this.nodeType === 1,
				hidden = isElement && jQuery(this).is(":hidden"),
				name, val, p,
				display, e,
				parts, start, end, unit;

			// will store per property easing and be used to determine when an animation is complete
			opt.animatedProperties = {};

			for ( p in prop ) {

				// property name normalization
				name = jQuery.camelCase( p );
				if ( p !== name ) {
					prop[ name ] = prop[ p ];
					delete prop[ p ];
				}

				val = prop[ name ];

				// easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)
				if ( jQuery.isArray( val ) ) {
					opt.animatedProperties[ name ] = val[ 1 ];
					val = prop[ name ] = val[ 0 ];
				} else {
					opt.animatedProperties[ name ] = opt.specialEasing && opt.specialEasing[ name ] || opt.easing || 'swing';
				}

				if ( val === "hide" && hidden || val === "show" && !hidden ) {
					return opt.complete.call( this );
				}

				if ( isElement && ( name === "height" || name === "width" ) ) {
					// Make sure that nothing sneaks out
					// Record all 3 overflow attributes because IE does not
					// change the overflow attribute when overflowX and
					// overflowY are set to the same value
					opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];

					// Set display property to inline-block for height/width
					// animations on inline elements that are having width/height
					// animated
					if ( jQuery.css( this, "display" ) === "inline" &&
							jQuery.css( this, "float" ) === "none" ) {
						if ( !jQuery.support.inlineBlockNeedsLayout ) {
							this.style.display = "inline-block";

						} else {
							display = defaultDisplay( this.nodeName );

							// inline-level elements accept inline-block;
							// block-level elements need to be inline with layout
							if ( display === "inline" ) {
								this.style.display = "inline-block";

							} else {
								this.style.display = "inline";
								this.style.zoom = 1;
							}
						}
					}
				}
			}

			if ( opt.overflow != null ) {
				this.style.overflow = "hidden";
			}

			for ( p in prop ) {
				e = new jQuery.fx( this, opt, p );
				val = prop[ p ];

				if ( rfxtypes.test(val) ) {
					e[ val === "toggle" ? hidden ? "show" : "hide" : val ]();

				} else {
					parts = rfxnum.exec( val );
					start = e.cur();

					if ( parts ) {
						end = parseFloat( parts[2] );
						unit = parts[3] || ( jQuery.cssNumber[ p ] ? "" : "px" );

						// We need to compute starting value
						if ( unit !== "px" ) {
							jQuery.style( this, p, (end || 1) + unit);
							start = ((end || 1) / e.cur()) * start;
							jQuery.style( this, p, start + unit);
						}

						// If a +=/-= token was provided, we're doing a relative animation
						if ( parts[1] ) {
							end = ( (parts[ 1 ] === "-=" ? -1 : 1) * end ) + start;
						}

						e.custom( start, end, unit );

					} else {
						e.custom( start, val, "" );
					}
				}
			}

			// For JS strict compliance
			return true;
		});
	},

	stop: function( clearQueue, gotoEnd ) {
		if ( clearQueue ) {
			this.queue([]);
		}

		this.each(function() {
			var timers = jQuery.timers,
				i = timers.length;
			// clear marker counters if we know they won't be
			if ( !gotoEnd ) {
				jQuery._unmark( true, this );
			}
			while ( i-- ) {
				if ( timers[i].elem === this ) {
					if (gotoEnd) {
						// force the next step to be the last
						timers[i](true);
					}

					timers.splice(i, 1);
				}
			}
		});

		// start the next in the queue if the last step wasn't forced
		if ( !gotoEnd ) {
			this.dequeue();
		}

		return this;
	}

});

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout( clearFxNow, 0 );
	return ( fxNow = jQuery.now() );
}

function clearFxNow() {
	fxNow = undefined;
}

// Generate parameters to create a standard animation
function genFx( type, num ) {
	var obj = {};

	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice(0,num)), function() {
		obj[ this ] = type;
	});

	return obj;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show", 1),
	slideUp: genFx("hide", 1),
	slideToggle: genFx("toggle", 1),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.extend({
	speed: function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;

		// Queueing
		opt.old = opt.complete;
		opt.complete = function( noUnmark ) {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue !== false ) {
				jQuery.dequeue( this );
			} else if ( noUnmark !== false ) {
				jQuery._unmark( this );
			}
		};

		return opt;
	},

	easing: {
		linear: function( p, n, firstNum, diff ) {
			return firstNum + diff * p;
		},
		swing: function( p, n, firstNum, diff ) {
			return ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;
		}
	},

	timers: [],

	fx: function( elem, options, prop ) {
		this.options = options;
		this.elem = elem;
		this.prop = prop;

		options.orig = options.orig || {};
	}

});

jQuery.fx.prototype = {
	// Simple function for setting a style value
	update: function() {
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );
	},

	// Get the current size
	cur: function() {
		if ( this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null) ) {
			return this.elem[ this.prop ];
		}

		var parsed,
			r = jQuery.css( this.elem, this.prop );
		// Empty strings, null, undefined and "auto" are converted to 0,
		// complex values such as "rotate(1rad)" are returned as is,
		// simple values such as "10px" are parsed to Float.
		return isNaN( parsed = parseFloat( r ) ) ? !r || r === "auto" ? 0 : r : parsed;
	},

	// Start an animation from one number to another
	custom: function( from, to, unit ) {
		var self = this,
			fx = jQuery.fx,
			raf;

		this.startTime = fxNow || createFxNow();
		this.start = from;
		this.end = to;
		this.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? "" : "px" );
		this.now = this.start;
		this.pos = this.state = 0;

		function t( gotoEnd ) {
			return self.step(gotoEnd);
		}

		t.elem = this.elem;

		if ( t() && jQuery.timers.push(t) && !timerId ) {
			// Use requestAnimationFrame instead of setInterval if available
			if ( requestAnimationFrame ) {
				timerId = true;
				raf = function() {
					// When timerId gets set to null at any point, this stops
					if ( timerId ) {
						requestAnimationFrame( raf );
						fx.tick();
					}
				};
				requestAnimationFrame( raf );
			} else {
				timerId = setInterval( fx.tick, fx.interval );
			}
		}
	},

	// Simple 'show' function
	show: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] = jQuery.style( this.elem, this.prop );
		this.options.show = true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any
		// flash of content
		this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());

		// Start by showing the element
		jQuery( this.elem ).show();
	},

	// Simple 'hide' function
	hide: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] = jQuery.style( this.elem, this.prop );
		this.options.hide = true;

		// Begin the animation
		this.custom(this.cur(), 0);
	},

	// Each step of an animation
	step: function( gotoEnd ) {
		var t = fxNow || createFxNow(),
			done = true,
			elem = this.elem,
			options = this.options,
			i, n;

		if ( gotoEnd || t >= options.duration + this.startTime ) {
			this.now = this.end;
			this.pos = this.state = 1;
			this.update();

			options.animatedProperties[ this.prop ] = true;

			for ( i in options.animatedProperties ) {
				if ( options.animatedProperties[i] !== true ) {
					done = false;
				}
			}

			if ( done ) {
				// Reset the overflow
				if ( options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {

					jQuery.each( [ "", "X", "Y" ], function (index, value) {
						elem.style[ "overflow" + value ] = options.overflow[index];
					});
				}

				// Hide the element if the "hide" operation was done
				if ( options.hide ) {
					jQuery(elem).hide();
				}

				// Reset the properties, if the item has been hidden or shown
				if ( options.hide || options.show ) {
					for ( var p in options.animatedProperties ) {
						jQuery.style( elem, p, options.orig[p] );
					}
				}

				// Execute the complete function
				options.complete.call( elem );
			}

			return false;

		} else {
			// classical easing cannot be used with an Infinity duration
			if ( options.duration == Infinity ) {
				this.now = t;
			} else {
				n = t - this.startTime;
				this.state = n / options.duration;

				// Perform the easing function, defaults to swing
				this.pos = jQuery.easing[ options.animatedProperties[ this.prop ] ]( this.state, n, 0, 1, options.duration );
				this.now = this.start + ((this.end - this.start) * this.pos);
			}
			// Perform the next step of the animation
			this.update();
		}

		return true;
	}
};

jQuery.extend( jQuery.fx, {
	tick: function() {
		for ( var timers = jQuery.timers, i = 0 ; i < timers.length ; ++i ) {
			if ( !timers[i]() ) {
				timers.splice(i--, 1);
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
	},

	interval: 13,

	stop: function() {
		clearInterval( timerId );
		timerId = null;
	},

	speeds: {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	},

	step: {
		opacity: function( fx ) {
			jQuery.style( fx.elem, "opacity", fx.now );
		},

		_default: function( fx ) {
			if ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {
				fx.elem.style[ fx.prop ] = (fx.prop === "width" || fx.prop === "height" ? Math.max(0, fx.now) : fx.now) + fx.unit;
			} else {
				fx.elem[ fx.prop ] = fx.now;
			}
		}
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}

// Try to restore the default display value of an element
function defaultDisplay( nodeName ) {

	if ( !elemdisplay[ nodeName ] ) {

		var body = document.body,
			elem = jQuery( "<" + nodeName + ">" ).appendTo( body ),
			display = elem.css( "display" );

		elem.remove();

		// If the simple way fails,
		// get element's real default display by attaching it to a temp iframe
		if ( display === "none" || display === "" ) {
			// No iframe to use yet, so create it
			if ( !iframe ) {
				iframe = document.createElement( "iframe" );
				iframe.frameBorder = iframe.width = iframe.height = 0;
			}

			body.appendChild( iframe );

			// Create a cacheable copy of the iframe document on first call.
			// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
			// document to it; WebKit & Firefox won't allow reusing the iframe document.
			if ( !iframeDoc || !iframe.createElement ) {
				iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
				iframeDoc.write( ( document.compatMode === "CSS1Compat" ? "<!doctype html>" : "" ) + "<html><body>" );
				iframeDoc.close();
			}

			elem = iframeDoc.createElement( nodeName );

			iframeDoc.body.appendChild( elem );

			display = jQuery.css( elem, "display" );

			body.removeChild( iframe );
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return elemdisplay[ nodeName ];
}




var rtable = /^t(?:able|d|h)$/i,
	rroot = /^(?:body|html)$/i;

if ( "getBoundingClientRect" in document.documentElement ) {
	jQuery.fn.offset = function( options ) {
		var elem = this[0], box;

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		try {
			box = elem.getBoundingClientRect();
		} catch(e) {}

		var doc = elem.ownerDocument,
			docElem = doc.documentElement;

		// Make sure we're not dealing with a disconnected DOM node
		if ( !box || !jQuery.contains( docElem, elem ) ) {
			return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };
		}

		var body = doc.body,
			win = getWindow(doc),
			clientTop  = docElem.clientTop  || body.clientTop  || 0,
			clientLeft = docElem.clientLeft || body.clientLeft || 0,
			scrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,
			scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
			top  = box.top  + scrollTop  - clientTop,
			left = box.left + scrollLeft - clientLeft;

		return { top: top, left: left };
	};

} else {
	jQuery.fn.offset = function( options ) {
		var elem = this[0];

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		jQuery.offset.initialize();

		var computedStyle,
			offsetParent = elem.offsetParent,
			prevOffsetParent = elem,
			doc = elem.ownerDocument,
			docElem = doc.documentElement,
			body = doc.body,
			defaultView = doc.defaultView,
			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
			top = elem.offsetTop,
			left = elem.offsetLeft;

		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
			if ( jQuery.offset.supportsFixedPosition && prevComputedStyle.position === "fixed" ) {
				break;
			}

			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
			top  -= elem.scrollTop;
			left -= elem.scrollLeft;

			if ( elem === offsetParent ) {
				top  += elem.offsetTop;
				left += elem.offsetLeft;

				if ( jQuery.offset.doesNotAddBorder && !(jQuery.offset.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
					left += parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent = offsetParent;
				offsetParent = elem.offsetParent;
			}

			if ( jQuery.offset.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
				left += parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle = computedStyle;
		}

		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
			top  += body.offsetTop;
			left += body.offsetLeft;
		}

		if ( jQuery.offset.supportsFixedPosition && prevComputedStyle.position === "fixed" ) {
			top  += Math.max( docElem.scrollTop, body.scrollTop );
			left += Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.offset = {
	initialize: function() {
		var body = document.body, container = document.createElement("div"), innerDiv, checkDiv, table, td, bodyMarginTop = parseFloat( jQuery.css(body, "marginTop") ) || 0,
			html = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";

		jQuery.extend( container.style, { position: "absolute", top: 0, left: 0, margin: 0, border: 0, width: "1px", height: "1px", visibility: "hidden" } );

		container.innerHTML = html;
		body.insertBefore( container, body.firstChild );
		innerDiv = container.firstChild;
		checkDiv = innerDiv.firstChild;
		td = innerDiv.nextSibling.firstChild.firstChild;

		this.doesNotAddBorder = (checkDiv.offsetTop !== 5);
		this.doesAddBorderForTableAndCells = (td.offsetTop === 5);

		checkDiv.style.position = "fixed";
		checkDiv.style.top = "20px";

		// safari subtracts parent border width here which is 5px
		this.supportsFixedPosition = (checkDiv.offsetTop === 20 || checkDiv.offsetTop === 15);
		checkDiv.style.position = checkDiv.style.top = "";

		innerDiv.style.overflow = "hidden";
		innerDiv.style.position = "relative";

		this.subtractsBorderForOverflowNotVisible = (checkDiv.offsetTop === -5);

		this.doesNotIncludeMarginInBodyOffset = (body.offsetTop !== bodyMarginTop);

		body.removeChild( container );
		jQuery.offset.initialize = jQuery.noop;
	},

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		jQuery.offset.initialize();

		if ( jQuery.offset.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = (position === "absolute" || position === "fixed") && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if (options.top != null) {
			props.top = (options.top - curOffset.top) + curTop;
		}
		if (options.left != null) {
			props.left = (options.left - curOffset.left) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({
	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ["Left", "Top"], function( i, name ) {
	var method = "scroll" + name;

	jQuery.fn[ method ] = function( val ) {
		var elem, win;

		if ( val === undefined ) {
			elem = this[ 0 ];

			if ( !elem ) {
				return null;
			}

			win = getWindow( elem );

			// Return the scroll offset
			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : "pageXOffset" ] :
				jQuery.support.boxModel && win.document.documentElement[ method ] ||
					win.document.body[ method ] :
				elem[ method ];
		}

		// Set the scroll offset
		return this.each(function() {
			win = getWindow( this );

			if ( win ) {
				win.scrollTo(
					!i ? val : jQuery( win ).scrollLeft(),
					 i ? val : jQuery( win ).scrollTop()
				);

			} else {
				this[ method ] = val;
			}
		});
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}




// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function( i, name ) {

	var type = name.toLowerCase();

	// innerHeight and innerWidth
	jQuery.fn[ "inner" + name ] = function() {
		var elem = this[0];
		return elem && elem.style ?
			parseFloat( jQuery.css( elem, type, "padding" ) ) :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn[ "outer" + name ] = function( margin ) {
		var elem = this[0];
		return elem && elem.style ?
			parseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :
			null;
	};

	jQuery.fn[ type ] = function( size ) {
		// Get window width or height
		var elem = this[0];
		if ( !elem ) {
			return size == null ? null : this;
		}

		if ( jQuery.isFunction( size ) ) {
			return this.each(function( i ) {
				var self = jQuery( this );
				self[ type ]( size.call( this, i, self[ type ]() ) );
			});
		}

		if ( jQuery.isWindow( elem ) ) {
			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
			// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat
			var docElemProp = elem.document.documentElement[ "client" + name ];
			return elem.document.compatMode === "CSS1Compat" && docElemProp ||
				elem.document.body[ "client" + name ] || docElemProp;

		// Get document width or height
		} else if ( elem.nodeType === 9 ) {
			// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
			return Math.max(
				elem.documentElement["client" + name],
				elem.body["scroll" + name], elem.documentElement["scroll" + name],
				elem.body["offset" + name], elem.documentElement["offset" + name]
			);

		// Get or set width or height on the element
		} else if ( size === undefined ) {
			var orig = jQuery.css( elem, type ),
				ret = parseFloat( orig );

			return jQuery.isNaN( ret ) ? orig : ret;

		// Set the width or height on the element (default to pixels if value is unitless)
		} else {
			return this.css( type, typeof size === "string" ? size : size + "px" );
		}
	};

});


// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;
})(window);
    }
})(window);/**
 * Copyright 2010 Tim Down.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * jshashtable
 *
 * jshashtable is a JavaScript implementation of a hash table. It creates a single constructor function called Hashtable
 * in the global scope.
 *
 * Author: Tim Down <tim@timdown.co.uk>
 * Version: 2.1
 * Build date: 21 March 2010
 * Website: http://www.timdown.co.uk/jshashtable
 */

var Hashtable = (function() {
	var FUNCTION = "function";

	var arrayRemoveAt = (typeof Array.prototype.splice == FUNCTION) ?
		function(arr, idx) {
			arr.splice(idx, 1);
		} :

		function(arr, idx) {
			var itemsAfterDeleted, i, len;
			if (idx === arr.length - 1) {
				arr.length = idx;
			} else {
				itemsAfterDeleted = arr.slice(idx + 1);
				arr.length = idx;
				for (i = 0, len = itemsAfterDeleted.length; i < len; ++i) {
					arr[idx + i] = itemsAfterDeleted[i];
				}
			}
		};

	function hashObject(obj) {
		var hashCode;
		if (typeof obj == "string") {
			return obj;
		} else if (typeof obj.hashCode == FUNCTION) {
			// Check the hashCode method really has returned a string
			hashCode = obj.hashCode();
			return (typeof hashCode == "string") ? hashCode : hashObject(hashCode);
		} else if (typeof obj.toString == FUNCTION) {
			return obj.toString();
		} else {
			try {
				return String(obj);
			} catch (ex) {
				// For host objects (such as ActiveObjects in IE) that have no toString() method and throw an error when
				// passed to String()
				return Object.prototype.toString.call(obj);
			}
		}
	}

	function equals_fixedValueHasEquals(fixedValue, variableValue) {
		return fixedValue.equals(variableValue);
	}

	function equals_fixedValueNoEquals(fixedValue, variableValue) {
		return (typeof variableValue.equals == FUNCTION) ?
			   variableValue.equals(fixedValue) : (fixedValue === variableValue);
	}

	function createKeyValCheck(kvStr) {
		return function(kv) {
			if (kv === null) {
				throw new Error("null is not a valid " + kvStr);
			} else if (typeof kv == "undefined") {
				throw new Error(kvStr + " must not be undefined");
			}
		};
	}

	var checkKey = createKeyValCheck("key"), checkValue = createKeyValCheck("value");

	/*----------------------------------------------------------------------------------------------------------------*/

	function Bucket(hash, firstKey, firstValue, equalityFunction) {
        this[0] = hash;
		this.entries = [];
		this.addEntry(firstKey, firstValue);

		if (equalityFunction !== null) {
			this.getEqualityFunction = function() {
				return equalityFunction;
			};
		}
	}

	var EXISTENCE = 0, ENTRY = 1, ENTRY_INDEX_AND_VALUE = 2;

	function createBucketSearcher(mode) {
		return function(key) {
			var i = this.entries.length, entry, equals = this.getEqualityFunction(key);
			while (i--) {
				entry = this.entries[i];
				if ( equals(key, entry[0]) ) {
					switch (mode) {
						case EXISTENCE:
							return true;
						case ENTRY:
							return entry;
						case ENTRY_INDEX_AND_VALUE:
							return [ i, entry[1] ];
					}
				}
			}
			return false;
		};
	}

	function createBucketLister(entryProperty) {
		return function(aggregatedArr) {
			var startIndex = aggregatedArr.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				aggregatedArr[startIndex + i] = this.entries[i][entryProperty];
			}
		};
	}

	Bucket.prototype = {
		getEqualityFunction: function(searchValue) {
			return (typeof searchValue.equals == FUNCTION) ? equals_fixedValueHasEquals : equals_fixedValueNoEquals;
		},

		getEntryForKey: createBucketSearcher(ENTRY),

		getEntryAndIndexForKey: createBucketSearcher(ENTRY_INDEX_AND_VALUE),

		removeEntryForKey: function(key) {
			var result = this.getEntryAndIndexForKey(key);
			if (result) {
				arrayRemoveAt(this.entries, result[0]);
				return result[1];
			}
			return null;
		},

		addEntry: function(key, value) {
			this.entries[this.entries.length] = [key, value];
		},

		keys: createBucketLister(0),

		values: createBucketLister(1),

		getEntries: function(entries) {
			var startIndex = entries.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				// Clone the entry stored in the bucket before adding to array
				entries[startIndex + i] = this.entries[i].slice(0);
			}
		},

		containsKey: createBucketSearcher(EXISTENCE),

		containsValue: function(value) {
			var i = this.entries.length;
			while (i--) {
				if ( value === this.entries[i][1] ) {
					return true;
				}
			}
			return false;
		}
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	// Supporting functions for searching hashtable buckets

	function searchBuckets(buckets, hash) {
		var i = buckets.length, bucket;
		while (i--) {
			bucket = buckets[i];
			if (hash === bucket[0]) {
				return i;
			}
		}
		return null;
	}

	function getBucketForHash(bucketsByHash, hash) {
		var bucket = bucketsByHash[hash];

		// Check that this is a genuine bucket and not something inherited from the bucketsByHash's prototype
		return ( bucket && (bucket instanceof Bucket) ) ? bucket : null;
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	function Hashtable(hashingFunctionParam, equalityFunctionParam) {
		var that = this;
		var buckets = [];
		var bucketsByHash = {};

		var hashingFunction = (typeof hashingFunctionParam == FUNCTION) ? hashingFunctionParam : hashObject;
		var equalityFunction = (typeof equalityFunctionParam == FUNCTION) ? equalityFunctionParam : null;

		this.put = function(key, value) {
			checkKey(key);
			checkValue(value);
			var hash = hashingFunction(key), bucket, bucketEntry, oldValue = null;

			// Check if a bucket exists for the bucket key
			bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it already contains this key
				bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so replace old value and we're done.
					oldValue = bucketEntry[1];
					bucketEntry[1] = value;
				} else {
					// The bucket does not contain an entry for this key, so add one
					bucket.addEntry(key, value);
				}
			} else {
				// No bucket exists for the key, so create one and put our key/value mapping in
				bucket = new Bucket(hash, key, value, equalityFunction);
				buckets[buckets.length] = bucket;
				bucketsByHash[hash] = bucket;
			}
			return oldValue;
		};

		this.get = function(key) {
			checkKey(key);

			var hash = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it contains this key
				var bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so return the value.
					return bucketEntry[1];
				}
			}
			return null;
		};

		this.containsKey = function(key) {
			checkKey(key);
			var bucketKey = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, bucketKey);

			return bucket ? bucket.containsKey(key) : false;
		};

		this.containsValue = function(value) {
			checkValue(value);
			var i = buckets.length;
			while (i--) {
				if (buckets[i].containsValue(value)) {
					return true;
				}
			}
			return false;
		};

		this.clear = function() {
			buckets.length = 0;
			bucketsByHash = {};
		};

		this.isEmpty = function() {
			return !buckets.length;
		};

		var createBucketAggregator = function(bucketFuncName) {
			return function() {
				var aggregated = [], i = buckets.length;
				while (i--) {
					buckets[i][bucketFuncName](aggregated);
				}
				return aggregated;
			};
		};

		this.keys = createBucketAggregator("keys");
		this.values = createBucketAggregator("values");
		this.entries = createBucketAggregator("getEntries");

		this.remove = function(key) {
			checkKey(key);

			var hash = hashingFunction(key), bucketIndex, oldValue = null;

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);

			if (bucket) {
				// Remove entry from this bucket for this key
				oldValue = bucket.removeEntryForKey(key);
				if (oldValue !== null) {
					// Entry was removed, so check if bucket is empty
					if (!bucket.entries.length) {
						// Bucket is empty, so remove it from the bucket collections
						bucketIndex = searchBuckets(buckets, hash);
						arrayRemoveAt(buckets, bucketIndex);
						delete bucketsByHash[hash];
					}
				}
			}
			return oldValue;
		};

		this.size = function() {
			var total = 0, i = buckets.length;
			while (i--) {
				total += buckets[i].entries.length;
			}
			return total;
		};

		this.each = function(callback) {
			var entries = that.entries(), i = entries.length, entry;
			while (i--) {
				entry = entries[i];
				callback(entry[0], entry[1]);
			}
		};

		this.putAll = function(hashtable, conflictCallback) {
			var entries = hashtable.entries();
			var entry, key, value, thisValue, i = entries.length;
			var hasConflictCallback = (typeof conflictCallback == FUNCTION);
			while (i--) {
				entry = entries[i];
				key = entry[0];
				value = entry[1];

				// Check for a conflict. The default behaviour is to overwrite the value for an existing key
				if ( hasConflictCallback && (thisValue = that.get(key)) ) {
					value = conflictCallback(key, thisValue, value);
				}
				that.put(key, value);
			}
		};

		this.clone = function() {
			var clone = new Hashtable(hashingFunctionParam, equalityFunctionParam);
			clone.putAll(that);
			return clone;
		};
	}

	return Hashtable;
})();// Scheme numbers.


var __PLTNUMBERS_TOP__;
if (typeof(exports) !== 'undefined') {
    __PLTNUMBERS_TOP__ = exports;
} else {
    if (! this['jsnums']) {
 	this['jsnums'] = {};
    }
    __PLTNUMBERS_TOP__  = this['jsnums'];
}

//var jsnums = {};


// The numeric tower has the following levels:
//     integers
//     rationals
//     floats
//     complex numbers
//
// with the representations:
//     integers: fixnum or BigInteger [level=0]
//     rationals: Rational [level=1]
//     floats: FloatPoint [level=2]
//     complex numbers: Complex [level=3]

// We try to stick with the unboxed fixnum representation for
// integers, since that's what scheme programs commonly deal with, and
// we want that common type to be lightweight.


// A boxed-scheme-number is either BigInteger, Rational, FloatPoint, or Complex.
// An integer-scheme-number is either fixnum or BigInteger.


(function() {
    // Abbreviation
    var Numbers = __PLTNUMBERS_TOP__;
    //var Numbers = jsnums;


    // makeNumericBinop: (fixnum fixnum -> any) (scheme-number scheme-number -> any) -> (scheme-number scheme-number) X
    // Creates a binary function that works either on fixnums or boxnums.
    // Applies the appropriate binary function, ensuring that both scheme numbers are
    // lifted to the same level.
    var makeNumericBinop = function(onFixnums, onBoxednums, options) {
	options = options || {};
	return function(x, y) {
	    if (options.isXSpecialCase && options.isXSpecialCase(x))
		return options.onXSpecialCase(x, y);
	    if (options.isYSpecialCase && options.isYSpecialCase(y))
		return options.onYSpecialCase(x, y);

	    if (typeof(x) === 'number' &&
		typeof(y) === 'number') {
		return onFixnums(x, y);
	    }
	    if (typeof(x) === 'number') {
		x = liftFixnumInteger(x, y);
	    }
	    if (typeof(y) === 'number') {
		y = liftFixnumInteger(y, x);
	    }

	    if (x.level < y.level) x = x.liftTo(y);
	    if (y.level < x.level) y = y.liftTo(x);
	    return onBoxednums(x, y);
	};
    }
    
    
    // fromFixnum: fixnum -> scheme-number
    var fromFixnum = function(x) {
	if (isNaN(x) || (! isFinite(x))) {
	    return FloatPoint.makeInstance(x);
	}
	var nf = Math.floor(x);
	if (nf === x) {
            if (isOverflow(nf)) {
		return makeBignum(expandExponent(x+''));
            } else {
		return nf;
	    }
	} else {
            return FloatPoint.makeInstance(x);
	}
    };

    var expandExponent = function(s) {
	var match = s.match(scientificPattern), mantissaChunks, exponent;
	if (match) {
	    mantissaChunks = match[1].match(/^([^.]*)(.*)$/);
	    exponent = Number(match[2]);

	    if (mantissaChunks[2].length === 0) {
		return mantissaChunks[1] + zfill(exponent);
	    }

	    if (exponent >= mantissaChunks[2].length - 1) {
		return (mantissaChunks[1] + 
			mantissaChunks[2].substring(1) + 
			zfill(exponent - (mantissaChunks[2].length - 1)));
	    } else {
		return (mantissaChunks[1] +
			mantissaChunks[2].substring(1, 1+exponent));
	    }
	} else {
	    return s;
	}
    };

    // zfill: integer -> string
    // builds a string of "0"'s of length n.
    var zfill = function(n) {
	var buffer = [];
	buffer.length = n;
	for (var i = 0; i < n; i++) {
	    buffer[i] = '0';
	}
	return buffer.join('');
    };
    

    
    // liftFixnumInteger: fixnum-integer boxed-scheme-number -> boxed-scheme-number
    // Lifts up fixnum integers to a boxed type.
    var liftFixnumInteger = function(x, other) {
	switch(other.level) {
	case 0: // BigInteger
	    return makeBignum(x);
	case 1: // Rational
	    return new Rational(x, 1);
	case 2: // FloatPoint
	    return new FloatPoint(x);
	case 3: // Complex
	    return new Complex(x, 0);
	default:
	    throwRuntimeError("IMPOSSIBLE: cannot lift fixnum integer to " + other.toString(), x, other);
	}
    };
    
    
    // throwRuntimeError: string (scheme-number | undefined) (scheme-number | undefined) -> void
    // Throws a runtime error with the given message string.
    var throwRuntimeError = function(msg, x, y) {
	Numbers['onThrowRuntimeError'](msg, x, y);
    };



    // onThrowRuntimeError: string (scheme-number | undefined) (scheme-number | undefined) -> void
    // By default, will throw a new Error with the given message.
    // Override Numbers['onThrowRuntimeError'] if you need to do something special.
    var onThrowRuntimeError = function(msg, x, y) {
	throw new Error(msg);
    };


    // isSchemeNumber: any -> boolean
    // Returns true if the thing is a scheme number.
    var isSchemeNumber = function(thing) {
	return (typeof(thing) === 'number'
		|| (thing instanceof Rational ||
		    thing instanceof FloatPoint ||
		    thing instanceof Complex ||
		    thing instanceof BigInteger));
    };


    // isRational: scheme-number -> boolean
    var isRational = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isRational()));
    };

    // isReal: scheme-number -> boolean
    var isReal = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isReal()));
    };

    // isExact: scheme-number -> boolean
    var isExact = function(n) {
	return (typeof(n) === 'number' || 
		(isSchemeNumber(n) && n.isExact()));
    };

    // isExact: scheme-number -> boolean
    var isInexact = function(n) {
	if (typeof(n) === 'number') {
	    return false;
	} else {
	    return (isSchemeNumber(n) && n.isInexact());
	}
    };

    // isInteger: scheme-number -> boolean
    var isInteger = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isInteger()));
    };

    // isExactInteger: scheme-number -> boolean
    var isExactInteger = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && 
		 n.isInteger() && 
		 n.isExact()));
    }



    // toFixnum: scheme-number -> javascript-number
    var toFixnum = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.toFixnum();
    };

    // toExact: scheme-number -> scheme-number
    var toExact = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.toExact();
    };


    // toExact: scheme-number -> scheme-number
    var toInexact = function(n) {
	if (typeof(n) === 'number')
	    return FloatPoint.makeInstance(n);
	return n.toInexact();
    };



    //////////////////////////////////////////////////////////////////////


    // add: scheme-number scheme-number -> scheme-number
    var add = makeNumericBinop(
	function(x, y) {
	    var sum = x + y;
	    if (isOverflow(sum)) {
		return (makeBignum(x)).add(makeBignum(y));
	    } else {
		return sum;
	    }
	},
	function(x, y) {
	    return x.add(y);
	},
	{isXSpecialCase: function(x) { 
	    return isExactInteger(x) && _integerIsZero(x) },
	 onXSpecialCase: function(x, y) { return y; },
	 isYSpecialCase: function(y) { 
	     return isExactInteger(y) && _integerIsZero(y) },
	 onYSpecialCase: function(x, y) { return x; }
	});


    // subtract: scheme-number scheme-number -> scheme-number
    var subtract = makeNumericBinop(
	function(x, y) {
	    var diff = x - y;
	    if (isOverflow(diff)) {
		return (makeBignum(x)).subtract(makeBignum(y));
	    } else {
		return diff;
	    }
	},
	function(x, y) {
	    return x.subtract(y);
	},
	{isXSpecialCase: function(x) { 
	    return isExactInteger(x) && _integerIsZero(x) },
	 onXSpecialCase: function(x, y) { return negate(y); },
	 isYSpecialCase: function(y) { 
	     return isExactInteger(y) && _integerIsZero(y) },
	 onYSpecialCase: function(x, y) { return x; }
	});


    // mulitply: scheme-number scheme-number -> scheme-number
    var multiply = makeNumericBinop(
	function(x, y) {
	    var prod = x * y;
	    if (isOverflow(prod)) {
		return (makeBignum(x)).multiply(makeBignum(y));
	    } else {
		return prod;
	    }
	},
	function(x, y) {
	    return x.multiply(y);
	},
	{isXSpecialCase: function(x) { 
	    return (isExactInteger(x) && 
		    (_integerIsZero(x) || _integerIsOne(x) || _integerIsNegativeOne(x))) },
	 onXSpecialCase: function(x, y) { 
	     if (_integerIsZero(x))
		 return 0;
	     if (_integerIsOne(x))
		 return y;
	     if (_integerIsNegativeOne(x))
		 return negate(y);
	 },
	 isYSpecialCase: function(y) { 
	     return (isExactInteger(y) && 
		     (_integerIsZero(y) || _integerIsOne(y) || _integerIsNegativeOne(y)))},
	 onYSpecialCase: function(x, y) { 
	     if (_integerIsZero(y))
		 return 0;
	     if (_integerIsOne(y))
		 return x;
	     if (_integerIsNegativeOne(y)) 
		 return negate(x);
	 }
	});

    
    // divide: scheme-number scheme-number -> scheme-number
    var divide = makeNumericBinop(
	function(x, y) {
	    if (_integerIsZero(y))
		throwRuntimeError("/: division by zero", x, y);
	    var div = x / y;
	    if (isOverflow(div)) {
		return (makeBignum(x)).divide(makeBignum(y));
	    } else if (Math.floor(div) !== div) {
		return Rational.makeInstance(x, y);
	    } else {
		return div;
	    }
	},
	function(x, y) {
	    return x.divide(y);
	},
	{ isXSpecialCase: function(x) {
	    return (eqv(x, 0));
	},
	  onXSpecialCase: function(x, y) {
	      if (eqv(y, 0)) {
		  throwRuntimeError("/: division by zero", x, y);
	      }
	      return 0;
	  },
	  isYSpecialCase: function(y) { 
	    return (eqv(y, 0)); },
	  onYSpecialCase: function(x, y) {
	      throwRuntimeError("/: division by zero", x, y);
	  }
	});
    
    
    // equals: scheme-number scheme-number -> boolean
    var equals = makeNumericBinop(
	function(x, y) {
	    return x === y;
	},
	function(x, y) {
	    return x.equals(y);
	});


    // eqv: scheme-number scheme-number -> boolean
    var eqv = function(x, y) {
	if (x === y)
	    return true;
	if (typeof(x) === 'number' && typeof(y) === 'number')
	    return x === y;
	if (x === NEGATIVE_ZERO || y === NEGATIVE_ZERO)
	    return x === y;
	if (x instanceof Complex || y instanceof Complex) {
	    return (eqv(realPart(x), realPart(y)) &&
		    eqv(imaginaryPart(x), imaginaryPart(y)));
	}
	var ex = isExact(x), ey = isExact(y);
	return (((ex && ey) || (!ex && !ey)) && equals(x, y));
    };

    // approxEqual: scheme-number scheme-number scheme-number -> boolean
    var approxEquals = function(x, y, delta) {
	return lessThan(abs(subtract(x, y)),
                        delta);
    };

    // greaterThanOrEqual: scheme-number scheme-number -> boolean
    var greaterThanOrEqual = makeNumericBinop(
	function(x, y) {
	    return x >= y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError(
		    ">=: couldn't be applied to complex number", x, y);
	    return x.greaterThanOrEqual(y);
	});


    // lessThanOrEqual: scheme-number scheme-number -> boolean
    var lessThanOrEqual = makeNumericBinop(
	function(x, y){

	    return x <= y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError("<=: couldn't be applied to complex number", x, y);
	    return x.lessThanOrEqual(y);
	});


    // greaterThan: scheme-number scheme-number -> boolean
    var greaterThan = makeNumericBinop(
	function(x, y){
	    return x > y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError(">: couldn't be applied to complex number", x, y);
	    return x.greaterThan(y);
	});


    // lessThan: scheme-number scheme-number -> boolean
    var lessThan = makeNumericBinop(
	function(x, y){

	    return x < y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError("<: couldn't be applied to complex number", x, y);
	    return x.lessThan(y);
	});



    // expt: scheme-number scheme-number -> scheme-number
    var expt = (function() {
	var _expt = makeNumericBinop(
	    function(x, y){
		var pow = Math.pow(x, y);
		if (isOverflow(pow)) {
		    return (makeBignum(x)).expt(makeBignum(y));
		} else {
		    return pow;
		}
	    },
	    function(x, y) {
		if (equals(y, 0)) {
		    return add(y, 1);
		} else {
		    return x.expt(y);
		}
	    });
	return function(x, y) {
	    if (equals(y, 0)) 
		return add(y, 1);
	    if (isReal(y) && lessThan(y, 0)) {
		return _expt(divide(1, x), negate(y));
	    }
	    return _expt(x, y);
	};
    })();


    // exp: scheme-number -> scheme-number
    var exp = function(n) {
	if ( eqv(n, 0) ) {
		return 1;
	}
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.exp(n));
	}
	return n.exp();
    };


    // modulo: scheme-number scheme-number -> scheme-number
    var modulo = function(m, n) {
	if (! isInteger(m)) {
	    throwRuntimeError('modulo: the first argument '
			      + m + " is not an integer.", m, n);
	}
	if (! isInteger(n)) {
	    throwRuntimeError('modulo: the second argument '
			      + n + " is not an integer.", m, n);
	}
	var result;
	if (typeof(m) === 'number') {
	    result = m % n;
	    if (n < 0) {
		if (result <= 0)
		    return result;
		else
		    return result + n;
	    } else {
		if (result < 0)
		    return result + n;
		else
		    return result;
	    }
	}
	result = _integerModulo(floor(m), floor(n));
	// The sign of the result should match the sign of n.
	if (lessThan(n, 0)) {
	    if (lessThanOrEqual(result, 0)) {
		return result;
	    }
	    return add(result, n);

	} else {
	    if (lessThan(result, 0)) {
		return add(result, n);
	    }
	    return result;
	}
    };



    // numerator: scheme-number -> scheme-number
    var numerator = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.numerator();
    };


    // denominator: scheme-number -> scheme-number
    var denominator = function(n) {
	if (typeof(n) === 'number')
	    return 1;
	return n.denominator();
    };

    // sqrt: scheme-number -> scheme-number
    var sqrt = function(n) {
	if (typeof(n) === 'number') {
	    if (n >= 0) {
		var result = Math.sqrt(n);
		if (Math.floor(result) === result) {
		    return result;
		} else {
		    return FloatPoint.makeInstance(result);
		}
	    } else {
		return (Complex.makeInstance(0, sqrt(-n)));
	    }
	}
	return n.sqrt();
    };

    // abs: scheme-number -> scheme-number
    var abs = function(n) {
	if (typeof(n) === 'number') {
	    return Math.abs(n);
	}
	return n.abs();
    };

    // floor: scheme-number -> scheme-number
    var floor = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.floor();
    };

    // ceiling: scheme-number -> scheme-number
    var ceiling = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.ceiling();
    };

    // conjugate: scheme-number -> scheme-number
    var conjugate = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.conjugate();
    };

    // magnitude: scheme-number -> scheme-number
    var magnitude = function(n) {
	if (typeof(n) === 'number')
	    return Math.abs(n);
	return n.magnitude();
    };


    // log: scheme-number -> scheme-number
    var log = function(n) {
	if ( eqv(n, 1) ) {
		return 0;
	}
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.log(n));
	}
	return n.log();
    };

    // angle: scheme-number -> scheme-number
    var angle = function(n) {
	if (typeof(n) === 'number') {
	    if (n > 0)
		return 0;
	    else
		return FloatPoint.pi;
	}
	return n.angle();
    };

    // tan: scheme-number -> scheme-number
    var tan = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.tan(n));
	}
	return n.tan();
    };

    // atan: scheme-number -> scheme-number
    var atan = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.atan(n));
	}
	return n.atan();
    };

    // cos: scheme-number -> scheme-number
    var cos = function(n) {
	if (eqv(n, 0)) { return 1; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.cos(n));
	}
	return n.cos();
    };

    // sin: scheme-number -> scheme-number
    var sin = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.sin(n));
	}
	return n.sin();
    };

    // acos: scheme-number -> scheme-number
    var acos = function(n) {
	if (eqv(n, 1)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.acos(n));
	}
	return n.acos();
    };

    // asin: scheme-number -> scheme-number
    var asin = function(n) {
        if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.asin(n));
	}
	return n.asin();
    };

    // imaginaryPart: scheme-number -> scheme-number
    var imaginaryPart = function(n) {
	if (typeof(n) === 'number') {
	    return 0;
	}
	return n.imaginaryPart();
    };

    // realPart: scheme-number -> scheme-number
    var realPart = function(n) {
	if (typeof(n) === 'number') {
	    return n;
	}
	return n.realPart();
    };

    // round: scheme-number -> scheme-number
    var round = function(n) {
	if (typeof(n) === 'number') {
	    return n;
	}
	return n.round();
    };



    // sqr: scheme-number -> scheme-number
    var sqr = function(x) {
	return multiply(x, x);
    };


    // integerSqrt: scheme-number -> scheme-number
    var integerSqrt = function(x) {
	if (! isInteger(x)) {
	    throwRuntimeError('integer-sqrt: the argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (typeof (x) === 'number') {
	    if(x < 0) {
	        return Complex.makeInstance(0,
					    Math.floor(Math.sqrt(-x)))
	    } else {
		return Math.floor(Math.sqrt(x));
	    }
	}
	return x.integerSqrt();
    };


    // gcd: scheme-number [scheme-number ...] -> scheme-number
    var gcd = function(first, rest) {
	if (! isInteger(first)) {
	    throwRuntimeError('gcd: the argument ' + first.toString() +
			      " is not an integer.", first);
	}
	var a = abs(first), t, b;
	for(var i = 0; i < rest.length; i++) {
	    b = abs(rest[i]);	
	    if (! isInteger(b)) {
		throwRuntimeError('gcd: the argument ' + b.toString() +
				  " is not an integer.", b);
	    }
	    while (! _integerIsZero(b)) {
		t = a;
		a = b;
		b = _integerModulo(t, b);
	    }
	}
	return a;
    };

    // lcm: scheme-number [scheme-number ...] -> scheme-number
    var lcm = function(first, rest) {
	if (! isInteger(first)) {
	    throwRuntimeError('lcm: the argument ' + first.toString() +
			      " is not an integer.", first);
	}
	var result = abs(first);
	if (_integerIsZero(result)) { return 0; }
	for (var i = 0; i < rest.length; i++) {
	    if (! isInteger(rest[i])) {
		throwRuntimeError('lcm: the argument ' + rest[i].toString() +
				  " is not an integer.", rest[i]);
	    }
	    var divisor = _integerGcd(result, rest[i]);
	    if (_integerIsZero(divisor)) {
		return 0;
	    }
	    result = divide(multiply(result, rest[i]), divisor);
	}
	return result;
    };
    

    var quotient = function(x, y) {
 	if (! isInteger(x)) {
	    throwRuntimeError('quotient: the first argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (! isInteger(y)) {
	    throwRuntimeError('quotient: the second argument ' + y.toString() +
			      " is not an integer.", y);
	}
	return _integerQuotient(x, y);
    };

    
    var remainder = function(x, y) {
	if (! isInteger(x)) {
	    throwRuntimeError('remainder: the first argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (! isInteger(y)) {
	    throwRuntimeError('remainder: the second argument ' + y.toString() +
			      " is not an integer.", y);
	}
	return _integerRemainder(x, y);
    };


    // Implementation of the hyperbolic functions
    // http://en.wikipedia.org/wiki/Hyperbolic_cosine
    var cosh = function(x) {
	if (eqv(x, 0)) {
	    return FloatPoint.makeInstance(1.0);
	}
	return divide(add(exp(x), exp(negate(x))),
		      2);
    };
	
    var sinh = function(x) {
	return divide(subtract(exp(x), exp(negate(x))),
		      2);
    };


        
    var makeComplexPolar = function(r, theta) {
	// special case: if theta is zero, just return
	// the scalar.
	if (eqv(theta, 0)) {
	    return r;
	}
	return Complex.makeInstance(multiply(r, cos(theta)),
				    multiply(r, sin(theta)));
    };



    //////////////////////////////////////////////////////////////////////

    // Helpers


    // IsFinite: scheme-number -> boolean
    // Returns true if the scheme number is finite or not.
    var isSchemeNumberFinite = function(n) {
	if (typeof(n) === 'number') {
	    return isFinite(n);
	} else {
	    return n.isFinite();
	}
    };

    // isOverflow: javascript-number -> boolean
    // Returns true if we consider the number an overflow.
    var MIN_FIXNUM = -(9e15);
    var MAX_FIXNUM = (9e15);
    var isOverflow = function(n) {
	return (n < MIN_FIXNUM ||  MAX_FIXNUM < n);
    };


    // negate: scheme-number -> scheme-number
    // multiplies a number times -1.
    var negate = function(n) {
	if (typeof(n) === 'number') {
	    return -n;
	}
	return n.negate();
    };


    // halve: scheme-number -> scheme-number
    // Divide a number by 2.
    var halve = function(n) {
	return divide(n, 2);
    };


    // timesI: scheme-number scheme-number
    // multiplies a number times i.
    var timesI = function(x) {
	return multiply(x, plusI);
    };


    // fastExpt: computes n^k by squaring.
    // n^k = (n^2)^(k/2)
    // Assumes k is non-negative integer.
    var fastExpt = function(n, k) {
	var acc = 1;
	while (true) {
	    if (_integerIsZero(k)) {
		return acc;
	    }
	    if (equals(modulo(k, 2), 0)) {
		n = multiply(n, n);
		k = divide(k, 2);
	    } else {
		acc = multiply(acc, n);
		k = subtract(k, 1);
	    }
	}
    };



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Integer operations
    // Integers are either represented as fixnums or as BigIntegers.

    // makeIntegerBinop: (fixnum fixnum -> X) (BigInteger BigInteger -> X) -> X
    // Helper to collect the common logic for coersing integer fixnums or bignums to a
    // common type before doing an operation.
    var makeIntegerBinop = function(onFixnums, onBignums, options) {
	options = options || {};
	return (function(m, n) {
	    if (m instanceof Rational) {
		m = numerator(m);
	    } else if (m instanceof Complex) {
		m = realPart(m);
	    }

	    if (n instanceof Rational) {
		n = numerator(n);
	    }else if (n instanceof Complex) {
		n = realPart(n);
	    }

	    if (typeof(m) === 'number' && typeof(n) === 'number') {
		var result = onFixnums(m, n);
		if (! isOverflow(result) ||
		    (options.ignoreOverflow)) {
		    return result;
		}
	    }
	    if (m instanceof FloatPoint || n instanceof FloatPoint) {
		if (options.doNotCoerseToFloating) {
		    return onFixnums(toFixnum(m), toFixnum(n));
		}
		else {
		    return FloatPoint.makeInstance(
			onFixnums(toFixnum(m), toFixnum(n)));
		}
	    }
	    if (typeof(m) === 'number') {
		m = makeBignum(m);
	    }
	    if (typeof(n) === 'number') {
		n = makeBignum(n);
	    }
	    return onBignums(m, n);
	});
    };


    var makeIntegerUnOp = function(onFixnums, onBignums, options) {
	options = options || {};
	return (function(m) {
	    if (m instanceof Rational) {
		m = numerator(m);
	    } else if (m instanceof Complex) {
		m = realPart(m);
	    }

	    if (typeof(m) === 'number') {
		var result = onFixnums(m);
		if (! isOverflow(result) ||
		    (options.ignoreOverflow)) {
		    return result;
		}
	    }
	    if (m instanceof FloatPoint) {
		return onFixnums(toFixnum(m));
	    }
	    if (typeof(m) === 'number') {
		m = makeBignum(m);
	    }
	    return onBignums(m);
	});
    };



    // _integerModulo: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerModulo = makeIntegerBinop(
	function(m, n) {
	    return m % n;
	},
	function(m, n) {
	    return bnMod.call(m, n);
	});


    // _integerGcd: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerGcd = makeIntegerBinop(
	function(a, b) {
	    var t;
	    while (b !== 0) {
		t = a;
		a = b;
		b = t % b;
	    }
	    return a;
	},
	function(m, n) {
	    return bnGCD.call(m, n);
	});


    // _integerIsZero: integer-scheme-number -> boolean
    // Returns true if the number is zero.
    var _integerIsZero = makeIntegerUnOp(
	function(n){
	    return n === 0;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.ZERO);
	}
    );


    // _integerIsOne: integer-scheme-number -> boolean
    var _integerIsOne = makeIntegerUnOp(
	function(n) {
	    return n === 1;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.ONE);
	});
    

 
    // _integerIsNegativeOne: integer-scheme-number -> boolean
    var _integerIsNegativeOne = makeIntegerUnOp(
	function(n) {
	    return n === -1;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.NEGATIVE_ONE);
	});
    


    // _integerAdd: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerAdd = makeIntegerBinop(
	function(m, n) {
	    return m + n;
	},
	function(m, n) {
	    return bnAdd.call(m, n);
	});

    // _integerSubtract: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerSubtract = makeIntegerBinop(
	function(m, n) {
	    return m - n;
	},
	function(m, n) {
	    return bnSubtract.call(m, n);
	});

    // _integerMultiply: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerMultiply = makeIntegerBinop(
	function(m, n) {
	    return m * n;
	},
	function(m, n) {
	    return bnMultiply.call(m, n);
	});

    //_integerQuotient: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerQuotient = makeIntegerBinop(
	function(m, n) {
	    return ((m - (m % n))/ n);
	},
	function(m, n) {
            return bnDivide.call(m, n);
	});

    var _integerRemainder = makeIntegerBinop(
	function(m, n) {
	    return m % n;
	},
	function(m, n) {
	    return bnRemainder.call(m, n);
	});


    // _integerDivideToFixnum: integer-scheme-number integer-scheme-number -> fixnum
    var _integerDivideToFixnum = makeIntegerBinop(
	function(m, n) {
	    return m / n;
	},
	function(m, n) {
	    return toFixnum(m) / toFixnum(n);
	},
	{ignoreOverflow: true,
	 doNotCoerseToFloating: true});


    // _integerEquals: integer-scheme-number integer-scheme-number -> boolean
    var _integerEquals = makeIntegerBinop(
	function(m, n) {
	    return m === n;
	},
	function(m, n) {
	    return bnEquals.call(m, n);
	},
	{doNotCoerseToFloating: true});

    // _integerGreaterThan: integer-scheme-number integer-scheme-number -> boolean
    var _integerGreaterThan = makeIntegerBinop(
	function(m, n) {
	    return m > n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) > 0;
	},
	{doNotCoerseToFloating: true});

    // _integerLessThan: integer-scheme-number integer-scheme-number -> boolean
    var _integerLessThan = makeIntegerBinop(
	function(m, n) {
	    return m < n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) < 0;
	},
	{doNotCoerseToFloating: true});

    // _integerGreaterThanOrEqual: integer-scheme-number integer-scheme-number -> boolean
    var _integerGreaterThanOrEqual = makeIntegerBinop(
	function(m, n) {
	    return m >= n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) >= 0;
	},
	{doNotCoerseToFloating: true});

    // _integerLessThanOrEqual: integer-scheme-number integer-scheme-number -> boolean
    var _integerLessThanOrEqual = makeIntegerBinop(
	function(m, n) {
	    return m <= n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) <= 0;
	},
	{doNotCoerseToFloating: true});



    //////////////////////////////////////////////////////////////////////
    // The boxed number types are expected to implement the following
    // interface.
    //
    // toString: -> string

    // level: number

    // liftTo: scheme-number -> scheme-number

    // isFinite: -> boolean

    // isInteger: -> boolean
    // Produce true if this number can be coersed into an integer.

    // isRational: -> boolean
    // Produce true if the number is rational.

    // isReal: -> boolean
    // Produce true if the number is real.

    // isExact: -> boolean
    // Produce true if the number is exact

    // toExact: -> scheme-number
    // Produce an exact number.

    // toFixnum: -> javascript-number
    // Produce a javascript number.

    // greaterThan: scheme-number -> boolean
    // Compare against instance of the same type.

    // greaterThanOrEqual: scheme-number -> boolean
    // Compare against instance of the same type.

    // lessThan: scheme-number -> boolean
    // Compare against instance of the same type.

    // lessThanOrEqual: scheme-number -> boolean
    // Compare against instance of the same type.

    // add: scheme-number -> scheme-number
    // Add with an instance of the same type.

    // subtract: scheme-number -> scheme-number
    // Subtract with an instance of the same type.

    // multiply: scheme-number -> scheme-number
    // Multiply with an instance of the same type.

    // divide: scheme-number -> scheme-number
    // Divide with an instance of the same type.

    // numerator: -> scheme-number
    // Return the numerator.

    // denominator: -> scheme-number
    // Return the denominator.

    // integerSqrt: -> scheme-number
    // Produce the integer square root.

    // sqrt: -> scheme-number
    // Produce the square root.

    // abs: -> scheme-number
    // Produce the absolute value.

    // floor: -> scheme-number
    // Produce the floor.

    // ceiling: -> scheme-number
    // Produce the ceiling.

    // conjugate: -> scheme-number
    // Produce the conjugate.

    // magnitude: -> scheme-number
    // Produce the magnitude.

    // log: -> scheme-number
    // Produce the log.

    // angle: -> scheme-number
    // Produce the angle.

    // atan: -> scheme-number
    // Produce the arc tangent.

    // cos: -> scheme-number
    // Produce the cosine.

    // sin: -> scheme-number
    // Produce the sine.

    // expt: scheme-number -> scheme-number
    // Produce the power to the input.

    // exp: -> scheme-number
    // Produce e raised to the given power.

    // acos: -> scheme-number
    // Produce the arc cosine.

    // asin: -> scheme-number
    // Produce the arc sine.

    // imaginaryPart: -> scheme-number
    // Produce the imaginary part

    // realPart: -> scheme-number
    // Produce the real part.

    // round: -> scheme-number
    // Round to the nearest integer.

    // equals: scheme-number -> boolean
    // Produce true if the given number of the same type is equal.



    //////////////////////////////////////////////////////////////////////

    // Rationals


    var Rational = function(n, d) {
	this.n = n;
	this.d = d;
    };


    Rational.prototype.toString = function() {
	if (_integerIsOne(this.d)) {
	    return this.n.toString() + "";
	} else {
	    return this.n.toString() + "/" + this.d.toString();
	}
    };


    Rational.prototype.level = 1;


    Rational.prototype.liftTo = function(target) {
	if (target.level === 2)
	    return new FloatPoint(
		_integerDivideToFixnum(this.n, this.d));
	if (target.level === 3)
	    return new Complex(this, 0);
	return throwRuntimeError("invalid level of Number", this, target);
    };

    Rational.prototype.isFinite = function() {
	return true;
    };

    Rational.prototype.equals = function(other) {
	return (other instanceof Rational &&
		_integerEquals(this.n, other.n) &&
		_integerEquals(this.d, other.d));
    };



    Rational.prototype.isInteger = function() {
	return _integerIsOne(this.d);
    };

    Rational.prototype.isRational = function() {
        return true;
    };

    Rational.prototype.isReal = function() {
	return true;
    };


    Rational.prototype.add = function(other) {
	return Rational.makeInstance(_integerAdd(_integerMultiply(this.n, other.d),
						 _integerMultiply(this.d, other.n)),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.subtract = function(other) {
	return Rational.makeInstance(_integerSubtract(_integerMultiply(this.n, other.d),
						      _integerMultiply(this.d, other.n)),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.negate = function() { 
	return Rational.makeInstance(-this.n, this.d) 
    };

    Rational.prototype.multiply = function(other) {
	return Rational.makeInstance(_integerMultiply(this.n, other.n),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.divide = function(other) {
	if (_integerIsZero(this.d) || _integerIsZero(other.n)) {
	    throwRuntimeError("/: division by zero", this, other);
	}
	return Rational.makeInstance(_integerMultiply(this.n, other.d),
				     _integerMultiply(this.d, other.n));
    };


    Rational.prototype.toExact = function() {
	return this;
    };

    Rational.prototype.toInexact = function() {
	return FloatPoint.makeInstance(this.toFixnum());
    };


    Rational.prototype.isExact = function() {
        return true;
    };

    Rational.prototype.isInexact = function() {
        return false;
    };


    Rational.prototype.toFixnum = function() {
	return _integerDivideToFixnum(this.n, this.d);
    };

    Rational.prototype.numerator = function() {
	return this.n;
    };

    Rational.prototype.denominator = function() {
	return this.d;
    };

    Rational.prototype.greaterThan = function(other) {
	return _integerGreaterThan(_integerMultiply(this.n, other.d),
				   _integerMultiply(this.d, other.n));
    };

    Rational.prototype.greaterThanOrEqual = function(other) {
	return _integerGreaterThanOrEqual(_integerMultiply(this.n, other.d),
					  _integerMultiply(this.d, other.n));
    };

    Rational.prototype.lessThan = function(other) {
	return _integerLessThan(_integerMultiply(this.n, other.d),
				_integerMultiply(this.d, other.n));
    };

    Rational.prototype.lessThanOrEqual = function(other) {
	return _integerLessThanOrEqual(_integerMultiply(this.n, other.d),
				       _integerMultiply(this.d, other.n));
    };

    Rational.prototype.integerSqrt = function() {
	var result = sqrt(this);
	if (isRational(result)) {
	    return toExact(floor(result));
	} else if (isReal(result)) {
	    return toExact(floor(result));
	} else {
	    return Complex.makeInstance(toExact(floor(realPart(result))),
					toExact(floor(imaginaryPart(result))));
	}
    };


    Rational.prototype.sqrt = function() {
	if (_integerGreaterThanOrEqual(this.n,  0)) {
	    var newN = sqrt(this.n);
	    var newD = sqrt(this.d);
	    if (equals(floor(newN), newN) &&
		equals(floor(newD), newD)) {
		return Rational.makeInstance(newN, newD);
	    } else {
		return FloatPoint.makeInstance(_integerDivideToFixnum(newN, newD));
	    }
	} else {
	    var newN = sqrt(negate(this.n));
	    var newD = sqrt(this.d);
	    if (equals(floor(newN), newN) &&
		equals(floor(newD), newD)) {
		return Complex.makeInstance(
		    0,
		    Rational.makeInstance(newN, newD));
	    } else {
		return Complex.makeInstance(
		    0,
		    FloatPoint.makeInstance(_integerDivideToFixnum(newN, newD)));
	    }
	}
    };

    Rational.prototype.abs = function() {
	return Rational.makeInstance(abs(this.n),
				     this.d);
    };


    Rational.prototype.floor = function() {
	var quotient = _integerQuotient(this.n, this.d);
	if (_integerLessThan(this.n, 0)) {
	    return subtract(quotient, 1);
	} else {
	    return quotient;
	}
    };


    Rational.prototype.ceiling = function() {
	var quotient = _integerQuotient(this.n, this.d);
	if (_integerLessThan(this.n, 0)) {
	    return quotient;
	} else {
	    return add(quotient, 1);
	}
    };

    Rational.prototype.conjugate = function() {
	return this;
    };

    Rational.prototype.magnitude = Rational.prototype.abs;

    Rational.prototype.log = function(){
	return FloatPoint.makeInstance(Math.log(this.n / this.d));
    };

    Rational.prototype.angle = function(){
	if (_integerIsZero(this.n))
	    return 0;
	if (_integerGreaterThan(this.n, 0))
	    return 0;
	else
	    return FloatPoint.pi;
    };

    Rational.prototype.tan = function(){
	return FloatPoint.makeInstance(Math.tan(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.atan = function(){
	return FloatPoint.makeInstance(Math.atan(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.cos = function(){
	return FloatPoint.makeInstance(Math.cos(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.sin = function(){
	return FloatPoint.makeInstance(Math.sin(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.expt = function(a){
	if (isExactInteger(a) && greaterThanOrEqual(a, 0)) {
	    return fastExpt(this, a);
	}
	return FloatPoint.makeInstance(Math.pow(_integerDivideToFixnum(this.n, this.d),
						_integerDivideToFixnum(a.n, a.d)));
    };

    Rational.prototype.exp = function(){
	return FloatPoint.makeInstance(Math.exp(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.acos = function(){
	return FloatPoint.makeInstance(Math.acos(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.asin = function(){
	return FloatPoint.makeInstance(Math.asin(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.imaginaryPart = function(){
	return 0;
    };

    Rational.prototype.realPart = function(){
	return this;
    };


    Rational.prototype.round = function() {
	// FIXME: not correct when values are bignums
	if (equals(this.d, 2)) {
	    // Round to even if it's a n/2
	    var v = _integerDivideToFixnum(this.n, this.d);
	    var fl = Math.floor(v);
	    var ce = Math.ceil(v);
	    if (_integerIsZero(fl % 2)) {
		return fl;
	    }
	    else {
		return ce;
	    }
	} else {
	    return Math.round(this.n / this.d);
	}
    };


    Rational.makeInstance = function(n, d) {
	if (n === undefined)
	    throwRuntimeError("n undefined", n, d);

	if (d === undefined) { d = 1; }

	if (_integerLessThan(d, 0)) {
	    n = negate(n);
	    d = negate(d);
	}

	var divisor = _integerGcd(abs(n), abs(d));
	n = _integerQuotient(n, divisor);
	d = _integerQuotient(d, divisor);

	// Optimization: if we can get around construction the rational
	// in favor of just returning n, do it:
	if (_integerIsOne(d) || _integerIsZero(n)) {
	    return n;
	}

	return new Rational(n, d);
    };



    // Floating Point numbers
    var FloatPoint = function(n) {
	this.n = n;
    };
    FloatPoint = FloatPoint;


    var NaN = new FloatPoint(Number.NaN);
    var inf = new FloatPoint(Number.POSITIVE_INFINITY);
    var neginf = new FloatPoint(Number.NEGATIVE_INFINITY);

    // We use these two constants to represent the floating-point coersion
    // of bignums that can't be represented with fidelity.
    var TOO_POSITIVE_TO_REPRESENT = new FloatPoint(Number.POSITIVE_INFINITY);
    var TOO_NEGATIVE_TO_REPRESENT = new FloatPoint(Number.NEGATIVE_INFINITY);

    // Negative zero is a distinguished value representing -0.0.
    // There should only be one instance for -0.0.
    var NEGATIVE_ZERO = new FloatPoint(-0.0);
    var INEXACT_ZERO = new FloatPoint(0.0);

    FloatPoint.pi = new FloatPoint(Math.PI);
    FloatPoint.e = new FloatPoint(Math.E);
    FloatPoint.nan = NaN;
    FloatPoint.inf = inf;
    FloatPoint.neginf = neginf;

    FloatPoint.makeInstance = function(n) {
	if (isNaN(n)) {
	    return FloatPoint.nan;
	} else if (n === Number.POSITIVE_INFINITY) {
	    return FloatPoint.inf;
	} else if (n === Number.NEGATIVE_INFINITY) {
	    return FloatPoint.neginf;
	} else if (n === 0) {
	    if ((1/n) === -Infinity) {
		return NEGATIVE_ZERO;
	    } else {
		return INEXACT_ZERO;
	    }
	}
	return new FloatPoint(n);
    };


    FloatPoint.prototype.isExact = function() {
	return false;
    };

    FloatPoint.prototype.isInexact = function() {
	return true;
    };


    FloatPoint.prototype.isFinite = function() {
	return (isFinite(this.n) ||
		this === TOO_POSITIVE_TO_REPRESENT ||
		this === TOO_NEGATIVE_TO_REPRESENT);
    };


    FloatPoint.prototype.toExact = function() {
	// The precision of ieee is about 16 decimal digits, which we use here.
	if (! isFinite(this.n) || isNaN(this.n)) {
	    throwRuntimeError("toExact: no exact representation for " + this, this);
	}

	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var intPart = parseInt(match[1]);
	    var fracPart = parseInt(match[2]);
	    var tenToDecimalPlaces = Math.pow(10, match[2].length);
	    return Rational.makeInstance(Math.round(this.n * tenToDecimalPlaces),
					 tenToDecimalPlaces);
	}
	else {
	    return this.n;
	}
    };

    FloatPoint.prototype.toInexact = function() {
	return this;
    };

    FloatPoint.prototype.isInexact = function() {
	return true;
    };


    FloatPoint.prototype.level = 2;


    FloatPoint.prototype.liftTo = function(target) {
	if (target.level === 3)
	    return new Complex(this, 0);
	return throwRuntimeError("invalid level of Number", this, target);
    };

    FloatPoint.prototype.toString = function() {
	if (isNaN(this.n))
	    return "+nan.0";
	if (this.n === Number.POSITIVE_INFINITY)
	    return "+inf.0";
	if (this.n === Number.NEGATIVE_INFINITY)
	    return "-inf.0";
	if (this === NEGATIVE_ZERO)
	    return "-0.0";
	var partialResult = this.n.toString();
	if (! partialResult.match('\\.')) {
	    return partialResult + ".0";
	} else {
	    return partialResult;
	}
    };


    FloatPoint.prototype.equals = function(other, aUnionFind) {
	return ((other instanceof FloatPoint) &&
		((this.n === other.n)));
    };



    FloatPoint.prototype.isRational = function() {
        return this.isFinite();
    };

    FloatPoint.prototype.isInteger = function() {
	return this.isFinite() && this.n === Math.floor(this.n);
    };

    FloatPoint.prototype.isReal = function() {
	return true;
    };


    // sign: Number -> {-1, 0, 1}
    var sign = function(n) {
	if (lessThan(n, 0)) {
	    return -1;
	} else if (greaterThan(n, 0)) {
	    return 1;
	} else if (n === NEGATIVE_ZERO) {
	    return -1;
	} else {
	    return 0;
	}
    };


    FloatPoint.prototype.add = function(other) {
	if (this.isFinite() && other.isFinite()) {
	    return FloatPoint.makeInstance(this.n + other.n);
	} else {
	    if (isNaN(this.n) || isNaN(other.n)) {
		return NaN;
	    } else if (this.isFinite() && ! other.isFinite()) {
		return other;
	    } else if (!this.isFinite() && other.isFinite()) {
		return this;
	    } else {
		return ((sign(this) * sign(other) === 1) ?
			this : NaN);
	    };
	}
    };

    FloatPoint.prototype.subtract = function(other) {
	if (this.isFinite() && other.isFinite()) {
	    return FloatPoint.makeInstance(this.n - other.n);
	} else if (isNaN(this.n) || isNaN(other.n)) {
	    return NaN;
	} else if (! this.isFinite() && ! other.isFinite()) {
	    if (sign(this) === sign(other)) {
		return NaN;
	    } else {
		return this;
	    }
	} else if (this.isFinite()) {
	    return multiply(other, -1);
	} else {  // other.isFinite()
	    return this;
	}
    };


    FloatPoint.prototype.negate = function() {
	return FloatPoint.makeInstance(-this.n);
    };

    FloatPoint.prototype.multiply = function(other) {
	return FloatPoint.makeInstance(this.n * other.n);
    };

    FloatPoint.prototype.divide = function(other) {
        return FloatPoint.makeInstance(this.n / other.n);
    };


    FloatPoint.prototype.toFixnum = function() {
	return this.n;
    };

    FloatPoint.prototype.numerator = function() {
	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var afterDecimal = parseInt(match[2]);
	    var factorToInt = Math.pow(10, match[2].length);
	    var extraFactor = _integerGcd(factorToInt, afterDecimal);
	    var multFactor = factorToInt / extraFactor;
	    return FloatPoint.makeInstance( Math.round(this.n * multFactor) );
	} else {
	    return this;
	}
    };

    FloatPoint.prototype.denominator = function() {
	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var afterDecimal = parseInt(match[2]);
	    var factorToInt = Math.pow(10, match[2].length);
	    var extraFactor = _integerGcd(factorToInt, afterDecimal);
	    return FloatPoint.makeInstance( Math.round(factorToInt/extraFactor) );
	} else {
	    return FloatPoint.makeInstance(1);
	}
    };


    FloatPoint.prototype.floor = function() {
	return FloatPoint.makeInstance(Math.floor(this.n));
    };

    FloatPoint.prototype.ceiling = function() {
	return FloatPoint.makeInstance(Math.ceil(this.n));
    };


    FloatPoint.prototype.greaterThan = function(other) {
	return this.n > other.n;
    };

    FloatPoint.prototype.greaterThanOrEqual = function(other) {
	return this.n >= other.n;
    };

    FloatPoint.prototype.lessThan = function(other) {
	return this.n < other.n;
    };

    FloatPoint.prototype.lessThanOrEqual = function(other) {
	return this.n <= other.n;
    };


    FloatPoint.prototype.integerSqrt = function() {
	if (this === NEGATIVE_ZERO) { return this; }
	if (isInteger(this)) {
	    if(this.n >= 0) {
	        return FloatPoint.makeInstance(Math.floor(Math.sqrt(this.n)));
	    } else {
	        return Complex.makeInstance(
		    INEXACT_ZERO,
		    FloatPoint.makeInstance(Math.floor(Math.sqrt(-this.n))));
	    }
	} else {
	    throwRuntimeError("integerSqrt: can only be applied to an integer", this);
	}
    };

    FloatPoint.prototype.sqrt = function() {
	if (this.n < 0) {
	    var result = Complex.makeInstance(
		0,
		FloatPoint.makeInstance(Math.sqrt(-this.n)));
	    return result;
	} else {
	    return FloatPoint.makeInstance(Math.sqrt(this.n));
	}
    };

    FloatPoint.prototype.abs = function() {
	return FloatPoint.makeInstance(Math.abs(this.n));
    };



    FloatPoint.prototype.log = function(){
	if (this.n < 0)
	    return (new Complex(this, 0)).log();
	else
	    return FloatPoint.makeInstance(Math.log(this.n));
    };

    FloatPoint.prototype.angle = function(){
	if (0 === this.n)
	    return 0;
	if (this.n > 0)
	    return 0;
	else
	    return FloatPoint.pi;
    };

    FloatPoint.prototype.tan = function(){
	return FloatPoint.makeInstance(Math.tan(this.n));
    };

    FloatPoint.prototype.atan = function(){
	return FloatPoint.makeInstance(Math.atan(this.n));
    };

    FloatPoint.prototype.cos = function(){
	return FloatPoint.makeInstance(Math.cos(this.n));
    };

    FloatPoint.prototype.sin = function(){
	return FloatPoint.makeInstance(Math.sin(this.n));
    };

    FloatPoint.prototype.expt = function(a){
	if (this.n === 1) {
	    if (a.isFinite()) {
		return this;
	    } else if (isNaN(a.n)){
		return this;
	    } else {
		return this;
	    }
	} else {
	    return FloatPoint.makeInstance(Math.pow(this.n, a.n));
	}
    };

    FloatPoint.prototype.exp = function(){
	return FloatPoint.makeInstance(Math.exp(this.n));
    };

    FloatPoint.prototype.acos = function(){
	return FloatPoint.makeInstance(Math.acos(this.n));
    };

    FloatPoint.prototype.asin = function(){
	return FloatPoint.makeInstance(Math.asin(this.n));
    };

    FloatPoint.prototype.imaginaryPart = function(){
	return 0;
    };

    FloatPoint.prototype.realPart = function(){
	return this;
    };


    FloatPoint.prototype.round = function(){
	if (isFinite(this.n)) {
	    if (this === NEGATIVE_ZERO) {
		return this;
	    }
	    if (Math.abs(Math.floor(this.n) - this.n) === 0.5) {
		if (Math.floor(this.n) % 2 === 0)
		    return FloatPoint.makeInstance(Math.floor(this.n));
		return FloatPoint.makeInstance(Math.ceil(this.n));
	    } else {
		return FloatPoint.makeInstance(Math.round(this.n));
	    }
	} else {
	    return this;
	}
    };


    FloatPoint.prototype.conjugate = function() {
	return this;
    };

    FloatPoint.prototype.magnitude = FloatPoint.prototype.abs;



    //////////////////////////////////////////////////////////////////////
    // Complex numbers
    //////////////////////////////////////////////////////////////////////

    var Complex = function(r, i){
	this.r = r;
	this.i = i;
    };

    // Constructs a complex number from two basic number r and i.  r and i can
    // either be plt.type.Rational or plt.type.FloatPoint.
    Complex.makeInstance = function(r, i){
	if (i === undefined) { i = 0; }
	if (isExact(i) && isInteger(i) && _integerIsZero(i)) {
	    return r;
	}
	if (isInexact(r) || isInexact(i)) {
	    r = toInexact(r);
	    i = toInexact(i);
	}
	return new Complex(r, i);
    };

    Complex.prototype.toString = function() {
	var realPart = this.r.toString(), imagPart = this.i.toString();
	if (imagPart[0] === '-' || imagPart[0] === '+') {
	    return realPart + imagPart + 'i';
	} else {
	    return realPart + "+" + imagPart + 'i';
	}
    };


    Complex.prototype.isFinite = function() {
	return isSchemeNumberFinite(this.r) && isSchemeNumberFinite(this.i);
    };


    Complex.prototype.isRational = function() {
	return isRational(this.r) && eqv(this.i, 0);
    };

    Complex.prototype.isInteger = function() {
	return (isInteger(this.r) &&
		eqv(this.i, 0));
    };

    Complex.prototype.toExact = function() {
	return Complex.makeInstance( toExact(this.r), toExact(this.i) );
    };

    Complex.prototype.toInexact = function() {
	return Complex.makeInstance(toInexact(this.r),
				    toInexact(this.i));
    };


    Complex.prototype.isExact = function() {
        return isExact(this.r) && isExact(this.i);
    };


    Complex.prototype.isInexact = function() {
	return isInexact(this.r) || isInexact(this.i);
    };


    Complex.prototype.level = 3;


    Complex.prototype.liftTo = function(target){
	throwRuntimeError("Don't know how to lift Complex number", this, target);
    };

    Complex.prototype.equals = function(other) {
	var result = ((other instanceof Complex) &&
		      (equals(this.r, other.r)) &&
		      (equals(this.i, other.i)));
	return result;
    };



    Complex.prototype.greaterThan = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError(">: expects argument of type real number", this, other);
	}
	return greaterThan(this.r, other.r);
    };

    Complex.prototype.greaterThanOrEqual = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError(">=: expects argument of type real number", this, other);
	}
	return greaterThanOrEqual(this.r, other.r);
    };

    Complex.prototype.lessThan = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError("<: expects argument of type real number", this, other);
	}
	return lessThan(this.r, other.r);
    };

    Complex.prototype.lessThanOrEqual = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError("<=: expects argument of type real number", this, other);
	}
	return lessThanOrEqual(this.r, other.r);
    };


    Complex.prototype.abs = function(){
	if (!equals(this.i, 0).valueOf())
	    throwRuntimeError("abs: expects argument of type real number", this);
	return abs(this.r);
    };

    Complex.prototype.toFixnum = function(){
	if (!equals(this.i, 0).valueOf())
	    throwRuntimeError("toFixnum: expects argument of type real number", this);
	return toFixnum(this.r);
    };

    Complex.prototype.numerator = function() {
	if (!this.isReal())
	    throwRuntimeError("numerator: can only be applied to real number", this);
	return numerator(this.n);
    };


    Complex.prototype.denominator = function() {
	if (!this.isReal())
	    throwRuntimeError("floor: can only be applied to real number", this);
	return denominator(this.n);
    };

    Complex.prototype.add = function(other){
	return Complex.makeInstance(
	    add(this.r, other.r),
	    add(this.i, other.i));
    };

    Complex.prototype.subtract = function(other){
	return Complex.makeInstance(
	    subtract(this.r, other.r),
	    subtract(this.i, other.i));
    };

    Complex.prototype.negate = function() {
	return Complex.makeInstance(negate(this.r),
				    negate(this.i));
    };


    Complex.prototype.multiply = function(other){
	// If the other value is real, just do primitive division
	if (other.isReal()) {
	    return Complex.makeInstance(
		multiply(this.r, other.r),
		multiply(this.i, other.r));
	}
	var r = subtract(
	    multiply(this.r, other.r),
	    multiply(this.i, other.i));
	var i = add(
	    multiply(this.r, other.i),
	    multiply(this.i, other.r));
	return Complex.makeInstance(r, i);
    };





    Complex.prototype.divide = function(other){
	var a, b, c, d, r, x, y;
	// If the other value is real, just do primitive division
	if (other.isReal()) {
	    return Complex.makeInstance(
		divide(this.r, other.r),
		divide(this.i, other.r));
	}

	if (this.isInexact() || other.isInexact()) {
	    // http://portal.acm.org/citation.cfm?id=1039814
	    // We currently use Smith's method, though we should
	    // probably switch over to Priest's method.
	    a = this.r;
	    b = this.i;
	    c = other.r;
	    d = other.i;
	    if (lessThanOrEqual(abs(d), abs(c))) {
		r = divide(d, c);
		x = divide(add(a, multiply(b, r)),
			   add(c, multiply(d, r)));
		y = divide(subtract(b, multiply(a, r)),
			   add(c, multiply(d, r)));
	    } else {
		r = divide(c, d);
		x = divide(add(multiply(a, r), b),
			   add(multiply(c, r), d));
		y = divide(subtract(multiply(b, r), a),
			   add(multiply(c, r), d));
	    }
	    return Complex.makeInstance(x, y);
	} else {
	    var con = conjugate(other);
	    var up = multiply(this, con);

	    // Down is guaranteed to be real by this point.
	    var down = realPart(multiply(other, con));

	    var result = Complex.makeInstance(
		divide(realPart(up), down),
		divide(imaginaryPart(up), down));
	    return result;
	}
    };

    Complex.prototype.conjugate = function(){
	var result = Complex.makeInstance(
	    this.r,
	    subtract(0, this.i));

	return result;
    };

    Complex.prototype.magnitude = function(){
	var sum = add(
	    multiply(this.r, this.r),
	    multiply(this.i, this.i));
	return sqrt(sum);
    };

    Complex.prototype.isReal = function(){
	return eqv(this.i, 0);
    };

    Complex.prototype.integerSqrt = function() {
	if (isInteger(this)) {
	    return integerSqrt(this.r);
	} else {
	    throwRuntimeError("integerSqrt: can only be applied to an integer", this);
	}
    };

    Complex.prototype.sqrt = function(){
	if (this.isReal())
	    return sqrt(this.r);
	// http://en.wikipedia.org/wiki/Square_root#Square_roots_of_negative_and_complex_numbers
	var r_plus_x = add(this.magnitude(), this.r);

	var r = sqrt(halve(r_plus_x));

	var i = divide(this.i, sqrt(multiply(r_plus_x, 2)));


	return Complex.makeInstance(r, i);
    };

    Complex.prototype.log = function(){
	var m = this.magnitude();
	var theta = this.angle();
	var result = add(
	    log(m),
	    timesI(theta));
	return result;
    };

    Complex.prototype.angle = function(){
	if (this.isReal()) {
	    return angle(this.r);
	}
	if (equals(0, this.r)) {
	    var tmp = halve(FloatPoint.pi);
	    return greaterThan(this.i, 0) ?
		tmp : negate(tmp);
	} else {
	    var tmp = atan(divide(abs(this.i), abs(this.r)));
	    if (greaterThan(this.r, 0)) {
		return greaterThan(this.i, 0) ?
		    tmp : negate(tmp);
	    } else {
		return greaterThan(this.i, 0) ?
		    subtract(FloatPoint.pi, tmp) : subtract(tmp, FloatPoint.pi);
	    }
	}
    };

    var plusI = Complex.makeInstance(0, 1);
    var minusI = Complex.makeInstance(0, -1);


    Complex.prototype.tan = function() {
	return divide(this.sin(), this.cos());
    };

    Complex.prototype.atan = function(){
	if (equals(this, plusI) ||
	    equals(this, minusI)) {
	    return neginf;
	}
	return multiply(
	    plusI,
	    multiply(
		FloatPoint.makeInstance(0.5),
		log(divide(
		    add(plusI, this),
		    add(
			plusI,
			subtract(0, this))))));
    };

    Complex.prototype.cos = function(){
	if (this.isReal())
	    return cos(this.r);
	var iz = timesI(this);
	var iz_negate = negate(iz);

	return halve(add(exp(iz), exp(iz_negate)));
    };

    Complex.prototype.sin = function(){
	if (this.isReal())
	    return sin(this.r);
	var iz = timesI(this);
	var iz_negate = negate(iz);
	var z2 = Complex.makeInstance(0, 2);
	var exp_negate = subtract(exp(iz), exp(iz_negate));
	var result = divide(exp_negate, z2);
	return result;
    };


    Complex.prototype.expt = function(y){
	if (isExactInteger(y) && greaterThanOrEqual(y, 0)) {
	    return fastExpt(this, y);
	}
	var expo = multiply(y, this.log());
	return exp(expo);
    };

    Complex.prototype.exp = function(){
	var r = exp(this.r);
	var cos_a = cos(this.i);
	var sin_a = sin(this.i);

	return multiply(
	    r,
	    add(cos_a, timesI(sin_a)));
    };

    Complex.prototype.acos = function(){
	if (this.isReal())
	    return acos(this.r);
	var pi_half = halve(FloatPoint.pi);
	var iz = timesI(this);
	var root = sqrt(subtract(1, sqr(this)));
	var l = timesI(log(add(iz, root)));
	return add(pi_half, l);
    };

    Complex.prototype.asin = function(){
	if (this.isReal())
	    return asin(this.r);

	var oneNegateThisSq =
	    subtract(1, sqr(this));
	var sqrtOneNegateThisSq = sqrt(oneNegateThisSq);
	return multiply(2, atan(divide(this,
				       add(1, sqrtOneNegateThisSq))));
    };

    Complex.prototype.ceiling = function(){
	if (!this.isReal())
	    throwRuntimeError("ceiling: can only be applied to real number", this);
	return ceiling(this.r);
    };

    Complex.prototype.floor = function(){
	if (!this.isReal())
	    throwRuntimeError("floor: can only be applied to real number", this);
	return floor(this.r);
    };

    Complex.prototype.imaginaryPart = function(){
	return this.i;
    };

    Complex.prototype.realPart = function(){
	return this.r;
    };

    Complex.prototype.round = function(){
	if (!this.isReal())
	    throwRuntimeError("round: can only be applied to real number", this);
	return round(this.r);
    };



    var rationalRegexp = new RegExp("^([+-]?\\d+)/(\\d+)$");
    var complexRegexp = new RegExp("^([+-]?[\\d\\w/\\.]*)([+-])([\\d\\w/\\.]*)i$");
    var digitRegexp = new RegExp("^[+-]?\\d+$");
    var flonumRegexp = new RegExp("^([+-]?\\d*)\\.(\\d*)$");
    var scientificPattern = new RegExp("^([+-]?\\d*\\.?\\d*)[Ee](\\+?\\d+)$");

    // fromString: string -> (scheme-number | false)
    var fromString = function(x) {
	var aMatch = x.match(rationalRegexp);
	if (aMatch) {
	    return Rational.makeInstance(fromString(aMatch[1]),
					 fromString(aMatch[2]));
	}

	var cMatch = x.match(complexRegexp);
	if (cMatch) {
	    return Complex.makeInstance(fromString(cMatch[1] || "0"),
					fromString(cMatch[2] + (cMatch[3] || "1")));
	}

	// Floating point tests
	if (x === '+nan.0' || x === '-nan.0')
	    return FloatPoint.nan;
	if (x === '+inf.0')
	    return FloatPoint.inf;
	if (x === '-inf.0')
	    return FloatPoint.neginf;
	if (x === "-0.0") {
	    return NEGATIVE_ZERO;
	}
	if (x.match(flonumRegexp) ||  x.match(scientificPattern)) {
	    return FloatPoint.makeInstance(Number(x));
	}

	// Finally, integer tests.
	if (x.match(digitRegexp)) {
	    var n = Number(x);
	    if (isOverflow(n)) {
		return makeBignum(x);
	    } else {
		return n;
	    }
	} else {
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // The code below comes from Tom Wu's BigInteger implementation:

    // Copyright (c) 2005  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.

    // Basic JavaScript BN library - subset useful for RSA encryption.

    // Bits per digit
    var dbits;

    // JavaScript engine analysis
    var canary = 0xdeadbeefcafe;
    var j_lm = ((canary&0xffffff)==0xefcafe);

    // (public) Constructor
    function BigInteger(a,b,c) {
	if(a != null)
	    if("number" == typeof a) this.fromNumber(a,b,c);
	else if(b == null && "string" != typeof a) this.fromString(a,256);
	else this.fromString(a,b);
    }

    // return new, unset BigInteger
    function nbi() { return new BigInteger(null); }

    // am: Compute w_j += (x*this_i), propagate carries,
    // c is initial carry, returns final carry.
    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
    // We need to select the fastest one that works in this environment.

    // am1: use a single mult and divide to get the high bits,
    // max digit bits should be 26 because
    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
    function am1(i,x,w,j,c,n) {
	while(--n >= 0) {
	    var v = x*this[i++]+w[j]+c;
	    c = Math.floor(v/0x4000000);
	    w[j++] = v&0x3ffffff;
	}
	return c;
    }
    // am2 avoids a big mult-and-extract completely.
    // Max digit bits should be <= 30 because we do bitwise ops
    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
    function am2(i,x,w,j,c,n) {
	var xl = x&0x7fff, xh = x>>15;
	while(--n >= 0) {
	    var l = this[i]&0x7fff;
	    var h = this[i++]>>15;
	    var m = xh*l+h*xl;
	    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
	    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
	    w[j++] = l&0x3fffffff;
	}
	return c;
    }
    // Alternately, set max digit bits to 28 since some
    // browsers slow down when dealing with 32-bit numbers.
    function am3(i,x,w,j,c,n) {
	var xl = x&0x3fff, xh = x>>14;
	while(--n >= 0) {
	    var l = this[i]&0x3fff;
	    var h = this[i++]>>14;
	    var m = xh*l+h*xl;
	    l = xl*l+((m&0x3fff)<<14)+w[j]+c;
	    c = (l>>28)+(m>>14)+xh*h;
	    w[j++] = l&0xfffffff;
	}
	return c;
    }
    if(j_lm && (typeof(navigator) !== 'undefined' && navigator.appName == "Microsoft Internet Explorer")) {
	BigInteger.prototype.am = am2;
	dbits = 30;
    }
    else if(j_lm && (typeof(navigator) !== 'undefined' && navigator.appName != "Netscape")) {
	BigInteger.prototype.am = am1;
	dbits = 26;
    }
    else { // Mozilla/Netscape seems to prefer am3
	BigInteger.prototype.am = am3;
	dbits = 28;
    }

    BigInteger.prototype.DB = dbits;
    BigInteger.prototype.DM = ((1<<dbits)-1);
    BigInteger.prototype.DV = (1<<dbits);

    var BI_FP = 52;
    BigInteger.prototype.FV = Math.pow(2,BI_FP);
    BigInteger.prototype.F1 = BI_FP-dbits;
    BigInteger.prototype.F2 = 2*dbits-BI_FP;

    // Digit conversions
    var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
    var BI_RC = [];
    var rr,vv;
    rr = "0".charCodeAt(0);
    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
    rr = "a".charCodeAt(0);
    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
    rr = "A".charCodeAt(0);
    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

    function int2char(n) { return BI_RM.charAt(n); }
    function intAt(s,i) {
	var c = BI_RC[s.charCodeAt(i)];
	return (c==null)?-1:c;
    }

    // (protected) copy this to r
    function bnpCopyTo(r) {
	for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
	r.t = this.t;
	r.s = this.s;
    }

    // (protected) set from integer value x, -DV <= x < DV
    function bnpFromInt(x) {
	this.t = 1;
	this.s = (x<0)?-1:0;
	if(x > 0) this[0] = x;
	else if(x < -1) this[0] = x+DV;
	else this.t = 0;
    }

    // return bigint initialized to value
    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

    // (protected) set from string and radix
    function bnpFromString(s,b) {
	var k;
	if(b == 16) k = 4;
	else if(b == 8) k = 3;
	else if(b == 256) k = 8; // byte array
	else if(b == 2) k = 1;
	else if(b == 32) k = 5;
	else if(b == 4) k = 2;
	else { this.fromRadix(s,b); return; }
	this.t = 0;
	this.s = 0;
	var i = s.length, mi = false, sh = 0;
	while(--i >= 0) {
	    var x = (k==8)?s[i]&0xff:intAt(s,i);
	    if(x < 0) {
		if(s.charAt(i) == "-") mi = true;
		continue;
	    }
	    mi = false;
	    if(sh == 0)
		this[this.t++] = x;
	    else if(sh+k > this.DB) {
		this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
		this[this.t++] = (x>>(this.DB-sh));
	    }
	    else
		this[this.t-1] |= x<<sh;
	    sh += k;
	    if(sh >= this.DB) sh -= this.DB;
	}
	if(k == 8 && (s[0]&0x80) != 0) {
	    this.s = -1;
	    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
	}
	this.clamp();
	if(mi) BigInteger.ZERO.subTo(this,this);
    }

    // (protected) clamp off excess high words
    function bnpClamp() {
	var c = this.s&this.DM;
	while(this.t > 0 && this[this.t-1] == c) --this.t;
    }

    // (public) return string representation in given radix
    function bnToString(b) {
	if(this.s < 0) return "-"+this.negate().toString(b);
	var k;
	if(b == 16) k = 4;
	else if(b == 8) k = 3;
	else if(b == 2) k = 1;
	else if(b == 32) k = 5;
	else if(b == 4) k = 2;
	else return this.toRadix(b);
	var km = (1<<k)-1, d, m = false, r = [], i = this.t;
	var p = this.DB-(i*this.DB)%k;
	if(i-- > 0) {
	    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r.push(int2char(d)); }
	    while(i >= 0) {
		if(p < k) {
		    d = (this[i]&((1<<p)-1))<<(k-p);
		    d |= this[--i]>>(p+=this.DB-k);
		}
		else {
		    d = (this[i]>>(p-=k))&km;
		    if(p <= 0) { p += this.DB; --i; }
		}
		if(d > 0) m = true;
		if(m) r.push(int2char(d));
	    }
	}
	return m?r.join(""):"0";
    }

    // (public) -this
    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

    // (public) |this|
    function bnAbs() { return (this.s<0)?this.negate():this; }

    // (public) return + if this > a, - if this < a, 0 if equal
    function bnCompareTo(a) {
	var r = this.s-a.s;
	if(r != 0) return r;
	var i = this.t;
	if ( this.s < 0 ) {
		r = a.t - i;
	}
	else {
		r = i - a.t;
	}
	if(r != 0) return r;
	while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
	return 0;
    }

    // returns bit length of the integer x
    function nbits(x) {
	var r = 1, t;
	if((t=x>>>16) != 0) { x = t; r += 16; }
	if((t=x>>8) != 0) { x = t; r += 8; }
	if((t=x>>4) != 0) { x = t; r += 4; }
	if((t=x>>2) != 0) { x = t; r += 2; }
	if((t=x>>1) != 0) { x = t; r += 1; }
	return r;
    }

    // (public) return the number of bits in "this"
    function bnBitLength() {
	if(this.t <= 0) return 0;
	return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
    }

    // (protected) r = this << n*DB
    function bnpDLShiftTo(n,r) {
	var i;
	for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
	for(i = n-1; i >= 0; --i) r[i] = 0;
	r.t = this.t+n;
	r.s = this.s;
    }

    // (protected) r = this >> n*DB
    function bnpDRShiftTo(n,r) {
	for(var i = n; i < this.t; ++i) r[i-n] = this[i];
	r.t = Math.max(this.t-n,0);
	r.s = this.s;
    }

    // (protected) r = this << n
    function bnpLShiftTo(n,r) {
	var bs = n%this.DB;
	var cbs = this.DB-bs;
	var bm = (1<<cbs)-1;
	var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
	for(i = this.t-1; i >= 0; --i) {
	    r[i+ds+1] = (this[i]>>cbs)|c;
	    c = (this[i]&bm)<<bs;
	}
	for(i = ds-1; i >= 0; --i) r[i] = 0;
	r[ds] = c;
	r.t = this.t+ds+1;
	r.s = this.s;
	r.clamp();
    }

    // (protected) r = this >> n
    function bnpRShiftTo(n,r) {
	r.s = this.s;
	var ds = Math.floor(n/this.DB);
	if(ds >= this.t) { r.t = 0; return; }
	var bs = n%this.DB;
	var cbs = this.DB-bs;
	var bm = (1<<bs)-1;
	r[0] = this[ds]>>bs;
	for(var i = ds+1; i < this.t; ++i) {
	    r[i-ds-1] |= (this[i]&bm)<<cbs;
	    r[i-ds] = this[i]>>bs;
	}
	if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
	r.t = this.t-ds;
	r.clamp();
    }

    // (protected) r = this - a
    function bnpSubTo(a,r) {
	var i = 0, c = 0, m = Math.min(a.t,this.t);
	while(i < m) {
	    c += this[i]-a[i];
	    r[i++] = c&this.DM;
	    c >>= this.DB;
	}
	if(a.t < this.t) {
	    c -= a.s;
	    while(i < this.t) {
		c += this[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += this.s;
	}
	else {
	    c += this.s;
	    while(i < a.t) {
		c -= a[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c -= a.s;
	}
	r.s = (c<0)?-1:0;
	if(c < -1) r[i++] = this.DV+c;
	else if(c > 0) r[i++] = c;
	r.t = i;
	r.clamp();
    }

    // (protected) r = this * a, r != this,a (HAC 14.12)
    // "this" should be the larger one if appropriate.
    function bnpMultiplyTo(a,r) {
	var x = this.abs(), y = a.abs();
	var i = x.t;
	r.t = i+y.t;
	while(--i >= 0) r[i] = 0;
	for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
	r.s = 0;
	r.clamp();
	if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
    }

    // (protected) r = this^2, r != this (HAC 14.16)
    function bnpSquareTo(r) {
	var x = this.abs();
	var i = r.t = 2*x.t;
	while(--i >= 0) r[i] = 0;
	for(i = 0; i < x.t-1; ++i) {
	    var c = x.am(i,x[i],r,2*i,0,1);
	    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
		r[i+x.t] -= x.DV;
		r[i+x.t+1] = 1;
	    }
	}
	if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
	r.s = 0;
	r.clamp();
    }


    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
    // r != q, this != m.  q or r may be null.
    function bnpDivRemTo(m,q,r) {
	var pm = m.abs();
	if(pm.t <= 0) return;
	var pt = this.abs();
	if(pt.t < pm.t) {
	    if(q != null) q.fromInt(0);
	    if(r != null) this.copyTo(r);
	    return;
	}
	if(r == null) r = nbi();
	var y = nbi(), ts = this.s, ms = m.s;
	var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
	if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
	else { pm.copyTo(y); pt.copyTo(r); }
	var ys = y.t;
	var y0 = y[ys-1];
	if(y0 == 0) return;
	var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
	var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
	var i = r.t, j = i-ys, t = (q==null)?nbi():q;
	y.dlShiftTo(j,t);
	if(r.compareTo(t) >= 0) {
	    r[r.t++] = 1;
	    r.subTo(t,r);
	}
	BigInteger.ONE.dlShiftTo(ys,t);
	t.subTo(y,y);	// "negative" y so we can replace sub with am later
	while(y.t < ys) y[y.t++] = 0;
	while(--j >= 0) {
	    // Estimate quotient digit
	    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
	    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
		y.dlShiftTo(j,t);
		r.subTo(t,r);
		while(r[i] < --qd) r.subTo(t,r);
	    }
	}
	if(q != null) {
	    r.drShiftTo(ys,q);
	    if(ts != ms) BigInteger.ZERO.subTo(q,q);
	}
	r.t = ys;
	r.clamp();
	if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
	if(ts < 0) BigInteger.ZERO.subTo(r,r);
    }

    // (public) this mod a
    function bnMod(a) {
	var r = nbi();
	this.abs().divRemTo(a,null,r);
	if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
	return r;
    }

    // Modular reduction using "classic" algorithm
    function Classic(m) { this.m = m; }
    function cConvert(x) {
	if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
	else return x;
    }
    function cRevert(x) { return x; }
    function cReduce(x) { x.divRemTo(this.m,null,x); }
    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    Classic.prototype.convert = cConvert;
    Classic.prototype.revert = cRevert;
    Classic.prototype.reduce = cReduce;
    Classic.prototype.mulTo = cMulTo;
    Classic.prototype.sqrTo = cSqrTo;

    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
    // justification:
    //         xy == 1 (mod m)
    //         xy =  1+km
    //   xy(2-xy) = (1+km)(1-km)
    // x[y(2-xy)] = 1-k^2m^2
    // x[y(2-xy)] == 1 (mod m^2)
    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
    // JS multiply "overflows" differently from C/C++, so care is needed here.
    function bnpInvDigit() {
	if(this.t < 1) return 0;
	var x = this[0];
	if((x&1) == 0) return 0;
	var y = x&3;		// y == 1/x mod 2^2
	y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
	y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
	y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
	// last step - calculate inverse mod DV directly;
	// assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
	y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
	// we really want the negative inverse, and -DV < y < DV
	return (y>0)?this.DV-y:-y;
    }

    // Montgomery reduction
    function Montgomery(m) {
	this.m = m;
	this.mp = m.invDigit();
	this.mpl = this.mp&0x7fff;
	this.mph = this.mp>>15;
	this.um = (1<<(m.DB-15))-1;
	this.mt2 = 2*m.t;
    }

    // xR mod m
    function montConvert(x) {
	var r = nbi();
	x.abs().dlShiftTo(this.m.t,r);
	r.divRemTo(this.m,null,r);
	if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
	return r;
    }

    // x/R mod m
    function montRevert(x) {
	var r = nbi();
	x.copyTo(r);
	this.reduce(r);
	return r;
    }

    // x = x/R mod m (HAC 14.32)
    function montReduce(x) {
	while(x.t <= this.mt2)	// pad x so am has enough room later
	    x[x.t++] = 0;
	for(var i = 0; i < this.m.t; ++i) {
	    // faster way of calculating u0 = x[i]*mp mod DV
	    var j = x[i]&0x7fff;
	    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
	    // use am to combine the multiply-shift-add into one call
	    j = i+this.m.t;
	    x[j] += this.m.am(0,u0,x,i,0,this.m.t);
	    // propagate carry
	    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
	}
	x.clamp();
	x.drShiftTo(this.m.t,x);
	if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
    }

    // r = "x^2/R mod m"; x != r
    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    // r = "xy/R mod m"; x,y != r
    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

    Montgomery.prototype.convert = montConvert;
    Montgomery.prototype.revert = montRevert;
    Montgomery.prototype.reduce = montReduce;
    Montgomery.prototype.mulTo = montMulTo;
    Montgomery.prototype.sqrTo = montSqrTo;

    // (protected) true iff this is even
    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
    function bnpExp(e,z) {
	    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
	    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
	    g.copyTo(r);
	    while(--i >= 0) {
	        z.sqrTo(r,r2);
	        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
	        else { var t = r; r = r2; r2 = t; }
	    }
	    return z.revert(r);
    }

    // (public) this^e % m, 0 <= e < 2^32
    function bnModPowInt(e,m) {
	var z;
	if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
	return this.exp(e,z);
    }

    // protected
    BigInteger.prototype.copyTo = bnpCopyTo;
    BigInteger.prototype.fromInt = bnpFromInt;
    BigInteger.prototype.fromString = bnpFromString;
    BigInteger.prototype.clamp = bnpClamp;
    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    BigInteger.prototype.lShiftTo = bnpLShiftTo;
    BigInteger.prototype.rShiftTo = bnpRShiftTo;
    BigInteger.prototype.subTo = bnpSubTo;
    BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    BigInteger.prototype.squareTo = bnpSquareTo;
    BigInteger.prototype.divRemTo = bnpDivRemTo;
    BigInteger.prototype.invDigit = bnpInvDigit;
    BigInteger.prototype.isEven = bnpIsEven;
    BigInteger.prototype.exp = bnpExp;

    // public
    BigInteger.prototype.toString = bnToString;
    BigInteger.prototype.negate = bnNegate;
    BigInteger.prototype.abs = bnAbs;
    BigInteger.prototype.compareTo = bnCompareTo;
    BigInteger.prototype.bitLength = bnBitLength;
    BigInteger.prototype.mod = bnMod;
    BigInteger.prototype.modPowInt = bnModPowInt;

    // "constants"
    BigInteger.ZERO = nbv(0);
    BigInteger.ONE = nbv(1);

    // Copyright (c) 2005-2009  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.

    // Extended JavaScript BN functions, required for RSA private ops.

    // Version 1.1: new BigInteger("0", 10) returns "proper" zero

    // (public)
    function bnClone() { var r = nbi(); this.copyTo(r); return r; }

    // (public) return value as integer
    function bnIntValue() {
	if(this.s < 0) {
	    if(this.t == 1) return this[0]-this.DV;
	    else if(this.t == 0) return -1;
	}
	else if(this.t == 1) return this[0];
	else if(this.t == 0) return 0;
	// assumes 16 < DB < 32
	return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
    }

    // (public) return value as byte
    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }

    // (public) return value as short (assumes DB>=16)
    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }

    // (protected) return x s.t. r^x < DV
    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

    // (public) 0 if this == 0, 1 if this > 0
    function bnSigNum() {
	if(this.s < 0) return -1;
	else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
	else return 1;
    }

    // (protected) convert to radix string
    function bnpToRadix(b) {
	if(b == null) b = 10;
	if(this.signum() == 0 || b < 2 || b > 36) return "0";
	var cs = this.chunkSize(b);
	var a = Math.pow(b,cs);
	var d = nbv(a), y = nbi(), z = nbi(), r = "";
	this.divRemTo(d,y,z);
	while(y.signum() > 0) {
	    r = (a+z.intValue()).toString(b).substr(1) + r;
	    y.divRemTo(d,y,z);
	}
	return z.intValue().toString(b) + r;
    }

    // (protected) convert from radix string
    function bnpFromRadix(s,b) {
	this.fromInt(0);
	if(b == null) b = 10;
	var cs = this.chunkSize(b);
	var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
	for(var i = 0; i < s.length; ++i) {
	    var x = intAt(s,i);
	    if(x < 0) {
		if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
		continue;
	    }
	    w = b*w+x;
	    if(++j >= cs) {
		this.dMultiply(d);
		this.dAddOffset(w,0);
		j = 0;
		w = 0;
	    }
	}
	if(j > 0) {
	    this.dMultiply(Math.pow(b,j));
	    this.dAddOffset(w,0);
	}
	if(mi) BigInteger.ZERO.subTo(this,this);
    }

    // (protected) alternate constructor
    function bnpFromNumber(a,b,c) {
	if("number" == typeof b) {
	    // new BigInteger(int,int,RNG)
	    if(a < 2) this.fromInt(1);
	    else {
		this.fromNumber(a,c);
		if(!this.testBit(a-1))	// force MSB set
		    this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);
		if(this.isEven()) this.dAddOffset(1,0); // force odd
		while(!this.isProbablePrime(b)) {
		    this.dAddOffset(2,0);
		    if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);
		}
	    }
	}
	else {
	    // new BigInteger(int,RNG)
	    var x = [], t = a&7;
	    x.length = (a>>3)+1;
	    b.nextBytes(x);
	    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;
	    this.fromString(x,256);
	}
    }

    // (public) convert to bigendian byte array
    function bnToByteArray() {
	var i = this.t, r = [];
	r[0] = this.s;
	var p = this.DB-(i*this.DB)%8, d, k = 0;
	if(i-- > 0) {
	    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)
		r[k++] = d|(this.s<<(this.DB-p));
	    while(i >= 0) {
		if(p < 8) {
		    d = (this[i]&((1<<p)-1))<<(8-p);
		    d |= this[--i]>>(p+=this.DB-8);
		}
		else {
		    d = (this[i]>>(p-=8))&0xff;
		    if(p <= 0) { p += this.DB; --i; }
		}
		if((d&0x80) != 0) d |= -256;
		if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;
		if(k > 0 || d != this.s) r[k++] = d;
	    }
	}
	return r;
    }

    function bnEquals(a) { return(this.compareTo(a)==0); }
    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }
    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }

    // (protected) r = this op a (bitwise)
    function bnpBitwiseTo(a,op,r) {
	var i, f, m = Math.min(a.t,this.t);
	for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);
	if(a.t < this.t) {
	    f = a.s&this.DM;
	    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);
	    r.t = this.t;
	}
	else {
	    f = this.s&this.DM;
	    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);
	    r.t = a.t;
	}
	r.s = op(this.s,a.s);
	r.clamp();
    }

    // (public) this & a
    function op_and(x,y) { return x&y; }
    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }

    // (public) this | a
    function op_or(x,y) { return x|y; }
    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }

    // (public) this ^ a
    function op_xor(x,y) { return x^y; }
    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }

    // (public) this & ~a
    function op_andnot(x,y) { return x&~y; }
    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }

    // (public) ~this
    function bnNot() {
	var r = nbi();
	for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];
	r.t = this.t;
	r.s = ~this.s;
	return r;
    }

    // (public) this << n
    function bnShiftLeft(n) {
	var r = nbi();
	if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);
	return r;
    }

    // (public) this >> n
    function bnShiftRight(n) {
	var r = nbi();
	if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);
	return r;
    }

    // return index of lowest 1-bit in x, x < 2^31
    function lbit(x) {
	if(x == 0) return -1;
	var r = 0;
	if((x&0xffff) == 0) { x >>= 16; r += 16; }
	if((x&0xff) == 0) { x >>= 8; r += 8; }
	if((x&0xf) == 0) { x >>= 4; r += 4; }
	if((x&3) == 0) { x >>= 2; r += 2; }
	if((x&1) == 0) ++r;
	return r;
    }

    // (public) returns index of lowest 1-bit (or -1 if none)
    function bnGetLowestSetBit() {
	for(var i = 0; i < this.t; ++i)
	    if(this[i] != 0) return i*this.DB+lbit(this[i]);
	if(this.s < 0) return this.t*this.DB;
	return -1;
    }

    // return number of 1 bits in x
    function cbit(x) {
	var r = 0;
	while(x != 0) { x &= x-1; ++r; }
	return r;
    }

    // (public) return number of set bits
    function bnBitCount() {
	var r = 0, x = this.s&this.DM;
	for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);
	return r;
    }

    // (public) true iff nth bit is set
    function bnTestBit(n) {
	var j = Math.floor(n/this.DB);
	if(j >= this.t) return(this.s!=0);
	return((this[j]&(1<<(n%this.DB)))!=0);
    }

    // (protected) this op (1<<n)
    function bnpChangeBit(n,op) {
	var r = BigInteger.ONE.shiftLeft(n);
	this.bitwiseTo(r,op,r);
	return r;
    }

    // (public) this | (1<<n)
    function bnSetBit(n) { return this.changeBit(n,op_or); }

    // (public) this & ~(1<<n)
    function bnClearBit(n) { return this.changeBit(n,op_andnot); }

    // (public) this ^ (1<<n)
    function bnFlipBit(n) { return this.changeBit(n,op_xor); }

    // (protected) r = this + a
    function bnpAddTo(a,r) {
	var i = 0, c = 0, m = Math.min(a.t,this.t);
	while(i < m) {
	    c += this[i]+a[i];
	    r[i++] = c&this.DM;
	    c >>= this.DB;
	}
	if(a.t < this.t) {
	    c += a.s;
	    while(i < this.t) {
		c += this[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += this.s;
	}
	else {
	    c += this.s;
	    while(i < a.t) {
		c += a[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += a.s;
	}
	r.s = (c<0)?-1:0;
	if(c > 0) r[i++] = c;
	else if(c < -1) r[i++] = this.DV+c;
	r.t = i;
	r.clamp();
    }

    // (public) this + a
    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }

    // (public) this - a
    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }

    // (public) this * a
    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }

    // (public) this / a
    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }

    // (public) this % a
    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }

    // (public) [this/a,this%a]
    function bnDivideAndRemainder(a) {
	var q = nbi(), r = nbi();
	this.divRemTo(a,q,r);
	return [q,r];
    }

    // (protected) this *= n, this >= 0, 1 < n < DV
    function bnpDMultiply(n) {
	this[this.t] = this.am(0,n-1,this,0,0,this.t);
	++this.t;
	this.clamp();
    }

    // (protected) this += n << w words, this >= 0
    function bnpDAddOffset(n,w) {
	if(n == 0) return;
	while(this.t <= w) this[this.t++] = 0;
	this[w] += n;
	while(this[w] >= this.DV) {
	    this[w] -= this.DV;
	    if(++w >= this.t) this[this.t++] = 0;
	    ++this[w];
	}
    }

    // A "null" reducer
    function NullExp() {}
    function nNop(x) { return x; }
    function nMulTo(x,y,r) { x.multiplyTo(y,r); }
    function nSqrTo(x,r) { x.squareTo(r); }

    NullExp.prototype.convert = nNop;
    NullExp.prototype.revert = nNop;
    NullExp.prototype.mulTo = nMulTo;
    NullExp.prototype.sqrTo = nSqrTo;

    // (public) this^e
    function bnPow(e) { return this.exp(e,new NullExp()); }

    // (protected) r = lower n words of "this * a", a.t <= n
    // "this" should be the larger one if appropriate.
    function bnpMultiplyLowerTo(a,n,r) {
	var i = Math.min(this.t+a.t,n);
	r.s = 0; // assumes a,this >= 0
	r.t = i;
	while(i > 0) r[--i] = 0;
	var j;
	for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);
	for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);
	r.clamp();
    }

    // (protected) r = "this * a" without lower n words, n > 0
    // "this" should be the larger one if appropriate.
    function bnpMultiplyUpperTo(a,n,r) {
	--n;
	var i = r.t = this.t+a.t-n;
	r.s = 0; // assumes a,this >= 0
	while(--i >= 0) r[i] = 0;
	for(i = Math.max(n-this.t,0); i < a.t; ++i)
	    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);
	r.clamp();
	r.drShiftTo(1,r);
    }

    // Barrett modular reduction
    function Barrett(m) {
	// setup Barrett
	this.r2 = nbi();
	this.q3 = nbi();
	BigInteger.ONE.dlShiftTo(2*m.t,this.r2);
	this.mu = this.r2.divide(m);
	this.m = m;
    }

    function barrettConvert(x) {
	if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);
	else if(x.compareTo(this.m) < 0) return x;
	else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }
    }

    function barrettRevert(x) { return x; }

    // x = x mod m (HAC 14.42)
    function barrettReduce(x) {
	x.drShiftTo(this.m.t-1,this.r2);
	if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }
	this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);
	this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);
	while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);
	x.subTo(this.r2,x);
	while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
    }

    // r = x^2 mod m; x != r
    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    // r = x*y mod m; x,y != r
    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

    Barrett.prototype.convert = barrettConvert;
    Barrett.prototype.revert = barrettRevert;
    Barrett.prototype.reduce = barrettReduce;
    Barrett.prototype.mulTo = barrettMulTo;
    Barrett.prototype.sqrTo = barrettSqrTo;

    // (public) this^e % m (HAC 14.85)
    function bnModPow(e,m) {
	var i = e.bitLength(), k, r = nbv(1), z;
	if(i <= 0) return r;
	else if(i < 18) k = 1;
	else if(i < 48) k = 3;
	else if(i < 144) k = 4;
	else if(i < 768) k = 5;
	else k = 6;
	if(i < 8)
	    z = new Classic(m);
	else if(m.isEven())
	    z = new Barrett(m);
	else
	    z = new Montgomery(m);

	// precomputation
	var g = [], n = 3, k1 = k-1, km = (1<<k)-1;
	g[1] = z.convert(this);
	if(k > 1) {
	    var g2 = nbi();
	    z.sqrTo(g[1],g2);
	    while(n <= km) {
		g[n] = nbi();
		z.mulTo(g2,g[n-2],g[n]);
		n += 2;
	    }
	}

	var j = e.t-1, w, is1 = true, r2 = nbi(), t;
	i = nbits(e[j])-1;
	while(j >= 0) {
	    if(i >= k1) w = (e[j]>>(i-k1))&km;
	    else {
		w = (e[j]&((1<<(i+1))-1))<<(k1-i);
		if(j > 0) w |= e[j-1]>>(this.DB+i-k1);
	    }

	    n = k;
	    while((w&1) == 0) { w >>= 1; --n; }
	    if((i -= n) < 0) { i += this.DB; --j; }
	    if(is1) {	// ret == 1, don't bother squaring or multiplying it
		g[w].copyTo(r);
		is1 = false;
	    }
	    else {
		while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }
		if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }
		z.mulTo(r2,g[w],r);
	    }

	    while(j >= 0 && (e[j]&(1<<i)) == 0) {
		z.sqrTo(r,r2); t = r; r = r2; r2 = t;
		if(--i < 0) { i = this.DB-1; --j; }
	    }
	}
	return z.revert(r);
    }

    // (public) gcd(this,a) (HAC 14.54)
    function bnGCD(a) {
	var x = (this.s<0)?this.negate():this.clone();
	var y = (a.s<0)?a.negate():a.clone();
	if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }
	var i = x.getLowestSetBit(), g = y.getLowestSetBit();
	if(g < 0) return x;
	if(i < g) g = i;
	if(g > 0) {
	    x.rShiftTo(g,x);
	    y.rShiftTo(g,y);
	}
	while(x.signum() > 0) {
	    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);
	    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);
	    if(x.compareTo(y) >= 0) {
		x.subTo(y,x);
		x.rShiftTo(1,x);
	    }
	    else {
		y.subTo(x,y);
		y.rShiftTo(1,y);
	    }
	}
	if(g > 0) y.lShiftTo(g,y);
	return y;
    }

    // (protected) this % n, n < 2^26
    function bnpModInt(n) {
	if(n <= 0) return 0;
	var d = this.DV%n, r = (this.s<0)?n-1:0;
	if(this.t > 0)
	    if(d == 0) r = this[0]%n;
	else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;
	return r;
    }

    // (public) 1/this % m (HAC 14.61)
    function bnModInverse(m) {
	var ac = m.isEven();
	if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;
	var u = m.clone(), v = this.clone();
	var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);
	while(u.signum() != 0) {
	    while(u.isEven()) {
		u.rShiftTo(1,u);
		if(ac) {
		    if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }
		    a.rShiftTo(1,a);
		}
		else if(!b.isEven()) b.subTo(m,b);
		b.rShiftTo(1,b);
	    }
	    while(v.isEven()) {
		v.rShiftTo(1,v);
		if(ac) {
		    if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }
		    c.rShiftTo(1,c);
		}
		else if(!d.isEven()) d.subTo(m,d);
		d.rShiftTo(1,d);
	    }
	    if(u.compareTo(v) >= 0) {
		u.subTo(v,u);
		if(ac) a.subTo(c,a);
		b.subTo(d,b);
	    }
	    else {
		v.subTo(u,v);
		if(ac) c.subTo(a,c);
		d.subTo(b,d);
	    }
	}
	if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;
	if(d.compareTo(m) >= 0) return d.subtract(m);
	if(d.signum() < 0) d.addTo(m,d); else return d;
	if(d.signum() < 0) return d.add(m); else return d;
    }

    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];
    var lplim = (1<<26)/lowprimes[lowprimes.length-1];

    // (public) test primality with certainty >= 1-.5^t
    function bnIsProbablePrime(t) {
	var i, x = this.abs();
	if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {
	    for(i = 0; i < lowprimes.length; ++i)
		if(x[0] == lowprimes[i]) return true;
	    return false;
	}
	if(x.isEven()) return false;
	i = 1;
	while(i < lowprimes.length) {
	    var m = lowprimes[i], j = i+1;
	    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];
	    m = x.modInt(m);
	    while(i < j) if(m%lowprimes[i++] == 0) return false;
	}
	return x.millerRabin(t);
    }

    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
    function bnpMillerRabin(t) {
	var n1 = this.subtract(BigInteger.ONE);
	var k = n1.getLowestSetBit();
	if(k <= 0) return false;
	var r = n1.shiftRight(k);
	t = (t+1)>>1;
	if(t > lowprimes.length) t = lowprimes.length;
	var a = nbi();
	for(var i = 0; i < t; ++i) {
	    a.fromInt(lowprimes[i]);
	    var y = a.modPow(r,this);
	    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
		var j = 1;
		while(j++ < k && y.compareTo(n1) != 0) {
		    y = y.modPowInt(2,this);
		    if(y.compareTo(BigInteger.ONE) == 0) return false;
		}
		if(y.compareTo(n1) != 0) return false;
	    }
	}
	return true;
    }
    
    

    // protected
    BigInteger.prototype.chunkSize = bnpChunkSize;
    BigInteger.prototype.toRadix = bnpToRadix;
    BigInteger.prototype.fromRadix = bnpFromRadix;
    BigInteger.prototype.fromNumber = bnpFromNumber;
    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
    BigInteger.prototype.changeBit = bnpChangeBit;
    BigInteger.prototype.addTo = bnpAddTo;
    BigInteger.prototype.dMultiply = bnpDMultiply;
    BigInteger.prototype.dAddOffset = bnpDAddOffset;
    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
    BigInteger.prototype.modInt = bnpModInt;
    BigInteger.prototype.millerRabin = bnpMillerRabin;

    // public
    BigInteger.prototype.clone = bnClone;
    BigInteger.prototype.intValue = bnIntValue;
    BigInteger.prototype.byteValue = bnByteValue;
    BigInteger.prototype.shortValue = bnShortValue;
    BigInteger.prototype.signum = bnSigNum;
    BigInteger.prototype.toByteArray = bnToByteArray;
    BigInteger.prototype.equals = bnEquals;
    BigInteger.prototype.min = bnMin;
    BigInteger.prototype.max = bnMax;
    BigInteger.prototype.and = bnAnd;
    BigInteger.prototype.or = bnOr;
    BigInteger.prototype.xor = bnXor;
    BigInteger.prototype.andNot = bnAndNot;
    BigInteger.prototype.not = bnNot;
    BigInteger.prototype.shiftLeft = bnShiftLeft;
    BigInteger.prototype.shiftRight = bnShiftRight;
    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
    BigInteger.prototype.bitCount = bnBitCount;
    BigInteger.prototype.testBit = bnTestBit;
    BigInteger.prototype.setBit = bnSetBit;
    BigInteger.prototype.clearBit = bnClearBit;
    BigInteger.prototype.flipBit = bnFlipBit;
    BigInteger.prototype.add = bnAdd;
    BigInteger.prototype.subtract = bnSubtract;
    BigInteger.prototype.multiply = bnMultiply;
    BigInteger.prototype.divide = bnDivide;
    BigInteger.prototype.remainder = bnRemainder;
    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
    BigInteger.prototype.modPow = bnModPow;
    BigInteger.prototype.modInverse = bnModInverse;
    BigInteger.prototype.pow = bnPow;
    BigInteger.prototype.gcd = bnGCD;
    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;

    // BigInteger interfaces not implemented in jsbn:

    // BigInteger(int signum, byte[] magnitude)
    // double doubleValue()
    // float floatValue()
    // int hashCode()
    // long longValue()
    // static BigInteger valueOf(long val)



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // END OF copy-and-paste of jsbn.



    BigInteger.NEGATIVE_ONE = BigInteger.ONE.negate();


    // Other methods we need to add for compatibilty with js-numbers numeric tower.

    // add is implemented above.
    // subtract is implemented above.
    // multiply is implemented above.
    // equals is implemented above.
    // abs is implemented above.
    // negate is defined above.

    // makeBignum: string -> BigInteger
    var makeBignum = function(s) {
	if (typeof(s) === 'number') { s = s + ''; }
	s = expandExponent(s);
	return new BigInteger(s, 10);
    };

    var zerostring = function(n) {
	var buf = [];
	for (var i = 0; i < n; i++) {
	    buf.push('0');
	}
	return buf.join('');
    };


    BigInteger.prototype.level = 0;
    BigInteger.prototype.liftTo = function(target) {
	if (target.level === 1) {
	    return new Rational(this, 1);
	}
	if (target.level === 2) {
	    var fixrep = this.toFixnum();
	    if (fixrep === Number.POSITIVE_INFINITY)
		return TOO_POSITIVE_TO_REPRESENT;
	    if (fixrep === Number.NEGATIVE_INFINITY)
		return TOO_NEGATIVE_TO_REPRESENT;
	    return new FloatPoint(fixrep);
	}
	if (target.level === 3) {
	    return new Complex(this, 0);
	}
	return throwRuntimeError("invalid level for BigInteger lift", this, target);
    };

    BigInteger.prototype.isFinite = function() {
	return true;
    };

    BigInteger.prototype.isInteger = function() {
	return true;
    };

    BigInteger.prototype.isRational = function() {
	return true;
    };

    BigInteger.prototype.isReal = function() {
	return true;
    };

    BigInteger.prototype.isExact = function() {
	return true;
    };

    BigInteger.prototype.isInexact = function() {
	return false;
    };

    BigInteger.prototype.toExact = function() {
	return this;
    };

    BigInteger.prototype.toInexact = function() {
	return FloatPoint.makeInstance(this.toFixnum());
    };

    BigInteger.prototype.toFixnum = function() {
	var result = 0, str = this.toString(), i;
	if (str[0] === '-') {
	    for (i=1; i < str.length; i++) {
		result = result * 10 + Number(str[i]);
	    }
	    return -result;
	} else {
	    for (i=0; i < str.length; i++) {
		result = result * 10 + Number(str[i]);
	    }
	    return result;
	}
    };


    BigInteger.prototype.greaterThan = function(other) {
	return this.compareTo(other) > 0;
    };

    BigInteger.prototype.greaterThanOrEqual = function(other) {
	return this.compareTo(other) >= 0;
    };

    BigInteger.prototype.lessThan = function(other) {
	return this.compareTo(other) < 0;
    };

    BigInteger.prototype.lessThanOrEqual = function(other) {
	return this.compareTo(other) <= 0;
    };

    // divide: scheme-number -> scheme-number
    // WARNING NOTE: we override the old version of divide.
    BigInteger.prototype.divide = function(other) {
	var quotientAndRemainder = bnDivideAndRemainder.call(this, other);
	if (quotientAndRemainder[1].compareTo(BigInteger.ZERO) === 0) {
	    return quotientAndRemainder[0];
	} else {
	    var result = add(quotientAndRemainder[0],
			     Rational.makeInstance(quotientAndRemainder[1], other));
	    return result;
	}
    };

    BigInteger.prototype.numerator = function() {
	return this;
    };

    BigInteger.prototype.denominator = function() {
	return 1;
    };


    (function() {
	// Classic implementation of Newton-Ralphson square-root search,
	// adapted for integer-sqrt.
	// http://en.wikipedia.org/wiki/Newton's_method#Square_root_of_a_number
	    var searchIter = function(n, guess) {
		while(!(lessThanOrEqual(sqr(guess),n) &&
			lessThan(n,sqr(add(guess, 1))))) {
		    guess = floor(divide(add(guess,
					     floor(divide(n, guess))),
					 2));
		}
		return guess;
	    };

	    // integerSqrt: -> scheme-number
	    BigInteger.prototype.integerSqrt = function() {
		var n;
		if(sign(this) >= 0) {
		    return searchIter(this, this);
		} else {
		    n = this.negate();
		    return Complex.makeInstance(0, searchIter(n, n));
		}
	    };
    })();


    (function() {	
	// Get an approximation using integerSqrt, and then start another
	// Newton-Ralphson search if necessary.
	BigInteger.prototype.sqrt = function() {
	    var approx = this.integerSqrt(), fix;
	    if (eqv(sqr(approx), this)) {
		return approx;
	    }
	    fix = toFixnum(this);
	    if (isFinite(fix)) {
		if (fix >= 0) {
		    return FloatPoint.makeInstance(Math.sqrt(fix));
		} else {
		    return Complex.makeInstance(
			0,
			FloatPoint.makeInstance(Math.sqrt(-fix)));
		}
	    } else {
		return approx;
	    }
	};
    })();




    
    // sqrt: -> scheme-number
    // http://en.wikipedia.org/wiki/Newton's_method#Square_root_of_a_number
    // Produce the square root.

    // floor: -> scheme-number
    // Produce the floor.
    BigInteger.prototype.floor = function() {
        return this;
    }

    // ceiling: -> scheme-number
    // Produce the ceiling.
    BigInteger.prototype.ceiling = function() {
        return this;
    }

    // conjugate: -> scheme-number
    // Produce the conjugate.

    // magnitude: -> scheme-number
    // Produce the magnitude.

    // log: -> scheme-number
    // Produce the log.

    // angle: -> scheme-number
    // Produce the angle.

    // atan: -> scheme-number
    // Produce the arc tangent.

    // cos: -> scheme-number
    // Produce the cosine.

    // sin: -> scheme-number
    // Produce the sine.


    // expt: scheme-number -> scheme-number
    // Produce the power to the input.
    BigInteger.prototype.expt = function(n) {
	return bnPow.call(this, n);
    };



    // exp: -> scheme-number
    // Produce e raised to the given power.

    // acos: -> scheme-number
    // Produce the arc cosine.

    // asin: -> scheme-number
    // Produce the arc sine.

    BigInteger.prototype.imaginaryPart = function() {
	    return 0;
    }
    BigInteger.prototype.realPart = function() {
	    return this;
    }

    // round: -> scheme-number
    // Round to the nearest integer.





    //////////////////////////////////////////////////////////////////////
    // toRepeatingDecimal: jsnum jsnum {limit: number}? -> [string, string, string]
    //
    // Given the numerator and denominator parts of a rational,
    // produces the repeating-decimal representation, where the first
    // part are the digits before the decimal, the second are the
    // non-repeating digits after the decimal, and the third are the
    // remaining repeating decimals.
    // 
    // An optional limit on the decimal expansion can be provided, in which
    // case the search cuts off if we go past the limit.
    // If this happens, the third argument returned becomes '...' to indicate
    // that the search was prematurely cut off.
    var toRepeatingDecimal = (function() {
	var getResidue = function(r, d, limit) {
	    var digits = [];
	    var seenRemainders = {};
	    seenRemainders[r] = true;
	    while(true) {	
		if (limit-- <= 0) {
		    return [digits.join(''), '...']
		}

		var nextDigit = quotient(
		    multiply(r, 10), d);
		var nextRemainder = remainder(
		    multiply(r, 10),
		    d);
		digits.push(nextDigit.toString());
		if (seenRemainders[nextRemainder]) {
		    r = nextRemainder;
		    break;
		} else {
		    seenRemainders[nextRemainder] = true;
		    r = nextRemainder;
		}
	    }
	    
	    var firstRepeatingRemainder = r;
	    var repeatingDigits = [];
	    while (true) {
		var nextDigit = quotient(multiply(r, 10), d);
		var nextRemainder = remainder(
		    multiply(r, 10),
		    d);
		repeatingDigits.push(nextDigit.toString());
		if (equals(nextRemainder, firstRepeatingRemainder)) {
		    break;
		} else {
		    r = nextRemainder;
		}
	    };

	    var digitString = digits.join('');
	    var repeatingDigitString = repeatingDigits.join('');

	    while (digitString.length >= repeatingDigitString.length &&
		   (digitString.substring(
		       digitString.length - repeatingDigitString.length)
		    === repeatingDigitString)) {
		digitString = digitString.substring(
		    0, digitString.length - repeatingDigitString.length);
	    }

	    return [digitString, repeatingDigitString];

	};

	return function(n, d, options) {
	    // default limit on decimal expansion; can be overridden
	    var limit = 512;
	    if (options && typeof(options.limit) !== 'undefined') {
		limit = options.limit;
	    }
	    if (! isInteger(n)) {
		throwRuntimeError('toRepeatingDecimal: n ' + n.toString() +
				  " is not an integer.");
	    }
	    if (! isInteger(d)) {
		throwRuntimeError('toRepeatingDecimal: d ' + d.toString() +
				  " is not an integer.");
	    }
	    if (equals(d, 0)) {
		throwRuntimeError('toRepeatingDecimal: d equals 0');
	    }
	    if (lessThan(d, 0)) {
		throwRuntimeError('toRepeatingDecimal: d < 0');
	    }
 	    var sign = (lessThan(n, 0) ? "-" : "");
 	    n = abs(n);
 	    var beforeDecimalPoint = sign + quotient(n, d);
 	    var afterDecimals = getResidue(remainder(n, d), d, limit);
 	    return [beforeDecimalPoint].concat(afterDecimals);
	};
    })();
    //////////////////////////////////////////////////////////////////////




    // External interface of js-numbers:

    Numbers['fromFixnum'] = fromFixnum;
    Numbers['fromString'] = fromString;
    Numbers['makeBignum'] = makeBignum;
    Numbers['makeRational'] = Rational.makeInstance;
    Numbers['makeFloat'] = FloatPoint.makeInstance;
    Numbers['makeComplex'] = Complex.makeInstance;
    Numbers['makeComplexPolar'] = makeComplexPolar;

    Numbers['pi'] = FloatPoint.pi;
    Numbers['e'] = FloatPoint.e;
    Numbers['nan'] = FloatPoint.nan;
    Numbers['negative_inf'] = FloatPoint.neginf;
    Numbers['inf'] = FloatPoint.inf;
    Numbers['negative_one'] = -1;   // Rational.NEGATIVE_ONE;
    Numbers['zero'] = 0;            // Rational.ZERO;
    Numbers['one'] = 1;             // Rational.ONE;
    Numbers['i'] = plusI;
    Numbers['negative_i'] = minusI;
    Numbers['negative_zero'] = NEGATIVE_ZERO;

    Numbers['onThrowRuntimeError'] = onThrowRuntimeError;
    Numbers['isSchemeNumber'] = isSchemeNumber;
    Numbers['isRational'] = isRational;
    Numbers['isReal'] = isReal;
    Numbers['isExact'] = isExact;
    Numbers['isInexact'] = isInexact;
    Numbers['isInteger'] = isInteger;

    Numbers['toFixnum'] = toFixnum;
    Numbers['toExact'] = toExact;
    Numbers['toInexact'] = toInexact;
    Numbers['add'] = add;
    Numbers['subtract'] = subtract;
    Numbers['multiply'] = multiply;
    Numbers['divide'] = divide;
    Numbers['equals'] = equals;
    Numbers['eqv'] = eqv;
    Numbers['approxEquals'] = approxEquals;
    Numbers['greaterThanOrEqual'] = greaterThanOrEqual;
    Numbers['lessThanOrEqual'] = lessThanOrEqual;
    Numbers['greaterThan'] = greaterThan;
    Numbers['lessThan'] = lessThan;
    Numbers['expt'] = expt;
    Numbers['exp'] = exp;
    Numbers['modulo'] = modulo;
    Numbers['numerator'] = numerator;
    Numbers['denominator'] = denominator;
    Numbers['integerSqrt'] = integerSqrt;
    Numbers['sqrt'] = sqrt;
    Numbers['abs'] = abs;
    Numbers['quotient'] = quotient;
    Numbers['remainder'] = remainder;
    Numbers['floor'] = floor;
    Numbers['ceiling'] = ceiling;
    Numbers['conjugate'] = conjugate;
    Numbers['magnitude'] = magnitude;
    Numbers['log'] = log;
    Numbers['angle'] = angle;
    Numbers['tan'] = tan;
    Numbers['atan'] = atan;
    Numbers['cos'] = cos;
    Numbers['sin'] = sin;
    Numbers['tan'] = tan;
    Numbers['acos'] = acos;
    Numbers['asin'] = asin;
    Numbers['cosh'] = cosh;
    Numbers['sinh'] = sinh;
    Numbers['imaginaryPart'] = imaginaryPart;
    Numbers['realPart'] = realPart;
    Numbers['round'] = round;
    Numbers['sqr'] = sqr;
    Numbers['gcd'] = gcd;
    Numbers['lcm'] = lcm;

    Numbers['toRepeatingDecimal'] = toRepeatingDecimal;



    // The following exposes the class representations for easier
    // integration with other projects.
    Numbers['BigInteger'] = BigInteger;
    Numbers['Rational'] = Rational;
    Numbers['FloatPoint'] = FloatPoint;
    Numbers['Complex'] = Complex;   

    Numbers['MIN_FIXNUM'] = MIN_FIXNUM;
    Numbers['MAX_FIXNUM'] = MAX_FIXNUM;

})();
/*jslint vars: true, plusplus: true, maxerr: 50, indent: 4 */

// Basic library functions.  This will include a few simple functions,
// but be augmented with several namespaces for the other libraries in
// the base library.
if (!(this.plt)) { this.plt = {}; }
(function (plt) {
    'use strict';
    var baselib = {};
    plt.baselib = baselib;



    // Simple object inheritance.
    var heir = function (parentPrototype) {
        var F = function () {};
        F.prototype = parentPrototype;
        return new F();
    };



    // clone: object -> object
    // Copies an object.  The new object should respond like the old
    // object, including to things like instanceof.
    var clone = function (obj) {
        var property;
        var C = function () {};
        C.prototype = obj;
        var c = new C();
        for (property in obj) {
            if (obj.hasOwnProperty(property)) {
                c[property] = obj[property];
            }
        }
        return c;
    };


    // Consumes a class and creates a predicate that recognizes subclasses.
    var makeClassPredicate = function (aClass) {
        return function (x) { return x instanceof aClass; };
    };



    // Helper to deal with the argument-passing of primitives.  Call f
    // with arguments bound from MACHINE.env, assuming
    // MACHINE.argcount has been initialized with the number of
    // arguments on the stack.  vs provides optional values for the
    // arguments that go beyond those of the mandatoryArgCount.
    var withArguments = function (MACHINE, mandatoryArgCount, vs, f) {
        var args = [], i;
        for (i = 0; i < MACHINE.argcount; i++) {
            if (i < mandatoryArgCount) {
                args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
            } else {
                if (i < MACHINE.argcount) {
                    args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
                } else {
                    args.push(vs[mandatoryArgCount - i]);
                }
            }
        }
        return f.apply(null, args);
    };



    baselib.heir = heir;
    baselib.clone = clone;
    baselib.makeClassPredicate = makeClassPredicate;
    baselib.withArguments = withArguments;


}(this.plt));
/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Frame structures.
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.frames = exports;



    // A generic frame just holds marks.
    var Frame = function() {
	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;
	this.pendingApplyValuesProc = undefined;
	this.pendingBegin0Count = undefined;
	this.pendingBegin0Values = undefined;
    };


    // Frames must support marks and the temporary variables necessary to
    // support with-continuation-mark and with-values.

    // Specialized frames support more features:

    // A CallFrame represents a call stack frame, and includes the return address
    // as well as the function being called.
    var CallFrame = function(label, proc) {
	this.label = label;
	this.proc = proc;

	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;
    };
    CallFrame.prototype = baselib.heir(Frame.prototype);



    // A prompt frame includes a return address, as well as a prompt tag
    // for supporting delimited continuations.
    var PromptFrame = function(label, tag) {
	this.label = label;
	this.tag = tag; // ContinuationPromptTag

	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;	
    };
    PromptFrame.prototype = baselib.heir(Frame.prototype);




    //////////////////////////////////////////////////////////////////////
    exports.Frame = Frame;
    exports.CallFrame = CallFrame;
    exports.PromptFrame = PromptFrame;



}(this.plt.baselib));/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";

    // Union/find for circular equality testing.

    var UnionFind = function () {
        // this.parenMap holds the arrows from an arbitrary pointer
        // to its parent.
        this.parentMap = baselib.hashes.makeLowLevelEqHash();
    };

    // find: ptr -> UnionFindNode
    // Returns the representative for this ptr.
    UnionFind.prototype.find = function (ptr) {
        var parent = (this.parentMap.containsKey(ptr) ? 
                      this.parentMap.get(ptr) : ptr);
        if (parent === ptr) {
            return parent;
        } else {
            var rep = this.find(parent);
            // Path compression:
            this.parentMap.put(ptr, rep);
            return rep;
        }
    };

    // merge: ptr ptr -> void
    // Merge the representative nodes for ptr1 and ptr2.
    UnionFind.prototype.merge = function (ptr1, ptr2) {
        this.parentMap.put(this.find(ptr1), this.find(ptr2));
    };



    baselib.UnionFind = UnionFind;

}(this.plt.baselib));/*jslint vars: true, white: true, maxerr: 50, indent: 4 */


// Equality function
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.equality = exports;



    var eqv = function (x, y) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return jsnums.eqv(x, y);
        } else if (baselib.chars.isChar(x) && baselib.chars.isChar(y)) {
            return x.val === y.val;
        } else {
            return false;
        }
    };




    // equals: X Y -> boolean
    // Returns true if the objects are equivalent; otherwise, returns false.
    var equals = function (x, y, aUnionFind) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return baselib.numbers.eqv(x, y);
        }

        if (baselib.strings.isString(x) && baselib.strings.isString(y)) {
            return x.toString() === y.toString();
        }

        if (x === undefined || x === null) {
            return (y === undefined || y === null);
        }

        if (typeof (x) === 'object' && typeof (y) === 'object' &&
            x.equals && y.equals) {
            if (typeof (aUnionFind) === 'undefined') {
                aUnionFind = new baselib.UnionFind();
            }

            if (aUnionFind.find(x) === aUnionFind.find(y)) {
                return true;
            }
            else {
                aUnionFind.merge(x, y); 
                return x.equals(y, aUnionFind);
            }
        }
        return false;
    };

    exports.eqv = eqv;
    exports.equals = equals;

}(this.plt.baselib, jsnums));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Formatting library.
// Produces string and DOM representations of values.
//
/*global $*/
(function(baselib, $) {
    'use strict';
    var exports = {};
    baselib.format = exports;


    var replaceUnprintableStringChars = function(s) {
        var ret = [], i;
        for (i = 0; i < s.length; i++) {
            var val = s.charCodeAt(i);
            switch(val) {
            case 7: ret.push('\\a'); break;
            case 8: ret.push('\\b'); break;
            case 9: ret.push('\\t'); break;
            case 10: ret.push('\\n'); break;
            case 11: ret.push('\\v'); break;
            case 12: ret.push('\\f'); break;
            case 13: ret.push('\\r'); break;
            case 34: ret.push('\\"'); break;
            case 92: ret.push('\\\\'); break;
            default: if (val >= 32 && val <= 126) {
                ret.push( s.charAt(i) );
            }
                else {
                    var numStr = val.toString(16).toUpperCase();
                    while (numStr.length < 4) {
                        numStr = '0' + numStr;
                    }
                    ret.push('\\u' + numStr);
                }
                break;
            }
        }
        return ret.join('');
    };

    var escapeString = function(s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };


    // toWrittenString: Any Hashtable -> String
    var toWrittenString = function(x, cache) {
        if (! cache) { 
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === undefined) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return escapeString(x.toString());
        }
        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (typeof(x.toWrittenString) !== 'undefined') {
            returnVal = x.toWrittenString(cache);
        } else if (typeof(x.toDisplayedString) !== 'undefined') {
            returnVal = x.toDisplayedString(cache);
        } else {
            returnVal = x.toString();
        }
        cache.remove(x);
        return returnVal;
    };



    // toDisplayedString: Any Hashtable -> String
    var toDisplayedString = function(x, cache) {
        if (! cache) {
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === undefined || x === null) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return x;
        }
        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (typeof(x.toDisplayedString) !== 'undefined') {
            returnVal = x.toDisplayedString(cache);
        } else if (typeof(x.toWrittenString) !== 'undefined') {
            returnVal = x.toWrittenString(cache);
        } else {
            returnVal = x.toString();
        }
        cache.remove(x);
        return returnVal;
    };



    var formatRegexp1 = new RegExp('~[sSaA]', 'g');
    var formatRegexp2 = new RegExp("~[sSaAnevE%~]", "g");
    
    // format: string [X ...] string -> string
    // String formatting.  If an exception occurs, throws
    // a plain Error whose message describes the formatting error.
    var format = function(formatStr, args, functionName) {
        var throwFormatError = function() {
            functionName = functionName || 'format';
            var matches = formatStr.match(formatRegexp1);
            var expectedNumberOfArgs = (matches === null ? 0 : matches.length);
            var errorStrBuffer = [functionName + ': format string requires ' + expectedNumberOfArgs
                                  + ' arguments, given ' + args.length + '; arguments were:',
                                  toWrittenString(formatStr)];
            var i;
            for (i = 0; i < args.length; i++) {
                errorStrBuffer.push( toWrittenString(args[i]) );
            }

            throw new Error(errorStrBuffer.join(' '));
        };


        var buffer = args.slice(0);
        var onTemplate = function(s) {
            if (s === "~~") {
                return "~";
            } else if (s === '~n' || s === '~%') {
                return "\n";
            } else if (s === '~s' || s === "~S") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift());
            } else if (s === '~e' || s === "~E") {
                // FIXME: we don't yet have support for the error-print
                // handler, and currently treat ~e just like ~s.
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift()); 
            }
            else if (s === '~v') {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                // fprintf must do something more interesting here by
                // printing the dom representation directly...
                return toWrittenString(buffer.shift());
            } else if (s === '~a' || s === "~A") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toDisplayedString(buffer.shift());
            } else {
                throw new Error(functionName + 
                                ': string.replace matched invalid regexp');
            }
        };
        var result = formatStr.replace(formatRegexp2, onTemplate);
        if (buffer.length > 0) {
            throwFormatError();
        }
        return result;
    };
    



    var ToDomNodeParameters = function(params) {
        if (! params) { params = {}; }
        this.cache = baselib.hashes.makeLowLevelEqHash();
        var k;
        for (k in params) {
            if (params.hasOwnProperty(k)) {
                this[k] = params[k];
            }
        }
        this.objectCounter = 0;
    };

    // getMode: -> (U "print" "display" "write")
    ToDomNodeParameters.prototype.getMode = function() {
        if (this.mode) { 
            return this.mode; 
        }
        return 'print';
    };

    ToDomNodeParameters.prototype.containsKey = function(x) {
        return this.cache.containsKey(x);
    };

    ToDomNodeParameters.prototype.get = function(x) {
        return this.cache.get(x);
    };

    ToDomNodeParameters.prototype.remove = function(x) {
        return this.cache.remove(x);
    };

    ToDomNodeParameters.prototype.put = function(x) {
        this.objectCounter++;
        return this.cache.put(x, this.objectCounter);
    };



    // rationalToDomNode: rational -> dom-node
    var rationalToDomNode = function(n) {
        var repeatingDecimalNode = document.createElement("span");
        var chunks = baselib.numbers.toRepeatingDecimal(baselib.numbers.numerator(n),
                                                        baselib.numbers.denominator(n),
                                                        {limit: 25});
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[0] + '.'));
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[1]));
        if (chunks[2] === '...') {
            repeatingDecimalNode.appendChild(
                document.createTextNode(chunks[2]));
        } else if (chunks[2] !== '0') {
            var overlineSpan = document.createElement("span");
            overlineSpan.style.textDecoration = 'overline';
            overlineSpan.appendChild(document.createTextNode(chunks[2]));
            repeatingDecimalNode.appendChild(overlineSpan);
        }


        var fractionalNode = document.createElement("span");
        var numeratorNode = document.createElement("sup");
        numeratorNode.appendChild(document.createTextNode(String(baselib.numbers.numerator(n))));
        var denominatorNode = document.createElement("sub");
        denominatorNode.appendChild(document.createTextNode(String(baselib.numbers.denominator(n))));
        fractionalNode.appendChild(numeratorNode);
        fractionalNode.appendChild(document.createTextNode("/"));
        fractionalNode.appendChild(denominatorNode);

        
        var numberNode = document.createElement("span");
        numberNode.appendChild(repeatingDecimalNode);
        numberNode.appendChild(fractionalNode);
        fractionalNode.style['display'] = 'none';

        var showingRepeating = true;

        numberNode.onclick = function(e) {
            showingRepeating = !showingRepeating;
            repeatingDecimalNode.style['display'] = 
                (showingRepeating ? 'inline' : 'none');
            fractionalNode.style['display'] = 
                (!showingRepeating ? 'inline' : 'none');
        };
        numberNode.style['cursor'] = 'pointer';
        return numberNode;
    };


    // numberToDomNode: jsnum -> dom
    // Given a jsnum, produces a dom-node representation.
    var numberToDomNode = function(n, params) {
        var node;
        if (baselib.numbers.isExact(n)) {
            if (baselib.numbers.isInteger(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else if (baselib.numbers.isRational(n)) {
                return rationalToDomNode(n);
            } else if (baselib.numbers.isComplex(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            }
        } else {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(n.toString()));
            return node;
        }
    };


    // toDomNode: scheme-value -> dom-node
    var toDomNode = function(x, params) {
        var node;
        if (params === 'write') {
            params = new ToDomNodeParameters({'mode' : 'write'});
        } else if (params === 'print') {
            params = new ToDomNodeParameters({'mode' : 'print'});
        } else if (params === 'display') {
            params = new ToDomNodeParameters({'mode' : 'display'});
        } else {
            params = params || new ToDomNodeParameters({'mode' : 'display'});
        } 

        if (baselib.numbers.isSchemeNumber(x)) {
            node = numberToDomNode(x, params);
            $(node).addClass("number");
            return node;
        }
        
        if (x === null) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("null"));
            $(node).addClass("null");
            return node;
        }

        if (x === true) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("true"));
            $(node).addClass("boolean");
            return node;
        }

        if (x === false) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("false"));
            $(node).addClass("boolean");
            return node;
        }

        if (typeof(x) === 'object') {
            if (params.containsKey(x)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode("#" + params.get(x)));
                return node;
            }
        }
        if (x === undefined || x === null) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#<undefined>"));
            return node;
        }

        if (typeof(x) === 'string') {
            var wrapper = document.createElement("span");
            wrapper.style["white-space"] = "pre";
            if (params.getMode() === 'write' || params.getMode() === 'print') {
                node = document.createTextNode(toWrittenString(x));
            } else {
                node = document.createTextNode(toDisplayedString(x));
            }
            wrapper.appendChild(node);
            $(wrapper).addClass("string");
            return wrapper;
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toString()));
            $(node).addClass("procedure");
            return node;
        }

        var returnVal;
        if (x.nodeType) {
            returnVal =  x;
        } else if (typeof(x.toDomNode) !== 'undefined') {
            returnVal =  x.toDomNode(params);
        } else if (params.getMode() === 'write' && 
                   typeof(x.toWrittenString) !== 'undefined') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toWrittenString(params)));
            returnVal =  node;
        } else if (params.getMode() === 'display' &&
                   typeof(x.toDisplayedString) !== 'undefined') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toDisplayedString(params)));
            returnVal =  node;
        } else {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toString()));
            returnVal =  node;
        }
        params.remove(x);
        return returnVal;
    };



    //////////////////////////////////////////////////////////////////////


    exports.ToDomNodeParameters = ToDomNodeParameters;

    exports.format = format;
    exports.toWrittenString = toWrittenString;
    exports.toDisplayedString = toDisplayedString;
    exports.toDomNode = toDomNode;

    exports.escapeString = escapeString;
}(this.plt.baselib, $));/*jslint vars: true, maxerr: 50, indent: 4 */


// Other miscellaneous constants
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.constants = exports;


    var VoidValue = function () {};
    VoidValue.prototype.toString = function () {
        return "#<void>";
    };

    var VOID_VALUE = new VoidValue();


    var EofValue = function () {};
    EofValue.prototype.toString = function () {
        return "#<eof>";
    };

    var EOF_VALUE = new EofValue();


    exports.VOID_VALUE = VOID_VALUE;
    exports.EOF_VALUE = EOF_VALUE;
}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Numbers.
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.numbers = exports;



    var isNumber = jsnums.isSchemeNumber;
    var isReal = jsnums.isReal;
    var isRational = jsnums.isRational;
    var isComplex = isNumber;
    var isInteger = jsnums.isInteger;


    var isNatural = function (x) {
        return (jsnums.isExact(x) && isInteger(x) 
                && jsnums.greaterThanOrEqual(x, 0));
    };

    var isNonNegativeReal = function (x) {
        return isReal(x) && jsnums.greaterThanOrEqual(x, 0);
    };

    var isByte = function (x) {
        return (isNatural(x) && 
                jsnums.lessThan(x, 256));
    };


    // sign: number -> number
    var sign = function (x) {
        if (jsnums.isInexact(x)) {
            if (jsnums.greaterThan(x, 0)) {
                return jsnums.makeFloat(1);
            } else if (jsnums.lessThan(x, 0)) {
                return jsnums.makeFloat(-1);
            } else {
                return jsnums.makeFloat(0);
            }
        } else {
            if (jsnums.greaterThan(x, 0)) {
                return 1;
            } else if (jsnums.lessThan(x, 0)) {
                return -1;
            } else {
                return 0;
            }
        }
    };




    //////////////////////////////////////////////////////////////////////
    // Exports


    // We first re-export everything in jsnums.
    var prop;
    for (prop in jsnums) {
        if (jsnums.hasOwnProperty(prop)) {
            exports[prop] = jsnums[prop];
        }
    }

    exports.isNumber = jsnums.isSchemeNumber;
    exports.isReal = isReal;
    exports.isRational = isRational;
    exports.isComplex = isComplex;
    exports.isInteger = isInteger;
    exports.isNatural = isNatural;
    exports.isByte = isByte;
    exports.isNonNegativeReal = isNonNegativeReal;

    exports.sign = sign;


}(this.plt.baselib, jsnums));/*jslint browser: true, unparam: true, vars: true, plusplus: true, maxerr: 50, indent: 4 */


// list structures (pairs, empty)
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.lists = exports;

    


    
    var Empty = function () {
    };
    Empty.EMPTY = new Empty();
    var EMPTY = Empty.EMPTY;



    Empty.prototype.equals = function (other, aUnionFind) {
        return other instanceof Empty;
    };

    Empty.prototype.reverse = function () {
        return this;
    };

    Empty.prototype.toWrittenString = function (cache) { return "empty"; };
    Empty.prototype.toDisplayedString = function (cache) { return "empty"; };
    Empty.prototype.toString = function (cache) { return "()"; };

    
    // Empty.append: (listof X) -> (listof X)
    Empty.prototype.append = function (b) {
        return b;
    };
    



    //////////////////////////////////////////////////////////////////////

    // Cons Pairs

    var Cons = function (first, rest) {
        this.first = first;
        this.rest = rest;
    };

    Cons.prototype.reverse = function () {
        var lst = this;
        var ret = EMPTY;
        while (lst !== EMPTY) {
            ret = Cons.makeInstance(lst.first, ret);
            lst = lst.rest;
        }
        return ret;
    };
    
    Cons.makeInstance = function (first, rest) {
        return new Cons(first, rest);
    };

    // FIXME: can we reduce the recursion on this?
    Cons.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof Cons)) {
            return false;
        }
        return (baselib.equality.equals(this.first, other.first, aUnionFind) &&
                baselib.equality.equals(this.rest, other.rest, aUnionFind));
    };
    

    

    // Cons.append: (listof X) -> (listof X)
    Cons.prototype.append = function (b) {
        if (b === EMPTY) {
            return this;
        }
        var ret = b;
        var lst = this.reverse();
        while (lst !== EMPTY) {
            ret = Cons.makeInstance(lst.first, ret);
            lst = lst.rest;
        }
        
        return ret;
    };
    

    Cons.prototype.toWrittenString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toWrittenString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toWrittenString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };

    Cons.prototype.toString = Cons.prototype.toWrittenString;

    Cons.prototype.toDisplayedString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toDisplayedString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== Empty.EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toDisplayedString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };



    Cons.prototype.toDomNode = function (cache) {
        cache.put(this, true);
        var node = document.createElement("span");
        node.appendChild(document.createTextNode("("));
        var p = this;
        while (p instanceof Cons) {
            node.appendChild(baselib.format.toDomNode(p.first, cache));
            p = p.rest;
            if (p !== Empty.EMPTY) {
                node.appendChild(document.createTextNode(" "));
            }
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== Empty.EMPTY) {
            node.appendChild(document.createTextNode("."));
            node.appendChild(document.createTextNode(" "));
            node.appendChild(baselib.format.toDomNode(p, cache));
        }

        node.appendChild(document.createTextNode(")"));
        return node;
    };


    var isPair = function (x) { return x instanceof Cons; };
    var isEmpty = function (x) { return x === Empty.EMPTY; };


    var makePair = Cons.makeInstance;

    var makeList = function () {
        var result = Empty.EMPTY, i;
        for (i = arguments.length - 1; i >= 0; i--) {
            result = Cons.makeInstance(arguments[i], result);
        }
        return result;
    };


    // isList: Any -> Boolean
    // Returns true if x is a list (a chain of pairs terminated by EMPTY).
    var isList = function (x) { 
        while (x !== Empty.EMPTY) {
            if (x instanceof Cons) {
                x = x.rest;
            } else {
                return false;
            }
        }
        return true;
    };



    var reverse = function (lst) {
        var rev = EMPTY;
        while (lst !== EMPTY) {
            rev = makePair(lst.first, rev);
            lst = lst.rest;
        }
        return rev;
    };


    var length = function (lst) {
        var len = 0;
        while (lst !== EMPTY) {
            len++;
            lst = lst.rest;
        }
        return len;
    };


    var listRef = function (lst, n) {
        var i;
        for (i = 0; i < n; i++) {
            lst = lst.rest;
        }
        return lst.first;
    };



    //////////////////////////////////////////////////////////////////////

    exports.EMPTY = EMPTY;
    exports.Empty = Empty;
    exports.Cons = Cons;
    exports.isPair = isPair;
    exports.isList = isList;
    exports.isEmpty = isEmpty;
    exports.makePair = makePair;
    exports.makeList = makeList;
    exports.reverse = reverse;
    exports.length = length;
    exports.listRef = listRef;


}(this.plt.baselib));// vectors
/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.vectors = exports;



    var Vector = function (n, initialElements) {
        var i;
        this.elts = [];
        this.elts.length = n;
        if (initialElements) {
            for (i = 0; i < n; i++) {
                this.elts[i] = initialElements[i];
            }
        } else {
            for (i = 0; i < n; i++) {
                this.elts[i] = undefined;
            }
        }
        this.mutable = true;
    };

    Vector.makeInstance = function (n, elts) {
        return new Vector(n, elts);
    };

    Vector.prototype.length = function () {
        return this.elts.length;
    };

    Vector.prototype.ref = function (k) {
        return this.elts[k];
    };

    Vector.prototype.set = function (k, v) {
        this.elts[k] = v;
    };

    Vector.prototype.equals = function (other, aUnionFind) {
        var i;
        if (other instanceof Vector) {
            if (other.length() !== this.length()) {
                return false;
            }
            for (i = 0; i <  this.length(); i++) {
                if (!(baselib.equality.equals(this.elts[i], other.elts[i], aUnionFind))) {
                    return false;
                }
            }
            return true;
        } else {
            return false;
        }
    };

    Vector.prototype.toList = function () {
        var ret = baselib.lists.EMPTY, i;
        for (i = this.length() - 1; i >= 0; i--) {
            ret = baselib.lists.Cons.makeInstance(this.elts[i], ret);           
        }       
        return ret;
    };

    Vector.prototype.toWrittenString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toWrittenString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDisplayedString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toDisplayedString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDomNode = function (cache) {
        var node = document.createElement("span"), i;
        cache.put(this, true);
        node.appendChild(document.createTextNode("#("));
        for (i = 0; i < this.length(); i++) {
            node.appendChild(baselib.format.toDomNode(this.ref(i), cache));
            if (i !== this.length() - 1) {
                node.appendChild(document.createTextNode(" "));
            }
        }
        node.appendChild(document.createTextNode(")"));
        return node;
    };


    var isVector = function (x) { return x instanceof Vector; };

    var makeVector = function () {
        return Vector.makeInstance(arguments.length, arguments);
    };

    var makeVectorImmutable = function () {
        var v = Vector.makeInstance(arguments.length, arguments);
        v.mutable = false;
        return v;
    };



    //////////////////////////////////////////////////////////////////////

    exports.Vector = Vector;
    exports.isVector = isVector;
    exports.makeVector = makeVector;
    exports.makeVectorImmutable = makeVectorImmutable;


}(this.plt.baselib));// Single characters
(function(baselib) {
    var exports = {};
    baselib.chars = exports;


    // Chars
    // Char: string -> Char
    var Char = function(val){
        this.val = val;
    };
    // The characters less than 256 must be eq?, according to the
    // documentation:
    // http://docs.racket-lang.org/reference/characters.html
    var _CharCache = {};
    for (var i = 0; i < 256; i++) {
        _CharCache[String.fromCharCode(i)] = new Char(String.fromCharCode(i));
    }
    
    // makeInstance: 1-character string -> Char  
    Char.makeInstance = function(val){
        if (_CharCache[val]) {
	    return _CharCache[val];
        }
        return new Char(val);
    };

    Char.prototype.toString = function(cache) {
	var code = this.val.charCodeAt(0);
	var returnVal;
	switch (code) {
	case 0: returnVal = '#\\nul'; break;
	case 8: returnVal = '#\\backspace'; break;
	case 9: returnVal = '#\\tab'; break;
	case 10: returnVal = '#\\newline'; break;
	case 11: returnVal = '#\\vtab'; break;
	case 12: returnVal = '#\\page'; break;
	case 13: returnVal = '#\\return'; break;
	case 20: returnVal = '#\\space'; break;
	case 127: returnVal = '#\\rubout'; break;
	default: if (code >= 32 && code <= 126) {
	    returnVal = ("#\\" + this.val);
	}
	    else {
		var numStr = code.toString(16).toUpperCase();
		while (numStr.length < 4) {
		    numStr = '0' + numStr;
		}
		returnVal = ('#\\u' + numStr);
	    }
	    break;
	}
	return returnVal;
    };

    Char.prototype.toWrittenString = Char.prototype.toString;

    Char.prototype.toDisplayedString = function (cache) {
        return this.val;
    };

    Char.prototype.getValue = function() {
        return this.val;
    };

    Char.prototype.equals = function(other, aUnionFind){
        return other instanceof Char && this.val == other.val;
    };




    exports.Char = Char;
    exports.makeChar = Char.makeInstance;
    exports.isChar = plt.baselib.makeClassPredicate(Char);


})(this['plt'].baselib);/*jslint devel: false, browser: true, unparam: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
// Structure types
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.symbols = exports;


    //////////////////////////////////////////////////////////////////////
    
    // Symbols

    //////////////////////////////////////////////////////////////////////
    var Symbol = function (val) {
        this.val = val;
    };

    var symbolCache = {};
    
    // makeInstance: string -> Symbol.
    Symbol.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(symbolCache.hasOwnProperty(val))) {
            symbolCache[val] = new Symbol(val);
        }
        return symbolCache[val];
    };
    
    Symbol.prototype.equals = function (other, aUnionFind) {
        return other instanceof Symbol &&
            this.val === other.val;
    };
    

    Symbol.prototype.toString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toDisplayedString = function (cache) {
        return this.val;
    };


    var isSymbol = function (x) { return x instanceof Symbol; };

    var makeSymbol = function (s) { return Symbol.makeInstance(s); };



    //////////////////////////////////////////////////////////////////////

    exports.Symbol = Symbol;
    exports.makeSymbol = makeSymbol;
    exports.isSymbol = isSymbol;

}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */


// Strings

// Strings are either mutable or immutable.  immutable strings are represented
// as regular JavaScript strings.  Mutable ones are represented as instances
// of the Str class.

(function (baselib) {
    'use strict';
    var exports = {};

    baselib.strings = exports;


    // chars: arrayof string
    // Precondition: each string must only be 1 character long or bad things
    // happen.
    var Str = function (chars) {
	this.chars = chars;
	this.length = chars.length;
	this.mutable = true;
    };

    Str.makeInstance = function (chars) {
	return new Str(chars);
    };

    Str.fromString = function (s) {
	return Str.makeInstance(s.split(""));
    };

    Str.prototype.toString = function () {
	return this.chars.join("");
    };

    var replaceUnprintableStringChars = function (s) {
	var ret = [], i;
	for (i = 0; i < s.length; i++) {
	    var val = s.charCodeAt(i);
	    switch(val) {
	    case 7: ret.push('\\a'); break;
	    case 8: ret.push('\\b'); break;
	    case 9: ret.push('\\t'); break;
	    case 10: ret.push('\\n'); break;
	    case 11: ret.push('\\v'); break;
	    case 12: ret.push('\\f'); break;
	    case 13: ret.push('\\r'); break;
	    case 34: ret.push('\\"'); break;
	    case 92: ret.push('\\\\'); break;
	    default: 
                if (val >= 32 && val <= 126) {
		    ret.push( s.charAt(i) );
	        }
		else {
		    var numStr = val.toString(16).toUpperCase();
		    while (numStr.length < 4) {
			numStr = '0' + numStr;
		    }
		    ret.push('\\u' + numStr);
		}
		break;
	    }
	}
	return ret.join('');
    };

    var escapeString = function (s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };

    Str.prototype.toWrittenString = function (cache) {
        return escapeString(this.toString());
    };

    Str.prototype.toDisplayedString = Str.prototype.toString;

    Str.prototype.copy = function () {
	return Str.makeInstance(this.chars.slice(0));
    };

    Str.prototype.substring = function (start, end) {
	if (end === null || end === undefined) {
	    end = this.length;
	}
	return Str.makeInstance( this.chars.slice(start, end) );
    };

    Str.prototype.charAt = function (index) {
	return this.chars[index];
    };

    Str.prototype.charCodeAt = function (index) {
	return this.chars[index].charCodeAt(0);
    };

    Str.prototype.replace = function (expr, newStr) {
	return Str.fromString( this.toString().replace(expr, newStr) );
    };


    Str.prototype.equals = function (other, aUnionFind) {
	if ( !(other instanceof Str || typeof(other) === 'string') ) {
	    return false;
	}
	return this.toString() === other.toString();
    };


    Str.prototype.set = function (i, c) {
	this.chars[i] = c;
    };

    Str.prototype.toUpperCase = function () {
	return Str.fromString( this.chars.join("").toUpperCase() );
    };

    Str.prototype.toLowerCase = function () {
	return Str.fromString( this.chars.join("").toLowerCase() );
    };

    Str.prototype.match = function (regexpr) {
	return this.toString().match(regexpr);
    };



    var isString = function (s) {
	return (typeof s === 'string' || 
                s instanceof Str);
    };

    var isMutableString = baselib.makeClassPredicate(Str);



    exports.Str = Str;
    exports.escapeString = escapeString;
    exports.isString = isString;
    exports.isMutableString = isMutableString;
    exports.makeMutableString = Str.makeInstance;

}(this.plt.baselib));/*jslint unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */



(function(baselib) {
    'use strict';
    var exports = {};
    baselib.bytes = exports;

    // Bytes

    var Bytes = function(bts, mutable) {
        // bytes: arrayof [0-255]
        this.bytes = bts;
        this.mutable = (mutable === undefined) ? false : mutable;
    };

    Bytes.prototype.get = function(i) {
	return this.bytes[i];
    };

    Bytes.prototype.set = function(i, b) {
	if (this.mutable) {
	    this.bytes[i] = b;
	}
    };

    Bytes.prototype.length = function() {
	return this.bytes.length;
    };

    Bytes.prototype.copy = function(mutable) {
	return new Bytes(this.bytes.slice(0), mutable);
    };

    Bytes.prototype.subbytes = function(start, end) {
	if (end === null || end === undefined) {
	    end = this.bytes.length;
	}
	return new Bytes( this.bytes.slice(start, end), true );
    };


    Bytes.prototype.equals = function(other) {
        if (! (other instanceof Bytes)) {
	    return false;
        }
        if (this.bytes.length !== other.bytes.length) {
	    return false;
        }
        var A = this.bytes;
        var B = other.bytes;
        var n = this.bytes.length;
        var i;
        for (i = 0; i < n; i++) {
	    if (A[i] !== B[i]) {
	        return false;
            }
        }
        return true;
    };


    Bytes.prototype.toString = function(cache) {
	var ret = [], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(String.fromCharCode(this.bytes[i]));
	}

	return ret.join('');
    };

    Bytes.prototype.toDisplayedString = Bytes.prototype.toString;

    var escapeByte = function(aByte) {
	var ret = [];
	var returnVal;
	switch(aByte) {
	case 7: returnVal = '\\a'; break;
	case 8: returnVal = '\\b'; break;
	case 9: returnVal = '\\t'; break;
	case 10: returnVal = '\\n'; break;
	case 11: returnVal = '\\v'; break;
	case 12: returnVal = '\\f'; break;
	case 13: returnVal = '\\r'; break;
	case 34: returnVal = '\\"'; break;
	case 92: returnVal = '\\\\'; break;
	default: if (aByte >= 32 && aByte <= 126) {
	    returnVal = String.fromCharCode(aByte);
	}
	    else {
		ret.push( '\\' + aByte.toString(8) );
	    }
	    break;
	}
	return returnVal;
    };

    Bytes.prototype.toWrittenString = function() {
	var ret = ['#"'], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(escapeByte(this.bytes[i]));
	}
	ret.push('"');
	return ret.join('');
    };

    var makeBytes = function(bytes) {
        return new Bytes(bytes);
    };

    var isBytes = baselib.makeClassPredicate(Bytes);


    exports.Bytes = Bytes;
    exports.makeBytes = makeBytes;
    exports.isBytes = isBytes;


}(this.plt.baselib));/*jslint unparam: true, vars: true, white: true, newcap: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

/*global Hashtable*/


(function (baselib, Hashtable) {
    'use strict';
    var exports = {};

    baselib.hashes = exports;


    
    var _eqHashCodeCounter = 0;
    var makeEqHashCode = function () {
        _eqHashCodeCounter++;
        return _eqHashCodeCounter;
    };


    // getHashCode: any -> (or fixnum string)
    // Given a value, produces a hashcode appropriate for eq.
    var getEqHashCode = function (x) {
        if (typeof (x) === 'string') {
            return x;
        }
        if (typeof (x) === 'number') {
            return String(x);
        }
        if (x && !x._eqHashCode) {
            x._eqHashCode = makeEqHashCode();
        }
        if (x && x._eqHashCode) {
            return x._eqHashCode;
        }
        return 0;
    };


    // Creates a low-level hashtable, following the interface of 
    // http://www.timdown.co.uk/jshashtable/
    //
    // Defined to use the getEqHashCode defined in baselib_hash.js.
    var makeLowLevelEqHash = function () {
        return new Hashtable(function (x) { return getEqHashCode(x); },
                             function (x, y) { return x === y; });
    };










    //////////////////////////////////////////////////////////////////////
    // Eq Hashtables
    var EqHashTable = function (inputHash) {
        this.hash = makeLowLevelEqHash();
        this.mutable = true;

    };

    EqHashTable.prototype.toWrittenString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toWrittenString(keys[i], cache);
            var valStr = baselib.format.toWrittenString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hasheq(' + ret.join(' ') + ')');
    };
    
    EqHashTable.prototype.toDisplayedString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toDisplayedString(keys[i], cache);
            var valStr = baselib.format.toDisplayedString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hasheq(' + ret.join(' ') + ')');
    };

    EqHashTable.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof EqHashTable)) {
            return false; 
        }

        if (this.hash.keys().length !== other.hash.keys().length) { 
            return false;
        }

        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++) {
            if (!(other.hash.containsKey(keys[i]) &&
                  baselib.equality.equals(this.hash.get(keys[i]),
                                          other.hash.get(keys[i]),
                                          aUnionFind))) {
                return false;
            }
        }
        return true;
    };



    //////////////////////////////////////////////////////////////////////
    // Equal hash tables
    var EqualHashTable = function (inputHash) {
        this.hash = new Hashtable(
            function (x) {
                return baselib.format.toWrittenString(x); 
            },
            function (x, y) {
                return baselib.equality.equals(x, y, new baselib.UnionFind()); 
            });
        this.mutable = true;
    };

    EqualHashTable.prototype.toWrittenString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toWrittenString(keys[i], cache);
            var valStr = baselib.format.toWrittenString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hash(' + ret.join(' ') + ')');
    };
    EqualHashTable.prototype.toDisplayedString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toDisplayedString(keys[i], cache);
            var valStr = baselib.format.toDisplayedString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hash(' + ret.join(' ') + ')');
    };

    EqualHashTable.prototype.equals = function (other, aUnionFind) {
        if ( !(other instanceof EqualHashTable) ) {
            return false; 
        }

        if (this.hash.keys().length !== other.hash.keys().length) { 
            return false;
        }

        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++){
            if (! (other.hash.containsKey(keys[i]) &&
                   baselib.equality.equals(this.hash.get(keys[i]),
                                               other.hash.get(keys[i]),
                                               aUnionFind))) {
                return false;
            }
        }
        return true;
    };




    var isHash = function (x) { 
        return (x instanceof EqHashTable ||
                x instanceof EqualHashTable); 
    };


    //////////////////////////////////////////////////////////////////////

    exports.getEqHashCode = getEqHashCode;
    exports.makeEqHashCode = makeEqHashCode;
    exports.makeLowLevelEqHash = makeLowLevelEqHash;


    exports.EqualHashTable = EqualHashTable;
    exports.EqHashTable = EqHashTable;
    exports.isHash = isHash;


}(this.plt.baselib, Hashtable));/*jslint vars: true, maxerr: 50, indent: 4 */

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.regexps = exports;


    // Regular expressions.

    var RegularExpression = function (pattern) {
        this.pattern = pattern;
    };


    var ByteRegularExpression = function (pattern) {
        this.pattern = pattern;
    };

    //////////////////////////////////////////////////////////////////////

    exports.RegularExpression = RegularExpression;
    exports.ByteRegularExpression = ByteRegularExpression;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */


(function (baselib) {
    'use strict';
    var exports = {};
    baselib.paths = exports;

    // Paths

    var Path = function (p) {
        this.path = p;
    };

    Path.prototype.toString = function () {
        return String(this.path);
    };

    //////////////////////////////////////////////////////////////////////

    var makePath = function (p) {
        return new Path(p);
    };

    var isPath = baselib.makeClassPredicate(Path);



    exports.Path = Path;
    exports.makePath = makePath;
    exports.isPath = isPath;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Exceptions

(function(baselib) {
    'use strict';
    var exports = {};
    baselib.boxes = exports;


    //////////////////////////////////////////////////////////////////////
    // Boxes
    
    var Box = function(x, mutable) {
	this.val = x;
	this.mutable = mutable;
    };

    Box.prototype.ref = function() {
        return this.val;
    };

    Box.prototype.set = function(newVal) {
        if (this.mutable) {
	    this.val = newVal;
        }
    };

    Box.prototype.toString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toWrittenString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toDisplayedString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toDisplayedString(this.val, cache);
    };

    Box.prototype.toDomNode = function(cache) {
        cache.put(this, true);
        var parent = document.createElement("span");
        parent.appendChild(document.createTextNode('#&'));
        parent.appendChild(baselib.format.toDomNode(this.val, cache));
        return parent;
    };

    Box.prototype.equals = function(other, aUnionFind) {
        return ((other instanceof Box) &&
	        baselib.equality.equals(this.val, other.val, aUnionFind));
    };
    
    var makeBox = function(x) { 
        return new Box(x, true); 
    };

    var makeImmutableBox = function(x) {
        return new Box(x, false); 
    };

    var isBox = function(x) {
        return x instanceof Box;
    };

    var isMutableBox = function(x) { 
        return (x instanceof Box && x.mutable); 
    };

    var isImmutableBox = function(x) { 
        return (x instanceof Box && (!x.mutable));
    };




    //////////////////////////////////////////////////////////////////////
    exports.Box = Box;
    exports.isBox = isBox;
    exports.isMutableBox = isMutableBox;
    exports.isImmutableBox = isImmutableBox;
    exports.makeBox = makeBox;
    exports.makeImmutableBox = makeImmutableBox;


}(this.plt.baselib));// Placeholders
/*jslint browser: true, unparam: true, vars: true, maxerr: 50, indent: 4 */
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.placeholders = exports;


    // Placeholders: same thing as boxes.  Distinct type just to support make-reader-graph.

    var Placeholder = function (x, mutable) {
        this.val = x;
    };

    Placeholder.prototype.ref = function () {
        return this.val;
    };

    Placeholder.prototype.set = function (newVal) {
        this.val = newVal;
    };

    Placeholder.prototype.toString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toWrittenString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDisplayedString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDomNode = function (cache) {
        var parent = document.createElement("span");
        parent.appendChild(document.createTextNode('#<placeholder>'));
        return parent;
    };

    Placeholder.prototype.equals = function (other, aUnionFind) {
        return ((other instanceof Placeholder) &&
                baselib.equality.equals(this.val, other.val, aUnionFind));
    };


    var isPlaceholder = function (x) { 
        return x instanceof Placeholder; 
    };
    


    //////////////////////////////////////////////////////////////////////
    exports.Placeholder = Placeholder;
    exports.isPlaceholder = isPlaceholder;



}(this.plt.baselib));/*jslint unparam: true, vars: true, maxerr: 50, indent: 4 */

// Keywords

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.keywords = exports;


    var Keyword = function (val) {
        this.val = val;
    };

    var keywordCache = {};
    
    // makeInstance: string -> Keyword.
    Keyword.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(keywordCache.hasOwnProperty(val))) {
            keywordCache[val] = new Keyword(val);
        }
        return keywordCache[val];
    };
    
    Keyword.prototype.equals = function (other, aUnionFind) {
        return other instanceof Keyword &&
            this.val === other.val;
    };
    

    Keyword.prototype.toString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toDisplayedString = function (cache) {
        return this.val;
    };


    exports.Keyword = Keyword;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    "use strict";
    var exports = {};
    baselib.structs = exports;



    //////////////////////////////////////////////////////////////////////

    var Struct = function (constructorName, fields) {
        this._constructorName = constructorName; 
        this._fields = [];
    };

    Struct.prototype.toWrittenString = function (cache) { 
        var buffer = [], i;
        cache.put(this, true);
        buffer.push("(");
        buffer.push(this._constructorName);
        for(i = 0; i < this._fields.length; i++) {
            buffer.push(" ");
            buffer.push(baselib.format.toWrittenString(this._fields[i], cache));
        }
        buffer.push(")");
        return buffer.join("");
    };

    Struct.prototype.toDisplayedString = function (cache) {
        return baselib.format.toWrittenString(this, cache); 
    };

    Struct.prototype.toDomNode = function (params) {
        var node = document.createElement("span"), i;
        params.put(this, true);
        $(node).append(document.createTextNode("("));
        $(node).append(document.createTextNode(this._constructorName));
        for(i = 0; i < this._fields.length; i++) {
            $(node).append(document.createTextNode(" "));
            $(node).append(baselib.format.toDomNode(this._fields[i], params));
        }
        $(node).append(document.createTextNode(")"));
        return node;
    };


    Struct.prototype.equals = function (other, aUnionFind) {
        var i;
        if (!(other instanceof this.type)) {
            return false;
        }
        for (i = 0; i < this._fields.length; i++) {
            if (! baselib.equality.equals(this._fields[i],
                         other._fields[i],
                         aUnionFind)) {
                return false;
            }
        }
        return true;
    };

    Struct.prototype.type = Struct;


    //////////////////////////////////////////////////////////////////////


    var StructType = function (name,             // string
                               type,             // StructType
                               numberOfArgs,     // number
                               numberOfFields,   // number
                               firstField,
                               applyGuard,
                               constructor,
                               predicate, 
                               accessor,
                               mutator) {
        this.name = name;
        this.type = type;
        this.numberOfArgs = numberOfArgs;
        this.numberOfFields = numberOfFields;
        this.firstField = firstField;

        this.applyGuard = applyGuard;
        this.constructor = constructor;
        this.predicate = predicate;
        this.accessor = accessor;
        this.mutator = mutator;
    };


    StructType.prototype.toString = function (cache) {
        return '#<struct-type:' + this.name + '>';
    };


    StructType.prototype.equals = function (other, aUnionFind) {
        return this === other;
    };





    // guard-function: array string (array -> value)





    // Default structure guard just calls the continuation argument.
    var DEFAULT_GUARD = function (args, name, k) { 
        return k(args); 
    };


    // The default parent type refers to the toplevel Struct.
    var DEFAULT_PARENT_TYPE = { type: Struct,
                                numberOfArgs: 0,
                                numberOfFields: 0,
                                firstField: 0,
                                applyGuard: DEFAULT_GUARD };



    // makeStructureType: string StructType number number boolean
    //                    guard-function -> StructType
    //
    // Creates a new structure type.

    var makeStructureType = function (theName,
                                      parentType, 
                                      initFieldCnt, 
                                      autoFieldCnt, 
                                      autoV, 
                                      guard) {


        // Defaults
        autoFieldCnt = autoFieldCnt || 0;
        parentType = parentType || DEFAULT_PARENT_TYPE;
        guard = guard || DEFAULT_GUARD;



        // RawConstructor creates a new struct type inheriting from
        // the parent, with no guard checks.
        var RawConstructor = function (name, args) {
            var i;
            parentType.type.call(this, name, args);
            for (i = 0; i < initFieldCnt; i++) {
                this._fields.push(args[i+parentType.numberOfArgs]);
            }
            for (i = 0; i < autoFieldCnt; i++) {
                this._fields.push(autoV);
            }
        };
        RawConstructor.prototype = baselib.heir(parentType.type.prototype);



        // Set type, necessary for equality checking
        RawConstructor.prototype.type = RawConstructor;

        // The structure type consists of the name, its constructor, a
        // record of how many argument it and its parent type contains,
        // the list of autofields, the guard, and functions corresponding
        // to the constructor, the predicate, the accessor, and mutators.
        var newType = new StructType(
            theName,
            RawConstructor,
            initFieldCnt + parentType.numberOfArgs,
            initFieldCnt + autoFieldCnt,
            parentType.firstField + parentType.numberOfFields,
            function (args, name, k) {
                return guard(args, name,
                             function (result) {
                                 var parentArgs = result.slice(0, parentType.numberOfArgs);
                                 var restArgs = result.slice(parentType.numberOfArgs);
                                 return parentType.applyGuard(
                                     parentArgs, name,
                                     function (parentRes) {
                                         return k( parentRes.concat(restArgs) ); });
                             });
            },
            // constructor
            function () {
                var args = [].slice.call(arguments);
                return newType.applyGuard(
                    args,
                    baselib.symbols.Symbol.makeInstance(theName),
                    function (res) { 
                        return new RawConstructor(theName, res); });
            },

            // predicate
            function (x) { 
                return x instanceof RawConstructor; 
            },

            // accessor
            function (x, i) { return x._fields[i + this.firstField]; },

            // mutator
            function (x, i, v) { x._fields[i + this.firstField] = v; });
        return newType;
    };








    var isStruct = function (x) { return x instanceof Struct; };
    var isStructType = function (x) { return x instanceof StructType; };


    //////////////////////////////////////////////////////////////////////


    exports.StructType = StructType;
    exports.Struct = Struct;
    exports.makeStructureType = makeStructureType;
    exports.isStruct = isStruct;
    exports.isStructType = isStructType;

}(this.plt.baselib, $));// Arity structure
/*jslint unparam: true, sub: true, vars: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    'use strict';
    var exports = {};
    baselib.ports = exports;


    // Output Ports

    var OutputPort = function () {};
    var isOutputPort = baselib.makeClassPredicate(OutputPort);


    var StandardOutputPort = function () {
        OutputPort.call(this);
    };
    StandardOutputPort.prototype = baselib.heir(OutputPort.prototype);
    StandardOutputPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };

    var StandardErrorPort = function () {
        OutputPort.call(this);
    };
    StandardErrorPort.prototype = baselib.heir(OutputPort.prototype);
    StandardErrorPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentErrorDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };





    var OutputStringPort = function () {
        this.buf = [];
    };
    OutputStringPort.prototype = baselib.heir(OutputPort.prototype);
    OutputStringPort.prototype.writeDomNode = function (MACHINE, v) {
        this.buf.push($(v).text());
    };
    OutputStringPort.prototype.getOutputString = function () {
        return this.buf.join('');
    };
    var isOutputStringPort = baselib.makeClassPredicate(OutputStringPort);




    exports.OutputPort = OutputPort;
    exports.isOutputPort = isOutputPort;
    exports.StandardOutputPort = StandardOutputPort;
    exports.StandardErrorPort = StandardErrorPort;
    exports.OutputStringPort = OutputStringPort;
    exports.isOutputStringPort = isOutputStringPort;


}(this.plt.baselib, $));/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Procedures

// For historical reasons, this module is called 'functions' instead of 'procedures'.
// This may change soon.

/*global plt*/

(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.functions = exports;
    
    // Procedure types: a procedure is either a Primitive or a Closure.

    // A Primitive is a function that's expected to return.  It is not
    // allowed to call into Closures.  Its caller is expected to pop off
    // its argument stack space.
    //



    var isPrimitiveProcedure = function (x) {
        return typeof (x) === 'function';
    };







    // A Closure is a function that takes on more responsibilities: it is
    // responsible for popping off stack space before it finishes, and it
    // is also explicitly responsible for continuing the computation by 
    // popping off the control stack and doing the jump.  Because of this,
    // closures can do pretty much anything to the machine.

    // A closure consists of its free variables as well as a label
    // into its text segment.
    var Closure = function (label, arity, closedVals, displayName) {
        this.label = label;              // (MACHINE -> void)
        this.racketArity = arity;              // number
        this.closedVals = closedVals;    // arrayof number
        this.displayName = displayName;  // string
    };


    // Finalize the return from a closure.  This is a helper function
    // for those who implement Closures by hand.
    //
    // If used in the body of a Closure, it must be in tail
    // position.  This finishes the closure call, and does the following:
    //
    //     * Clears out the existing arguments off the stack frame
    //     * Sets up the return value
    //     * Jumps either to the single-value return point, or the multiple-value
    //       return point.
    //
    // I'd personally love for this to be a macro and avoid the
    // extra function call here.
    var finalizeClosureCall = function (MACHINE) {
        MACHINE.callsBeforeTrampoline--;
        var i, returnArgs = [].slice.call(arguments, 1);

        // clear out stack space
        // TODO: replace with a splice.
        MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;

        if (returnArgs.length === 1) {
            MACHINE.val = returnArgs[0];
            return MACHINE.control.pop().label(MACHINE);
        } else if (returnArgs.length === 0) {
            MACHINE.argcount = 0;
            return MACHINE.control.pop().label.multipleValueReturn(MACHINE);
        } else {
            MACHINE.argcount = returnArgs.length;
            MACHINE.val = returnArgs.shift();
            // TODO: replace with a splice.
            for (i = 0; i < MACHINE.argcount - 1; i++) {
                MACHINE.env.push(returnArgs.pop());
            }
            return MACHINE.control.pop().label.multipleValueReturn(MACHINE);
        }
    };


    var isClosure = function (x) {
        return x instanceof Closure;
    };


    var isProcedure = function (x) {
        return (typeof (x) === 'function' ||
                x instanceof Closure);
    };








  
    var coersePrimitiveToJavaScript = function (v, MACHINE) {
        return function (succ, fail) {
            try {
                succ = succ || function () {};
                fail = fail || function () {};

                var oldArgcount = MACHINE.argcount, i;
                MACHINE.argcount = arguments.length - 2;
                for (i = 0; i < arguments.length - 2; i++) {
                    MACHINE.env.push(arguments[arguments.length - 1 - i]);
                }

                if (!(baselib.arity.isArityMatching(v.racketArity, MACHINE.argcount))) {
                    fail(new Error(baselib.format.format("arity mismatch: expected ~s arguments, but received ~s",
                                                         [v.racketArity, MACHINE.argcount])));
                    return;
                }

                var result = v(MACHINE);
                MACHINE.argcount = oldArgcount;
                for (i = 0; i < arguments.length - 2; i++) { 
                    MACHINE.env.pop();
                }
                succ(result);
            } catch (e) {
                fail(e);
            }
        };
    };

    var coerseClosureToJavaScript = function (v, MACHINE) {
        var f = function (succ, fail) {
            succ = succ || function () {};
            fail = fail || function () {};

            if (!(baselib.arity.isArityMatching(v.racketArity, arguments.length - 2))) {
                fail(new Error(
                    baselib.format.format(
                        "arity mismatch: expected ~s argument(s) but received ~s",
                        [v.racketArity, arguments.length - 2])));
                return;
            }

            var oldVal = MACHINE.val;
            var oldArgcount = MACHINE.argcount;
            var oldProc = MACHINE.proc;

            var oldErrorHandler = MACHINE.params['currentErrorHandler'];
            var afterGoodInvoke = function (MACHINE) { 
                plt.runtime.PAUSE(
                    function (restart) {
                        MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                        var returnValue = MACHINE.val;
                        MACHINE.val = oldVal;
                        MACHINE.argcount = oldArgcount;
                        MACHINE.proc = oldProc;
                        succ(returnValue);
                    });
            };
            afterGoodInvoke.multipleValueReturn = function (MACHINE) {
                plt.runtime.PAUSE(
                    function (restart) {
                        MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                        var returnValues = [MACHINE.val], i;
                        for (i = 0; i < MACHINE.argcount - 1; i++) {
                            returnValues.push(MACHINE.env.pop());
                        }
                        MACHINE.val = oldVal;
                        MACHINE.argcount = oldArgcount;
                        MACHINE.proc = oldProc;
                        succ.apply(null, returnValues);
                    });
            };

            MACHINE.control.push(
                new baselib.frames.CallFrame(afterGoodInvoke, null));
            MACHINE.argcount = arguments.length - 2;
            var i;
            for (i = 0; i < arguments.length - 2; i++) {
                MACHINE.env.push(arguments[arguments.length - 1 - i]);
            }
            MACHINE.proc = v;
            MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                MACHINE.val = oldVal;
                MACHINE.argcount = oldArgcount;
                MACHINE.proc = oldProc;
                fail(e);
            };
            MACHINE.trampoline(v.label);
        };
        return f;
    };

    // coerseToJavaScript: racket function -> JavaScript function
    // Given a closure or primitive, produces an
    // asynchronous JavaScript function.
    // The function will run on the provided MACHINE.
    //
    // It assumes that it must begin its own trampoline.
    var asJavaScriptFunction = function (v, MACHINE) {
        MACHINE = MACHINE || plt.runtime.currentMachine;
        if (isPrimitiveProcedure(v)) {
            return coersePrimitiveToJavaScript(v, MACHINE);
        } else if (isClosure(v)) {
            return coerseClosureToJavaScript(v, MACHINE);
        } else {
            baselib.exceptions.raise(MACHINE,
                                         baselib.exceptions.makeExnFail(
                                             baselib.format.format(
                                                 "Not a procedure: ~e",
                                                 v)));
        }
    };


    // internallCallDuringPause: call a Racket procedure and get its results.
    // The use assumes the machine is in a running-but-paused state.
    var internalCallDuringPause = function (MACHINE, proc, success, fail) {
        var i;
        var oldArgcount, oldVal, oldProc, oldErrorHandler;
        if (! baselib.arity.isArityMatching(proc.racketArity, arguments.length - 4)) {
            return fail(baselib.exceptions.makeExnFailContractArity("arity mismatch"));
        }

        if (isPrimitiveProcedure(proc)) {
            oldArgcount = MACHINE.argcount;
            MACHINE.argcount = arguments.length - 4;
            for (i = 0; i < arguments.length - 4; i++) {
                MACHINE.env.push(arguments[arguments.length - 1 - i]);
            }
            var result = proc(MACHINE);
            for (i = 0; i < arguments.length - 4; i++) {
                MACHINE.env.pop();
            }
            success(result);
        } else if (isClosure(proc)) {
            oldVal = MACHINE.val;
            oldArgcount = MACHINE.argcount;
            oldProc = MACHINE.proc;

            oldErrorHandler = MACHINE.params['currentErrorHandler'];
            var afterGoodInvoke = function (MACHINE) { 
                plt.runtime.PAUSE(function (restart) {
                    MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                    var returnValue = MACHINE.val;
                    MACHINE.val = oldVal;
                    MACHINE.argcount = oldArgcount;
                    MACHINE.proc = oldProc;
                    success(returnValue);
                });
            };
            afterGoodInvoke.multipleValueReturn = function (MACHINE) {
                plt.runtime.PAUSE(function (restart) {
                    MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                    var returnValues = [MACHINE.val];
                    var i;
                    for (i = 0; i < MACHINE.argcount - 1; i++) {
                        returnValues.push(MACHINE.env.pop());
                    }
                    MACHINE.val = oldVal;
                    MACHINE.argcount = oldArgcount;
                    MACHINE.proc = oldProc;
                    success.apply(null, returnValues);
                });
            };

            MACHINE.control.push(
                new baselib.frames.CallFrame(afterGoodInvoke, null));
            MACHINE.argcount = arguments.length - 4;
            for (i = 0; i < arguments.length - 4; i++) {
                MACHINE.env.push(arguments[arguments.length - 1 - i]);
            }
            MACHINE.proc = proc;
            MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                MACHINE.val = oldVal;
                MACHINE.argcount = oldArgcount;
                MACHINE.proc = oldProc;
                fail(e);
            };
            MACHINE.trampoline(proc.label);
        } else {
            fail(baselib.exceptions.makeExnFail(
                baselib.format.format(
                    "Not a procedure: ~e",
                    proc)));
        }
    };











    var makePrimitiveProcedure = function (name, arity, f) {
        f.racketArity = arity;
        f.displayName = name;
        return f;
    };

    var makeClosure = function (name, arity, f, closureArgs) {
        if (! closureArgs) { closureArgs = []; }
        return new Closure(f,
                           arity,
                           closureArgs,
                           name);
    };







    var renameProcedure = function (f, name) {
        if (isPrimitiveProcedure(f)) {
            return makePrimitiveProcedure(
                name,
                f.racketArity,
                function (MACHINE) {
                    return f(MACHINE);
                });
        } else {
            return makeClosure(name, f.racketArity, f.label, f.closedVals);
        }
    };





    //////////////////////////////////////////////////////////////////////
    exports.Closure = Closure;
    exports.internalCallDuringPause = internalCallDuringPause;
    exports.finalizeClosureCall = finalizeClosureCall;

    exports.makePrimitiveProcedure = makePrimitiveProcedure;
    exports.makeClosure = makeClosure;

    exports.isPrimitiveProcedure = isPrimitiveProcedure;
    exports.isClosure = isClosure;

    exports.isProcedure = isProcedure;


    exports.renameProcedure = renameProcedure;


    exports.asJavaScriptFunction = asJavaScriptFunction;

}(this.plt.baselib, this.plt));/*jslint sub: true, vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*global plt*/

// Modules
(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.modules = exports;


    var ModuleRecord = function (name, label) {
        this.name = name;
        this.label = label;
        this.isInvoked = false;
        this.prefix = false;
        this.namespace = {};

        // JavaScript-implemented code will assign privateExports
        // with all of the exported identifiers.
        this.privateExports = {};
    };

    // Returns access to the names defined in the module.
    ModuleRecord.prototype.getNamespace = function () {
        return this.namespace;
    };

    ModuleRecord.prototype.finalizeModuleInvokation = function () {
        var i, len = this.prefix.names.length;
        for (i = 0; i < len; i++) {
            this.namespace[this.prefix.names[i]] = this.prefix[i];
        }
    };
    

    // External invokation of a module.
    ModuleRecord.prototype.invoke = function (MACHINE, succ, fail) {
        this._invoke(false, MACHINE, succ, fail);
    };

    // Internal invokation of a module.
    ModuleRecord.prototype.internalInvoke = function (MACHINE, succ, fail) {
        this._invoke(true, MACHINE, succ, fail);
    };

    // Private: general invokation of a module
    ModuleRecord.prototype._invoke = function (isInternal, MACHINE, succ, fail) {
        var that = this;
        MACHINE = MACHINE || plt.runtime.currentMachine;
        succ = succ || function () {};
        fail = fail || function () {};

        var oldErrorHandler = MACHINE.params['currentErrorHandler'];
        var afterGoodInvoke = function (MACHINE) { 
            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
            if (isInternal) { succ(); }
            else {
                throw new plt.runtime.HaltError(succ)
            }
        };

        if (this.isInvoked) {
            succ();
        } else {
            MACHINE.params['currentErrorHandler'] = function (MACHINE, anError) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                fail(MACHINE, anError);
            };
            MACHINE.control.push(new plt.baselib.frames.CallFrame(afterGoodInvoke, null));
            if (isInternal) {
                throw that.label;
            } else {
                MACHINE.trampoline(that.label);
            }
        }
    };



    exports.ModuleRecord = ModuleRecord;


}(this.plt.baselib, this.plt));/*jslint browser: true, unparam: true, vars: true, white: true, maxerr: 50, indent: 4 */

// Continuation marks
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.contmarks = exports;


    var ContinuationMarkSet = function(dict) {
        this.dict = dict;
    };

    ContinuationMarkSet.prototype.toDomNode = function(cache) {
        var dom = document.createElement("span");
        dom.appendChild(document.createTextNode('#<continuation-mark-set>'));
        return dom;
    };

    ContinuationMarkSet.prototype.toWrittenString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.toDisplayedString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.ref = function(key) {
        if ( this.dict.containsKey(key) ) {
	    return this.dict.get(key);
        }
        return [];
    };




    // A continuation prompt tag labels a prompt frame.
    var ContinuationPromptTag = function(name) {
	this.name = name;
    };






    exports.ContinuationMarkSet = ContinuationMarkSet;
    exports.ContinuationPromptTag = ContinuationPromptTag;

}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.arity = exports;



    var ArityAtLeast = baselib.structs.makeStructureType(
        'arity-at-least', false, 1, 0, false, false);


    // An arity is either a primitive number, an ArityAtLeast instance,
    // or a list of either primitive numbers or ArityAtLeast instances.



    var isArityAtLeast = ArityAtLeast.predicate;
    var arityAtLeastValue = function(x) { 
        var val = ArityAtLeast.accessor(x, 0);
        return val;
    };


    ArityAtLeast.type.prototype.toString = function() {
        return '#<arity-at-least ' + arityAtLeastValue(this) + '>';
    };



    // isArityMatching: arity natural -> boolean
    // Produces true if n satisfies the arity.
    var isArityMatching = function(arity, n) {
	if (typeof(arity) === 'number') {
	    return arity === n;
	} else if (isArityAtLeast(arity)) {
	    return n >= arityAtLeastValue(arity);
	} else {
	    while (arity !== baselib.lists.EMPTY) {
		if (typeof(arity.first) === 'number') {
		    if (arity.first === n) { return true; }
		} else if (isArityAtLeast(arity)) {
		    if (n >= arityAtLeastValue(arity.first)) { return true; }
		}
		arity = arity.rest;
	    }
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////

    exports.ArityAtLeast = ArityAtLeast;
    exports.makeArityAtLeast = ArityAtLeast.constructor;
    exports.isArityAtLeast = isArityAtLeast;
    exports.isArityMatching = isArityMatching;
    exports.arityAtLeastValue = arityAtLeastValue;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Structure types

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.inspectors = exports;


    var Inspector = function () {
    };
    var DEFAULT_INSPECTOR = new Inspector();

    Inspector.prototype.toString = function () {
        return "#<inspector>";
    };

    var isInspector = baselib.makeClassPredicate(Inspector);



    exports.Inspector = Inspector;
    exports.DEFAULT_INSPECTOR = DEFAULT_INSPECTOR;

    exports.isInspector = isInspector;


}(this.plt.baselib));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Exceptions

(function(baselib) {
    'use strict';
    var exceptions = {};
    baselib.exceptions = exceptions;



    // Error type exports
    var InternalError = function(val, contMarks) {
        this.val = val;
        this.contMarks = contMarks || false;
    };


    var SchemeError = function(val) {
        this.val = val;
    };


    var IncompleteExn = function(constructor, msg, otherArgs) {
        this.constructor = constructor;
        this.msg = msg;
        this.otherArgs = otherArgs;
    };


    // (define-struct exn (message continuation-mark-set))
    var Exn = baselib.structs.makeStructureType(
        'exn', false, 2, 0, false, false);


    // (define-struct (exn:break exn) (continuation))
    var ExnBreak = baselib.structs.makeStructureType(
        'exn:break', Exn, 1, 0, false, false);


    var ExnFail = baselib.structs.makeStructureType(
        'exn:fail', Exn, 0, 0, false, false);

    var ExnFailContract = baselib.structs.makeStructureType(
        'exn:fail:contract', ExnFail, 0, 0, false, false);

    var ExnFailContractArity = baselib.structs.makeStructureType(
        'exn:fail:contract:arity', ExnFailContract, 0, 0, false, false);

    var ExnFailContractVariable = baselib.structs.makeStructureType(
        'exn:fail:contract:variable', ExnFailContract, 1, 0, false, false);

    var ExnFailContractDivisionByZero = baselib.structs.makeStructureType(
        'exn:fail:contract:divide-by-zero', ExnFailContract, 0, 0, false, false);





    var exceptionHandlerKey = new baselib.symbols.Symbol("exnh");





    //////////////////////////////////////////////////////////////////////

    // Raise error to the toplevel.

    // If the error is of an exception type, make sure e.message holds the string
    // value to allow integration with systems that don't recognize Racket error 
    // structures.
    var raise = function(MACHINE, e) { 
        if (Exn.predicate(e)) {
            e.message = Exn.accessor(e, 0);
        }

        if (typeof(window.console) !== 'undefined' &&
            typeof(window.console['log']) === 'function') {
            window.console.log(MACHINE);
            if (e['stack']) { window.console.log(e['stack']); }
            else { window.console.log(e); }
        } 
        throw e; 
    };




    var raiseUnboundToplevelError = function(MACHINE, name) {
        raise(MACHINE, 
              new Error(
                  baselib.format.format(
                      "Not bound: ~a",
                      [name]))); 
    };


    var raiseArgumentTypeError = function(MACHINE, 
                                          callerName,
                                          expectedTypeName,
                                          argumentOffset,
                                          actualValue) {
        if (argumentOffset !== undefined) {
            raise(MACHINE,
                  new Error(
                      baselib.format.format(
                          "~a: expected ~a as argument ~e but received ~e",
                          [callerName,
                           expectedTypeName,
                           (argumentOffset + 1),
                           actualValue])));
        } else {
            raise(MACHINE,
                  new Error(
                      baselib.format.format(
                          "~a: expected ~a but received ~e",
                          [callerName,
                           expectedTypeName,
                           actualValue])));
        }
    };

    var raiseContextExpectedValuesError = function(MACHINE, expected) {
        raise(MACHINE, 
              new Error(baselib.format.format(
                  "expected ~e values, received ~e values",
                  [expected, MACHINE.argcount])));
    };

    var raiseArityMismatchError = function(MACHINE, proc, expected, received) {
        raise(MACHINE, 
              new Error(baselib.format.format(
                  "~a: expected ~e value(s), received ~e value(s)",
                  [proc.displayName,
                   expected,
                   received])));
    };

    var raiseOperatorApplicationError = function(MACHINE, operator) {
        raise(MACHINE, 
              new Error(
                  baselib.format.format(
                      "not a procedure: ~e",
                      [operator])));
    };

    var raiseOperatorIsNotClosure = function(MACHINE, operator) {
        raise(MACHINE,
              new Error(
                  baselib.format.format(
                      "not a closure: ~e",
                      [operator])));
    };

    var raiseOperatorIsNotPrimitiveProcedure = function(MACHINE, operator) {
        raise(MACHINE,
              new Error(
                  baselib.format.format(
                      "not a primitive procedure: ~e",
                      [operator])));
    };


    var raiseUnimplementedPrimitiveError = function(MACHINE, name) {
        raise(MACHINE, 
              new Error("unimplemented kernel procedure: " + name));
    };









    //////////////////////////////////////////////////////////////////////
    // Exports

    exceptions.InternalError = InternalError;
    exceptions.internalError = function(v, contMarks) { return new InternalError(v, contMarks); };
    exceptions.isInternalError = function(x) { return x instanceof InternalError; };


    exceptions.SchemeError = SchemeError;
    exceptions.schemeError = function(v) { return new SchemeError(v); };
    exceptions.isSchemeError = function(v) { return v instanceof SchemeError; };


    exceptions.IncompleteExn = IncompleteExn;
    exceptions.makeIncompleteExn = function(constructor, msg, args) { return new IncompleteExn(constructor, msg, args); };
    exceptions.isIncompleteExn = function(x) { return x instanceof IncompleteExn; };


    exceptions.Exn = Exn;
    exceptions.makeExn = Exn.constructor;
    exceptions.isExn = Exn.predicate;
    exceptions.exnMessage = function(exn) { return Exn.accessor(exn, 0); };
    exceptions.exnContMarks = function(exn) { return Exn.accessor(exn, 1); };
    exceptions.exnSetContMarks = function(exn, v) { Exn.mutator(exn, 1, v); };

    exceptions.ExnBreak = ExnBreak;
    exceptions.makeExnBreak = ExnBreak.constructor;
    exceptions.isExnBreak = ExnBreak.predicate;
    exceptions.exnBreakContinuation = 
        function(exn) { return ExnBreak.accessor(exn, 0); };

    exceptions.ExnFail = ExnFail;
    exceptions.makeExnFail = ExnFail.constructor;
    exceptions.isExnFail = ExnFail.predicate;

    exceptions.ExnFailContract = ExnFailContract;
    exceptions.makeExnFailContract = ExnFailContract.constructor;
    exceptions.isExnFailContract = ExnFailContract.predicate;

    exceptions.ExnFailContractArity = ExnFailContractArity;
    exceptions.makeExnFailContractArity = ExnFailContractArity.constructor;
    exceptions.isExnFailContractArity = ExnFailContractArity.predicate;

    exceptions.ExnFailContractVariable = ExnFailContractVariable;
    exceptions.makeExnFailContractVariable = ExnFailContractVariable.constructor;
    exceptions.isExnFailContractVariable = ExnFailContractVariable.predicate;
    exceptions.exnFailContractVariableId = 
        function(exn) { return ExnFailContractVariable.accessor(exn, 0); };


    exceptions.ExnFailContractDivisionByZero = ExnFailContractDivisionByZero;
    exceptions.makeExnFailContractDivisionByZero = 
        ExnFailContractDivisionByZero.constructor;
    exceptions.isExnFailContractDivisionByZero = ExnFailContractDivisionByZero.predicate;


    exceptions.exceptionHandlerKey = exceptionHandlerKey;




    exceptions.raise = raise;
    exceptions.raiseUnboundToplevelError = raiseUnboundToplevelError;
    exceptions.raiseArgumentTypeError = raiseArgumentTypeError;
    exceptions.raiseContextExpectedValuesError = raiseContextExpectedValuesError;
    exceptions.raiseArityMismatchError = raiseArityMismatchError;
    exceptions.raiseOperatorApplicationError = raiseOperatorApplicationError;
    exceptions.raiseOperatorIsNotClosure = raiseOperatorIsNotClosure;
    exceptions.raiseOperatorIsNotPrimitiveProcedure = raiseOperatorIsNotPrimitiveProcedure;
    exceptions.raiseUnimplementedPrimitiveError = raiseUnimplementedPrimitiveError;


}(this.plt.baselib));/*jslint vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.readergraph = exports;


    var readerGraph = function (x, objectHash, n) {
        var i;
        if (typeof (x) === 'object' && objectHash.containsKey(x)) {
            return objectHash.get(x);
        }

        if (baselib.lists.isPair(x)) {
            var consPair = baselib.lists.makePair(x.first, x.rest);
            objectHash.put(x, consPair);
            consPair.first = readerGraph(x.first, objectHash, n + 1);
            consPair.rest = readerGraph(x.rest, objectHash, n + 1);
            return consPair;
        }

        if (baselib.vectors.isVector(x)) {
            var len = x.length();
            var aVector = baselib.vectors.makeVector(len, x.elts);
            objectHash.put(x, aVector); 
            for (i = 0; i < len; i++) {
                aVector.elts[i] = readerGraph(aVector.elts[i], objectHash, n + 1);
            }
            return aVector;
        }

        if (baselib.boxes.isBox(x)) {
            var aBox = baselib.boxes.makeBox(x.ref());
            objectHash.put(x, aBox);
            aBox.val = readerGraph(x.ref(), objectHash, n + 1);
            return aBox;
        }

        if (baselib.hashes.isHash(x)) {
            throw new Error("make-reader-graph of hash not implemented yet");
        }

        if (baselib.structs.isStruct(x)) {
            var aStruct = baselib.clone(x);
            objectHash.put(x, aStruct);
            for (i = 0; i < x._fields.length; i++) {
                x._fields[i] = readerGraph(x._fields[i], objectHash, n + 1);
            }
            return aStruct;
        }

        if (baselib.placeholders.isPlaceholder(x)) {
            return readerGraph(x.ref(), objectHash, n + 1);
        }

        return x;
    };

    exports.readerGraph = readerGraph;

}(this.plt.baselib));/*jslint vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Helper functions for argument checking.

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.check = exports;

    var EMPTY = baselib.lists.EMPTY;
    var isPair = baselib.lists.isPair;
    var makeLowLevelEqHash = baselib.hashes.makeLowLevelEqHash;


    //////////////////////////////////////////////////////////////////////

    // testArgument: (X -> boolean) X number string string -> boolean
    // Produces true if val is true, and otherwise raises an error.
    var testArgument = function (MACHINE,
                                 expectedTypeName,
                                 predicate,                          
                                 val, 
                                 index, 
                                 callerName) {
        if (predicate(val)) {
            return true;
        } else {
            if (typeof(expectedTypeName) === 'function') { 
                expectedTypeName = expectedTypeName(); 
            }
            baselib.exceptions.raiseArgumentTypeError(MACHINE, 
                                                      callerName,
                                                      expectedTypeName,
                                                      index,
                                                      val);
        }
    };


    var makeCheckArgumentType = function (predicate, predicateName) {
        return function (MACHINE, callerName, position) {
            testArgument(
                MACHINE,
                predicateName,
                predicate,
                MACHINE.env[MACHINE.env.length - 1 - position],
                position,
                callerName);
            return MACHINE.env[MACHINE.env.length - 1 - position];
        };
    };

    var makeCheckParameterizedArgumentType = function (parameterizedPredicate, 
                                                       parameterizedPredicateName) {
        return function (MACHINE, callerName, position) {
            var args = [], i;
            for (i = 3; i < arguments.length; i++) {
                args.push(arguments[i]);
            }
            testArgument(
                MACHINE,
                function () { return parameterizedPredicateName.apply(null, args); },
                function (x) {
                    return parameterizedPredicate.apply(null, [x].concat(args));
                },
                MACHINE.env[MACHINE.env.length - 1 - position],
                position,
                callerName);
            return MACHINE.env[MACHINE.env.length - 1 - position];
        };
    };





    var makeCheckListofArgumentType = function (predicate, predicateName) {
        var listPredicate = function (x) {
            var seen = makeLowLevelEqHash();
            while (true) {
                if (x === EMPTY){
                    return true;
                }

                if (!isPair(x)) {
                    return false;
                }

                if(seen.containsKey(x)) {
                    // raise an error? we've got a cycle!
                    return false;
                }

                if (! predicate(x.first)) {
                    return false;
                }
                
                seen.put(x, true);
                x = x.rest;
            }
        };
        return function (MACHINE, callerName, position) {
            testArgument(
                MACHINE,
                'list of ' + predicateName,
                listPredicate,
                MACHINE.env[MACHINE.env.length - 1 - position],
                position,
                callerName);
            return MACHINE.env[MACHINE.env.length - 1 - position];
        };
    };







    var testArity = function (MACHINE, callerName, observed, minimum, maximum) {
        if (observed < minimum || observed > maximum) {
            baselib.exceptions.raise(
                MACHINE, new Error(callerName + ": expected at least " + minimum
                                   + " arguments "
                                   + " but received " + observed));

        }
    };




    var checkOutputPort = makeCheckArgumentType(
        baselib.ports.isOutputPort,
        'output port');

    var checkSymbol = makeCheckArgumentType(
        baselib.symbols.isSymbol,
        'symbol');

    var checkString = makeCheckArgumentType(
        baselib.strings.isString,
        'string');

    var checkMutableString = makeCheckArgumentType(
        baselib.strings.isMutableString,
        'mutable string');

    var checkChar = makeCheckArgumentType(
        baselib.chars.isChar,
        'character');

    var checkProcedure = makeCheckArgumentType(
        baselib.functions.isProcedure,
        'procedure');

    var checkNumber = makeCheckArgumentType(
        baselib.numbers.isNumber,
        'number');

    var checkReal = makeCheckArgumentType(
        baselib.numbers.isReal,
        'real');

    var checkNatural = makeCheckArgumentType(
        baselib.numbers.isNatural,
        'natural');

    var checkByte = makeCheckArgumentType(
        baselib.numbers.isByte,
        'byte');

    var checkBytes = makeCheckArgumentType(
        baselib.bytes.isBytes,
        'bytes');

    var checkNaturalInRange = makeCheckParameterizedArgumentType(
        function (x, a, b) {
            if (! baselib.numbers.isNatural(x)) { return false; }
            return (baselib.numbers.lessThanOrEqual(a, x) &&
                    baselib.numbers.lessThan(x, b));
        },
        function (a, b) {
            return baselib.format.format('natural between ~a and ~a', [a, b]);
        });

    var checkInteger = makeCheckArgumentType(
        baselib.numbers.isInteger,
        'integer');

    var checkRational = makeCheckArgumentType(
        baselib.numbers.isRational,
        'rational');

    var checkNonNegativeReal = makeCheckArgumentType(
        baselib.numbers.isNonNegativeReal,
        'non-negative real');

    var checkPair = makeCheckArgumentType(
        baselib.lists.isPair,
        'pair');

    var checkList = makeCheckArgumentType(
        baselib.lists.isList,
        'list');

    var checkVector = makeCheckArgumentType(
        baselib.vectors.isVector,
        'vector');

    var checkBoolean = makeCheckArgumentType(
        function (x) { return x === true || x === false; },
        'boolean');

    var checkBox = makeCheckArgumentType(
        baselib.boxes.isBox,
        'box');

    var checkMutableBox = makeCheckArgumentType(
        baselib.boxes.isMutableBox,
        'mutable box');

    var checkInspector = makeCheckArgumentType(
        baselib.inspectors.isInspector,
        'inspector');







    //////////////////////////////////////////////////////////////////////


    exports.testArgument = testArgument;
    exports.testArity = testArity;
    exports.makeCheckArgumentType = makeCheckArgumentType;
    exports.makeCheckParameterizedArgumentType = makeCheckParameterizedArgumentType;
    exports.makeCheckListofArgumentType = makeCheckListofArgumentType;

    exports.checkOutputPort = checkOutputPort;
    exports.checkString = checkString;
    exports.checkMutableString = checkMutableString;
    exports.checkChar = checkChar;
    exports.checkSymbol = checkSymbol;
    exports.checkProcedure = checkProcedure;
    exports.checkNumber = checkNumber;
    exports.checkReal = checkReal;
    exports.checkNonNegativeReal = checkNonNegativeReal;
    exports.checkNatural = checkNatural;
    exports.checkNaturalInRange = checkNaturalInRange;
    exports.checkByte = checkByte;
    exports.checkBytes = checkBytes;
    exports.checkInteger = checkInteger;
    exports.checkRational = checkRational;
    exports.checkPair = checkPair;
    exports.checkList = checkList;
    exports.checkVector = checkVector;
    exports.checkBox = checkBox;
    exports.checkMutableBox = checkMutableBox;
    exports.checkInspector = checkInspector;
    exports.checkByte = checkByte;
    exports.checkBoolean = checkBoolean;



}(this.plt.baselib));
/*jslint unparam: true, sub: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.primitives = exports;


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;
    var isNatural = baselib.numbers.isNatural;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var makeFloat = baselib.numbers.makeFloat;
    var makeComplex = baselib.numbers.makeComplex;
    var makeComplexPolar = baselib.numbers.makeComplexPolar;

    var makeSymbol = baselib.symbols.makeSymbol;

    var makeBox = baselib.boxes.makeBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;

    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;


    // Other helpers
    var withArguments = baselib.withArguments;
    var toDomNode = baselib.format.toDomNode;



    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;

    var testArgument = baselib.check.testArgument;

    var checkOutputPort = baselib.check.checkOutputPort;
    var checkString = baselib.check.checkString;
    var checkMutableString = baselib.check.checkMutableString;
    var checkSymbol = baselib.check.checkSymbol;
    var checkByte = baselib.check.checkByte;
    var checkChar = baselib.check.checkChar;
    var checkProcedure = baselib.check.checkProcedure;
    var checkNumber = baselib.check.checkNumber;
    var checkReal = baselib.check.checkReal;
    var checkNonNegativeReal = baselib.check.checkNonNegativeReal;
    var checkNatural = baselib.check.checkNatural;
    var checkNaturalInRange = baselib.check.checkNaturalInRange;
    var checkInteger = baselib.check.checkInteger;
    var checkRational = baselib.check.checkRational;
    var checkPair = baselib.check.checkPair;
    var checkList = baselib.check.checkList;
    var checkListofChars = baselib.check.makeCheckListofArgumentType(baselib.chars.isChar,
                                                                     'character');
    var checkVector = baselib.check.checkVector;
    var checkBox = baselib.check.checkBox;
    var checkMutableBox = baselib.check.checkMutableBox;
    var checkInspector = baselib.check.checkInspector;
    //////////////////////////////////////////////////////////////////////











    // Primitives are the set of primitive values.  Not all primitives
    // are coded here; several of them (including call/cc) are injected by
    // the bootstrapping code in compiler/boostrapped-primitives.rkt
    var Primitives = {};

    var installPrimitiveProcedure = function (name, arity, f) {
        Primitives[name] = makePrimitiveProcedure(name, arity, f);
    };

    var installPrimitiveClosure = function (name, arity, f) {
        Primitives[name] = makeClosure(name, arity, f, []);
    };


    var installPrimitiveConstant = function (name, v) {
        Primitives[name] = v;
    };



    installPrimitiveConstant('pi', baselib.numbers.pi);
    installPrimitiveConstant('e', baselib.numbers.e);
    installPrimitiveConstant('null', NULL);
    installPrimitiveConstant('true', true);
    installPrimitiveConstant('false', false);


    installPrimitiveProcedure(
        'display',
        makeList(1, 2),
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length - 1];
            var outputPort = MACHINE.params.currentOutputPort;
            if (MACHINE.argcount === 2) {
                outputPort = checkOutputPort(MACHINE, 'display', 1);
            }
            outputPort.writeDomNode(MACHINE, toDomNode(firstArg, 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'write-byte', 
        makeList(1, 2),
        function (MACHINE) {
            var firstArg = checkByte(MACHINE, 'write-byte', 0);
            var outputPort = MACHINE.params.currentOutputPort;
            if (MACHINE.argcount === 2) {
                outputPort = checkOutputPort(MACHINE, 'display', 1);
            }
            outputPort.writeDomNode(MACHINE, toDomNode(String.fromCharCode(firstArg), 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'newline', makeList(0, 1),
        function (MACHINE) {
            var outputPort = MACHINE.params.currentOutputPort;
            if (MACHINE.argcount === 1) { 
                outputPort = checkOutputPort(MACHINE, 'newline', 1);
            }
            outputPort.writeDomNode(MACHINE, toDomNode("\n", 'display'));
            return VOID;
        });

    installPrimitiveProcedure(
        'displayln',
        makeList(1, 2),
        function (MACHINE){
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            var outputPort = MACHINE.params.currentOutputPort;
            if (MACHINE.argcount === 2) {
                outputPort = checkOutputPort(MACHINE, 'displayln', 1);
            }
            outputPort.writeDomNode(MACHINE, toDomNode(firstArg, 'display'));
            outputPort.writeDomNode(MACHINE, toDomNode("\n", 'display'));
            return VOID;
        });



    installPrimitiveProcedure(
        'format',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var args = [], i, formatString;
            formatString = checkString(MACHINE, 'format', 0).toString();
            for(i = 1; i < MACHINE.argcount; i++) {
                args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
            }
            return baselib.format.format(formatString, args, 'format');
        });


    installPrimitiveProcedure(
        'printf',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var args = [], i, formatString, result, outputPort;
            formatString = checkString(MACHINE, 'printf', 0).toString();
            for(i = 1; i < MACHINE.argcount; i++) {
                args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort = MACHINE.params.currentOutputPort;            
            outputPort.writeDomNode(MACHINE, toDomNode(result, 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'fprintf',
        baselib.arity.makeArityAtLeast(2),
        function (MACHINE) {
            var args = [], i, formatString, outputPort, result;
            outputPort = checkOutputPort(MACHINE, 'fprintf', 0);
            formatString = checkString(MACHINE, 'fprintf', 1).toString();
            for(i = 2; i < MACHINE.argcount; i++) {
                args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort.writeDomNode(MACHINE, toDomNode(result, 'display'));
            return VOID;
        });






    installPrimitiveProcedure(
        'current-print',
        makeList(0, 1),
        function (MACHINE) {
            if (MACHINE.argcount === 1) {
                MACHINE.params['currentPrint'] =                 
                    checkProcedure(MACHINE, 'current-print', 0);
                return VOID;
            } else {
                return MACHINE.params['currentPrint'];
            }
        });


    installPrimitiveProcedure(
        'current-output-port',
        makeList(0, 1),
        function (MACHINE) {
            if (MACHINE.argcount === 1) {
                MACHINE.params['currentOutputPort'] = 
                    checkOutputPort(MACHINE, 'current-output-port', 0);
                return VOID;
            } else {
                return MACHINE.params['currentOutputPort'];
            }
        });





    installPrimitiveProcedure(
        '=',
        baselib.arity.makeArityAtLeast(2),
        function (MACHINE) {
	    var i;
            var firstArg = checkNumber(MACHINE, '=', 0), secondArg;
            for (i = 1; i < MACHINE.argcount; i++) {
                secondArg = checkNumber(MACHINE, '=', i);
                if (! (baselib.numbers.equals(firstArg, secondArg))) {
                    return false; 
                }
            }
            return true;
        });


    
    installPrimitiveProcedure(
        '=~',
        3,
        function (MACHINE) {
            var x = checkReal(MACHINE, '=~', 0);
            var y = checkReal(MACHINE, '=~', 1);
            var range = checkNonNegativeReal(MACHINE, '=~', 2);
            return baselib.numbers.lessThanOrEqual(
                baselib.numbers.abs(baselib.numbers.subtract(x, y)), 
                range);
        });



    var makeChainingBinop = function (predicate, name) {
        return function (MACHINE) {
            var firstArg = checkNumber(MACHINE, name, 0), secondArg, i;
            for (i = 1; i < MACHINE.argcount; i++) {
                secondArg = checkNumber(MACHINE, name, i);
                if (! (predicate(firstArg, secondArg))) {
                    return false; 
                }
                firstArg = secondArg;
            }
            return true;
        };
    };

    installPrimitiveProcedure(
        '<',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThan, '<'));


    installPrimitiveProcedure(
        '>',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThan, '>'));


    installPrimitiveProcedure(
        '<=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThanOrEqual, '<='));


    installPrimitiveProcedure(
        '>=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThanOrEqual, '>='));
    

    installPrimitiveProcedure(
        '+',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            var result = 0;
            var i = 0;
            for (i = 0; i < MACHINE.argcount; i++) {
                result = baselib.numbers.add(
                    result, 
                    checkNumber(MACHINE, '+', i));
            }
            return result;
        });
    

    installPrimitiveProcedure(
        '*',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            var result = 1;
            var i = 0;
            for (i=0; i < MACHINE.argcount; i++) {
                result = baselib.numbers.multiply(
                    result, 
                    checkNumber(MACHINE, '*', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        '-',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            if (MACHINE.argcount === 1) { 
                return baselib.numbers.subtract(
                    0, 
                    checkNumber(MACHINE, '-', 0));
            }
            var result = checkNumber(MACHINE, '-', 0), i;
            for (i = 1; i < MACHINE.argcount; i++) {
                result = baselib.numbers.subtract(
                    result, 
                    checkNumber(MACHINE, '-', i));
            }
            return result;
        });
    
    installPrimitiveProcedure(
        '/',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var result = checkNumber(MACHINE, '/', 0), i;
            for (i = 1; i < MACHINE.argcount; i++) {
                result = baselib.numbers.divide(
                    result,
                    checkNumber(MACHINE, '/', i));
            }
            return result;
        });
    

    installPrimitiveProcedure(
        'add1',
        1,
        function (MACHINE) {
            var firstArg = checkNumber(MACHINE, 'add1', 0);
            return baselib.numbers.add(firstArg, 1);
        });


    installPrimitiveProcedure(
        'sub1',
        1,
        function (MACHINE) {
            var firstArg = checkNumber(MACHINE, 'sub1', 0);
            return baselib.numbers.subtract(firstArg, 1);
        });


    installPrimitiveProcedure(
        'zero?',
        1,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            return baselib.numbers.equals(firstArg, 0);
        });


    installPrimitiveProcedure(
        'cons',
        2,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            return makePair(firstArg, secondArg);
        });


    installPrimitiveProcedure(
        'list',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            var result = NULL, i;
            for (i = 0; i < MACHINE.argcount; i++) {
                result = makePair(MACHINE.env[MACHINE.env.length - (MACHINE.argcount - i)],
                                  result);
            }
            return result;
        });

    installPrimitiveProcedure(
        'list*',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var result = checkList(MACHINE, 'list*', MACHINE.argcount - 1), i;
            for (i = MACHINE.argcount - 2; i >= 0; i--) {
                result = makePair(MACHINE.env[MACHINE.env.length - 1 - i],
                                  result);
            }
            return result;
        });


    installPrimitiveProcedure(
        'list-ref',
        2,
        function (MACHINE) {
            var lst = checkList(MACHINE, 'list-ref', 0);
            var index = checkNaturalInRange(MACHINE, 'list-ref', 1,
                                            0, baselib.lists.length(lst));
            return baselib.lists.listRef(lst, baselib.numbers.toFixnum(index));
        });




    installPrimitiveProcedure(
        'car',
        1,
        function (MACHINE) {
            var firstArg = checkPair(MACHINE, 'car', 0);
            return firstArg.first;
        });

    installPrimitiveProcedure(
        'cdr',
        1,
        function (MACHINE) {
            var firstArg = checkPair(MACHINE, 'cdr', 0);
            return firstArg.rest;
        });

    installPrimitiveProcedure(
        'pair?',
        1,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            return isPair(firstArg);
        });


    installPrimitiveProcedure(
        'list?',
        1,
        function (MACHINE) {
            return isList(MACHINE.env[MACHINE.env.length -1]);
        });


    installPrimitiveProcedure(
        'set-car!',
        2,
        function (MACHINE) {
            var firstArg = checkPair(MACHINE, 'set-car!', 0);
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            firstArg.first = secondArg;
            return VOID;
        });


    installPrimitiveProcedure(
        'set-cdr!',
        2,
        function (MACHINE) {
            var firstArg = checkPair(MACHINE, 'set-car!', 0);
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            firstArg.rest = secondArg;
            return VOID;
        });

    
    installPrimitiveProcedure(
        'not',
        1,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            return (firstArg === false);
        });


    installPrimitiveProcedure(
        'null?',
        1,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            return firstArg === NULL;
        });


    installPrimitiveProcedure(
        'vector',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            var i;
            var result = [];
            for (i = 0; i < MACHINE.argcount; i++) {
                result.push(MACHINE.env[MACHINE.env.length-1-i]);
            }
            var newVector = makeVector.apply(null, result);
            return newVector;
        });


    installPrimitiveProcedure(
        'make-vector',
        makeList(1, 2),
        function (MACHINE) {
            var value = 0;
            var length = baselib.numbers.toFixnum(
                checkNatural(MACHINE, 'make-vector', 0));
            if (MACHINE.argcount === 2) {
                value = MACHINE.env[MACHINE.env.length - 2];
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return makeVector.apply(null, arr);
        });
    

    installPrimitiveProcedure(
        'vector->list',
        1,
        function (MACHINE) {
            var elts = checkVector(MACHINE, 'vector->list', 0).elts;
            var i;
            var result = NULL;
            for (i = 0; i < elts.length; i++) {
                result = makePair(elts[elts.length - 1 - i], result);
            }
            return result;
        });

    
    installPrimitiveProcedure(
        'list->vector',
        1,
        function (MACHINE) {
            var firstArg = checkList(MACHINE, 'list->vector', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first);
                firstArg = firstArg.rest;
            }
            return makeVector.apply(null, result);
        });


    installPrimitiveProcedure(
        'vector-ref',
        2,
        function (MACHINE) {
            var elts = checkVector(MACHINE, 'vector-ref', 0).elts;
            var index = MACHINE.env[MACHINE.env.length-2];
            return elts[index];
        });


    installPrimitiveProcedure(
        'vector-set!',
        3,
        function (MACHINE) {
            var elts = checkVector(MACHINE, 'vector-set!', 0).elts;
            // FIXME: check out-of-bounds vector
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(MACHINE, 'vector-set!', 1,
                                    0, elts.length));
            var val = MACHINE.env[MACHINE.env.length - 1 - 2];
            elts[index] = val;
            return VOID;
        });


    installPrimitiveProcedure(
        'vector-length',
        1,
        function (MACHINE) {
            return checkVector(MACHINE, 'vector-length', 0).elts.length;
        });



    installPrimitiveProcedure(
        'make-string',
        makeList(1, 2),
        function (MACHINE) {
            var value = String.fromCharCode(0);
            var length = baselib.numbers.toFixnum(
                checkNatural(MACHINE, 'make-string', 0));
            if (MACHINE.argcount === 2) {
                value = checkChar(MACHINE, 'make-string', 1).val;
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return baselib.strings.makeMutableString(arr);
        });

    installPrimitiveProcedure(
        'substring',
        makeList(2, 3),
        function(MACHINE) {
            var str = String(checkString(MACHINE, 'substring', 0));
            var start = baselib.numbers.toFixnum(checkNatural(MACHINE, 'substring', 1));
            var end = str.length;
            if (MACHINE.argcount === 3) {
                end = baselib.numbers.toFixnum(checkNatural(MACHINE, 'substring', 2));
            }
            return str.substring(start, end);
        });


    installPrimitiveProcedure(
        'list->string',
        1,
        function (MACHINE) {
            var firstArg = checkListofChars(MACHINE, 'list->string', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first.val);
                firstArg = firstArg.rest;
            }
            return result.join('');
        });


    installPrimitiveProcedure(
        'string',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            var i;
            var chars = [];
            for (i = 0; i < MACHINE.argcount; i++) {
                chars.push(checkChar(MACHINE, 'string', i).val);
            };
            return chars.join('');
        });


    installPrimitiveProcedure(
        'string->list',
        1,
        function (MACHINE) {
            var str = checkString(MACHINE, 'string->list', 0).toString();
            var i;
            var result = NULL;
            for (i = str.length - 1; i >= 0; i--) {
                result = makePair(baselib.chars.makeChar(str[i]), result);
            }
            return result;
        });



    installPrimitiveProcedure(
        'string-set!',
        3,
        function (MACHINE) {
            var str = checkMutableString(MACHINE, 'string-set!', 0);
            var k = checkNatural(MACHINE, 'string-set!', 1);
            var ch = checkChar(MACHINE, 'string-set!', 2);
	    str.set(baselib.numbers.toFixnum(k), ch.val);
            return VOID;
        });





    installPrimitiveProcedure(
        'symbol?',
        1,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            return isSymbol(firstArg);
        });

    installPrimitiveProcedure(
        'symbol->string',
        1,
        function (MACHINE) {
            var firstArg = checkSymbol(MACHINE, 'symbol->string', 0);
            return firstArg.toString();
        });


    installPrimitiveProcedure(
        'string=?',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var s = checkString(MACHINE, 'string=?', 0).toString();
	    var i;
            for (i = 1; i < MACHINE.argcount; i++) {
                if (checkString(MACHINE, 'string=?', i).toString() !== s) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-append',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            var buffer = [];
            var i;
            for (i = 0; i < MACHINE.argcount; i++) {
                buffer.push(checkString(MACHINE, 'string-append', i).toString());
            }
            return buffer.join('');
        });

    installPrimitiveProcedure(
        'string-length',
        1,
        function (MACHINE) {
            var firstArg = checkString(MACHINE, 'string-length', 0).toString();
            return firstArg.length;
        });


    installPrimitiveProcedure(
        'string-ref',
        2,
        function (MACHINE) {
            var firstArg = checkString(MACHINE, 'string-ref', 0).toString();
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(MACHINE, 'string-ref', 1,
                                    0, firstArg.length));
            return baselib.chars.makeChar(firstArg[index]);
        });



    installPrimitiveProcedure(
        'string?',
        1,
        function (MACHINE) {
            return isString(MACHINE.env[MACHINE.env.length - 1]);
        });


    installPrimitiveProcedure(
        'number->string',
        1,
        function (MACHINE) {
            return checkNumber(MACHINE, 'number->string', 0).toString();
        });


    installPrimitiveProcedure(
        'string->symbol',
        1,
        function (MACHINE) {
            return makeSymbol(checkString(MACHINE, 'string->symbol', 0).toString());
        });


    installPrimitiveProcedure(
        'string->number',
        1,
        function (MACHINE) {
            return baselib.numbers.fromString(
                checkString(MACHINE, 'string->number', 0).toString());
        });


    installPrimitiveProcedure(
        'boolean?',
        1,
        function(MACHINE) {
            var v = MACHINE.env[MACHINE.env.length - 1];
            return (v === true || v === false);
        });


    installPrimitiveProcedure(
        'char?',
        1,
        function(MACHINE) {
            return baselib.chars.isChar(MACHINE.env[MACHINE.env.length -1 ]);
        });


    installPrimitiveProcedure(
        'char=?',
        baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
            var s = checkChar(MACHINE, 'char=?', 0).val;
	    var i;
            for (i = 1; i < MACHINE.argcount; i++) {
                if (checkChar(MACHINE, 'char=?', i).val !== s) {
                    return false;
                }
            }
            return true;
        });


    
    installPrimitiveProcedure(
        'box',
        1,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            return makeBox(firstArg);
        });

    installPrimitiveProcedure(
        'unbox',
        1,
        function (MACHINE) {
            var firstArg = checkBox(MACHINE, 'unbox', 0);
            return firstArg.ref();
        });

    installPrimitiveProcedure(
        'set-box!',
        2,
        function (MACHINE) {
            var firstArg = checkMutableBox(MACHINE, 'set-box!', 0);
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            firstArg.set(secondArg);
            return VOID;
        });

    installPrimitiveProcedure(
        'void',
        baselib.arity.makeArityAtLeast(0),
        function (MACHINE) {
            return VOID;
        });


    installPrimitiveProcedure(
        'random',
        baselib.lists.makeList(0, 1),
        function (MACHINE) {
            if (MACHINE.argcount === 0) {
                return makeFloat(Math.random());
            } else {
                var n = checkNatural(MACHINE, 'random', 0);
                return Math.floor(Math.random() * baselib.numbers.toFixnum(n));
            }
        });


    installPrimitiveProcedure(
        'eq?',
        2,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            return firstArg === secondArg;
        });

    installPrimitiveProcedure(
        'eqv?',
        2,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            return baselib.equality.eqv(firstArg, secondArg);
        });



    installPrimitiveProcedure(
        'equal?',
        2,
        function (MACHINE) {
            var firstArg = MACHINE.env[MACHINE.env.length-1];
            var secondArg = MACHINE.env[MACHINE.env.length-2];
            return equals(firstArg, secondArg);
        });


    // This definition of apply will take precedence over the
    // implementation of apply in the boostrapped-primitives.rkt,
    // since it provides nicer error handling.
    var applyImplementation = function (MACHINE) {
        if(--MACHINE.callsBeforeTrampoline < 0) { 
            throw applyImplementation;
        }
        var proc = checkProcedure(MACHINE, 'apply', 0);
        MACHINE.env.pop();
        MACHINE.argcount--;
        checkList(MACHINE, 'apply', MACHINE.argcount - 1);
        MACHINE.spliceListIntoStack(MACHINE.argcount - 1);
        if (baselib.arity.isArityMatching(proc.racketArity, MACHINE.argcount)) {
            MACHINE.proc = proc;
            if (baselib.functions.isPrimitiveProcedure(proc)) {
                return finalizeClosureCall(MACHINE, proc(MACHINE));
            } else {
                return proc.label(MACHINE);
            }
        } else {
            raiseArityMismatchError(MACHINE, proc, proc.racketArity, MACHINE.argcount);
        }
    };
    installPrimitiveClosure(
        'apply',
        baselib.arity.makeArityAtLeast(2),
        applyImplementation);


    // FIXME: The definition of call-with-values is in
    // bootstrapped-primitives.rkt.  We may want to replace it with an
    // explicitly defined one here.





    installPrimitiveProcedure(
        'procedure?',
        1,
        function (MACHINE) {
            return baselib.functions.isProcedure(MACHINE.env[MACHINE.env.length - 1]);
        });
    
    installPrimitiveProcedure(
        'procedure-arity-includes?',
        2,
        function (MACHINE) {
            var proc = checkProcedure(MACHINE, 'procedure-arity-includes?', 0);
            var argcount = checkNatural(MACHINE, 'procedure-arity-includes?', 1);
            return baselib.arity.isArityMatching(proc.racketArity, argcount);
        });

    installPrimitiveProcedure(
        'procedure-arity',
        1,
        function (MACHINE) {
            var proc = checkProcedure(MACHINE, 'procedure-arity-includes?', 0);
            return proc.racketArity;
        });


    installPrimitiveProcedure(
        'procedure-rename',
        2,
        function (MACHINE) {
            var proc = checkProcedure(MACHINE, 'procedure-rename', 0);
            var name = checkSymbol(MACHINE, 'procedure-rename', 1);
            return baselib.functions.renameProcedure(proc, name);
        });



    installPrimitiveProcedure(
        'member',
        2,
        function (MACHINE) {
            var x = MACHINE.env[MACHINE.env.length-1];
            var lst = MACHINE.env[MACHINE.env.length-2];
            while (true) {
                if (lst === NULL) {
                    return false;
                }
                if (! isPair(lst)) {
                    raiseArgumentTypeError(MACHINE,
                                           'member',
                                           'list',
                                           1,
                                           MACHINE.env[MACHINE.env.length - 1 - 1]);
                }
                if (equals(x, (lst.first))) {
                    return lst;
                }
                lst = lst.rest;
            }   
        });
    


    installPrimitiveProcedure(
        'reverse',
        1,
        function (MACHINE) {
            var rev = NULL;
            var lst = MACHINE.env[MACHINE.env.length-1];
            while(lst !== NULL) {
                testArgument(MACHINE,
                             'pair', isPair, lst, 0, 'reverse');
                rev = makePair(lst.first, rev);
                lst = lst.rest;
            }
            return rev;
        });


    installPrimitiveProcedure(
	'number?',
	1,
	function(MACHINE) {
	    return isNumber(MACHINE.env[MACHINE.env.length - 1]);
	});


    installPrimitiveProcedure(
        'abs',
        1,
        function (MACHINE) {
            return baselib.numbers.abs(
                checkNumber(MACHINE, 'abs', 0));
        });

    installPrimitiveProcedure(
        'acos',
        1,
        function (MACHINE) {
            return baselib.numbers.acos(
                checkNumber(MACHINE, 'acos', 0));
        });


    installPrimitiveProcedure(
        'asin',
        1,
        function (MACHINE) {
            return baselib.numbers.asin(
                checkNumber(MACHINE, 'asin', 0));
        });

    installPrimitiveProcedure(
        'sin',
        1,
        function (MACHINE) {
            return baselib.numbers.sin(
                checkNumber(MACHINE, 'sin', 0));
        });



    installPrimitiveProcedure(
        'sinh',
        1,
        function (MACHINE) {
            return baselib.numbers.sinh(
                checkNumber(MACHINE, 'sinh', 0));
        });


    installPrimitiveProcedure(
        'tan',
        1,
        function (MACHINE) {
            return baselib.numbers.tan(
                checkNumber(MACHINE, 'tan', 0));
        });

    

    installPrimitiveProcedure(
        'atan',
        makeList(1, 2),
        function (MACHINE) {
            if (MACHINE.argcount === 1) {
                return baselib.numbers.atan(
                    checkNumber(MACHINE, 'atan', 0));
            } else {
                testArgument(MACHINE,
                             'number',
                             isNumber,
                             MACHINE.env[MACHINE.env.length - 1],
                             0,
                             'atan');
                testArgument(MACHINE,
                             'number',
                             isNumber,
                             MACHINE.env[MACHINE.env.length - 2],
                             1,
                             'atan');
                return makeFloat(
                    Math.atan2(
                        baselib.numbers.toFixnum(checkNumber(MACHINE, 'atan', 0)),
                        baselib.numbers.toFixnum(checkNumber(MACHINE, 'atan', 1))));
            }
        });


    installPrimitiveProcedure(
        'angle',
        1,
        function (MACHINE) {
            return baselib.numbers.angle(
                checkNumber(MACHINE, 'angle', 0));
        });

    installPrimitiveProcedure(
        'magnitude',
        1,
        function (MACHINE) {
            return baselib.numbers.magnitude(
                checkNumber(MACHINE, 'magnitude', 0));
        });

    installPrimitiveProcedure(
        'conjugate',
        1,
        function (MACHINE) {
            return baselib.numbers.conjugate(
                checkNumber(MACHINE, 'conjugate', 0));
        });




    installPrimitiveProcedure(
        'cos',
        1,
        function (MACHINE) {
            return baselib.numbers.cos(
                checkNumber(MACHINE, 'cos', 0));
        });


    installPrimitiveProcedure(
        'cosh',
        1,
        function (MACHINE) {
            return baselib.numbers.cosh(
                checkNumber(MACHINE, 'cosh', 0));
        });

    installPrimitiveProcedure(
        'gcd',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var args = [], i, x;
            for (i = 0; i < MACHINE.argcount; i++) {
                args.push(checkNumber(MACHINE, 'gcd', i));
            }
            x = args.shift();
            return baselib.numbers.gcd(x, args);
        });

    installPrimitiveProcedure(
        'lcm',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
            var args = [], i, x;
            for (i = 0; i < MACHINE.argcount; i++) {
                args.push(checkNumber(MACHINE, 'lcm', i));
            }
            x = args.shift();
            return baselib.numbers.lcm(x, args);
        });




    installPrimitiveProcedure(
        'exp',
        1,
        function (MACHINE) {
            return baselib.numbers.exp(
                checkNumber(MACHINE, 'exp', 0));
        });


    installPrimitiveProcedure(
        'expt',
        2,
        function (MACHINE) {
            return baselib.numbers.expt(
                checkNumber(MACHINE, 'expt', 0),
                checkNumber(MACHINE, 'expt', 1));
        });

    installPrimitiveProcedure(
        'exact?',
        1,
        function (MACHINE) {
            return baselib.numbers.isExact(
                checkNumber(MACHINE, 'exact?', 0));
        });


    installPrimitiveProcedure(
        'integer?',
        1,
        function (MACHINE) {
            return baselib.numbers.isInteger(MACHINE.env[MACHINE.env.length - 1]);
        });


    installPrimitiveProcedure(
        'exact-nonnegative-integer?',
        1,
        function (MACHINE) {
            return isNatural(MACHINE.env[MACHINE.env.length - 1]);
        });



    installPrimitiveProcedure(
        'imag-part',
        1,
        function (MACHINE) {
            return baselib.numbers.imaginaryPart(
                checkNumber(MACHINE, 'imag-part', 0));
        });


    installPrimitiveProcedure(
        'real-part',
        1,
        function (MACHINE) {
            return baselib.numbers.realPart(
                checkNumber(MACHINE, 'real-part', 0));
        });


    installPrimitiveProcedure(
        'make-polar',
        2,
        function (MACHINE) {
            return makeComplexPolar(
                checkReal(MACHINE, 'make-polar', 0),
                checkReal(MACHINE, 'make-polar', 1));
        });


    installPrimitiveProcedure(
        'make-rectangular',
        2,
        function (MACHINE) {
            return makeComplex(
                checkReal(MACHINE, 'make-rectangular', 0),
                checkReal(MACHINE, 'make-rectangular', 1));
        });

    installPrimitiveProcedure(
        'modulo',
        2,
        function (MACHINE) {
            return baselib.numbers.modulo(
                checkInteger(MACHINE, 'modulo', 0),
                checkInteger(MACHINE, 'modulo', 1));
        });


    installPrimitiveProcedure(
        'remainder',
        2,
        function (MACHINE) {
            return baselib.numbers.remainder(
                checkInteger(MACHINE, 'remainder', 0),
                checkInteger(MACHINE, 'remainder', 1));
        });


    installPrimitiveProcedure(
        'quotient',
        2,
        function (MACHINE) {
            return baselib.numbers.quotient(
                checkInteger(MACHINE, 'quotient', 0),
                checkInteger(MACHINE, 'quotient', 1));
        });



    installPrimitiveProcedure(
        'floor',
        1,
        function (MACHINE) {
            return baselib.numbers.floor(
                checkReal(MACHINE, 'floor', 0));
        });
    

    installPrimitiveProcedure(
        'ceiling',
        1,
        function (MACHINE) {
            return baselib.numbers.ceiling(
                checkReal(MACHINE, 'ceiling', 0));
        });
    

    installPrimitiveProcedure(
        'round',
        1,
        function (MACHINE) {
            return baselib.numbers.round(
                checkReal(MACHINE, 'round', 0));
        });
    

    installPrimitiveProcedure(
        'truncate',
        1,
        function (MACHINE) {
            var n = checkReal(MACHINE, 'truncate', 0);
            if (baselib.numbers.lessThan(n, 0)) {
                return baselib.numbers.ceiling(n);
            } else {
                return baselib.numbers.floor(n);
            }
        });
    

    installPrimitiveProcedure(
        'numerator',
        1,
        function (MACHINE) {
            return baselib.numbers.numerator(
                checkRational(MACHINE, 'numerator', 0));
        });


    installPrimitiveProcedure(
        'denominator',
        1,
        function (MACHINE) {
            return baselib.numbers.denominator(
                checkRational(MACHINE, 'denominator', 0));
        });


    installPrimitiveProcedure(
        'log',
        1,
        function (MACHINE) {
            return baselib.numbers.log(
                checkNumber(MACHINE, 'log', 0));
        });


    installPrimitiveProcedure(
        'sqr',
        1,
        function (MACHINE) {
            return baselib.numbers.sqr(
                checkNumber(MACHINE, 'sqr', 0));
        });




    installPrimitiveProcedure(
        'sqrt',
        1,
        function (MACHINE) {
            return baselib.numbers.sqrt(
                checkNumber(MACHINE, 'sqrt', 0));
        });



    installPrimitiveProcedure(
        'integer-sqrt',
        1,
        function (MACHINE) {
            return baselib.numbers.integerSqrt(
                checkInteger(MACHINE, 'integer-sqrt', 0));
        });



    installPrimitiveProcedure(
        'sgn',
        1,
        function (MACHINE) {
            return baselib.numbers.sign(
                checkInteger(MACHINE, 'sgn', 0));
        });



    installPrimitiveProcedure(
        'error',
        baselib.arity.makeArityAtLeast(1),
        function (MACHINE) {
	    var i;
            if (MACHINE.argcount === 1) {
                var sym = checkSymbol(MACHINE, 'error', 1);
                // FIXME: we should collect the current continuation marks here...
                raise(MACHINE, baselib.exceptions.makeExnFail(String(sym), undefined));
            } 
            
            if (isString(MACHINE.env[MACHINE.env.length - 1])) {
                var vs = [];
                for (i = 1; i < MACHINE.argcount; i++) {
                    vs.push(baselib.format.format("~e", [MACHINE.env[MACHINE.env.length - 1 - i]]));
                }
                raise(MACHINE, baselib.exceptions.makeExnFail(String(MACHINE.env[MACHINE.env.length - 1]) +
                                                              ": " +
                                                              vs.join(' '),
                                                              undefined));
            }

            if (isSymbol(MACHINE.env[MACHINE.env.length - 1])) {
                var fmtString = checkString(MACHINE, 'error', 1);
                var args = [MACHINE.env[MACHINE.env.length - 1]];
                for (i = 2; i < MACHINE.argcount; i++) {
                    args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
                }
                raise(MACHINE, baselib.exceptions.makeExnFail(
                    baselib.format.format('~s: ' + String(fmtString),
                                          args),
                    undefined));
            }

            // Fall-through
            raiseArgumentTypeError(MACHINE, 'error', 'symbol or string', 0, MACHINE.env[MACHINE.env.length - 1]);
        });


    installPrimitiveProcedure(
        'raise-mismatch-error',
        3,
        function (MACHINE) {
            var name = checkSymbol(MACHINE, 'raise-mismatch-error', 0);
            var message = checkString(MACHINE, 'raise-mismatch-error', 0);
            var val = MACHINE.env[MACHINE.env.length - 1 - 2];
            raise(MACHINE, baselib.exceptions.makeExnFail(
		baselib.format.format("~a: ~a~e",
                                      [name,
                                       message,
                                       val]),
                undefined));
        });


    installPrimitiveProcedure(
        'raise-type-error',
        baselib.arity.makeArityAtLeast(3),
        function (MACHINE) {
            var name = checkSymbol(MACHINE, 'raise-type-error', 0);
            var expected = checkString(MACHINE, 'raise-type-error', 1);
            if (MACHINE.argcount === 3) {
                raiseArgumentTypeError(MACHINE, 
                                       name,
                                       expected,
                                       undefined,
                                       MACHINE.env[MACHINE.env.length - 1 - 2]);
            } else {
                raiseArgumentTypeError(MACHINE, 
                                       name,
                                       expected,
                                       checkNatural(MACHINE, 'raise-type-error', 2),
                                       MACHINE.env[MACHINE.env.length - 1 - 2]);
            }
        });
    



    installPrimitiveClosure(
        'make-struct-type',
        makeList(4, 5, 6, 7, 8, 9, 10, 11),
        function (MACHINE) {
            withArguments(
                MACHINE,
                4,
                [false, 
                 NULL,
                 false,
                 false,
                 NULL,
                 false,
                 false],
                function (name, 
                          superType,
                          initFieldCount,
                          autoFieldCount,
                          autoV,
                          props,  // FIXME: currently ignored
                          inspector,  // FIXME: currently ignored
                          procSpec,       // FIXME: currently ignored
                          immutables, // FIXME: currently ignored
                          guard,      // FIXME: currently ignored
                          constructorName
                         ) {

                    // FIXME: typechecks.

                    var structType = baselib.structs.makeStructureType(
                        name,
                        superType,
                        initFieldCount,
                        autoFieldCount,
                        autoV,
                        //props,
                        //inspector,
                        //procSpec,
                        //immutables,
                        guard);

                    var constructorValue = 
                        makePrimitiveProcedure(
                            constructorName,
                            baselib.numbers.toFixnum(initFieldCount),
                            function (MACHINE) {
                                var args = [];
				var i;
                                for(i = 0; i < initFieldCount; i++) {
                                    args.push(MACHINE.env[MACHINE.env.length - 1 - i]);
                                }
                                return structType.constructor.apply(null, args);
                            });

                    var predicateValue = 
                        makePrimitiveProcedure(
                            String(name) + "?",
                            1,
                            function (MACHINE) {
                                return structType.predicate(MACHINE.env[MACHINE.env.length - 1]);
                            });

                    var accessorValue = 
                        makePrimitiveProcedure(
                            String(name) + "-accessor",
                            2,
                            function (MACHINE) {
                                // FIXME: typechecks
                                return structType.accessor(
                                    MACHINE.env[MACHINE.env.length - 1],
                                    baselib.numbers.toFixnum(MACHINE.env[MACHINE.env.length - 2]));
                            });
                    accessorValue.structType = structType;

                    var mutatorValue = 
                        makePrimitiveProcedure(
                            String(name) + "-mutator",
                            3,
                            function (MACHINE) {
                                // FIXME: typechecks
                                return structType.mutator(
                                    MACHINE.env[MACHINE.env.length - 1],
                                    baselib.numbers.toFixnum(MACHINE.env[MACHINE.env.length - 2]),
                                    MACHINE.env[MACHINE.env.length - 3]);
                            });
                    mutatorValue.structType = structType;


                    finalizeClosureCall(MACHINE,
                                        structType,
                                        constructorValue,
                                        predicateValue,
                                        accessorValue,
                                        mutatorValue);
                });
        });
    

    installPrimitiveProcedure(
        'current-inspector',
        makeList(0, 1),
        function (MACHINE) {
            if (MACHINE.argcount === 1) {
                MACHINE.params['currentInspector'] = 
                    checkInspector(MACHINE, 'current-inspector', 0);
                return VOID;
            } else {
                return MACHINE.params['currentInspector'];
            }
        }
    ); 


    installPrimitiveProcedure(
        'make-struct-field-accessor',
        makeList(2, 3),
        function (MACHINE){
            // FIXME: typechecks
            // We must guarantee that the ref argument is good.
            var structType = MACHINE.env[MACHINE.env.length - 1].structType;
            var index = MACHINE.env[MACHINE.env.length - 2];
            var name;
            if (MACHINE.argcount === 3) {
                name = String(MACHINE.env[MACHINE.env.length - 3]);
            } else {
                name = 'field' + index;
            }
            return makePrimitiveProcedure(
                name,
                1,
                function (MACHINE) {
                    return structType.accessor(
                        MACHINE.env[MACHINE.env.length - 1],
                        baselib.numbers.toFixnum(index));
                });
            
        });


    installPrimitiveProcedure(
        'make-struct-field-mutator',
        makeList(2, 3),
        function (MACHINE){
            // FIXME: typechecks
            // We must guarantee that the set! argument is good.
            var structType = MACHINE.env[MACHINE.env.length - 1].structType;
            var index = MACHINE.env[MACHINE.env.length - 2];
            var name;
            if (MACHINE.argcount === 3) {
                name = String(MACHINE.env[MACHINE.env.length - 3]);
            } else {
                name = 'field' + index;
            }
            return makePrimitiveProcedure(
                name,
                2,
                function (MACHINE) {
                    return structType.mutator(
                        MACHINE.env[MACHINE.env.length - 1],
                        baselib.numbers.toFixnum(index),
                        MACHINE.env[MACHINE.env.length - 2]);
                });            
        });



    exports['Primitives'] = Primitives;
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure; 
    exports['installPrimitiveClosure'] = installPrimitiveClosure; 
    exports['installPrimitiveConstant'] = installPrimitiveConstant; 

}(this.plt.baselib));
/*jslint browser: true, undef: true, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// runtime.js: the main runtime library for whalesong.
//

// All of the values here are namespaced under "plt.runtime".
/*global $*/
(function(plt, baselib) {
    'use strict';
    var runtime = {};
    plt.runtime = runtime;



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;
    var isNatural = baselib.numbers.isNatural;
    var isReal = baselib.numbers.isReal;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var isVector = baselib.vectors.isVector;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var isPath = baselib.paths.isPath;

    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var NEGATIVE_ZERO = baselib.numbers.negative_zero;
    var INF = baselib.numbers.inf;
    var NEGATIVE_INF = baselib.numbers.negative_inf;
    var NAN = baselib.numbers.nan;

    var makeFloat = baselib.numbers.makeFloat;
    var makeRational = baselib.numbers.makeRational;
    var makeBignum = baselib.numbers.makeBignum;
    var makeComplex = baselib.numbers.makeComplex;


    var makeSymbol = baselib.symbols.makeSymbol;
    var makePath = baselib.paths.makePath;
    var makeBytes = baselib.bytes.makeBytes;

    var makeBox = baselib.boxes.makeBox;
    var isBox = baselib.boxes.isBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;
    var makeChar = baselib.chars.makeChar;

    var makeStructureType = baselib.structs.makeStructureType;


    var Struct = baselib.structs.Struct;
    var StructType = baselib.structs.StructType;

    var Closure = baselib.functions.Closure;
    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;

    var ContinuationPromptTag = baselib.contmarks.ContinuationPromptTag;


    // Other helpers
    var heir = baselib.heir;
    var makeClassPredicate = baselib.makeClassPredicate;
    var toDomNode = baselib.format.toDomNode;
    var toWrittenString = baselib.format.toWrittenString;
    var toDisplayedString = baselib.format.toDisplayedString;



    // Frame structures.
    var Frame = baselib.frames.Frame;
    var CallFrame = baselib.frames.CallFrame;
    var PromptFrame = baselib.frames.PromptFrame;

    // Module structure
    var ModuleRecord = baselib.modules.ModuleRecord;



    // Ports
    var isOutputPort = baselib.ports.isOutputPort;
    var StandardOutputPort = baselib.ports.StandardOutputPort;
    var StandardErrorPort = baselib.ports.StandardErrorPort;
    var isOutputStringPort = baselib.ports.isOutputStringPort;




    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseUnboundToplevelError = baselib.exceptions.raiseUnboundToplevelError;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseContextExpectedValuesError = baselib.exceptions.raiseContextExpectedValuesError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;
    var raiseOperatorApplicationError = baselib.exceptions.raiseOperatorApplicationError;
    var raiseOperatorIsNotPrimitiveProcedure = baselib.exceptions.raiseOperatorIsNotPrimitiveProcedure;
    var raiseOperatorIsNotClosure = baselib.exceptions.raiseOperatorIsNotClosure;
    var raiseUnimplementedPrimitiveError = baselib.exceptions.raiseUnimplementedPrimitiveError;


    var ArityAtLeast = baselib.arity.ArityAtLeast;
    var makeArityAtLeast = baselib.arity.makeArityAtLeast;
    var isArityMatching = baselib.arity.isArityMatching;
    

    var testArgument = baselib.check.testArgument;
    var testArity = baselib.check.testArity;
    var makeCheckArgumentType = baselib.check.makeCheckArgumentType;


    var Primitives = baselib.primitives.Primitives;
    var installPrimitiveProcedure = baselib.primitives.installPrimitiveProcedure;



    // This value will be dynamically determined.
    // See findStackLimit later in this file.
    var STACK_LIMIT_ESTIMATE = 100;

    // Approximately find the stack limit.
    // This function assumes, on average, five variables or
    // temporaries per stack frame.
    // This will never report a number greater than MAXIMUM_CAP.
    var findStackLimit = function(after) {
	var MAXIMUM_CAP = 32768;
	var n = 1;
	var limitDiscovered = false;
	setTimeout(
	    function() {
		if(! limitDiscovered) {
		    limitDiscovered = true;
		    after(n);
		}
	    },
	    0);
        var loop1, loop2;
	loop1 = function loop1(x, y, z, w, k) {
	    // Ensure termination, just in case JavaScript ever
	    // does eliminate stack limits.
	    if (n >= MAXIMUM_CAP) { return; }
	    n++;
	    return 1 + loop2(y, z, w, k, x);
	};
	loop2 = function loop2(x, y, z, w, k) {
	    n++;
	    return 1 + loop1(y, z, w, k, x);
	};
	try {
	    findStackLimit.dontCare = 1 + loop1(2, "seven", [1], {number: 8}, 2);
	} catch (e) {
	    // ignore exceptions.
	}
	if (! limitDiscovered) { 
	    limitDiscovered = true;
	    after(n);
	}
    };


    // Schedule a stack limit estimation.  If it fails, no harm, no
    // foul (hopefully!)
    setTimeout(function() {
	findStackLimit(function(v) {
	    // Trying to be a little conservative.
	    STACK_LIMIT_ESTIMATE = Math.floor(v / 10);
	});
    },
	       0);



    //////////////////////////////////////////////////////////////////////



    var defaultCurrentPrintImplementation = function defaultCurrentPrintImplementation(MACHINE) {
        if(--MACHINE.callsBeforeTrampoline < 0) { 
            throw defaultCurrentPrintImplementation; 
        }
        var oldArgcount = MACHINE.argcount;

	var elt = MACHINE.env[MACHINE.env.length - 1];
	var outputPort = 
	    MACHINE.params.currentOutputPort;
	if (elt !== VOID) {
	    outputPort.writeDomNode(MACHINE, toDomNode(elt, 'print'));
	    outputPort.writeDomNode(MACHINE, toDomNode("\n", 'display'));
	}
        MACHINE.argcount = oldArgcount;
        return finalizeClosureCall(MACHINE, VOID);
    };
    var defaultCurrentPrint = makeClosure(
	"default-printer",
	1,
	defaultCurrentPrintImplementation);


    //////////////////////////////////////////////////////////////////////]
    // The MACHINE

    var Machine = function() {
	this.callsBeforeTrampoline = STACK_LIMIT_ESTIMATE;
	this.val = undefined;
	this.proc = undefined;
	this.argcount = undefined;
	this.env = [];
	this.control = [];     // Arrayof (U Frame CallFrame PromptFrame)
	this.running = false;
	this.modules = {};     // String -> ModuleRecord
        this.mainModules = []; // Arrayof String
	this.params = {

	    // currentDisplayer: DomNode -> Void
	    // currentDisplayer is responsible for displaying to the browser.
	    'currentDisplayer': function(MACHINE, domNode) {
		$(domNode).appendTo(document.body);
	    },
	    
	    // currentErrorDisplayer: DomNode -> Void
	    // currentErrorDisplayer is responsible for displaying errors to the browser.
	    'currentErrorDisplayer': function(MACHINE, domNode) {
                $(domNode).appendTo(document.body);
	    },

            'currentInspector': baselib.inspectors.DEFAULT_INSPECTOR,
	    
	    'currentOutputPort': new StandardOutputPort(),
	    'currentErrorPort': new StandardErrorPort(),
	    'currentSuccessHandler': function(MACHINE) {},
	    'currentErrorHandler': function(MACHINE, exn) {
                MACHINE.params.currentErrorDisplayer(
                    MACHINE,
                    toDomNode(exn));
            },
	    
	    'currentNamespace': {},
	    
	    // These parameters control how often
	    // control yields back to the browser
	    // for response.  The implementation is a
	    // simple PID controller.
	    //
	    // To tune this, adjust desiredYieldsPerSecond.
	    // Do no touch numBouncesBeforeYield or
	    // maxNumBouncesBeforeYield, because those
	    // are adjusted automatically by the
	    // recomputeMaxNumBouncesBeforeYield
	    // procedure.
	    'desiredYieldsPerSecond': 5,
	    'numBouncesBeforeYield': 2000,   // self-adjusting
	    'maxNumBouncesBeforeYield': 2000, // self-adjusting

	    'currentPrint': defaultCurrentPrint


	};
	this.primitives = Primitives;
    };
    


    // captureControl implements the continuation-capturing part of
    // call/cc.  It grabs the control frames up to (but not including) the
    // prompt tagged by the given tag.
    Machine.prototype.captureControl = function(skip, tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.control.length - 1 - skip; i >= 0; i--) {
	    if (MACHINE.control[i].tag === tag) {
		return MACHINE.control.slice(i + 1,
					     MACHINE.control.length - skip);
	    }
	} 
	raise(MACHINE, new Error("captureControl: unable to find tag " + tag));
    };



    // restoreControl clears the control stack (up to, but not including the
    // prompt tagged by tag), and then appends the rest of the control frames.
    // At the moment, the rest of the control frames is assumed to be in the 
    // top of the environment.
    Machine.prototype.restoreControl = function(tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.control.length - 1; i >= 0; i--) {
	    if (MACHINE.control[i].tag === tag) {
		MACHINE.control = 
		    MACHINE.control.slice(0, i+1).concat(
			MACHINE.env[MACHINE.env.length - 1]);
		return;
	    }
	}
	raise(MACHINE, new Error("restoreControl: unable to find tag " + tag));     

    };


    // Splices the list argument in the environment.  Adjusts MACHINE.argcount
    // appropriately.
    Machine.prototype.spliceListIntoStack = function(depth) {
	var MACHINE = this;
	var lst = MACHINE.env[MACHINE.env.length - 1 - depth];
	var vals = [];
	while(lst !== NULL) {
	    vals.push(lst.first);
	    lst = lst.rest;
	}
	vals.reverse();
	MACHINE.env.splice.apply(MACHINE.env,
				 [MACHINE.env.length - 1 - depth, 1].concat(vals));
	MACHINE.argcount = MACHINE.argcount + vals.length - 1;
    };


    // Unsplices a list from the MACHINE stack.
    Machine.prototype.unspliceRestFromStack = function(depth, length) {
	var MACHINE = this;
	var lst = NULL;
	var i;
	for (i = 0; i < length; i++) {
	    lst = makePair(MACHINE.env[MACHINE.env.length - depth - length + i], 
                           lst);
	}
	MACHINE.env.splice(MACHINE.env.length - depth - length,
			   length, 
			   lst);
	MACHINE.argcount = MACHINE.argcount - length + 1;
    };


    





    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // The toplevel trampoline.
    //
    //
    // trampoline: MACHINE (MACHINE -> void) -> void
    //
    // All evaluation in Racketland happens in the context of this
    // trampoline.
    //
    var recomputeMaxNumBouncesBeforeYield;

    var scheduleTrampoline = function(MACHINE, f) {
        setTimeout(
	    function() { 
                return MACHINE.trampoline(f); 
            },
	    0);
    };
    var makeRestartFunction = function(MACHINE) {
        return function(f) { 
            return scheduleTrampoline(MACHINE, f);
        };
    };


    // These are exception values that are treated specially in the context
    // of the trampoline.

    var HaltError = function(onHalt) {
        // onHalt: MACHINE -> void
        this.onHalt = onHalt || function(MACHINE) {};
    };


    var Pause = function(onPause) {
        // onPause: MACHINE -> void
        this.onPause = onPause || function(MACHINE) {};
    };

    var PAUSE = function(onPause) {
        throw(new Pause(onPause));
    };


    Machine.prototype.trampoline = function(initialJump) {
	var MACHINE = this;
	var thunk = initialJump;
	var startTime = (new Date()).valueOf();
	MACHINE.callsBeforeTrampoline = STACK_LIMIT_ESTIMATE;
	MACHINE.params.numBouncesBeforeYield = 
	    MACHINE.params.maxNumBouncesBeforeYield;
	MACHINE.running = true;

	while(true) {
            try {
		thunk(MACHINE);
		break;
            } catch (e) {
                // There are a few kinds of things that can get thrown
                // during racket evaluation:
                //
                // functions: this gets thrown if the Racket code
                // realizes that the number of bounces has grown too
                // large.  The thrown function represents a restarter
                // function.  The running flag remains true.
                //
                // Pause: causes the machine evaluation to pause, with
                // the expectation that it will restart momentarily.
                // The running flag on the machine will remain true.
                //
                // HaltError: causes evaluation to immediately halt.
                // We schedule the onHalt function of the HaltError to
                // call afterwards.  The running flag on the machine
                // is set to false.
                //
                // Everything else: otherwise, we send the exception value
                // to the current error handler and exit.
                // The running flag is set to false.
		if (typeof(e) === 'function') {
                    thunk = e;
                    MACHINE.callsBeforeTrampoline = STACK_LIMIT_ESTIMATE;

		    if (MACHINE.params.numBouncesBeforeYield-- < 0) {
			recomputeMaxNumBouncesBeforeYield(
			    MACHINE,
			    (new Date()).valueOf() - startTime);
			scheduleTrampoline(MACHINE, thunk);
			return;
		    }
		} else if (e instanceof Pause) {
                    var restart = makeRestartFunction(MACHINE);
                    e.onPause(restart);
                    return;
                } else if (e instanceof HaltError) {
		    MACHINE.running = false;
                    e.onHalt(MACHINE);
                    return;
                } else {
		    // General error condition: just exit out
		    // of the trampoline and call the current error handler.
		    MACHINE.running = false;
                    MACHINE.params.currentErrorHandler(MACHINE, e);
	            return;
		}
            }
	}
	MACHINE.running = false;
        setTimeout(
            function() { MACHINE.params.currentSuccessHandler(MACHINE); },
            0);
	return;
    };

    // recomputeGas: state number -> number
    recomputeMaxNumBouncesBeforeYield = function(MACHINE, observedDelay) {
	// We'd like to see a delay of DESIRED_DELAY_BETWEEN_BOUNCES so
	// that we get MACHINE.params.desiredYieldsPerSecond bounces per
	// second.
	var DESIRED_DELAY_BETWEEN_BOUNCES = 
	    (1000 / MACHINE.params.desiredYieldsPerSecond);
	var ALPHA = 50;
	var delta = (ALPHA * ((DESIRED_DELAY_BETWEEN_BOUNCES -
			       observedDelay) / 
			      DESIRED_DELAY_BETWEEN_BOUNCES));
	MACHINE.params.maxNumBouncesBeforeYield = 
            Math.max(MACHINE.params.maxNumBouncesBeforeYield + delta,
                     1);
    };







    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////









    // There is a single, distinguished default continuation prompt tag
    // that's used to wrap around toplevel prompts.
    var DEFAULT_CONTINUATION_PROMPT_TAG = 
	new ContinuationPromptTag("default-continuation-prompt-tag");




    



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    var VariableReference = function(prefix, pos) {
        this.prefix = prefix;
        this.pos = pos;
    };








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Implementation of the ready function.  This will fire off when
    // setReadyTrue is called.
    var ready, setReadyTrue, setReadyFalse;
    (function() {
        var runtimeIsReady = false;
        var readyWaiters = [];
        var notifyWaiter = function(w) {
            w();
        };

        ready = function(f) {
            if (runtimeIsReady) {
                notifyWaiter(f);
            } else {
                readyWaiters.push(f);
            }
        };

        setReadyTrue = function() {
            runtimeIsReady = true;
            while(runtimeIsReady && readyWaiters.length > 0) {
                notifyWaiter(readyWaiters.shift());
            }
        };

        setReadyFalse = function() {
            runtimeIsReady = false;
        };

    }());


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Executes all programs that have been labeled as a main module
    var invokeMains = function(machine, succ, fail) {
        runtime.ready(function invokeMain() {
            setReadyFalse();
            machine = machine || runtime.currentMachine;
            succ = succ || function() {};
            fail = fail || function() {};
            var mainModules = machine.mainModules.slice();
            var loop = function() {
                if (mainModules.length > 0) {
                    var nextModule = mainModules.shift();
                    nextModule.invoke(machine, loop, fail);
                } else {
                    setReadyTrue();
                    succ();
                }
            };
            setTimeout(loop, 0);
        });
    };

    // Looks up a name in any of the machine's main modules.
    var lookupInMains = function(name, machine) {
        var i;
        machine = machine || runtime.currentMachine;
        for (i = 0; i < machine.mainModules.length; i++) {
            var ns = machine.mainModules[i].getNamespace();
            if(ns.hasOwnProperty(name)) {
                return ns[name];
            }
        }
    };



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Exports
    var exports = runtime;
    exports['currentMachine'] = new Machine();
    exports['invokeMains'] = invokeMains;
    exports['lookupInMains'] = lookupInMains;


    // installing new primitives
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure;
    exports['makePrimitiveProcedure'] = makePrimitiveProcedure;
    exports['Primitives'] = Primitives;
    
    exports['ready'] = ready;
    // Private: the runtime library will set this flag to true when
    // the library has finished loading.
    exports['setReadyTrue'] = setReadyTrue;
    exports['setReadyFalse'] = setReadyFalse;

    exports['Machine'] = Machine;
    exports['Frame'] = Frame;
    exports['CallFrame'] = CallFrame;
    exports['PromptFrame'] = PromptFrame;
    exports['Closure'] = Closure;
    exports['ModuleRecord'] = ModuleRecord;
    exports['VariableReference'] = VariableReference;
    exports['ContinuationPromptTag'] = ContinuationPromptTag;
    exports['DEFAULT_CONTINUATION_PROMPT_TAG'] = 
	DEFAULT_CONTINUATION_PROMPT_TAG;
    exports['NULL'] = NULL;
    exports['VOID'] = VOID;

    exports['NEGATIVE_ZERO'] = NEGATIVE_ZERO;
    exports['INF'] = INF;
    exports['NEGATIVE_INF'] = NEGATIVE_INF;
    exports['NAN'] = NAN;





    exports['testArgument'] = testArgument;
    exports['testArity'] = testArity;
    exports['makeCheckArgumentType'] = makeCheckArgumentType;


    exports['raise'] = raise;
    exports['raiseUnboundToplevelError'] = raiseUnboundToplevelError;
    exports['raiseArgumentTypeError'] = raiseArgumentTypeError;
    exports['raiseContextExpectedValuesError'] = raiseContextExpectedValuesError;
    exports['raiseArityMismatchError'] = raiseArityMismatchError;
    exports['raiseOperatorApplicationError'] = raiseOperatorApplicationError;
    exports['raiseOperatorIsNotPrimitiveProcedure'] = raiseOperatorIsNotPrimitiveProcedure;
    exports['raiseOperatorIsNotClosure'] = raiseOperatorIsNotClosure;
    exports['raiseUnimplementedPrimitiveError'] = raiseUnimplementedPrimitiveError;


    exports['finalizeClosureCall'] = finalizeClosureCall;


    //////////////////////////////////////////////////////////////////////


    // Type constructors

    // numbers
    exports['makeList'] = makeList;
    exports['makePair'] = makePair;
    exports['makeChar'] = makeChar;
    exports['makeVector'] = makeVector;
    exports['makeBox'] = makeBox;
    exports['makeFloat'] = makeFloat;
    exports['makeRational'] = makeRational;
    exports['makeBignum'] = makeBignum;
    exports['makeComplex'] = makeComplex;
    exports['makeSymbol'] = makeSymbol;
    exports['makePath'] = makePath;
    exports['makeBytes'] = makeBytes;


    // Type predicates
    exports['isPair'] = isPair;
    exports['isList'] = isList;
    exports['isVector'] = isVector;
    exports['isOutputPort'] = isOutputPort;
    exports['isOutputStringPort'] = isOutputStringPort;
    exports['isBox'] = isBox;
    exports['isString'] = isString;
    exports['isSymbol'] = isSymbol;
    exports['isPath'] = isPath;
    exports['isNumber'] = isNumber;
    exports['isNatural'] = isNatural;
    exports['isReal'] = isReal;
    exports['equals'] = equals;

    exports['toDomNode'] = toDomNode;
    exports['toWrittenString'] = toWrittenString;
    exports['toDisplayedString'] = toDisplayedString;

    exports['ArityAtLeast'] = ArityAtLeast;
    exports['makeArityAtLeast'] = makeArityAtLeast;
    exports['isArityMatching'] = isArityMatching;

    exports['heir'] = heir;
    exports['makeClassPredicate'] = makeClassPredicate;

    exports['PAUSE'] = PAUSE;
    exports['HaltError'] = HaltError;



    exports['makeStructureType'] = makeStructureType;
    exports['Struct'] = Struct;
    exports['StructType'] = StructType;


}(this.plt, this.plt.baselib));
(function(MACHINE, SUCCESS, FAIL, PARAMS) {(function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _beforePopPromptMultiple35 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple35;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt36)(MACHINE);
};

var _lamEntry4 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry4;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry4)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePopPromptMultiple32 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple32;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt33)(MACHINE);
};

var _lamEntry3 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry3;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPromptMultiple17 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple17;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt18)(MACHINE);
};

var _procReturnMultiple23 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple23;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn24)(MACHINE);
};

var _lamEntry2 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry2;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall22)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn24, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
if (MACHINE.env[MACHINE.env.length - 1 - 0][2] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 0].names[2]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0][2];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _callCCClosureEntry = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _callCCClosureEntry;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.restoreControl(RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG);
MACHINE.env = MACHINE.env[MACHINE.env.length - 2].slice(0);
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple11 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple11;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn12)(MACHINE);
};

var _procReturnMultiple8 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple8;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn9)(MACHINE);
};

var _lamEntry1 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry1;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall7)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn9, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
if (MACHINE.env[MACHINE.env.length - 1 - 0][3] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 0].names[3]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0][3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _applyEntry126 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _applyEntry126;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.argcount = (MACHINE.argcount - 1);
MACHINE.spliceListIntoStack((MACHINE.argcount - 1));
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 0;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (MACHINE.argcount + 0), 0);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _valuesEntry122 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _valuesEntry122;
    }
    if (MACHINE.argcount === 1)
{
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
if (MACHINE.argcount === 0)
{
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label.multipleValueReturn;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label.multipleValueReturn;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _beforePopPrompt104 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt104;
    }
    RUNTIME.Primitives["call-with-values"] = RUNTIME.Primitives["call-with-values"] || MACHINE.val;
RUNTIME.Primitives["call/cc"] = RUNTIME.Primitives["call/cc"] || new RUNTIME.Closure(_callCCEntry, 1, [], "call/cc");
RUNTIME.Primitives["call-with-current-continuation"] = RUNTIME.Primitives["call-with-current-continuation"] || new RUNTIME.Closure(_callCCEntry, 1, [], "call/cc");
RUNTIME.Primitives["values"] = RUNTIME.Primitives["values"] || new RUNTIME.Closure(_valuesEntry122, (RUNTIME.makeArityAtLeast(0)), [], "values");
RUNTIME.Primitives["apply"] = RUNTIME.Primitives["apply"] || new RUNTIME.Closure(_applyEntry126, (RUNTIME.makeArityAtLeast(2)), [], "apply");
};

var _procReturn87 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn87;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry9)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn57 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn57;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall55)(MACHINE);
};

var _procReturn24 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn24;
    }
    return (_afterCall22)(MACHINE);
};

var _procReturn9 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn9;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall7)(MACHINE);
};

var _beforePopPrompt80 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt80;
    }
    RUNTIME.Primitives["append"] = RUNTIME.Primitives["append"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt104, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([]);  MACHINE.env[MACHINE.env.length-1].names = [];
MACHINE.val = new RUNTIME.Closure(_lamEntry11, 2, [], "call-with-values");
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt66 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt66;
    }
    RUNTIME.Primitives["length"] = RUNTIME.Primitives["length"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt80, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.primitives["car"],MACHINE.primitives["cdr"],MACHINE.primitives["cons"],MACHINE.primitives["null"],MACHINE.primitives["null?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["car","cdr","cons","null","null?"];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry8, 1, undefined, "append-many");
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry9, 2, undefined, "append-2");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 2]]
MACHINE.env[MACHINE.env.length - 1 - 1].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 2]]
MACHINE.val = new RUNTIME.Closure(_lamEntry10, (RUNTIME.makeArityAtLeast(0)), [MACHINE.env[MACHINE.env.length - 1 - 0]], "append");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt33 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt33;
    }
    RUNTIME.Primitives["caar"] = RUNTIME.Primitives["caar"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt36, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.primitives["car"],MACHINE.primitives["cdr"],MACHINE.primitives["eq?"],MACHINE.primitives["null?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["car","cdr","eq?","null?"];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry4, 2, undefined, "memq");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]]
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPromptMultiple48 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple48;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt49)(MACHINE);
};

var _afterCall55 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall55;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry5)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePopPromptMultiple103 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple103;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt104)(MACHINE);
};

var _lamEntry11 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry11;
    }
    MACHINE.control.push(new RUNTIME.Frame());
MACHINE.control[MACHINE.control.length-1].pendingApplyValuesProc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.argcount = 1;
return (_afterCall108)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn110, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
return (_afterCall108)(MACHINE);
}
};

var _afterCall108 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall108;
    }
    if (MACHINE.argcount === 0)
{
return (_afterArgsEvaluated106)(MACHINE);
} else {
MACHINE.env.push(MACHINE.val);
return (_afterArgsEvaluated106)(MACHINE);
}
};

var _procReturnMultiple94 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple94;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn95)(MACHINE);
};

var _procReturnMultiple86 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple86;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn87)(MACHINE);
};

var _lamEntry8 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry8;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn87, MACHINE.proc));
return (_lamEntry8)(MACHINE);
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
if (MACHINE.env[MACHINE.env.length - 1 - 0][3] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 0].names[3]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0][3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry10 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry10;
    }
    MACHINE.unspliceRestFromStack(0, (MACHINE.argcount - 0));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry8)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry9 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry9;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn95, MACHINE.proc));
return (_lamEntry9)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterArgsEvaluated106 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterArgsEvaluated106;
    }
    MACHINE.proc = MACHINE.control[MACHINE.control.length-1].pendingApplyValuesProc;
MACHINE.control.pop();
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (MACHINE.argcount + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePopPromptMultiple79 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple79;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt80)(MACHINE);
};

var _afterCall22 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall22;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry2)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPromptMultiple2 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple2;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt3)(MACHINE);
};

var _afterCall7 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall7;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn12, MACHINE.proc));
return (_lamEntry1)(MACHINE);
};

var _beforePopPromptMultiple65 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple65;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt66)(MACHINE);
};

var _lamEntry6 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry6;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry6)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry7 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry7;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry6)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _start131 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start131;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt3, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.primitives["car"],MACHINE.primitives["cdr"],MACHINE.primitives["cons"],MACHINE.primitives["null"],MACHINE.primitives["null?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["car","cdr","cons","null","null?"];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry1, 2, undefined, "map");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]]
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _callCCEntry = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _callCCEntry;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.captureControl(0, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env.slice(0, MACHINE.env.length - 3);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_callCCClosureEntry, 1, [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "call/cc");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 0;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 0), 0);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn110 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn110;
    }
    MACHINE.argcount = 1;
return (_afterCall108)(MACHINE);
};

var _beforePopPrompt36 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt36;
    }
    RUNTIME.Primitives["memq"] = RUNTIME.Primitives["memq"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt49, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.params.currentNamespace["caar"] || MACHINE.primitives["caar"],MACHINE.primitives["car"],MACHINE.primitives["cdr"],MACHINE.primitives["eq?"],MACHINE.primitives["null?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["caar","car","cdr","eq?","null?"];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry5, 2, undefined, "assq");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]]
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt18 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt18;
    }
    RUNTIME.Primitives["for-each"] = RUNTIME.Primitives["for-each"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt33, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.primitives["car"]]);  MACHINE.env[MACHINE.env.length-1].names = ["car"];
MACHINE.val = new RUNTIME.Closure(_lamEntry3, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "caar");
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn12 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn12;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple56 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple56;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn57)(MACHINE);
};

var _lamEntry5 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry5;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][0] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[0]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall55)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn57, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn95 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn95;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt49 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt49;
    }
    RUNTIME.Primitives["assq"] = RUNTIME.Primitives["assq"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt66, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.primitives["add1"],MACHINE.primitives["cdr"],MACHINE.primitives["null?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["add1","cdr","null?"];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry6, 2, undefined, "length-iter");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]]
MACHINE.val = new RUNTIME.Closure(_lamEntry7, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "length");
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt3 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt3;
    }
    RUNTIME.Primitives["map"] = RUNTIME.Primitives["map"] || MACHINE.val;
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt18, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([MACHINE.primitives["car"],MACHINE.primitives["cdr"],MACHINE.primitives["null"],MACHINE.primitives["null?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["car","cdr","null","null?"];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry2, 2, undefined, "for-each");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]]
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

_procReturn9.multipleValueReturn = _procReturnMultiple8;
_procReturn12.multipleValueReturn = _procReturnMultiple11;
_beforePopPrompt3.multipleValueReturn = _beforePopPromptMultiple2;
_procReturn24.multipleValueReturn = _procReturnMultiple23;
_beforePopPrompt18.multipleValueReturn = _beforePopPromptMultiple17;
_beforePopPrompt33.multipleValueReturn = _beforePopPromptMultiple32;
_beforePopPrompt36.multipleValueReturn = _beforePopPromptMultiple35;
_procReturn57.multipleValueReturn = _procReturnMultiple56;
_beforePopPrompt49.multipleValueReturn = _beforePopPromptMultiple48;
_beforePopPrompt66.multipleValueReturn = _beforePopPromptMultiple65;
_procReturn87.multipleValueReturn = _procReturnMultiple86;
_procReturn95.multipleValueReturn = _procReturnMultiple94;
_beforePopPrompt80.multipleValueReturn = _beforePopPromptMultiple79;
_procReturn110.multipleValueReturn = _afterCall108;
_beforePopPrompt104.multipleValueReturn = _beforePopPromptMultiple103;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start131); })(MACHINE, function() { SUCCESS(); }, FAIL, PARAMS);})(plt.runtime.currentMachine,
function(){ plt.runtime.setReadyTrue(); },
function(){},
{});
var invoke = (function(MACHINE, SUCCESS, FAIL, PARAMS) {    plt.runtime.ready(function() {plt.runtime.setReadyFalse();(function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _procReturnMultiple1418 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1418;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1419)(MACHINE);
};

var _procReturnMultiple1412 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1412;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1413)(MACHINE);
};

var _procReturnMultiple1408 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1408;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1409)(MACHINE);
};

var _procReturnMultiple1399 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1399;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1400)(MACHINE);
};

var _procReturnMultiple1395 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1395;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1396)(MACHINE);
};

var _procReturn715 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn715;
    }
    return (_afterCall713)(MACHINE);
};

var _procReturnMultiple1044 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1044;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1045)(MACHINE);
};

var _procReturnMultiple1373 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1373;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1374)(MACHINE);
};

var _procReturnMultiple1369 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1369;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1370)(MACHINE);
};

var _procReturnMultiple1028 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1028;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1029)(MACHINE);
};

var _procReturnMultiple1357 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1357;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1358)(MACHINE);
};

var _procReturnMultiple1352 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1352;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1353)(MACHINE);
};

var _procReturnMultiple1344 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1344;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1345)(MACHINE);
};

var _procReturnMultiple1340 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1340;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1341)(MACHINE);
};

var _procReturnMultiple1336 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1336;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1337)(MACHINE);
};

var _procReturnMultiple1332 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1332;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1333)(MACHINE);
};

var _procReturnMultiple1324 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1324;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1325)(MACHINE);
};

var _procReturn442 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn442;
    }
    return (_afterCall440)(MACHINE);
};

var _procReturnMultiple1309 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1309;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1310)(MACHINE);
};

var _procReturn393 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn393;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall391)(MACHINE);
};

var _procReturnMultiple1300 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1300;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1301)(MACHINE);
};

var _procReturnMultiple1291 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1291;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1292)(MACHINE);
};

var _procReturnMultiple1287 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1287;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1288)(MACHINE);
};

var _procReturnMultiple1283 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1283;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1284)(MACHINE);
};

var _procReturnMultiple1275 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1275;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1276)(MACHINE);
};

var _procReturnMultiple1271 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1271;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1272)(MACHINE);
};

var _procReturnMultiple1267 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1267;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1268)(MACHINE);
};

var _procReturnMultiple1259 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1259;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1260)(MACHINE);
};

var _procReturnMultiple1253 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1253;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1254)(MACHINE);
};

var _procReturn1464 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1464;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1462)(MACHINE);
};

var _procReturnMultiple1245 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1245;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1246)(MACHINE);
};

var _procReturnMultiple1237 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1237;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1238)(MACHINE);
};

var _procReturnMultiple1233 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1233;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1234)(MACHINE);
};

var _procReturnMultiple1225 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1225;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1226)(MACHINE);
};

var _procReturnMultiple1221 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1221;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1222)(MACHINE);
};

var _procReturnMultiple1217 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1217;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1218)(MACHINE);
};

var _procReturnMultiple1209 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1209;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1210)(MACHINE);
};

var _procReturnMultiple1200 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1200;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1201)(MACHINE);
};

var _procReturnMultiple1196 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1196;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1197)(MACHINE);
};

var _procReturnMultiple1192 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1192;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1193)(MACHINE);
};

var _procReturnMultiple1181 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1181;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1182)(MACHINE);
};

var _lamEntry66 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry66;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env[MACHINE.env.length - 1 - 0][35] = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple1170 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1170;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1171)(MACHINE);
};

var _procReturnMultiple1166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1166;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1167)(MACHINE);
};

var _procReturnMultiple1159 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1159;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1160)(MACHINE);
};

var _lamEntry85 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry85;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][58];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][59]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1154)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1156, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1147 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1147;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1148)(MACHINE);
};

var _procReturnMultiple1143 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1143;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1144)(MACHINE);
};

var _procReturnMultiple1134 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1134;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1135)(MACHINE);
};

var _procReturnMultiple1130 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1130;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1131)(MACHINE);
};

var _procReturnMultiple1122 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1122;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1123)(MACHINE);
};

var _procReturnMultiple1118 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1118;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1119)(MACHINE);
};

var _procReturnMultiple1114 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1114;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1115)(MACHINE);
};

var _procReturnMultiple1110 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1110;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1111)(MACHINE);
};

var _procReturnMultiple1102 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1102;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1103)(MACHINE);
};

var _procReturnMultiple1097 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1097;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1098)(MACHINE);
};

var _procReturn928 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn928;
    }
    return (_afterCall926)(MACHINE);
};

var _procReturnMultiple1087 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1087;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1088)(MACHINE);
};

var _procReturnMultiple1083 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1083;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1084)(MACHINE);
};

var _procReturnMultiple1077 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1077;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1078)(MACHINE);
};

var _procReturn819 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn819;
    }
    return (_afterCall817)(MACHINE);
};

var _procReturn787 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn787;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall785)(MACHINE);
};

var _procReturnMultiple1061 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1061;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1062)(MACHINE);
};

var _procReturn739 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn739;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall737)(MACHINE);
};

var _procReturnMultiple1049 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1049;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1050)(MACHINE);
};

var _procReturnMultiple1040 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1040;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1041)(MACHINE);
};

var _lamEntry88 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry88;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env[MACHINE.env.length - 1 - 0][72] = -1;
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple1032 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1032;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1033)(MACHINE);
};

var _procReturnMultiple1024 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1024;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1025)(MACHINE);
};

var _beforePromptPop1818 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1818;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1820, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry66, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "store-js-proxy");
MACHINE.env[MACHINE.env.length - 1 - 0][36] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn548 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn548;
    }
    MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterCall546)(MACHINE);
};

var _procReturnMultiple1012 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1012;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1013)(MACHINE);
};

var _procReturn512 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn512;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall510)(MACHINE);
};

var _procReturnMultiple1000 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1000;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1001)(MACHINE);
};

var _procReturn466 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn466;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall464)(MACHINE);
};

var _lamEntry36 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry36;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][13]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall440)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn442, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn427 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn427;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall425)(MACHINE);
};

var _lamEntry47 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry47;
    }
    MACHINE.unspliceRestFromStack(2, (MACHINE.argcount - 2));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry48, 1, [], "...at-exercises.rkt:152:18");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall620)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn622, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn385 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn385;
    }
    return (_afterIf352)(MACHINE);
return (_afterIf352)(MACHINE);
};

var _procReturn360 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn360;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall358)(MACHINE);
};

var _procReturn334 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn334;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall332)(MACHINE);
};

var _procReturn310 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn310;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall308)(MACHINE);
};

var _procReturn1619 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1619;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1615)(MACHINE);
};

var _procReturn1585 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1585;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1581)(MACHINE);
};

var _lamEntry28 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry28;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry29, 0, [MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1]], "new-problem!");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry30, 0, [MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2]], "problem-description");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry31, 0, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3]], "hints");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry32, 1, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 10;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall304)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn306, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry24 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry24;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall256)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn258, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry23 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry23;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall246)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn248, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple592 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple592;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn593)(MACHINE);
};

var _lamEntry18 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry18;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall196)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn198, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn1454 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1454;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1452)(MACHINE);
};

var _procReturnMultiple898 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple898;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn899)(MACHINE);
};

var _procReturnMultiple894 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple894;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn895)(MACHINE);
};

var _procReturnMultiple885 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple885;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn886)(MACHINE);
};

var _lamEntry71 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry71;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#exercise_title";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall884)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn886, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry45 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry45;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 9][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 9].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 9][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "<div>Rewrite to the form $a\\cdot x^2 + b\\cdot x + c$.</div>";
MACHINE.env[MACHINE.env.length - 1 - 1] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 2] = "<div>$$( ";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = "\\cdot x + ";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 7][0];
MACHINE.val = ")^2 = ?$$</div>";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (7 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry70 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry70;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 2], RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 2][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 2].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall876)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn878, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry69 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry69;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("Scratchpad('#scratchpad');", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 2][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 2].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall865)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn867, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple547 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple547;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn548)(MACHINE);
};

var _procReturnMultiple855 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple855;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn856)(MACHINE);
};

var _procReturnMultiple844 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple844;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn845)(MACHINE);
};

var _lamEntry67 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry67;
    }
    MACHINE.unspliceRestFromStack(1, (MACHINE.argcount - 1));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 1][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 1].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall843)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn845, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry65 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry65;
    }
    MACHINE.unspliceRestFromStack(0, (MACHINE.argcount - 0));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][31];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2][87];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry64 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry64;
    }
    MACHINE.unspliceRestFromStack(0, (MACHINE.argcount - 0));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4][86];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall829)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn831, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple822 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple822;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn823)(MACHINE);
};

var _lamEntry63 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry63;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][8]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall817)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn819, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple810 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple810;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn811)(MACHINE);
};

var _procReturnMultiple806 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple806;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn807)(MACHINE);
};

var _lamEntry62 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry62;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][7] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[7]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall805)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn807, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry41 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry41;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 8][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 8].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][11];
MACHINE.val = "Use the formula: $$a^{-n} = \\frac{1}{a^n}$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall518)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn520, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry39 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry39;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall506)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn508, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple786 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple786;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn787)(MACHINE);
};

var _procReturnMultiple778 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple778;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn779)(MACHINE);
};

var _procReturnMultiple473 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple473;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn474)(MACHINE);
};

var _lamEntry59 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry59;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn943 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn943;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall941)(MACHINE);
};

var _procReturn924 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn924;
    }
    return (_afterCall922)(MACHINE);
};

var _procReturn1954 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1954;
    }
    return (_afterLetBody1946)(MACHINE);
};

var _procReturn886 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn886;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall884)(MACHINE);
};

var _procReturn845 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn845;
    }
    return (_afterCall843)(MACHINE);
};

var _procReturn811 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn811;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall809)(MACHINE);
};

var _procReturn783 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn783;
    }
    return (_afterCall781)(MACHINE);
};

var _procReturn759 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn759;
    }
    return (_afterCall757)(MACHINE);
};

var _procReturn735 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn735;
    }
    return (_afterCall733)(MACHINE);
};

var _procReturnMultiple406 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple406;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn407)(MACHINE);
};

var _procReturn676 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn676;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall674)(MACHINE);
};

var _beforePromptPop1840 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1840;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1842, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry77, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "change-hint-button-text");
MACHINE.env[MACHINE.env.length - 1 - 0][48] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1828 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1828;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1830, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry71, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "update-exercise-title");
MACHINE.env[MACHINE.env.length - 1 - 0][42] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn598 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn598;
    }
    return (_afterIf595)(MACHINE);
return (_afterIf595)(MACHINE);
};

var _beforePromptPop1814 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1814;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1816, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry65, (RUNTIME.makeArityAtLeast(0)), [MACHINE.env[MACHINE.env.length - 1 - 0]], "append-to-body");
MACHINE.env[MACHINE.env.length - 1 - 0][30] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn544 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn544;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall542)(MACHINE);
};

var _procReturnMultiple369 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple369;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn370)(MACHINE);
};

var _procReturn508 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn508;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall506)(MACHINE);
};

var _procReturn482 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn482;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall480)(MACHINE);
};

var _procReturnMultiple349 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple349;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn350)(MACHINE);
};

var _beforePromptPop1733 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1733;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1735, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry27, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "hints");
MACHINE.env[MACHINE.env.length - 1 - 0][85] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn423 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn423;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall421)(MACHINE);
};

var _beforePromptPop1719 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1719;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1721, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry20, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][92] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn380 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn380;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall378)(MACHINE);
};

var _procReturn1679 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1679;
    }
    return (_afterCall1677)(MACHINE);
};

var _procReturn1654 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1654;
    }
    return (_afterCall1652)(MACHINE);
};

var _procReturn1636 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1636;
    }
    MACHINE.env[MACHINE.env.length - 1 - 108] = MACHINE.val;
return (_afterCall1634)(MACHINE);
};

var _procReturn1614 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1614;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1612)(MACHINE);
};

var _lamEntry31 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry31;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 13][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.env[MACHINE.env.length - 1 - 13][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "The sum of ";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = " and ";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 11][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = " is the same as the sum of ";
MACHINE.env[MACHINE.env.length - 1 - 5] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 12][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 12][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 12][0])), 1);
MACHINE.env[MACHINE.env.length - 1 - 6] = " and ";
MACHINE.env[MACHINE.env.length - 1 - 7] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 11][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 11][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 11][0])));
MACHINE.val = ".";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.val;
MACHINE.argcount = 9;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall328)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn330, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry27 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry27;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env.push(undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 7][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 7].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "First use the rule: $$(s+t)^2=s^2+2\\cdot s\\cdot t+t^2$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = "\n";
MACHINE.val = "Second use the rule $$(a\\cdot s)^2=a^2\\cdot s^2$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall282)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn284, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry25 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry25;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall264)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn266, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple287 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple287;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn288)(MACHINE);
};

var _procReturn1499 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1499;
    }
    return (_afterCall1497)(MACHINE);
};

var _lamEntry26 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry26;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall274)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn276, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry16 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry16;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall176)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn178, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn1436 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1436;
    }
    return (_afterCall1434)(MACHINE);
};

var _afterCall256 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall256;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall246 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall246;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry46 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry46;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0])))));
if (MACHINE.val === false)
{
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0][0])))));
if (MACHINE.val === false)
{
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0][0])))));
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _lamEntry44 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry44;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][18];
MACHINE.env[MACHINE.env.length - 1 - 0] = 2;
MACHINE.val = 6;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall579)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn581, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry43 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry43;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(1);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(2);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2][0])));
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 3][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 3][0]))), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 2, MACHINE.env[MACHINE.env.length - 1 - 2][0])));
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 3][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 3][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 3][0])));
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry44, 0, undefined, "new-problem!");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]]
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(undefined);
MACHINE.val = new RUNTIME.Closure(_lamEntry45, 0, [MACHINE.env[MACHINE.env.length - 1 - 7], MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 5]], "problem-description");
MACHINE.argcount = 1;
if (MACHINE.argcount === 0)
{
return (_afterFirstSeqEvaluated565)(MACHINE);
} else {
MACHINE.env.push(MACHINE.val);
return (_afterFirstSeqEvaluated565)(MACHINE);
}
};

var _procReturnMultiple551 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple551;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn552)(MACHINE);
};

var _procReturnMultiple543 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple543;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn544)(MACHINE);
};

var _procReturnMultiple539 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple539;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn540)(MACHINE);
};

var _procReturnMultiple535 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple535;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn536)(MACHINE);
};

var _procReturnMultiple527 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple527;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn528)(MACHINE);
};

var _procReturnMultiple523 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple523;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn524)(MACHINE);
};

var _procReturnMultiple519 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple519;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn520)(MACHINE);
};

var _procReturnMultiple511 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple511;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn512)(MACHINE);
};

var _procReturnMultiple507 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple507;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn508)(MACHINE);
};

var _afterCall156 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall156;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple495 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple495;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn496)(MACHINE);
};

var _lamEntry40 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry40;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 9][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 9].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 9][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "<div>Calculate the power.</div>";
MACHINE.env[MACHINE.env.length - 1 - 1] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 2] = "<div> $$";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = "^{";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 7][0];
MACHINE.val = "} = \\ ?$$ </div>";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (7 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry12 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry12;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall136)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn138, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple481 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple481;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn482)(MACHINE);
};

var _procReturnMultiple477 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple477;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn478)(MACHINE);
};

var _procReturnMultiple469 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple469;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn470)(MACHINE);
};

var _procReturnMultiple465 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple465;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn466)(MACHINE);
};

var _procReturn1993 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1993;
    }
    return (_afterCall1991)(MACHINE);
};

var _procReturn920 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn920;
    }
    return (_afterLetBody912)(MACHINE);
};

var _lamEntry96 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry96;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1677)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1679, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn878 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn878;
    }
    return (_afterCall876)(MACHINE);
};

var _procReturn831 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn831;
    }
    return (_afterCall829)(MACHINE);
};

var _procReturn807 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn807;
    }
    return (_afterCall805)(MACHINE);
};

var _procReturnMultiple422 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple422;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn423)(MACHINE);
};

var _procReturnMultiple416 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple416;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn417)(MACHINE);
};

var _procReturnMultiple412 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple412;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn413)(MACHINE);
};

var _procReturnMultiple402 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple402;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn403)(MACHINE);
};

var _procReturnMultiple396 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple396;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn397)(MACHINE);
};

var _procReturnMultiple392 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple392;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn393)(MACHINE);
};

var _beforePromptPop1832 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1832;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1834, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry73, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "hide-hint-area");
MACHINE.env[MACHINE.env.length - 1 - 0][44] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple384 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple384;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn385)(MACHINE);
};

var _procReturnMultiple379 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple379;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn380)(MACHINE);
};

var _procReturnMultiple375 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple375;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn376)(MACHINE);
};

var _procReturnMultiple365 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple365;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn366)(MACHINE);
};

var _procReturnMultiple359 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple359;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn360)(MACHINE);
};

var _procReturnMultiple355 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple355;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn356)(MACHINE);
};

var _procReturnMultiple345 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple345;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn346)(MACHINE);
};

var _beforePromptPop1731 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1731;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1733, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry26, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][86] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple333 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple333;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn334)(MACHINE);
};

var _procReturnMultiple329 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple329;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn330)(MACHINE);
};

var _procReturnMultiple321 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple321;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn322)(MACHINE);
};

var _procReturnMultiple317 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple317;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn318)(MACHINE);
};

var _lamEntry35 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry35;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 9][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 9].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 9][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "<div>Calculate the power.</div>";
MACHINE.env[MACHINE.env.length - 1 - 1] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 2] = "<div> $$";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = "^";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 7][0];
MACHINE.val = " = \\ ?$$ </div>";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (7 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple309 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple309;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn310)(MACHINE);
};

var _procReturnMultiple305 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple305;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn306)(MACHINE);
};

var _lamEntry30 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry30;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 9][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 9].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 9][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "<div>Calculate the sum.</div>";
MACHINE.env[MACHINE.env.length - 1 - 1] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 2] = "<div> $$";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = " + ";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 7][0];
MACHINE.val = " = \\ ?$$ </div>";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (7 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple295 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple295;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn296)(MACHINE);
};

var _procReturnMultiple291 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple291;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn292)(MACHINE);
};

var _procReturnMultiple283 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple283;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn284)(MACHINE);
};

var _lamEntry20 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry20;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall216)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn218, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple275 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple275;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn276)(MACHINE);
};

var _procReturnMultiple265 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple265;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn266)(MACHINE);
};

var _lamEntry15 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry15;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall166)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn168, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple257 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple257;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn258)(MACHINE);
};

var _procReturnMultiple247 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple247;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn248)(MACHINE);
};

var _procReturnMultiple237 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple237;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn238)(MACHINE);
};

var _procReturnMultiple227 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple227;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn228)(MACHINE);
};

var _procReturnMultiple217 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple217;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn218)(MACHINE);
};

var _procReturnMultiple207 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple207;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn208)(MACHINE);
};

var _procReturnMultiple197 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple197;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn198)(MACHINE);
};

var _procReturnMultiple187 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple187;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn188)(MACHINE);
};

var _procReturnMultiple177 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple177;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn178)(MACHINE);
};

var _procReturnMultiple167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple167;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn168)(MACHINE);
};

var _procReturnMultiple157 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple157;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn158)(MACHINE);
};

var _procReturnMultiple147 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple147;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn148)(MACHINE);
};

var _lamEntry13 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry13;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall146)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn148, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple137 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple137;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn138)(MACHINE);
};

var _afterCall1986 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1986;
    }
    if (MACHINE.argcount === 0)
{
return (_afterArgsEvaluated1887)(MACHINE);
} else {
MACHINE.env.push(MACHINE.val);
return (_afterArgsEvaluated1887)(MACHINE);
}
};

var _afterLetBody1963 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1963;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("MathJax.Hub.Queue(['Typeset',MathJax.Hub]);", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 10][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 10].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1978)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1980, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1946 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1946;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
return (_afterCall1956)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1958, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn980 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn980;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall978)(MACHINE);
};

var _procReturn1988 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1988;
    }
    MACHINE.argcount = 1;
return (_afterCall1986)(MACHINE);
};

var _procReturn1973 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1973;
    }
    MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterLetBody1963)(MACHINE);
};

var _procReturn1950 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1950;
    }
    return (_afterCall1948)(MACHINE);
};

var _procReturn1936 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1936;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1934)(MACHINE);
};

var _procReturn1920 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1920;
    }
    return (_afterCall1918)(MACHINE);
};

var _procReturn1903 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1903;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1901)(MACHINE);
};

var _beforePromptPop1879 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1879;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1881, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry93, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "call-plt-function1");
MACHINE.env[MACHINE.env.length - 1 - 0][52] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1875 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1875;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1877, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry91, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "plt-function");
MACHINE.env[MACHINE.env.length - 1 - 0][79] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1865 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1865;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1867, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry88, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "reset-hint-index");
MACHINE.env[MACHINE.env.length - 1 - 0][68] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1858 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1858;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1860, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(RUNTIME.makeSymbol("next"));
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.val = new RUNTIME.Closure(_lamEntry86, 0, [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "on-answer-button");
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 0][67] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1844 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1844;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1846, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry79, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "hide-scratchpad");
MACHINE.env[MACHINE.env.length - 1 - 0][50] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1842 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1842;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1844, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry78, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "show-scratchpad");
MACHINE.env[MACHINE.env.length - 1 - 0][49] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1834 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1834;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1836, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry74, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "show-hint-area");
MACHINE.env[MACHINE.env.length - 1 - 0][45] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1822 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1822;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1824, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry68, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "run-mathjax");
MACHINE.env[MACHINE.env.length - 1 - 0][39] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1812 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1812;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1814, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = 0;
MACHINE.env[MACHINE.env.length - 1 - 0][29] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1808 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1808;
    }
    return (_afterLetBody1804)(MACHINE);
};

var _beforePromptPop1787 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1787;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1789, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry53, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "power-all-kinds-exercise");
MACHINE.env[MACHINE.env.length - 1 - 0][23] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1776 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1776;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 9);
return (_afterLetBody1739)(MACHINE);
};

var _procReturn1768 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1768;
    }
    MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterCall1766)(MACHINE);
};

var _procReturn1752 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1752;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall1750)(MACHINE);
};

var _beforePromptPop1735 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1735;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1737, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 10] = MACHINE.primitives["make-struct-type"];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("exercise");
MACHINE.env[MACHINE.env.length - 1 - 1] = false;
MACHINE.env[MACHINE.env.length - 1 - 2] = 6;
MACHINE.env[MACHINE.env.length - 1 - 3] = 0;
MACHINE.env[MACHINE.env.length - 1 - 4] = false;
MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.NULL;
MACHINE.proc = MACHINE.primitives["current-inspector"];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
return (_afterCall1741)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1743, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPop1723 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1723;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1725, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry22, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][90] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1717 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1717;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1719, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry19, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][93] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1707 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1707;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1709, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry14, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][98] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry37 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry37;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][0];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall484)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn486, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn1649 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1649;
    }
    MACHINE.env[MACHINE.env.length - 1 - 122] = MACHINE.val;
return (_afterCall1647)(MACHINE);
};

var _procReturn1632 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1632;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1628)(MACHINE);
};

var _procReturn1610 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1610;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1608)(MACHINE);
};

var _procReturn1580 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1580;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1578)(MACHINE);
};

var _procReturn1564 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1564;
    }
    return (_afterCall1562)(MACHINE);
};

var _procReturn1542 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1542;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1540)(MACHINE);
};

var _lamEntry22 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry22;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall236)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn238, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry21 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry21;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall226)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn228, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry19 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry19;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall206)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn208, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry17 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry17;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall186)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn188, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry14 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry14;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall156)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn158, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn1419 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1419;
    }
    return (_afterCall1417)(MACHINE);
};

var _procReturn1400 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1400;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1398)(MACHINE);
};

var _procReturn1362 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1362;
    }
    return (_afterLetBody1354)(MACHINE);
};

var _procReturn1349 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1349;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1347)(MACHINE);
};

var _procReturn1337 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1337;
    }
    return (_afterCall1335)(MACHINE);
};

var _procReturn1318 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1318;
    }
    return (_afterCall1316)(MACHINE);
};

var _procReturn1301 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1301;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1299)(MACHINE);
};

var _procReturn1284 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1284;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall1282)(MACHINE);
};

var _procReturn1268 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1268;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1266)(MACHINE);
};

var _procReturn1250 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1250;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1248)(MACHINE);
};

var _procReturn1234 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1234;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1232)(MACHINE);
};

var _procReturn1218 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1218;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1216)(MACHINE);
};

var _procReturn1197 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1197;
    }
    return (_afterCall1195)(MACHINE);
};

var _procReturn1171 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1171;
    }
    return (_afterCall1169)(MACHINE);
};

var _procReturn1148 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1148;
    }
    return (_afterLetBody1140)(MACHINE);
};

var _procReturn1131 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1131;
    }
    return (_afterCall1129)(MACHINE);
};

var _procReturn1111 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1111;
    }
    return (_afterCall1109)(MACHINE);
};

var _procReturn1084 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1084;
    }
    return (_afterCall1082)(MACHINE);
};

var _procReturn1062 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1062;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1060)(MACHINE);
};

var _procReturn1041 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1041;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1039)(MACHINE);
};

var _procReturn1025 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1025;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1023)(MACHINE);
};

var _procReturn993 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn993;
    }
    return (_afterCall991)(MACHINE);
};

var _procReturn972 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn972;
    }
    return (_afterCall970)(MACHINE);
};

var _procReturn1984 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1984;
    }
    return (_afterLetBody1974)(MACHINE);
};

var _procReturn1969 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1969;
    }
    return (_afterCall1967)(MACHINE);
};

var _procReturn1945 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1945;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1943)(MACHINE);
};

var _procReturn1932 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1932;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1930)(MACHINE);
};

var _procReturn1916 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1916;
    }
    return (_afterLetBody1908)(MACHINE);
};

var _procReturn1899 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1899;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1897)(MACHINE);
};

var _beforePromptPop1881 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1881;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1883, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry94, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "generate-body");
MACHINE.env[MACHINE.env.length - 1 - 0][83] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1871 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1871;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1875, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = "function(v){return v;}";
MACHINE.env[MACHINE.env.length - 1 - 0][78] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1863 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1863;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1865, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = -1;
MACHINE.env[MACHINE.env.length - 1 - 0][72] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1854 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1854;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1856, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry84, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "update-streak-bar");
MACHINE.env[MACHINE.env.length - 1 - 0][56] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1848 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1848;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1850, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry81, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "set-focus-to-answer-input");
MACHINE.env[MACHINE.env.length - 1 - 0][53] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1838 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1838;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1840, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry76, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "append-to-hint-area");
MACHINE.env[MACHINE.env.length - 1 - 0][47] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1830 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1830;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1832, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry72, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "update-problem-area");
MACHINE.env[MACHINE.env.length - 1 - 0][43] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1826 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1826;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1828, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry70, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "js-eval");
MACHINE.env[MACHINE.env.length - 1 - 0][40] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1816 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1816;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1818, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = RUNTIME.makeSymbol("uninitialized");
MACHINE.env[MACHINE.env.length - 1 - 0][35] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1796 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1796;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1794)(MACHINE);
};

var _beforePromptPop1789 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1789;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1791, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1][12], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1][16], RUNTIME.NULL));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry59, 1, [], "...at-exercises.rkt:152:18");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1794)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1796, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn1772 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1772;
    }
    return (_afterCall1770)(MACHINE);
};

var _procReturn1764 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1764;
    }
    MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
return (_afterCall1762)(MACHINE);
};

var _procReturn1747 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1747;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 5);
return (_afterCall1745)(MACHINE);
};

var _beforePromptPop1729 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1729;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1731, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry25, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:198:12");
MACHINE.env[MACHINE.env.length - 1 - 0][87] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1721 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1721;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1723, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry21, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][91] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1715 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1715;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1717, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry18, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][94] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1709 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1709;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1711, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry15, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][97] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1669 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1669;
    }
    return (_afterCall1667)(MACHINE);
};

var _procReturn1645 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1645;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1641)(MACHINE);
};

var _procReturn1627 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1627;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1625)(MACHINE);
};

var _procReturn1606 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1606;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1604)(MACHINE);
};

var _procReturn248 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn248;
    }
    return (_afterCall246)(MACHINE);
};

var _procReturn1560 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1560;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1558)(MACHINE);
};

var _procReturn1535 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1535;
    }
    return (_afterLetBody1525)(MACHINE);
};

var _procReturn1511 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1511;
    }
    return (_afterLetBody1490)(MACHINE);
};

var _procReturn1494 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1494;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1492)(MACHINE);
};

var _procReturn1460 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1460;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1458)(MACHINE);
};

var _procReturn1448 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1448;
    }
    return (_afterIf1415)(MACHINE);
};

var _procReturn1432 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1432;
    }
    return (_afterLetBody1424)(MACHINE);
};

var _procReturn1413 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1413;
    }
    return (_afterCall1411)(MACHINE);
};

var _procReturn1396 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1396;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall1394)(MACHINE);
};

var _procReturn1358 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1358;
    }
    return (_afterCall1356)(MACHINE);
};

var _procReturn1345 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1345;
    }
    return (_afterCall1343)(MACHINE);
};

var _procReturn1333 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1333;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1331)(MACHINE);
};

var _procReturn1314 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1314;
    }
    return (_afterCall1312)(MACHINE);
};

var _procReturn1296 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1296;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1294)(MACHINE);
};

var _procReturn1280 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1280;
    }
    return (_afterCall1278)(MACHINE);
};

var _procReturn1264 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1264;
    }
    return (_afterCall1262)(MACHINE);
};

var _procReturn1246 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1246;
    }
    return (_afterCall1244)(MACHINE);
};

var _procReturn1230 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1230;
    }
    return (_afterCall1228)(MACHINE);
};

var _procReturn1214 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1214;
    }
    return (_afterIf1206)(MACHINE);
};

var _procReturn1193 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1193;
    }
    return (_afterCall1191)(MACHINE);
};

var _procReturn1167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1167;
    }
    return (_afterCall1165)(MACHINE);
};

var _procReturn1144 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1144;
    }
    return (_afterCall1142)(MACHINE);
};

var _procReturn1127 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1127;
    }
    return (_afterCall1125)(MACHINE);
};

var _procReturn1107 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1107;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1105)(MACHINE);
};

var _procReturn1098 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1098;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1096)(MACHINE);
};

var _procReturn1054 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1054;
    }
    return (_afterLetBody1046)(MACHINE);
};

var _procReturn1033 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1033;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1031)(MACHINE);
};

var _procReturn1017 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1017;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1015)(MACHINE);
};

var _procReturn989 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn989;
    }
    return (_afterLetBody981)(MACHINE);
};

var _procReturn968 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn968;
    }
    return (_afterLetBody960)(MACHINE);
};

var _procReturn1980 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1980;
    }
    return (_afterCall1978)(MACHINE);
};

var _procReturn1962 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1962;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall1960)(MACHINE);
};

var _procReturn1941 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1941;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1937)(MACHINE);
};

var _procReturn1928 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1928;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall1926)(MACHINE);
};

var _procReturn1912 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1912;
    }
    return (_afterCall1910)(MACHINE);
};

var _procReturn1895 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1895;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1893)(MACHINE);
};

var _beforePromptPop1885 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1885;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["root/stxmat-exercises.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1877 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1877;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1879, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry92, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "call-plt-thunk");
MACHINE.env[MACHINE.env.length - 1 - 0][81] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1867 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1867;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1869, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry89, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "on-hint-button");
MACHINE.env[MACHINE.env.length - 1 - 0][73] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1856 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1856;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1858, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry85, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "get-user-answer");
MACHINE.env[MACHINE.env.length - 1 - 0][63] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1846 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1846;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1848, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry80, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "clear-answer-input");
MACHINE.env[MACHINE.env.length - 1 - 0][51] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1836 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1836;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1838, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry75, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "clear-hint-area");
MACHINE.env[MACHINE.env.length - 1 - 0][46] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn610 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn610;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall608)(MACHINE);
};

var _beforePromptPop1820 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1820;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1822, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry67, (RUNTIME.makeArityAtLeast(1)), [MACHINE.env[MACHINE.env.length - 1 - 0]], "call-proxy");
MACHINE.env[MACHINE.env.length - 1 - 0][37] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn556 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn556;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall554)(MACHINE);
};

var _beforePromptPop1791 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1791;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1810, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry64, (RUNTIME.makeArityAtLeast(0)), [MACHINE.env[MACHINE.env.length - 1 - 0]], "stringify");
MACHINE.env[MACHINE.env.length - 1 - 0][11] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1785 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1785;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1787, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry47, (RUNTIME.makeArityAtLeast(2)), [MACHINE.env[MACHINE.env.length - 1 - 0]], "combine-exercises");
MACHINE.env[MACHINE.env.length - 1 - 0][19] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1779 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1779;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1781, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry33, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "power1-exercise");
MACHINE.env[MACHINE.env.length - 1 - 0][12] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1760 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1760;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall1758)(MACHINE);
};

var _procReturn1743 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1743;
    }
    MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
return (_afterCall1741)(MACHINE);
};

var _procReturn446 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn446;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall444)(MACHINE);
};

var _beforePromptPop1725 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1725;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1727, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry23, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][89] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn397 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn397;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall395)(MACHINE);
};

var _beforePromptPop1705 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1705;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1707, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry13, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][99] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1658 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1658;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterLetBody1650)(MACHINE);
};

var _procReturn1640 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1640;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1638)(MACHINE);
};

var _procReturn1623 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1623;
    }
    MACHINE.env[MACHINE.env.length - 1 - 98] = MACHINE.val;
return (_afterCall1621)(MACHINE);
};

var _procReturn284 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn284;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall282)(MACHINE);
};

var _procReturn276 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn276;
    }
    return (_afterCall274)(MACHINE);
};

var _procReturn1550 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1550;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1548)(MACHINE);
};

var _procReturn1531 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1531;
    }
    return (_afterCall1529)(MACHINE);
};

var _procReturn1507 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1507;
    }
    return (_afterCall1505)(MACHINE);
};

var _procReturn1489 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1489;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1487)(MACHINE);
};

var _procReturn1473 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1473;
    }
    return (_afterLetBody1465)(MACHINE);
};

var _procReturn1444 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1444;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1442)(MACHINE);
};

var _procReturn1428 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1428;
    }
    return (_afterCall1426)(MACHINE);
};

var _procReturn1409 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1409;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1407)(MACHINE);
};

var _procReturn1378 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1378;
    }
    return (_afterLetBody1176)(MACHINE);
};

var _procReturn1370 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1370;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1368)(MACHINE);
};

var _procReturn1341 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1341;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1339)(MACHINE);
};

var _procReturn1329 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1329;
    }
    return (_afterLetBody1319)(MACHINE);
};

var _procReturn1310 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1310;
    }
    return (_afterLetBody1302)(MACHINE);
};

var _procReturn1292 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1292;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall1290)(MACHINE);
};

var _procReturn1276 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1276;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1274)(MACHINE);
};

var _procReturn1260 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1260;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1258)(MACHINE);
};

var _procReturn1242 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1242;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1240)(MACHINE);
};

var _procReturn1226 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1226;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1224)(MACHINE);
};

var _procReturn1210 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1210;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1208)(MACHINE);
};

var _procReturn1186 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1186;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1184)(MACHINE);
};

var _procReturn1160 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1160;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1158)(MACHINE);
};

var _procReturn1139 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1139;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1137)(MACHINE);
};

var _procReturn1123 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1123;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1121)(MACHINE);
};

var _procReturn1103 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1103;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1101)(MACHINE);
};

var _procReturn1088 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1088;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1086)(MACHINE);
};

var _procReturn1070 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1070;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1068)(MACHINE);
};

var _procReturn1029 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1029;
    }
    return (_afterCall1027)(MACHINE);
};

var _procReturn1013 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1013;
    }
    return (_afterCall1011)(MACHINE);
};

var _procReturn985 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn985;
    }
    return (_afterCall983)(MACHINE);
};

var _start1994 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start1994;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt134, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["root/stxmat-exercises.rkt"]=new RUNTIME.ModuleRecord("stxmat-exercises", _moduleEntry1685);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn935 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn935;
    }
    return (_afterCall933)(MACHINE);
};

var _procReturn1958 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1958;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
return (_afterCall1956)(MACHINE);
};

var _procReturn895 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn895;
    }
    return (_afterCall893)(MACHINE);
};

var _procReturn1924 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1924;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall1922)(MACHINE);
};

var _procReturn1907 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1907;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1905)(MACHINE);
};

var _procReturn1891 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1891;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall1889)(MACHINE);
};

var _beforePromptPop1883 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1883;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1885, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.control.push(new RUNTIME.Frame());
MACHINE.control[MACHINE.control.length-1].pendingApplyValuesProc = MACHINE.env[MACHINE.env.length - 1 - 0][84];
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.env[MACHINE.env.length - 1 - 8][71];
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 9][5] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 9].names[5]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall1889)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1891, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPop1869 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1869;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1871, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("hidden");
MACHINE.env[MACHINE.env.length - 1 - 1] = false;
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env[MACHINE.env.length - 1 - 1] = [MACHINE.env[MACHINE.env.length - 1 - 1]];
MACHINE.val = new RUNTIME.Closure(_lamEntry90, 0, [MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "on-toggle-scratchpad");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env[MACHINE.env.length - 1 - 0][77] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1860 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1860;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1863, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry87, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "on-keyup/answer-input");
MACHINE.env[MACHINE.env.length - 1 - 0][70] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1852 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1852;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1854, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry83, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "face");
MACHINE.env[MACHINE.env.length - 1 - 0][55] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1850 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1850;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1852, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry82, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "change-answer-button-text");
MACHINE.env[MACHINE.env.length - 1 - 0][54] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn648 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn648;
    }
    return (_afterCall646)(MACHINE);
};

var _procReturn644 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn644;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall642)(MACHINE);
};

var _beforePromptPop1824 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1824;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1826, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry69, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "create-scratchpad");
MACHINE.env[MACHINE.env.length - 1 - 0][41] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn587 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn587;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall585)(MACHINE);
};

var _beforePromptPop1810 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1810;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1812, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = 0;
MACHINE.env[MACHINE.env.length - 1 - 0][28] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1783 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1783;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1785, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry43, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "squaring-binomial-exercise");
MACHINE.env[MACHINE.env.length - 1 - 0][17] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop1781 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1781;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1783, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry38, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "power2-exercise");
MACHINE.env[MACHINE.env.length - 1 - 0][16] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn1756 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1756;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
return (_afterCall1754)(MACHINE);
};

var _beforePromptPop1737 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1737;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1779, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry28, 0, [MACHINE.env[MACHINE.env.length - 1 - 0]], "addition-exercise");
MACHINE.env[MACHINE.env.length - 1 - 0][9] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn458 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn458;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall456)(MACHINE);
};

var _beforePromptPop1727 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1727;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1729, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry24, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][88] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn413 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn413;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall411)(MACHINE);
};

var _beforePromptPop1711 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1711;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1713, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry16, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][96] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt134 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt134;
    }
    MACHINE.mainModules.push(MACHINE.modules["root/stxmat-exercises.rkt"]);
};

var _procReturn330 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn330;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall328)(MACHINE);
};

var _procReturn306 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn306;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall304)(MACHINE);
};

var _procReturn296 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn296;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall294)(MACHINE);
};

var _procReturn266 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn266;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall264)(MACHINE);
};

var _procReturn208 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn208;
    }
    return (_afterCall206)(MACHINE);
};

var _procReturn168 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn168;
    }
    return (_afterCall166)(MACHINE);
};

var _procReturn138 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn138;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall136)(MACHINE);
};

var _procReturn1477 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1477;
    }
    return (_afterCall1475)(MACHINE);
};

var _procReturn1469 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1469;
    }
    return (_afterCall1467)(MACHINE);
};

var _procReturn1440 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1440;
    }
    return (_afterCall1438)(MACHINE);
};

var _procReturn1423 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1423;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1421)(MACHINE);
};

var _procReturn1405 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1405;
    }
    return (_afterCall1403)(MACHINE);
};

var _procReturn1374 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1374;
    }
    return (_afterLetBody1176)(MACHINE);
};

var _procReturn1366 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1366;
    }
    return (_afterCall1364)(MACHINE);
};

var _procReturn1353 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1353;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1351)(MACHINE);
};

var _procReturn1325 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1325;
    }
    return (_afterCall1323)(MACHINE);
};

var _procReturn1306 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1306;
    }
    return (_afterCall1304)(MACHINE);
};

var _procReturn1288 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1288;
    }
    return (_afterCall1286)(MACHINE);
};

var _procReturn1272 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1272;
    }
    return (_afterCall1270)(MACHINE);
};

var _procReturn1254 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1254;
    }
    return (_afterLetBody1202)(MACHINE);
};

var _procReturn1238 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1238;
    }
    return (_afterLetBody1202)(MACHINE);
};

var _procReturn1222 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1222;
    }
    return (_afterCall1220)(MACHINE);
};

var _procReturn1201 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1201;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterLetBody1187)(MACHINE);
};

var _procReturn1182 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1182;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1180)(MACHINE);
};

var _procReturn1156 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1156;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1154)(MACHINE);
};

var _procReturn1135 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1135;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1133)(MACHINE);
};

var _procReturn1119 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1119;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1117)(MACHINE);
};

var _procReturn1115 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1115;
    }
    return (_afterCall1113)(MACHINE);
};

var _procReturn1078 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1078;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1076)(MACHINE);
};

var _procReturn1050 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1050;
    }
    return (_afterCall1048)(MACHINE);
};

var _procReturn1045 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1045;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1043)(MACHINE);
};

var _procReturn1009 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1009;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1007)(MACHINE);
};

var _procReturn1001 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1001;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall999)(MACHINE);
};

var _procReturn964 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn964;
    }
    return (_afterCall962)(MACHINE);
};

var _procReturn959 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn959;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall957)(MACHINE);
};

var _procReturn916 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn916;
    }
    return (_afterCall914)(MACHINE);
};

var _procReturn911 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn911;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall909)(MACHINE);
};

var _procReturn867 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn867;
    }
    return (_afterCall865)(MACHINE);
};

var _procReturn823 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn823;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall821)(MACHINE);
};

var _procReturn799 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn799;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall797)(MACHINE);
};

var _procReturn779 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn779;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall777)(MACHINE);
};

var _procReturn751 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn751;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall749)(MACHINE);
};

var _procReturn727 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn727;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall725)(MACHINE);
};

var _procReturn697 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn697;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall695)(MACHINE);
};

var _procReturn672 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn672;
    }
    return (_afterCall670)(MACHINE);
};

var _procReturn664 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn664;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall662)(MACHINE);
};

var _procReturn640 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn640;
    }
    return (_afterCall638)(MACHINE);
};

var _procReturn593 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn593;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall591)(MACHINE);
};

var _procReturn581 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn581;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall579)(MACHINE);
};

var _procReturn540 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn540;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall538)(MACHINE);
};

var _procReturn524 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn524;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall522)(MACHINE);
};

var _procReturn500 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn500;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall498)(MACHINE);
};

var _procReturn478 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn478;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall476)(MACHINE);
};

var _procReturn462 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn462;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall460)(MACHINE);
};

var _procReturn454 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn454;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall452)(MACHINE);
};

var _procReturn417 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn417;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall415)(MACHINE);
};

var _procReturn407 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn407;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall405)(MACHINE);
};

var _procReturn376 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn376;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall374)(MACHINE);
};

var _procReturn356 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn356;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall354)(MACHINE);
};

var _procReturn350 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn350;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall348)(MACHINE);
};

var _procReturn322 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn322;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall320)(MACHINE);
};

var _procReturn292 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn292;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall290)(MACHINE);
};

var _procReturn258 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn258;
    }
    return (_afterCall256)(MACHINE);
};

var _procReturn238 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn238;
    }
    return (_afterCall236)(MACHINE);
};

var _procReturn198 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn198;
    }
    return (_afterCall196)(MACHINE);
};

var _procReturn158 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn158;
    }
    return (_afterCall156)(MACHINE);
};

var _beforePromptPopMultiple1880 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1880;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1881)(MACHINE);
};

var _beforePromptPopMultiple1859 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1859;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1860)(MACHINE);
};

var _beforePromptPopMultiple1851 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1851;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1852)(MACHINE);
};

var _beforePromptPopMultiple1843 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1843;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1844)(MACHINE);
};

var _beforePromptPopMultiple1835 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1835;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1836)(MACHINE);
};

var _beforePromptPopMultiple1827 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1827;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1828)(MACHINE);
};

var _beforePromptPopMultiple1819 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1819;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1820)(MACHINE);
};

var _afterCall1960 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1960;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("storeProxy();", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 10][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 10].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1967)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1969, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1956 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1956;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8][56];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall1960)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1962, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1943 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1943;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "' />";
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair("<input id='answer_input_1' type='text' value=''", RUNTIME.makePair("\n", RUNTIME.makePair("onkeyup='", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL)))));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry96, 1, [MACHINE.env[MACHINE.env.length - 1 - 16]], "...at-exercises.rkt:184:14");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1948)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1950, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1930 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1930;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 19][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "storeProxy();(~a)(~a,~a,~a)";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 20][82]);
MACHINE.val = RUNTIME.makeSymbol("on-keyup/answer-input");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1934)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1936, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1922 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1922;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8][67];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall1926)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1928, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1905 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1905;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = " </div>";
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(" <div id='exercise_title'> ", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL)));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 17][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry95, 1, [MACHINE.env[MACHINE.env.length - 1 - 17]], "...at-exercises.rkt:184:14");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1910)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1912, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1901 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1901;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 11][33]);
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 16][3] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 16].names[3]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 16][3];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 16][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1905)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1907, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1889 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1889;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1893)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1895, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1890 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1890;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1891)(MACHINE);
};

var _beforePromptPopMultiple1878 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1878;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1879)(MACHINE);
};

var _beforePromptPopMultiple1866 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1866;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1867)(MACHINE);
};

var _beforePromptPopMultiple1857 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1857;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1858)(MACHINE);
};

var _beforePromptPopMultiple1849 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1849;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1850)(MACHINE);
};

var _beforePromptPopMultiple1841 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1841;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1842)(MACHINE);
};

var _beforePromptPopMultiple1833 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1833;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1834)(MACHINE);
};

var _beforePromptPopMultiple1825 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1825;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1826)(MACHINE);
};

var _beforePromptPopMultiple1817 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1817;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1818)(MACHINE);
};

var _afterFirstSeqEvaluated1802 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterFirstSeqEvaluated1802;
    }
    MACHINE.control.push(new RUNTIME.Frame());
MACHINE.control[MACHINE.control.length-1].pendingBegin0Count = MACHINE.argcount;
MACHINE.unspliceRestFromStack(0, MACHINE.argcount);
MACHINE.control[MACHINE.control.length-1].pendingBegin0Values = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.control[MACHINE.control.length-1].pendingBegin0Values);
MACHINE.spliceListIntoStack(0);
MACHINE.argcount = MACHINE.control[MACHINE.control.length-1].pendingBegin0Count;
MACHINE.control.pop();
if (MACHINE.argcount === 0)
{
return (_afterValuesReinstated1803)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterValuesReinstated1803)(MACHINE);
}
};

var _afterCall1794 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1794;
    }
    MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry60, 0, [MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1]], "new-problem!");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry61, 0, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2]], "problem-description");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry62, 0, [MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3]], "hints");
MACHINE.env.push(undefined);
MACHINE.val = new RUNTIME.Closure(_lamEntry63, 1, [MACHINE.env[MACHINE.env.length - 1 - 7], MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.argcount = 1;
if (MACHINE.argcount === 0)
{
return (_afterFirstSeqEvaluated1802)(MACHINE);
} else {
MACHINE.env.push(MACHINE.val);
return (_afterFirstSeqEvaluated1802)(MACHINE);
}
};

var _afterCall1991 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1991;
    }
    MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterArgsEvaluated1887 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterArgsEvaluated1887;
    }
    MACHINE.proc = MACHINE.control[MACHINE.control.length-1].pendingApplyValuesProc;
MACHINE.control.pop();
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1991)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1993, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1978 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1978;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13][32];
if (MACHINE.env[MACHINE.env.length - 1 - 13][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 13][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1974)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1984, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterLetBody1974)(MACHINE);
}
};

var _afterCall1967 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1967;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13][32];
if (MACHINE.env[MACHINE.env.length - 1 - 13][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 13][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterLetBody1963)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1973, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 7] = RUNTIME.VOID;
return (_afterLetBody1963)(MACHINE);
}
};

var _procReturnMultiple1961 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1961;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1962)(MACHINE);
};

var _afterCall1948 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1948;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1946)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1954, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1949 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1949;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1950)(MACHINE);
};

var _afterCall1934 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1934;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 22][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1937)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1941, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1935 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1935;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1936)(MACHINE);
};

var _afterCall1926 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1926;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 11][33]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1930)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1932, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1918 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1918;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall1922)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1924, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1919 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1919;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1920)(MACHINE);
};

var _afterCall1910 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1910;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1908)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1916, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1906 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1906;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1907)(MACHINE);
};

var _afterCall1897 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1897;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 11][33]);
MACHINE.val = "#exercise_title";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1901)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1903, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1893 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1893;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8][83];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1897)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1899, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPopMultiple1884 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1884;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1885)(MACHINE);
};

var _beforePromptPopMultiple1876 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1876;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1877)(MACHINE);
};

var _beforePromptPopMultiple1870 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1870;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1871)(MACHINE);
};

var _beforePromptPopMultiple1864 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1864;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1865)(MACHINE);
};

var _beforePromptPopMultiple1855 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1855;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1856)(MACHINE);
};

var _beforePromptPopMultiple1847 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1847;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1848)(MACHINE);
};

var _beforePromptPopMultiple1839 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1839;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1840)(MACHINE);
};

var _beforePromptPopMultiple1831 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1831;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1832)(MACHINE);
};

var _beforePromptPopMultiple1823 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1823;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1824)(MACHINE);
};

var _beforePromptPopMultiple1815 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1815;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1816)(MACHINE);
};

var _beforePromptPopMultiple1811 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1811;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1812)(MACHINE);
};

var _afterValuesReinstated1803 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterValuesReinstated1803;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 13][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 13][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = "Powers";
MACHINE.env[MACHINE.env.length - 1 - 1] = "Combines all power exercises";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1804)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1808, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1795 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1795;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1796)(MACHINE);
};

var _procReturnMultiple1992 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1992;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1993)(MACHINE);
};

var _procReturnMultiple1983 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1983;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1984)(MACHINE);
};

var _procReturnMultiple1979 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1979;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1980)(MACHINE);
};

var _procReturnMultiple1972 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1972;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1973)(MACHINE);
};

var _procReturnMultiple1968 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1968;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1969)(MACHINE);
};

var _procReturnMultiple1957 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1957;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1958)(MACHINE);
};

var _procReturnMultiple1953 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1953;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1954)(MACHINE);
};

var _procReturnMultiple1944 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1944;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1945)(MACHINE);
};

var _procReturnMultiple1940 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1940;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1941)(MACHINE);
};

var _procReturnMultiple1931 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1931;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1932)(MACHINE);
};

var _procReturnMultiple1927 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1927;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1928)(MACHINE);
};

var _procReturnMultiple1923 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1923;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1924)(MACHINE);
};

var _procReturnMultiple1915 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1915;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1916)(MACHINE);
};

var _procReturnMultiple1911 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1911;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1912)(MACHINE);
};

var _procReturnMultiple1902 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1902;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1903)(MACHINE);
};

var _procReturnMultiple1898 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1898;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1899)(MACHINE);
};

var _procReturnMultiple1894 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1894;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1895)(MACHINE);
};

var _beforePromptPopMultiple1882 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1882;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1883)(MACHINE);
};

var _beforePromptPopMultiple1874 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1874;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1875)(MACHINE);
};

var _beforePromptPopMultiple1868 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1868;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1869)(MACHINE);
};

var _beforePromptPopMultiple1862 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1862;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1863)(MACHINE);
};

var _beforePromptPopMultiple1853 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1853;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1854)(MACHINE);
};

var _beforePromptPopMultiple1845 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1845;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1846)(MACHINE);
};

var _beforePromptPopMultiple1837 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1837;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1838)(MACHINE);
};

var _beforePromptPopMultiple1829 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1829;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1830)(MACHINE);
};

var _beforePromptPopMultiple1821 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1821;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1822)(MACHINE);
};

var _beforePromptPopMultiple1813 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1813;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1814)(MACHINE);
};

var _beforePromptPopMultiple1809 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1809;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1810)(MACHINE);
};

var _procReturnMultiple1807 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1807;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1808)(MACHINE);
};

var _beforePromptPopMultiple1790 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1790;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1791)(MACHINE);
};

var _afterCall682 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall682;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall686)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn688, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall686 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall686;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall286 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall286;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 13][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.env[MACHINE.env.length - 1 - 13][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = " $$";
MACHINE.proc = "a";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 2] = "^2\\cdot x^2 + 2\\cdot(";
MACHINE.proc = "a";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 4] = ")\\cdot ";
MACHINE.proc = "b";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 6] = " + ";
MACHINE.proc = "b";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.val = "^2$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.val;
MACHINE.argcount = 9;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall290)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn292, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall368 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall368;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf352)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall374)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn376, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall604 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall604;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3][0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5][0])));
MACHINE.env[MACHINE.env.length - 1 - 2][0] = plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5][0]))), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 2, MACHINE.env[MACHINE.env.length - 1 - 4][0])));
MACHINE.env[MACHINE.env.length - 1 - 1][0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])));
MACHINE.val = RUNTIME.VOID;
return (_afterIf583)(MACHINE);
};

var _afterLetBody1594 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1594;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.env[MACHINE.env.length - 1 - 3] = "function(v){return v;}";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall695 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall695;
    }
    MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry55, 0, [MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1]], "new-problem!");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry56, 0, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2]], "problem-description");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry57, 0, [MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3]], "hints");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry58, 1, [MACHINE.env[MACHINE.env.length - 1 - 7], MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 13][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 13][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = "Powers";
MACHINE.env[MACHINE.env.length - 1 - 1] = "Combines all power exercises";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall374 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall374;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall378)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn380, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall348 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall348;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf352)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall354)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn356, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall290 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall290;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 11][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 11].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = " $$";
MACHINE.proc = "c2";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 2] = "x^2 + ";
MACHINE.proc = "c1";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 4] = "x + ";
MACHINE.proc = "c3";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.val = "$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall294)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn296, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1076 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1076;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 5] === RUNTIME.makeSymbol("happy"));
if (MACHINE.val === false)
{
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1082)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1084, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = "inline";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1082)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1084, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall717 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall717;
    }
    MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][5] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[5]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall721)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn723, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1023 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1023;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1027)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1029, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1011 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1011;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#scratchpad_toggle";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1015)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1017, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall364 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall364;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall368)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn370, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall999 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall999;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "val";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall941 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall941;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1262 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1262;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#happy";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1266)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1268, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1258 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1258;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "val";
MACHINE.val = "Check Answer";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1262)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1264, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1417 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1417;
    }
    if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf1415)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1421)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1423, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall721 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall721;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall725)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn727, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1394 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1394;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1398)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1400, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1027 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1027;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#scratchpad_toggle";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1031)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1033, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1364 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1364;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1368)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1370, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1351 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1351;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "' />";
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair("<input id='answer_input_1' type='text' value=''", RUNTIME.makePair("\n", RUNTIME.makePair("onkeyup='", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL)))));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][94];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1356)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1358, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1007 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1007;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "inline";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1011)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1013, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall670 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall670;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall674)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn676, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall354 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall354;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall358)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn360, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall344 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall344;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall348)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn350, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall650 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall650;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1274 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1274;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1278)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1280, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1621 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1621;
    }
    MACHINE.env[MACHINE.env.length - 1 - 99] = "'>Show ScratchPad</a>";
MACHINE.env[MACHINE.env.length - 1 - 100] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 101] = "<div id='answer_area'>";
MACHINE.env[MACHINE.env.length - 1 - 102] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 103] = "<div id='answer_area_title'>Answer</div>";
MACHINE.env[MACHINE.env.length - 1 - 104] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 105] = "<div><input id='answer_input_1' type='text' value='7' /></div>";
MACHINE.env[MACHINE.env.length - 1 - 106] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 107] = "<input id='answer_button' type='button' onclick='";
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 141][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "storeProxy();(~a)(~a,~a)";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 142][82]);
MACHINE.val = RUNTIME.makeSymbol("on-answer-button");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1625)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1627, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall600 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall600;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3][0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5][0])));
MACHINE.env[MACHINE.env.length - 1 - 2][0] = plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5][0]))), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 2, MACHINE.env[MACHINE.env.length - 1 - 4][0])));
MACHINE.env[MACHINE.env.length - 1 - 1][0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])));
MACHINE.val = RUNTIME.VOID;
return (_afterIf589)(MACHINE);
};

var _afterCall1096 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1096;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 5][58];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][59]);
MACHINE.val = "#streak_bar_left";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1101)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1103, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1615 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1615;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.val = "function(v){return v;}";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 98] = MACHINE.val;
return (_afterCall1621)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1623, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall725 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall725;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1060 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1060;
    }
    MACHINE.val = "focus";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1495 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1495;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1505)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1507, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1368 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1368;
    }
    MACHINE.val = "focus";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1176)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1374, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1319 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1319;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2][72] = -1;
MACHINE.val = RUNTIME.VOID;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][33]);
MACHINE.val = "#hint_button";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1331)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1333, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1302 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1302;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1312)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1314, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1015 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1015;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "html";
MACHINE.val = "Hide ScratchPad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1187 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1187;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.val = false;
return (_afterIf1206)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][8]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1208)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1210, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall358 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall358;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf352)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall364)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn366, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody960 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody960;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall970)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn972, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall658 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall658;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall662)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn664, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall978 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall978;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "append";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div> ", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 6], RUNTIME.makePair(" </div>", RUNTIME.NULL)));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][91];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall983)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn985, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall642 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall642;
    }
    MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][5] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[5]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall646)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn648, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1667 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1667;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall620 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall620;
    }
    MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry49, 0, [MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1]], "new-problem!");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry50, 0, [MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2]], "problem-description");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry51, 0, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3]], "hints");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry52, 1, [MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 12][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 12].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1638 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1638;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 144][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1641)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1645, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1270 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1270;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#sad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1274)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1276, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1266 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1266;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1270)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1272, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall282 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall282;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 17][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 17].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 12] = MACHINE.env[MACHINE.env.length - 1 - 17][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "($$";
MACHINE.proc = "a";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 2] = "\\cdot x + ";
MACHINE.proc = "b";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 4] = ")^2 = (";
MACHINE.proc = "a";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 6] = "\\cdot x)^2 + 2\\cdot(";
MACHINE.proc = "a";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 8] = ")\\cdot ";
MACHINE.proc = "b";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.env[MACHINE.env.length - 1 - 10] = " + ";
MACHINE.proc = "b";
RUNTIME.raiseOperatorApplicationError(MACHINE, MACHINE.proc);
MACHINE.val = "^2";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 12] = MACHINE.val;
MACHINE.argcount = 13;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall286)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn288, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1604 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1604;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.val = "function(v){return v;}";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1608)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1610, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall761 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall761;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall448 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall448;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall737 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall737;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1068 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1068;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "val";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1403 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1403;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#hint_button";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1407)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1409, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall415 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall415;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall421)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn423, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall713 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall713;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall717)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn719, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall401 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall401;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall405)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn407, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1039 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1039;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 8][52] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 8].names[52]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][52];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("on-keyup/answer-input");
MACHINE.val = "event.keyCode";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1043)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1045, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1031 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1031;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "html";
MACHINE.val = "Show ScratchPad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple696 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple696;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn697)(MACHINE);
};

var _afterCall1356 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1356;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1354)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1362, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf1206 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf1206;
    }
    if (MACHINE.val === false)
{
MACHINE.env[MACHINE.env.length - 1 - 2][0] = RUNTIME.makeSymbol("check");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 3][28] = 0;
MACHINE.val = RUNTIME.VOID;
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][33]);
MACHINE.val = "#happy";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1240)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1242, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2][0] = RUNTIME.makeSymbol("next");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 3][28] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3][28])) ? (MACHINE.env[MACHINE.env.length - 1 - 3][28]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3][28])), 1);
MACHINE.val = RUNTIME.VOID;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#answer_button";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1216)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1218, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall1343 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1343;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][33]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1347)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1349, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall674 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall674;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody981 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody981;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall991)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn993, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall662 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall662;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody891 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody891;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall901)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn903, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall328 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall328;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 11][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 11].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "The sum ";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = " + ";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = " is equal to ";
MACHINE.env[MACHINE.env.length - 1 - 5] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 10][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 10][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 10][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 9][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 9][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 9][0])));
MACHINE.val = ".";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall332)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn334, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1312 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1312;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1316)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1318, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall638 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall638;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall642)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn644, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall949 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall949;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "block";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall304 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall304;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 10;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall308)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn310, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1634 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1634;
    }
    MACHINE.env[MACHINE.env.length - 1 - 109] = "' value='Check Answer'/>";
MACHINE.env[MACHINE.env.length - 1 - 110] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 111] = "<div><img id='sad' style='display: none;' src='../pics/face-sad.gif'/></div>";
MACHINE.env[MACHINE.env.length - 1 - 112] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 113] = "<div><img id='happy' style='display: none;' src='../pics/face-happy.gif'/></div>";
MACHINE.env[MACHINE.env.length - 1 - 114] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 115] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 116] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 117] = "<div id='help_area'>";
MACHINE.env[MACHINE.env.length - 1 - 118] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 119] = "<div id='help_area_title'>Need help?</div>";
MACHINE.env[MACHINE.env.length - 1 - 120] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 121] = "<input id='hint_button' type='button' onclick='storeProxy();";
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 141][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "storeProxy();(~a)(~a,~a)";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 142][82]);
MACHINE.val = RUNTIME.makeSymbol("on-hint-button");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1638)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1640, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall294 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall294;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 2], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 3], RUNTIME.NULL))));
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall1625 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1625;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 144][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1628)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1632, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall922 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall922;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall926)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn928, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall909 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall909;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div id='problem_area'> ", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 6], RUNTIME.makePair(" </div>", RUNTIME.NULL)));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][89];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall914)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn916, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall484 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall484;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall460 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall460;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 15][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 15].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.env[MACHINE.env.length - 1 - 15][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 14][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = "^";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 13][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = " = ";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 14][0];
MACHINE.env[MACHINE.env.length - 1 - 6] = " ";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 17][14];
MACHINE.env.push(undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 19][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 19].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 19][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "\\cdot ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 18][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall464)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn466, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall749 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall749;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall745 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall745;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall749)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn751, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall440 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall440;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 7][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 7].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][11];
MACHINE.val = "The power $a^n$ is $a$ multiplied with itself $n$ times.";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall452)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn454, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 5][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 5].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][11];
MACHINE.val = "The power $a^0$ is defined to be $1$.";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall444)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn446, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall733 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall733;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall737)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn739, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1407 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1407;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "val";
MACHINE.val = "Get another hint";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1411)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1413, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1398 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1398;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][28] = 0;
MACHINE.val = RUNTIME.VOID;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1][56];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1403)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1405, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall405 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall405;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall411)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn413, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall1043 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1043;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "' />";
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair("<input id='answer_input_1' type='text' value=''", RUNTIME.makePair("\n", RUNTIME.makePair("onkeyup='", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL)))));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][92];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1048)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1050, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall395 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall395;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall401)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn403, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody1354 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1354;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1364)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1366, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn606 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn606;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall604)(MACHINE);
};

var _afterCall378 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall378;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf352)(MACHINE);
} else {
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.argcount = 0;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn385, MACHINE.proc));
return (_lamEntry34)(MACHINE);
}
};

var _afterLetBody1202 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1202;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody1176)(MACHINE);
};

var _procReturnMultiple683 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple683;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn684)(MACHINE);
};

var _afterCall1339 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1339;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1343)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1345, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1331 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1331;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "val";
MACHINE.val = "Get Hint";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1335)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1337, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody912 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody912;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall922)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn924, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1323 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1323;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][32];
if (MACHINE.env[MACHINE.env.length - 1 - 8][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 8].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1319)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1329, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterLetBody1319)(MACHINE);
}
};

var _afterCall646 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall646;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall650)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn652, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1677 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1677;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall316 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall316;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][10]);
MACHINE.val = 10;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall320)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn322, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1286 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1286;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 4][6] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 4].names[6]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4][6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall1290)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1292, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1278 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1278;
    }
    MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][5] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[5]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall1282)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1284, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple942 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple942;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn943)(MACHINE);
};

var _afterCall933 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall933;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
if (MACHINE.env[MACHINE.env.length - 1 - 5][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 5].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf583 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf583;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][18];
MACHINE.env[MACHINE.env.length - 1 - 0] = 2;
MACHINE.val = 6;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall608)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn610, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf589 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf589;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][18];
MACHINE.env[MACHINE.env.length - 1 - 0] = 2;
MACHINE.val = 6;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall604)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn606, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall585 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall585;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf589)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][18];
MACHINE.env[MACHINE.env.length - 1 - 0] = 2;
MACHINE.val = 6;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall591)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn593, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall1475 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1475;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall773 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall773;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall777)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn779, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1438 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1438;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1442)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1444, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall757 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall757;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall761)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn763, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1082 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1082;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#sad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1086)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1088, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1421 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1421;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div id='hint_area'> </div>", RUNTIME.NULL);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][98];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1426)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1428, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple738 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple738;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn739)(MACHINE);
};

var _afterCall1411 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1411;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][72] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][72])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][72]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1][72])), 1);
MACHINE.val = RUNTIME.VOID;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][74]);
if (MACHINE.env[MACHINE.env.length - 1 - 2][72] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 2].names[72]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2][72];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1417)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1419, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1525 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1525;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 1][0] = true;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.val = RUNTIME.VOID;
return (_afterIf1524)(MACHINE);
};

var _afterCall1762 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1762;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.primitives["make-struct-field-accessor"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = 4;
MACHINE.val = RUNTIME.makeSymbol("hints");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterCall1766)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1768, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall411 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall411;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall415)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn417, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1048 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1048;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1046)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1054, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1424 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1424;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1434)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1436, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall391 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall391;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall395)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn397, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry58 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry58;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][8]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall757)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn759, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn602 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn602;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall600)(MACHINE);
};

var _lamEntry79 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry79;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#scratchpad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1023)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1025, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1347 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1347;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 10][52] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 10].names[52]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][52];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("on-keyup/answer-input");
MACHINE.val = "event.keyCode";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1351)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1353, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1008 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1008;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1009)(MACHINE);
};

var _afterLetBody1046 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1046;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1335 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1335;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1339)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1341, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall991 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall991;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall983 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall983;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody981)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn989, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1316 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1316;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("MathJax.Hub.Queue(['Typeset',MathJax.Hub]);", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 5][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 5].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1323)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1325, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple647 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple647;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn648)(MACHINE);
};

var _afterCall320 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall320;
    }
    MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall962 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall962;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody960)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn968, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1647 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1647;
    }
    MACHINE.env[MACHINE.env.length - 1 - 123] = "' value='Get Hint'/>";
MACHINE.env[MACHINE.env.length - 1 - 124] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 125] = "<p></p>";
MACHINE.env[MACHINE.env.length - 1 - 126] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 127] = "<div>Beware: Getting a hint will reset your streak</div>";
MACHINE.env[MACHINE.env.length - 1 - 128] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 129] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 130] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 131] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 132] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 133] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 134] = RUNTIME.makePair("<script>", RUNTIME.makePair("\n", RUNTIME.makePair("function Proxy() {}", RUNTIME.makePair("\n", RUNTIME.makePair("Proxy.prototype.jsEval = function(expr) { return eval(expr); };", RUNTIME.makePair("\n", RUNTIME.makePair("var proxy = new Proxy();", RUNTIME.makePair("\n", RUNTIME.makePair("var storeProxy = function(){", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 2], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 3], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 4], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 5], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 6], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 7], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 8], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 9], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 10], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 11], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 12], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 13], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 14], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 15], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 16], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 17], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 18], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 19], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 20], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 21], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 22], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 23], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 24], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 25], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 26], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 27], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 28], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 29], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 30], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 31], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 32], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 33], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 34], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 35], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 36], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 37], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 38], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 39], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 40], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 41], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 42], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 43], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 44], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 45], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 46], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 47], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 48], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 49], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 50], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 51], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 52], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 53], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 54], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 55], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 56], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 57], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 58], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 59], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 60], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 61], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 62], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 63], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 64], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 65], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 66], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 67], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 68], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 69], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 70], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 71], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 72], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 73], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 74], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 75], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 76], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 77], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 78], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 79], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 80], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 81], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 82], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 83], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 84], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 85], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 86], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 87], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 88], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 89], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 90], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 91], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 92], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 93], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 94], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 95], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 96], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 97], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 98], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 99], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 100], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 101], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 102], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 103], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 104], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 105], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 106], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 107], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 108], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 109], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 110], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 111], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 112], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 113], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 114], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 115], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 116], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 117], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 118], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 119], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 120], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 121], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 122], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 123], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 124], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 125], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 126], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 127], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 128], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 129], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 130], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 131], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 132], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 133], RUNTIME.NULL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
MACHINE.env.length = MACHINE.env.length - 134;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][99];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1652)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1654, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1282 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1282;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1286)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1288, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry48 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry48;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall608 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall608;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3][0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5][0])));
MACHINE.env[MACHINE.env.length - 1 - 2][0] = plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5][0]))), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 2, MACHINE.env[MACHINE.env.length - 1 - 4][0])));
MACHINE.env[MACHINE.env.length - 1 - 1][0] = plt.baselib.numbers.multiply(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 4][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4][0])));
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall926 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall926;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("MathJax.Hub.Queue(['Typeset',MathJax.Hub]);", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 2][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 2].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall933)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn935, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple923 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple923;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn924)(MACHINE);
};

var _afterCall591 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall591;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.val = RUNTIME.VOID;
return (_afterIf595)(MACHINE);
} else {
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.argcount = 0;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn598, MACHINE.proc));
return (_lamEntry44)(MACHINE);
}
};

var _afterCall274 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall274;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall901 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall901;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1566 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1566;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "html";
MACHINE.val = "Show ScratchPad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall136 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall136;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "appendTo";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][34];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall472 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall472;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 13][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 13].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 13][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = "^";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 11][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = " = ";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14][0];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall476)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn478, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall468 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall468;
    }
    MACHINE.val = ".$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.val;
MACHINE.argcount = 9;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall472)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn474, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall456 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall456;
    }
    MACHINE.val = ".$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall460)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn462, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall452 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall452;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 11][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 11].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$a^";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = " = a ";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = "\\cdot a";
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 11][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 11][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 11][0])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall456)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn458, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1086 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1086;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 5] === RUNTIME.makeSymbol("sad"));
if (MACHINE.val === false)
{
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = "inline";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall444 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall444;
    }
    MACHINE.env.push(undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 7][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 7].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][0];
MACHINE.val = "^0 = 1.$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall448)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn450, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple441 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple441;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn442)(MACHINE);
};

var _afterLetBody1581 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1581;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.val = "function(v){return v;}";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1770 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1770;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.val;
MACHINE.argcount = 9;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.argcount = 1;
RUNTIME.raiseContextExpectedValuesError(MACHINE, 9);
return (_afterLetBody1739)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1776, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1766 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1766;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.primitives["make-struct-field-accessor"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = 5;
MACHINE.val = RUNTIME.makeSymbol("check-answer");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1770)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1772, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1758 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1758;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.primitives["make-struct-field-accessor"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = 3;
MACHINE.val = RUNTIME.makeSymbol("problem-description");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
return (_afterCall1762)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1764, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1754 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1754;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.primitives["make-struct-field-accessor"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = 2;
MACHINE.val = RUNTIME.makeSymbol("new-problem!");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall1758)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1760, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf1415 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf1415;
    }
    MACHINE.env.push(undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][72] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[72]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][72];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][75]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1452)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1454, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1741 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1741;
    }
    MACHINE.env[MACHINE.env.length - 1 - 7] = false;
MACHINE.env[MACHINE.env.length - 1 - 8] = RUNTIME.makePair(0, RUNTIME.makePair(1, RUNTIME.makePair(2, RUNTIME.makePair(3, RUNTIME.makePair(4, RUNTIME.makePair(5, RUNTIME.NULL))))));
MACHINE.env[MACHINE.env.length - 1 - 9] = false;
MACHINE.val = RUNTIME.makeSymbol("exercise");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 10] = MACHINE.val;
MACHINE.argcount = 11;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.argcount = 1;
RUNTIME.raiseContextExpectedValuesError(MACHINE, 5);
return (_afterCall1745)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1747, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry56 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry56;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][6] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[6]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][6];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall733)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn735, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry55 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry55;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][10]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][21]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall713)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn715, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry53 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry53;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1][12], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1][16], RUNTIME.NULL));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry54, 1, [], "...at-exercises.rkt:152:18");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall695)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn697, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple687 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple687;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn688)(MACHINE);
};

var _procReturn536 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn536;
    }
    MACHINE.env[MACHINE.env.length - 1 - 10] = MACHINE.val;
return (_afterCall534)(MACHINE);
};

var _afterLetBody1140 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1140;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple671 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple671;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn672)(MACHINE);
};

var _procReturnMultiple992 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple992;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn993)(MACHINE);
};

var _procReturnMultiple988 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple988;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn989)(MACHINE);
};

var _afterCall332 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall332;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple643 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple643;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn644)(MACHINE);
};

var _afterCall1304 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1304;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1302)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1310, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1294 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1294;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#problem_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1299)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1301, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall957 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall957;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div id='hint_area'> </div>", RUNTIME.NULL);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][90];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall962)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn964, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1652 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1652;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterLetBody1650)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1658, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple621 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple621;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn622)(MACHINE);
};

var _lamEntry73 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry73;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall941)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn943, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf352 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf352;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 12][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 12].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = "Powers with natural exponents";
MACHINE.env[MACHINE.env.length - 1 - 1] = "Powers with natural exponents.";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple934 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple934;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn935)(MACHINE);
};

var _procReturnMultiple601 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple601;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn602)(MACHINE);
};

var _afterCall914 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall914;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody912)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn920, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1244 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1244;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][33]);
MACHINE.val = "#sad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1248)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1250, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall579 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall579;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 5][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
return (_afterIf583)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][18];
MACHINE.env[MACHINE.env.length - 1 - 0] = 2;
MACHINE.val = 6;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall585)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn587, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall236 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall236;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall554 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall554;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall550 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall550;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 2], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 3], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 4], RUNTIME.NULL)))));
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall1544 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1544;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#scratchpad_toggle";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1548)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1550, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf1524 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf1524;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][0]);
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.makeSymbol("hidden"));
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.makeSymbol("shown"));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 1][0] = RUNTIME.makeSymbol("hidden");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][33]);
MACHINE.val = "#scratchpad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1558)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1560, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 1][0] = RUNTIME.makeSymbol("shown");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][33]);
MACHINE.val = "#scratchpad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1540)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1542, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall176 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall176;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall166;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall498 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall498;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = plt.baselib.numbers.subtract(-1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.VOID;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 12][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 12].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = "Powers with negative exponents";
MACHINE.env[MACHINE.env.length - 1 - 1] = "Powers with natural exponents.";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall797 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall797;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1121 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1121;
    }
    MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1125)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1127, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall781 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall781;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall785)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn787, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall777 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall777;
    }
    MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][5] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[5]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall781)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn783, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1937 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1937;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.env[MACHINE.env.length - 1 - 3] = "function(v){return v;}";
MACHINE.val = "event.keyCode";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1943)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1945, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1101 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1101;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "width";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][60];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][61];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = 297;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1105)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1107, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1442 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1442;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "block";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf1415)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1448, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1745 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1745;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.primitives["values"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.primitives["make-struct-field-accessor"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = RUNTIME.makeSymbol("title");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall1750)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1752, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1426 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1426;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1424)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1432, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1641 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1641;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.val = "function(v){return v;}";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 122] = MACHINE.val;
return (_afterCall1647)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1649, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn856 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn856;
    }
    return (_afterCall854)(MACHINE);
};

var _afterCall425 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall425;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2][0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0]))))&&(plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 1][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1][0])),0)));
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.argcount = 0;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry34)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall421 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall421;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall425)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn427, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple722 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple722;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn723)(MACHINE);
};

var _afterLetBody1490 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1490;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("MathJax.Hub.Queue(['Typeset',MathJax.Hub]);", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 3][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1516)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1518, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1465 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1465;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1475)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1477, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1750 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1750;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.primitives["make-struct-field-accessor"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = 1;
MACHINE.val = RUNTIME.makeSymbol("summary");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
return (_afterCall1754)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1756, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1176 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1176;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1][56];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry57 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry57;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][7] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[7]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall745)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn747, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1365 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1365;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1366)(MACHINE);
};

var _lamEntry54 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry54;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1016 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1016;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1017)(MACHINE);
};

var _procReturn532 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn532;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall530)(MACHINE);
};

var _procReturnMultiple675 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple675;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn676)(MACHINE);
};

var _procReturn496 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn496;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall494)(MACHINE);
};

var _procReturnMultiple663 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple663;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn664)(MACHINE);
};

var _procReturnMultiple659 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple659;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn660)(MACHINE);
};

var _procReturnMultiple984 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple984;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn985)(MACHINE);
};

var _procReturn403 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn403;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall401)(MACHINE);
};

var _afterCall970 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall970;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1299 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1299;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div id='problem_area'> ", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 5], RUNTIME.makePair(" </div>", RUNTIME.NULL)));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12][95];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1304)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1306, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1290 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1290;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1294)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1296, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall308 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall308;
    }
    MACHINE.val = RUNTIME.VOID;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 12][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 12].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = "Addition";
MACHINE.env[MACHINE.env.length - 1 - 1] = "Sums of one digit numbers.";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry74 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry74;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall949)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn951, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry29 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry29;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][10]);
MACHINE.val = 10;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall316)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn318, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple609 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple609;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn610)(MACHINE);
};

var _procReturnMultiple927 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple927;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn928)(MACHINE);
};

var _procReturn1503 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1503;
    }
    return (_afterLetBody1495)(MACHINE);
};

var _afterCall1608 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1608;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = ";};";
MACHINE.env[MACHINE.env.length - 1 - 2] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 3] = "</script>";
MACHINE.env[MACHINE.env.length - 1 - 4] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 5] = "<style>";
MACHINE.env[MACHINE.env.length - 1 - 6] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 7] = "#scratchpad { padding-left: 30px; overflow: hidden; display: inline; }";
MACHINE.env[MACHINE.env.length - 1 - 8] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 9] = "#scratchpad svg { position: absolute; z-index: 1; min-height: 350px; width: 50%; height: 85%;}";
MACHINE.env[MACHINE.env.length - 1 - 10] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 11] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 12] = "#exercise_title{font-size: xx-large; display: inline; height:";
MACHINE.env[MACHINE.env.length - 1 - 13] = 35;
MACHINE.env[MACHINE.env.length - 1 - 14] = "}";
MACHINE.env[MACHINE.env.length - 1 - 15] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 16] = "#streak_bar_area{float:right; position: relative;}";
MACHINE.env[MACHINE.env.length - 1 - 17] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 18] = "#streak_bar{float:left; position:relative; border:1px; border-color: black; border-style: solid;}";
MACHINE.env[MACHINE.env.length - 1 - 19] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 20] = "#streak_bar_left {float:left; height: ";
MACHINE.env[MACHINE.env.length - 1 - 21] = 30;
MACHINE.env[MACHINE.env.length - 1 - 22] = "px; position:relative; width:50px; background-color: green;";
MACHINE.env[MACHINE.env.length - 1 - 23] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 24] = "                                      ";
MACHINE.env[MACHINE.env.length - 1 - 25] = "border-right: solid; border-width: 1px;}";
MACHINE.env[MACHINE.env.length - 1 - 26] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 27] = "#streak_bar_right{float:left; height: ";
MACHINE.env[MACHINE.env.length - 1 - 28] = 30;
MACHINE.env[MACHINE.env.length - 1 - 29] = "px; position:relative; width:50px; background-color: red;}";
MACHINE.env[MACHINE.env.length - 1 - 30] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 31] = "#streak_bar_current{position:absolute; left: 5px; bottom: 5px; color: white; display: inline; z-index: 1;}";
MACHINE.env[MACHINE.env.length - 1 - 32] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 33] = "#title_spacer{height: 20px; clear:both;}";
MACHINE.env[MACHINE.env.length - 1 - 34] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 35] = "#problem_and_answer_area{}";
MACHINE.env[MACHINE.env.length - 1 - 36] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 37] = "#problem_and_hint_area{float: left;}";
MACHINE.env[MACHINE.env.length - 1 - 38] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 39] = "#problem_area{padding-left: 50px;}";
MACHINE.env[MACHINE.env.length - 1 - 40] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 41] = "#hint_area{padding-left: 50px; margin-top: 10px; border: 1px;}";
MACHINE.env[MACHINE.env.length - 1 - 42] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 43] = "#answer_and_help_area{float: right; width: 300px;}";
MACHINE.env[MACHINE.env.length - 1 - 44] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 45] = "#scratchpad_toggle{ text-decoration: underline; color: dodgerblue;}";
MACHINE.env[MACHINE.env.length - 1 - 46] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 47] = "#answer_area{border: 1px; border-style: solid; border-color: black; background-color: lightblue; padding: 10px;}";
MACHINE.env[MACHINE.env.length - 1 - 48] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 49] = "#answer_area_title{position:relative; font-size:large; margin-bottom: 10px; }";
MACHINE.env[MACHINE.env.length - 1 - 50] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 51] = "#answer_input_1{margin-bottom: 10px}";
MACHINE.env[MACHINE.env.length - 1 - 52] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 53] = "#help_area{border: 1px; border-style: solid; border-color: black; background-color: lightblue; padding: 10px; margin-top: 15px;}";
MACHINE.env[MACHINE.env.length - 1 - 54] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 55] = "#help_area_title{position:relative; font-size:large; margin-bottom: 10px;}";
MACHINE.env[MACHINE.env.length - 1 - 56] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 57] = "</style>";
MACHINE.env[MACHINE.env.length - 1 - 58] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 59] = "<div id='title_area'>";
MACHINE.env[MACHINE.env.length - 1 - 60] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 61] = "<div id='exercise_title'>Addition</div>";
MACHINE.env[MACHINE.env.length - 1 - 62] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 63] = "<div id='streak_bar_area'>";
MACHINE.env[MACHINE.env.length - 1 - 64] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 65] = "<div id='streak_bar'>";
MACHINE.env[MACHINE.env.length - 1 - 66] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 67] = "<div id='streak_bar_current'>0</div>";
MACHINE.env[MACHINE.env.length - 1 - 68] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 69] = "<div id='streak_bar_left'>  </div>";
MACHINE.env[MACHINE.env.length - 1 - 70] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 71] = "<div id='streak_bar_right'> </div>";
MACHINE.env[MACHINE.env.length - 1 - 72] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 73] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 74] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 75] = "<div>Streak...</div>";
MACHINE.env[MACHINE.env.length - 1 - 76] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 77] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 78] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 79] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 80] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 81] = "<div id='title_spacer'></div>";
MACHINE.env[MACHINE.env.length - 1 - 82] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 83] = "<div id='problem_and_answer_area'>";
MACHINE.env[MACHINE.env.length - 1 - 84] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 85] = "<div id='problem_and_hint_area'>";
MACHINE.env[MACHINE.env.length - 1 - 86] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 87] = "<div id='scratchpad'><div></div></div>";
MACHINE.env[MACHINE.env.length - 1 - 88] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 89] = "<div id='problem_area'>1+2=?</div>";
MACHINE.env[MACHINE.env.length - 1 - 90] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 91] = "<div id='hint_area'>Hints are displayed here</div>";
MACHINE.env[MACHINE.env.length - 1 - 92] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 93] = "</div>";
MACHINE.env[MACHINE.env.length - 1 - 94] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 95] = "<div id='answer_and_help_area'>";
MACHINE.env[MACHINE.env.length - 1 - 96] = "\n";
MACHINE.env[MACHINE.env.length - 1 - 97] = "<a id='scratchpad_toggle' onclick='";
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 141][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "storeProxy();(~a)(~a,~a)";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 142][82]);
MACHINE.val = RUNTIME.makeSymbol("on-toggle-scratchpad");
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1612)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1614, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1248 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1248;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "inline";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1202)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1254, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall264 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall264;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "appendTo";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][34];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1578 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1578;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1581)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1585, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1220 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1220;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][33]);
MACHINE.val = "#happy";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1224)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1226, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall876 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall876;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
if (MACHINE.env[MACHINE.env.length - 1 - 5][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 5].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall226 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall226;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall865 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall865;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
if (MACHINE.env[MACHINE.env.length - 1 - 5][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 5].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall538 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall538;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 16][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 16].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.env[MACHINE.env.length - 1 - 16][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = "^{";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = "} = \\frac{1}{";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 18][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 17][0];
MACHINE.val = plt.baselib.numbers.subtract(0, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 16][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 16][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 16][0])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
return (_afterCall542)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn544, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1180 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1180;
    }
    MACHINE.val = "val";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1184)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1186, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1529 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1529;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
if (MACHINE.env[MACHINE.env.length - 1 - 7][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 7].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1525)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1535, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterLetBody1525)(MACHINE);
}
};

var _afterCall1516 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1516;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
if (MACHINE.env[MACHINE.env.length - 1 - 6][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 6].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall1505 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1505;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1490)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1511, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1137 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1137;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "</span>";
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair("<span>", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL)));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][93];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1142)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1144, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall146 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall146;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall793 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall793;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall797)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn799, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple485 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple485;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn486)(MACHINE);
};

var _afterCall1117 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1117;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "width";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][60];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][61];
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(297, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 8])));
MACHINE.val = 297;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1121)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1123, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall476 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall476;
    }
    MACHINE.val = ".$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall480)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn482, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1105 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1105;
    }
    MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1109)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1111, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1804 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1804;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 0][24] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterLetBody1739 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1739;
    }
    MACHINE.env.splice(MACHINE.env.length - ((9 - 1) + 5), 5);
MACHINE.env[MACHINE.env.length - 1 - 8][0] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 8][1] = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 8][2] = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 8][3] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 8][4] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 8][5] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 8][6] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 8][7] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 8][8] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall1434 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1434;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1438)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1440, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1650 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1650;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][31];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][100];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1628 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1628;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 2] = "function(v){return v;}";
MACHINE.val = "function(v){return v;}";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 108] = MACHINE.val;
return (_afterCall1634)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1636, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry83 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry83;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#happy";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1076)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1078, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple734 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple734;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn735)(MACHINE);
};

var _procReturnMultiple726 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple726;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn727)(MACHINE);
};

var _procReturn775 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn775;
    }
    return (_afterCall773)(MACHINE);
};

var _procReturnMultiple718 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple718;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn719)(MACHINE);
};

var _procReturnMultiple714 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple714;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn715)(MACHINE);
};

var _lamEntry87 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry87;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])),13)));
if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][71];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][67];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturn660 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn660;
    }
    return (_afterCall658)(MACHINE);
};

var _procReturn622 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn622;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall620)(MACHINE);
};

var _procReturnMultiple1361 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1361;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1362)(MACHINE);
};

var _procReturn573 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn573;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 14][1] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 14].names[1]); }
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 14][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = "Square of binomial";
MACHINE.env[MACHINE.env.length - 1 - 1] = "Square a binomial.";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 14][85];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn552 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn552;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
return (_afterCall550)(MACHINE);
};

var _procReturn528 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn528;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall526)(MACHINE);
};

var _procReturn520 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn520;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall518)(MACHINE);
};

var _lamEntry77 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry77;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#hint_button";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall999)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1001, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1328 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1328;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1329)(MACHINE);
};

var _procReturn450 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn450;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall448)(MACHINE);
};

var _procReturnMultiple979 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple979;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn980)(MACHINE);
};

var _lamEntry76 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry76;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall978)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn980, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf595 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf595;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][18];
MACHINE.env[MACHINE.env.length - 1 - 0] = 2;
MACHINE.val = 6;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall600)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn602, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple963 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple963;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn964)(MACHINE);
};

var _procReturnMultiple958 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple958;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn959)(MACHINE);
};

var _procReturnMultiple950 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple950;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn951)(MACHINE);
};

var _lamEntry50 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry50;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][6] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[6]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][6];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall658)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn660, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry32 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry32;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 3][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3][0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 2][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2][0])));
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn228 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn228;
    }
    return (_afterCall226)(MACHINE);
};

var _procReturnMultiple605 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple605;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn606)(MACHINE);
};

var _procReturn1518 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1518;
    }
    return (_afterCall1516)(MACHINE);
};

var _afterCall1612 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1612;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 144][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1615)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1619, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple910 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple910;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn911)(MACHINE);
};

var _afterCall1240 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1240;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1244)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1246, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1591 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1591;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1594)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1598, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall888 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall888;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = " </div>";
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(" <div id='exercise_title'> ", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL)));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][88];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall893)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn895, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1224 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1224;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "inline";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1228)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1230, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1216 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1216;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "val";
MACHINE.val = "Correct! Next Question...";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1220)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1222, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterFirstSeqEvaluated565 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterFirstSeqEvaluated565;
    }
    MACHINE.control.push(new RUNTIME.Frame());
MACHINE.control[MACHINE.control.length-1].pendingBegin0Count = MACHINE.argcount;
MACHINE.unspliceRestFromStack(0, MACHINE.argcount);
MACHINE.control[MACHINE.control.length-1].pendingBegin0Values = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env.push(MACHINE.control[MACHINE.control.length-1].pendingBegin0Values);
MACHINE.spliceListIntoStack(0);
MACHINE.argcount = MACHINE.control[MACHINE.control.length-1].pendingBegin0Count;
MACHINE.control.pop();
if (MACHINE.argcount === 0)
{
return (_afterValuesReinstated566)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterValuesReinstated566)(MACHINE);
}
};

var _afterCall1208 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1208;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf1206)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1214, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1195 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1195;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterLetBody1187)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1201, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall854 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall854;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
if (MACHINE.env[MACHINE.env.length - 1 - 5][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 5].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = "jsEval";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall1184 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1184;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][64]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1191)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1193, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall530 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall530;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(0, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 20][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 20][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 20][0])));
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])), 1);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 10] = MACHINE.val;
return (_afterCall534)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn536, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall526 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall526;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 19][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 19].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 11] = MACHINE.env[MACHINE.env.length - 1 - 19][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 18][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = "^{";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 17][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = "} = \\frac{1}{";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 18][0];
MACHINE.env[MACHINE.env.length - 1 - 6] = "^{";
MACHINE.env[MACHINE.env.length - 1 - 7] = plt.baselib.numbers.subtract(0, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 17][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 17][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 17][0])));
MACHINE.env[MACHINE.env.length - 1 - 8] = "}} = \\frac{1}{";
MACHINE.env[MACHINE.env.length - 1 - 9] = MACHINE.env[MACHINE.env.length - 1 - 18][0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 21][14];
MACHINE.env.push(undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 23][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 23].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 23][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "\\cdot ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 22][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall530)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn532, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall186 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall186;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall518 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall518;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 12][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 12].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 12][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$a^{";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = "} = \\frac{1}{a^";
MACHINE.env[MACHINE.env.length - 1 - 3] = plt.baselib.numbers.subtract(0, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 10][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 10][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 10][0])));
MACHINE.val = "}.$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall522)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn524, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall821 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall821;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall506 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall506;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2][0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 4;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall510)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn512, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1492 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1492;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "append";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div> ", RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 5], RUNTIME.makePair(" </div>", RUNTIME.NULL)));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11][97];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1497)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1499, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall494 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall494;
    }
    MACHINE.env[MACHINE.env.length - 1 - 6][0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][10]);
MACHINE.val = 4;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall498)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn500, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1125 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1125;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1129)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1131, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry38 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry38;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry39, 0, [MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1]], "new-problem!");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry40, 0, [MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2]], "problem-description");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry41, 0, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3]], "hints");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry42, 1, [MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][10]);
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall494)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn496, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1467 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1467;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1465)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1473, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1113 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1113;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 5][58];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][59]);
MACHINE.val = "#streak_bar_right";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1117)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1119, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1458 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1458;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1][71];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1462)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1464, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody1908 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1908;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1918)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1920, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple762 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple762;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn763)(MACHINE);
};

var _procReturnMultiple758 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple758;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn759)(MACHINE);
};

var _procReturnMultiple750 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple750;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn751)(MACHINE);
};

var _procReturnMultiple746 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple746;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn747)(MACHINE);
};

var _beforePromptPopMultiple1784 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1784;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1785)(MACHINE);
};

var _procReturnMultiple1069 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1069;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1070)(MACHINE);
};

var _procReturnMultiple426 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple426;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn427)(MACHINE);
};

var _lamEntry81 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry81;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][33]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1060)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1062, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1053 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1053;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1054)(MACHINE);
};

var _lamEntry89 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry89;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 2][7] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 2].names[7]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2][7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall1394)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1396, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn688 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn688;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall686)(MACHINE);
};

var _lamEntry80 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry80;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1039)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1041, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPopMultiple1732 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1732;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1733)(MACHINE);
};

var _beforePromptPopMultiple1724 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1724;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1725)(MACHINE);
};

var _beforePromptPopMultiple1716 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1716;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1717)(MACHINE);
};

var _beforePromptPopMultiple1712 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1712;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1713)(MACHINE);
};

var _procReturnMultiple1348 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1348;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1349)(MACHINE);
};

var _lamEntry78 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry78;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.val = "#scratchpad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1007)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1009, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn486 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn486;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall484)(MACHINE);
};

var _procReturn474 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn474;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall472)(MACHINE);
};

var _lamEntry34 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry34;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2][0] = MACHINE.val;
return (_afterCall391)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn393, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple651 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple651;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn652)(MACHINE);
};

var _beforePromptPop1713 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop1713;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1715, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry17, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:184:14");
MACHINE.env[MACHINE.env.length - 1 - 0][95] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple971 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple971;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn972)(MACHINE);
};

var _procReturn370 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn370;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4][0] = MACHINE.val;
return (_afterCall368)(MACHINE);
};

var _procReturn346 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn346;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall344)(MACHINE);
};

var _procReturn318 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn318;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][0] = MACHINE.val;
return (_afterCall316)(MACHINE);
};

var _lamEntry49 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry49;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][10]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][21]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall638)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn640, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn1598 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1598;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody1594)(MACHINE);
};

var _procReturn218 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn218;
    }
    return (_afterCall216)(MACHINE);
};

var _procReturn188 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn188;
    }
    return (_afterCall186)(MACHINE);
};

var _procReturn148 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn148;
    }
    return (_afterCall146)(MACHINE);
};

var _procReturnMultiple919 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple919;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn920)(MACHINE);
};

var _procReturnMultiple586 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple586;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn587)(MACHINE);
};

var _procReturnMultiple580 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple580;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn581)(MACHINE);
};

var _afterCall1232 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1232;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1202)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1238, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall893 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall893;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody891)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn899, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall884 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall884;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "replaceWith";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 8][3] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 8].names[3]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][3];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8][24];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall888)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn890, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterFirstSeqEvaluated568 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterFirstSeqEvaluated568;
    }
    MACHINE.control.push(new RUNTIME.Frame());
MACHINE.control[MACHINE.control.length-1].pendingBegin0Count = MACHINE.argcount;
MACHINE.unspliceRestFromStack(0, MACHINE.argcount);
MACHINE.control[MACHINE.control.length-1].pendingBegin0Values = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.control[MACHINE.control.length-1].pendingBegin0Values);
MACHINE.spliceListIntoStack(0);
MACHINE.argcount = MACHINE.control[MACHINE.control.length-1].pendingBegin0Count;
MACHINE.control.pop();
if (MACHINE.argcount === 0)
{
return (_afterValuesReinstated569)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterValuesReinstated569)(MACHINE);
}
};

var _afterValuesReinstated566 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterValuesReinstated566;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.env.push(undefined);
MACHINE.val = new RUNTIME.Closure(_lamEntry46, 3, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.argcount = 1;
if (MACHINE.argcount === 0)
{
return (_afterFirstSeqEvaluated568)(MACHINE);
} else {
MACHINE.env.push(MACHINE.val);
return (_afterFirstSeqEvaluated568)(MACHINE);
}
};

var _afterCall1562 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1562;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][33]);
MACHINE.val = "#scratchpad_toggle";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1566)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1568, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1558 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1558;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "none";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1562)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1564, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall216 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall216;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall206 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall206;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall534 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall534;
    }
    MACHINE.val = "}. $$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 11] = MACHINE.val;
MACHINE.argcount = 12;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
return (_afterCall538)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn540, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall196 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall196;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][27]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall522 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall522;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 16][11] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 16].names[11]); }
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.env[MACHINE.env.length - 1 - 16][11];
MACHINE.env[MACHINE.env.length - 1 - 0] = "$$";
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15][0];
MACHINE.env[MACHINE.env.length - 1 - 2] = "^{";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14][0];
MACHINE.env[MACHINE.env.length - 1 - 4] = "} = \\frac{1}{";
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 15][0];
MACHINE.env[MACHINE.env.length - 1 - 6] = "^{";
MACHINE.env[MACHINE.env.length - 1 - 7] = plt.baselib.numbers.subtract(0, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 14][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 14][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 14][0])));
MACHINE.val = "}}.$$";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.val;
MACHINE.argcount = 9;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterCall526)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn528, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1158 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1158;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][64]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1165)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1167, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1154 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1154;
    }
    MACHINE.val = "val";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1158)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1160, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall817 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall817;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall821)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn823, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1142 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1142;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1140)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1148, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall805 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall805;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.proc = MACHINE.val;
return (_afterCall809)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn811, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1133 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1133;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "html";
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][62]);
if (MACHINE.env[MACHINE.env.length - 1 - 8][28] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 8].names[28]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8][28];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1137)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1139, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1129 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1129;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][58];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][59]);
MACHINE.val = "#streak_bar_current";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1133)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1135, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry61 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry61;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][6] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[6]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][6];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall793)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn795, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody1974 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody1974;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.argcount = 1;
return (_afterCall1986)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1988, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
return (_afterCall1986)(MACHINE);
}
};

var _afterCall1109 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1109;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1113)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1115, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1452 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1452;
    }
    MACHINE.val = ((plt.baselib.numbers.greaterThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][76];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
if (MACHINE.env[MACHINE.env.length - 1 - 4][72] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 4].names[72]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][72];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1487)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1489, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][72] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[72]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][72];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][75]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1458)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1460, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall464 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall464;
    }
    MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 15][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 15][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 15][0])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterCall468)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn470, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple461 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple461;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn462)(MACHINE);
};

var _procReturnMultiple457 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple457;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn458)(MACHINE);
};

var _procReturnMultiple449 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple449;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn450)(MACHINE);
};

var _procReturnMultiple445 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple445;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn446)(MACHINE);
};

var _beforePromptPopMultiple1788 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1788;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1789)(MACHINE);
};

var _procReturnMultiple1775 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1775;
    }
    if ((MACHINE.argcount - 9) === 0)
{
return (_afterLetBody1739)(MACHINE);
} else {
return (_procReturn1776)(MACHINE);
}
};

var _procReturn795 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn795;
    }
    return (_afterCall793)(MACHINE);
};

var _procReturn763 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn763;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall761)(MACHINE);
};

var _procReturn747 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn747;
    }
    return (_afterCall745)(MACHINE);
};

var _procReturn723 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn723;
    }
    return (_afterCall721)(MACHINE);
};

var _procReturn684 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn684;
    }
    return (_afterCall682)(MACHINE);
};

var _procReturn652 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn652;
    }
    MACHINE.proc = MACHINE.val;
return (_afterCall650)(MACHINE);
};

var _beforePromptPopMultiple1736 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1736;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1737)(MACHINE);
};

var _beforePromptPopMultiple1728 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1728;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1729)(MACHINE);
};

var _beforePromptPopMultiple1720 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1720;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1721)(MACHINE);
};

var _beforePromptPopMultiple1708 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1708;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1709)(MACHINE);
};

var _onReturnMultiple1702 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple1702;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn1703)(MACHINE);
};

var _onReturnMultiple1699 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple1699;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn1700)(MACHINE);
};

var _onReturnMultiple1693 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple1693;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn1694)(MACHINE);
};

var _procReturn470 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn470;
    }
    MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterCall468)(MACHINE);
};

var _lamEntry33 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry33;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(0);
MACHINE.env[MACHINE.env.length - 1 - 0] = [MACHINE.env[MACHINE.env.length - 1 - 0]];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry34, 0, undefined, "new-problem!");
MACHINE.env[MACHINE.env.length - 1 - 0].closedVals = [MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2], MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]]
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry35, 0, [MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3], MACHINE.env[MACHINE.env.length - 1 - 2]], "problem-description");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry36, 0, [MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 3]], "hints");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry37, 1, [MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 5], MACHINE.env[MACHINE.env.length - 1 - 4]], "check-answer");
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = 5;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall344)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn346, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1317 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1317;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1318)(MACHINE);
};

var _lamEntry68 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry68;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("MathJax.Hub.Queue(['Typeset',MathJax.Hub]);", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 2][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 2].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall854)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn856, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple967 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple967;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn968)(MACHINE);
};

var _procReturn366 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn366;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5][0] = MACHINE.val;
return (_afterCall364)(MACHINE);
};

var _lamEntry75 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry75;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall957)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn959, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry52 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry52;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][8]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall682)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn684, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn288 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn288;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall286)(MACHINE);
};

var _procReturn1593 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1593;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1591)(MACHINE);
};

var _procReturn1568 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1568;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1566)(MACHINE);
};

var _procReturn178 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn178;
    }
    return (_afterCall176)(MACHINE);
};

var _procReturnMultiple1622 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1622;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1623)(MACHINE);
};

var _procReturnMultiple915 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple915;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn916)(MACHINE);
};

var _procReturnMultiple1249 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1249;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1250)(MACHINE);
};

var _procReturnMultiple1241 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1241;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1242)(MACHINE);
};

var _procReturnMultiple902 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple902;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn903)(MACHINE);
};

var _afterCall1228 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1228;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][33]);
MACHINE.val = "#sad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1232)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1234, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple889 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple889;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn890)(MACHINE);
};

var _afterValuesReinstated569 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterValuesReinstated569;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.argcount = 0;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn573, MACHINE.proc));
return (_lamEntry44)(MACHINE);
};

var _procReturnMultiple877 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple877;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn878)(MACHINE);
};

var _procReturnMultiple555 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple555;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn556)(MACHINE);
};

var _afterCall546 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall546;
    }
    MACHINE.val = "$.";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 8] = MACHINE.val;
MACHINE.argcount = 9;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
return (_afterCall550)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn552, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1191 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1191;
    }
    if (MACHINE.val === false)
{
MACHINE.env[MACHINE.env.length - 1 - 1] = false;
return (_afterLetBody1187)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][65]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][66]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1195)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1197, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple1185 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1185;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1186)(MACHINE);
};

var _afterCall1540 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1540;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "css";
MACHINE.env[MACHINE.env.length - 1 - 2] = "display";
MACHINE.val = "inline";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1544)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1546, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple531 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple531;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn532)(MACHINE);
};

var _afterCall1169 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1169;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall1165 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1165;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][65]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][66]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1169)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1171, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall510 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall510;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1][0] = plt.baselib.numbers.subtract(-1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple818 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple818;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn819)(MACHINE);
};

var _afterCall1497 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1497;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1495)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1503, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1138 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1138;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1139)(MACHINE);
};

var _afterCall1487 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1487;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][33]);
MACHINE.val = "#hint_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1492)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1494, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple798 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple798;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn799)(MACHINE);
};

var _procReturnMultiple1476 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1476;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1477)(MACHINE);
};

var _afterCall480 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall480;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 2], RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 3], RUNTIME.NULL))));
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall1462 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1462;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "append";
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][33]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(" <div> ", RUNTIME.makePair("There are no more hints.", RUNTIME.makePair(" </div>", RUNTIME.NULL)));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][25];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][20];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][96];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1467)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1469, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple774 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple774;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn775)(MACHINE);
};

var _lamEntry60 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry60;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][10]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][21]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall773)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn775, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry84 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry84;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][57];
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.multiply(297, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3][28])) ? (MACHINE.env[MACHINE.env.length - 1 - 3][28]) : RUNTIME.raiseArgumentTypeError(MACHINE, "*", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 3][28])));
MACHINE.val = 10;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1096)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1098, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple453 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple453;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn454)(MACHINE);
};

var _procReturn903 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn903;
    }
    return (_afterCall901)(MACHINE);
};

var _procReturn890 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn890;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall888)(MACHINE);
};

var _beforePromptPopMultiple1782 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1782;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1783)(MACHINE);
};

var _beforePromptPopMultiple1780 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1780;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1781)(MACHINE);
};

var _lamEntry82 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry82;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#answer_button";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1068)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1070, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1767 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1767;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1768)(MACHINE);
};

var _procReturnMultiple1763 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1763;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1764)(MACHINE);
};

var _procReturn719 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn719;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
return (_afterCall717)(MACHINE);
};

var _procReturnMultiple1751 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1751;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1752)(MACHINE);
};

var _procReturnMultiple1742 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1742;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1743)(MACHINE);
};

var _beforePromptPopMultiple1730 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1730;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1731)(MACHINE);
};

var _beforePromptPopMultiple1722 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1722;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1723)(MACHINE);
};

var _beforePromptPopMultiple1714 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1714;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1715)(MACHINE);
};

var _beforePromptPopMultiple1706 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1706;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1707)(MACHINE);
};

var _onReturn1703 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn1703;
    }
    MACHINE.env.push([MACHINE.params.currentNamespace["struct:exercise"] || MACHINE.primitives["struct:exercise"],MACHINE.params.currentNamespace["make-exercise"] || MACHINE.primitives["make-exercise"],MACHINE.params.currentNamespace["exercise?"] || MACHINE.primitives["exercise?"],MACHINE.params.currentNamespace["exercise-title"] || MACHINE.primitives["exercise-title"],MACHINE.params.currentNamespace["exercise-summary"] || MACHINE.primitives["exercise-summary"],MACHINE.params.currentNamespace["exercise-new-problem!"] || MACHINE.primitives["exercise-new-problem!"],MACHINE.params.currentNamespace["exercise-problem-description"] || MACHINE.primitives["exercise-problem-description"],MACHINE.params.currentNamespace["exercise-hints"] || MACHINE.primitives["exercise-hints"],MACHINE.params.currentNamespace["exercise-check-answer"] || MACHINE.primitives["exercise-check-answer"],MACHINE.params.currentNamespace["addition-exercise"] || MACHINE.primitives["addition-exercise"],MACHINE.primitives["random"],MACHINE.params.currentNamespace["stringify"] || MACHINE.primitives["stringify"],MACHINE.params.currentNamespace["power1-exercise"] || MACHINE.primitives["power1-exercise"],MACHINE.primitives["zero?"],MACHINE.modules["root/utilities/string.rkt"].namespace["string-append-n"],MACHINE.primitives["expt"],MACHINE.params.currentNamespace["power2-exercise"] || MACHINE.primitives["power2-exercise"],MACHINE.params.currentNamespace["squaring-binomial-exercise"] || MACHINE.primitives["squaring-binomial-exercise"],MACHINE.modules["root/utilities/random.rkt"].namespace["random-in-interval"],MACHINE.params.currentNamespace["combine-exercises"] || MACHINE.primitives["combine-exercises"],MACHINE.primitives["map"],MACHINE.primitives["length"],MACHINE.primitives["list-ref"],MACHINE.params.currentNamespace["power-all-kinds-exercise"] || MACHINE.primitives["power-all-kinds-exercise"],MACHINE.params.currentNamespace["current-exercise"] || MACHINE.primitives["current-exercise"],MACHINE.primitives["string-append"],MACHINE.primitives["string?"],MACHINE.primitives["number->string"],MACHINE.params.currentNamespace["streak-current"] || MACHINE.primitives["streak-current"],MACHINE.params.currentNamespace["streak-max"] || MACHINE.primitives["streak-max"],MACHINE.params.currentNamespace["append-to-body"] || MACHINE.primitives["append-to-body"],MACHINE.primitives["for-each"],MACHINE.modules["whalesong/js/main.rkt"].namespace["call-method3.3"],MACHINE.modules["whalesong/js/main.rkt"].namespace["$4.4"],MACHINE.modules["whalesong/js/main.rkt"].namespace["body2.2"],MACHINE.params.currentNamespace["js-proxy"] || MACHINE.primitives["js-proxy"],MACHINE.params.currentNamespace["store-js-proxy"] || MACHINE.primitives["store-js-proxy"],MACHINE.params.currentNamespace["call-proxy"] || MACHINE.primitives["call-proxy"],MACHINE.primitives["symbol?"],MACHINE.params.currentNamespace["run-mathjax"] || MACHINE.primitives["run-mathjax"],MACHINE.params.currentNamespace["js-eval"] || MACHINE.primitives["js-eval"],MACHINE.params.currentNamespace["create-scratchpad"] || MACHINE.primitives["create-scratchpad"],MACHINE.params.currentNamespace["update-exercise-title"] || MACHINE.primitives["update-exercise-title"],MACHINE.params.currentNamespace["update-problem-area"] || MACHINE.primitives["update-problem-area"],MACHINE.params.currentNamespace["hide-hint-area"] || MACHINE.primitives["hide-hint-area"],MACHINE.params.currentNamespace["show-hint-area"] || MACHINE.primitives["show-hint-area"],MACHINE.params.currentNamespace["clear-hint-area"] || MACHINE.primitives["clear-hint-area"],MACHINE.params.currentNamespace["append-to-hint-area"] || MACHINE.primitives["append-to-hint-area"],MACHINE.params.currentNamespace["change-hint-button-text"] || MACHINE.primitives["change-hint-button-text"],MACHINE.params.currentNamespace["show-scratchpad"] || MACHINE.primitives["show-scratchpad"],MACHINE.params.currentNamespace["hide-scratchpad"] || MACHINE.primitives["hide-scratchpad"],MACHINE.params.currentNamespace["clear-answer-input"] || MACHINE.primitives["clear-answer-input"],MACHINE.params.currentNamespace["call-plt-function1"] || MACHINE.primitives["call-plt-function1"],MACHINE.params.currentNamespace["set-focus-to-answer-input"] || MACHINE.primitives["set-focus-to-answer-input"],MACHINE.params.currentNamespace["change-answer-button-text"] || MACHINE.primitives["change-answer-button-text"],MACHINE.params.currentNamespace["face"] || MACHINE.primitives["face"],MACHINE.params.currentNamespace["update-streak-bar"] || MACHINE.primitives["update-streak-bar"],MACHINE.primitives["quotient"],MACHINE.modules["whalesong/js/main.rkt"].namespace["call-method3.3"],MACHINE.modules["whalesong/js/main.rkt"].namespace["$4.4"],MACHINE.modules["root/lang/primitives.rkt"].namespace["max"],MACHINE.modules["root/lang/primitives.rkt"].namespace["min"],MACHINE.primitives["number->string"],MACHINE.params.currentNamespace["get-user-answer"] || MACHINE.primitives["get-user-answer"],MACHINE.primitives["string?"],MACHINE.primitives["string->number"],MACHINE.modules["root/utilities/string.rkt"].namespace["string-trim-both"],MACHINE.params.currentNamespace["on-answer-button"] || MACHINE.primitives["on-answer-button"],MACHINE.params.currentNamespace["reset-hint-index"] || MACHINE.primitives["reset-hint-index"],MACHINE.modules["whalesong/js/main.rkt"].namespace["alert1.1"],MACHINE.params.currentNamespace["on-keyup/answer-input"] || MACHINE.primitives["on-keyup/answer-input"],MACHINE.primitives["void"],MACHINE.params.currentNamespace["hint-index"] || MACHINE.primitives["hint-index"],MACHINE.params.currentNamespace["on-hint-button"] || MACHINE.primitives["on-hint-button"],MACHINE.primitives["zero?"],MACHINE.primitives["length"],MACHINE.primitives["list-ref"],MACHINE.params.currentNamespace["on-toggle-scratchpad"] || MACHINE.primitives["on-toggle-scratchpad"],MACHINE.params.currentNamespace["js-identity"] || MACHINE.primitives["js-identity"],MACHINE.params.currentNamespace["plt-function"] || MACHINE.primitives["plt-function"],MACHINE.primitives["format"],MACHINE.params.currentNamespace["call-plt-thunk"] || MACHINE.primitives["call-plt-thunk"],MACHINE.primitives["symbol->string"],MACHINE.params.currentNamespace["generate-body"] || MACHINE.primitives["generate-body"],MACHINE.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);  MACHINE.env[MACHINE.env.length-1].names = ["struct:exercise","make-exercise","exercise?","exercise-title","exercise-summary","exercise-new-problem!","exercise-problem-description","exercise-hints","exercise-check-answer","addition-exercise","random","stringify","power1-exercise","zero?","string-append-n","expt","power2-exercise","squaring-binomial-exercise","random-in-interval","combine-exercises","map","length","list-ref","power-all-kinds-exercise","current-exercise","string-append","string?","number->string","streak-current","streak-max","append-to-body","for-each","call-method3.3","$4.4","body2.2","js-proxy","store-js-proxy","call-proxy","symbol?","run-mathjax","js-eval","create-scratchpad","update-exercise-title","update-problem-area","hide-hint-area","show-hint-area","clear-hint-area","append-to-hint-area","change-hint-button-text","show-scratchpad","hide-scratchpad","clear-answer-input","call-plt-function1","set-focus-to-answer-input","change-answer-button-text","face","update-streak-bar","quotient","call-method3.3","$4.4","max","min","number->string","get-user-answer","string?","string->number","string-trim-both","on-answer-button","reset-hint-index","alert1.1","on-keyup/answer-input","void","hint-index","on-hint-button","zero?","length","list-ref","on-toggle-scratchpad","js-identity","plt-function","format","call-plt-thunk","symbol->string","generate-body","print-values",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
MACHINE.modules["root/stxmat-exercises.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop1705, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry12, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "...at-exercises.rkt:198:12");
MACHINE.env[MACHINE.env.length - 1 - 0][100] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _onReturnMultiple1696 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple1696;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn1697)(MACHINE);
};

var _onReturn1697 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn1697;
    }
    if ((MACHINE.modules["root/utilities/random.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["root/utilities/random.rkt"].isInvoked !== false)
{
return (_onReturn1700)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn1700, MACHINE.proc));
return (MACHINE.modules["root/utilities/random.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module root/utilities/random.rkt hasn't been linked in!!!"));
return (_onReturn1700)(MACHINE);
}
};

var _onReturnMultiple1690 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple1690;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn1691)(MACHINE);
};

var _onReturnMultiple1687 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple1687;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn1688)(MACHINE);
};

var _moduleEntry1685 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry1685;
    }
    MACHINE.modules["root/stxmat-exercises.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn1688)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn1688, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn1688)(MACHINE);
}
};

var _procReturnMultiple1678 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1678;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1679)(MACHINE);
};

var _procReturnMultiple639 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple639;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn640)(MACHINE);
};

var _procReturnMultiple1668 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1668;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1669)(MACHINE);
};

var _procReturnMultiple1657 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1657;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1658)(MACHINE);
};

var _lamEntry51 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry51;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
if (MACHINE.env[MACHINE.env.length - 1 - 3][7] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 3].names[7]); }
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][22];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall670)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn672, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1648 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1648;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1649)(MACHINE);
};

var _procReturnMultiple1639 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1639;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1640)(MACHINE);
};

var _procReturnMultiple1635 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1635;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1636)(MACHINE);
};

var _procReturn1546 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn1546;
    }
    return (_afterCall1544)(MACHINE);
};

var _procReturnMultiple1618 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1618;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1619)(MACHINE);
};

var _procReturnMultiple597 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple597;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn598)(MACHINE);
};

var _procReturnMultiple1609 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1609;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1610)(MACHINE);
};

var _lamEntry72 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry72;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][33]);
MACHINE.val = "#problem_area";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall909)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn911, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1597 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1597;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1598)(MACHINE);
};

var _procReturnMultiple1229 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1229;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1230)(MACHINE);
};

var _procReturnMultiple1584 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1584;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1585)(MACHINE);
};

var _procReturnMultiple572 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple572;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn573)(MACHINE);
};

var _procReturnMultiple1213 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1213;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1214)(MACHINE);
};

var _procReturnMultiple1567 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1567;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1568)(MACHINE);
};

var _procReturnMultiple866 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple866;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn867)(MACHINE);
};

var _afterCall1548 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall1548;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = "html";
MACHINE.val = "Hide ScratchPad";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1549 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1549;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1550)(MACHINE);
};

var _afterCall843 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall843;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4][32];
if (MACHINE.env[MACHINE.env.length - 1 - 4][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 4].names[35]); }
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][35];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry86 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry86;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][0]);
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.makeSymbol("check"));
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.makeSymbol("next"));
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][69]);
MACHINE.val = "Error: Unknown state in 'on-answer-button'";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody1176)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1378, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 1][0] = RUNTIME.makeSymbol("check");
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][32];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][33]);
MACHINE.val = "#answer_button";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1258)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1260, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][58];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][59]);
MACHINE.val = "#answer_input_1";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1180)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1182, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall829 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall829;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple830 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple830;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn831)(MACHINE);
};

var _procReturnMultiple1155 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1155;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1156)(MACHINE);
};

var _procReturnMultiple1510 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1510;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1511)(MACHINE);
};

var _afterCall809 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall809;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1498 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1498;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1499)(MACHINE);
};

var _procReturnMultiple499 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple499;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn500)(MACHINE);
};

var _procReturnMultiple794 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple794;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn795)(MACHINE);
};

var _procReturnMultiple1472 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1472;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1473)(MACHINE);
};

var _afterCall785 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall785;
    }
    MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple782 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple782;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn783)(MACHINE);
};

var _procReturnMultiple1106 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1106;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1107)(MACHINE);
};

var _procReturnMultiple1453 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1453;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1454)(MACHINE);
};

var _procReturn951 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn951;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall949)(MACHINE);
};

var _procReturnMultiple1439 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1439;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1440)(MACHINE);
};

var _procReturn899 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn899;
    }
    return (_afterLetBody891)(MACHINE);
};

var _procReturnMultiple1427 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1427;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1428)(MACHINE);
};

var _beforePromptPopMultiple1786 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1786;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1787)(MACHINE);
};

var _beforePromptPopMultiple1778 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1778;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1779)(MACHINE);
};

var _procReturnMultiple1771 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1771;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1772)(MACHINE);
};

var _procReturnMultiple1404 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1404;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1405)(MACHINE);
};

var _procReturnMultiple1759 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1759;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1760)(MACHINE);
};

var _procReturnMultiple1755 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1755;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1756)(MACHINE);
};

var _procReturnMultiple1746 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1746;
    }
    if ((MACHINE.argcount - 5) === 0)
{
return (_afterCall1745)(MACHINE);
} else {
return (_procReturn1747)(MACHINE);
}
};

var _procReturnMultiple1377 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1377;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1378)(MACHINE);
};

var _beforePromptPopMultiple1734 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1734;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1735)(MACHINE);
};

var _beforePromptPopMultiple1726 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1726;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1727)(MACHINE);
};

var _beforePromptPopMultiple1718 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1718;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1719)(MACHINE);
};

var _beforePromptPopMultiple1710 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1710;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1711)(MACHINE);
};

var _beforePromptPopMultiple1704 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple1704;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop1705)(MACHINE);
};

var _onReturn1700 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn1700;
    }
    if ((MACHINE.modules["root/utilities/string.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["root/utilities/string.rkt"].isInvoked !== false)
{
return (_onReturn1703)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn1703, MACHINE.proc));
return (MACHINE.modules["root/utilities/string.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module root/utilities/string.rkt hasn't been linked in!!!"));
return (_onReturn1703)(MACHINE);
}
};

var _onReturn1694 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn1694;
    }
    if ((MACHINE.modules["root/lang/do.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["root/lang/do.rkt"].isInvoked !== false)
{
return (_onReturn1697)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn1697, MACHINE.proc));
return (MACHINE.modules["root/lang/do.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module root/lang/do.rkt hasn't been linked in!!!"));
return (_onReturn1697)(MACHINE);
}
};

var _onReturn1691 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn1691;
    }
    if ((MACHINE.modules["root/lang/primitives.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["root/lang/primitives.rkt"].isInvoked !== false)
{
return (_onReturn1694)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn1694, MACHINE.proc));
return (MACHINE.modules["root/lang/primitives.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module root/lang/primitives.rkt hasn't been linked in!!!"));
return (_onReturn1694)(MACHINE);
}
};

var _onReturn1688 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn1688;
    }
    if ((MACHINE.modules["whalesong/js.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/js.rkt"].isInvoked !== false)
{
return (_onReturn1691)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn1691, MACHINE.proc));
return (MACHINE.modules["whalesong/js.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/js.rkt hasn't been linked in!!!"));
return (_onReturn1691)(MACHINE);
}
};

var _beforePopPromptMultiple133 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple133;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt134)(MACHINE);
};

var _procReturnMultiple1313 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1313;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1314)(MACHINE);
};

var _procReturnMultiple1305 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1305;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1306)(MACHINE);
};

var _lamEntry95 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry95;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1667)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1669, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1295 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1295;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1296)(MACHINE);
};

var _procReturnMultiple1653 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1653;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1654)(MACHINE);
};

var _procReturnMultiple1644 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1644;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1645)(MACHINE);
};

var _procReturnMultiple1279 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1279;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1280)(MACHINE);
};

var _procReturnMultiple1631 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1631;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1632)(MACHINE);
};

var _procReturnMultiple1626 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1626;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1627)(MACHINE);
};

var _procReturnMultiple1263 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1263;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1264)(MACHINE);
};

var _procReturnMultiple1613 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1613;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1614)(MACHINE);
};

var _procReturnMultiple1605 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1605;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1606)(MACHINE);
};

var _lamEntry94 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry94;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 141][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "(~a)(~a,~a,proxy)";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 143][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = "store-js-proxy";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall1604)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1606, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1592 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1592;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1593)(MACHINE);
};

var _lamEntry93 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry93;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 5][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "storeProxy();(~a)(~a,~a,~a)";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][82]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1591)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1593, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1579 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1579;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1580)(MACHINE);
};

var _lamEntry92 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry92;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "storeProxy();(~a)(~a,~a)";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][82]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall1578)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1580, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry91 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry91;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][80];
MACHINE.env[MACHINE.env.length - 1 - 0] = "plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1563 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1563;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1564)(MACHINE);
};

var _procReturnMultiple1559 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1559;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1560)(MACHINE);
};

var _afterCall542 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall542;
    }
    MACHINE.env[MACHINE.env.length - 1 - 6] = "}.$$ Enter the result as $1/";
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 18][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 17][0];
MACHINE.val = plt.baselib.numbers.subtract(0, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 16][0])) ? (MACHINE.env[MACHINE.env.length - 1 - 16][0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 16][0])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
return (_afterCall546)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn548, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1545 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1545;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1546)(MACHINE);
};

var _procReturnMultiple1541 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1541;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1542)(MACHINE);
};

var _procReturnMultiple1534 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1534;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1535)(MACHINE);
};

var _procReturnMultiple1530 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1530;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1531)(MACHINE);
};

var _lamEntry90 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry90;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1][0];
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair("Scratchpad('#scratchpad');", RUNTIME.NULL);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][38]);
if (MACHINE.env[MACHINE.env.length - 1 - 4][35] === undefined) { RUNTIME.raiseUnboundToplevelError(MACHINE.env[MACHINE.env.length - 1 - 4].names[35]); }
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][35];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall1529)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn1531, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.val = RUNTIME.VOID;
return (_afterIf1524)(MACHINE);
}
};

var _procReturnMultiple1517 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1517;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1518)(MACHINE);
};

var _procReturnMultiple1506 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1506;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1507)(MACHINE);
};

var _procReturnMultiple1502 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1502;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1503)(MACHINE);
};

var _procReturnMultiple1493 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1493;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1494)(MACHINE);
};

var _procReturnMultiple1488 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1488;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1489)(MACHINE);
};

var _lamEntry42 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry42;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5][0];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4][0];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall554)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn556, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple1126 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1126;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1127)(MACHINE);
};

var _procReturnMultiple1468 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1468;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1469)(MACHINE);
};

var _procReturnMultiple1463 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1463;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1464)(MACHINE);
};

var _procReturnMultiple1459 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1459;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1460)(MACHINE);
};

var _procReturnMultiple1447 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1447;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn1448)(MACHINE);
};

var _procReturnMultiple1443 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1443;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1444)(MACHINE);
};

var _procReturnMultiple1435 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1435;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1436)(MACHINE);
};

var _procReturnMultiple1431 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1431;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1432)(MACHINE);
};

var _procReturnMultiple1422 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple1422;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn1423)(MACHINE);
};

_procReturn138.multipleValueReturn = _procReturnMultiple137;
_procReturn148.multipleValueReturn = _procReturnMultiple147;
_procReturn158.multipleValueReturn = _procReturnMultiple157;
_procReturn168.multipleValueReturn = _procReturnMultiple167;
_procReturn178.multipleValueReturn = _procReturnMultiple177;
_procReturn188.multipleValueReturn = _procReturnMultiple187;
_procReturn198.multipleValueReturn = _procReturnMultiple197;
_procReturn208.multipleValueReturn = _procReturnMultiple207;
_procReturn218.multipleValueReturn = _procReturnMultiple217;
_procReturn228.multipleValueReturn = _procReturnMultiple227;
_procReturn238.multipleValueReturn = _procReturnMultiple237;
_procReturn248.multipleValueReturn = _procReturnMultiple247;
_procReturn258.multipleValueReturn = _procReturnMultiple257;
_procReturn266.multipleValueReturn = _procReturnMultiple265;
_procReturn276.multipleValueReturn = _procReturnMultiple275;
_procReturn284.multipleValueReturn = _procReturnMultiple283;
_procReturn288.multipleValueReturn = _procReturnMultiple287;
_procReturn292.multipleValueReturn = _procReturnMultiple291;
_procReturn296.multipleValueReturn = _procReturnMultiple295;
_procReturn306.multipleValueReturn = _procReturnMultiple305;
_procReturn310.multipleValueReturn = _procReturnMultiple309;
_procReturn318.multipleValueReturn = _procReturnMultiple317;
_procReturn322.multipleValueReturn = _procReturnMultiple321;
_procReturn330.multipleValueReturn = _procReturnMultiple329;
_procReturn334.multipleValueReturn = _procReturnMultiple333;
_procReturn346.multipleValueReturn = _procReturnMultiple345;
_procReturn350.multipleValueReturn = _procReturnMultiple349;
_procReturn356.multipleValueReturn = _procReturnMultiple355;
_procReturn360.multipleValueReturn = _procReturnMultiple359;
_procReturn366.multipleValueReturn = _procReturnMultiple365;
_procReturn370.multipleValueReturn = _procReturnMultiple369;
_procReturn376.multipleValueReturn = _procReturnMultiple375;
_procReturn380.multipleValueReturn = _procReturnMultiple379;
_procReturn385.multipleValueReturn = _procReturnMultiple384;
_procReturn393.multipleValueReturn = _procReturnMultiple392;
_procReturn397.multipleValueReturn = _procReturnMultiple396;
_procReturn403.multipleValueReturn = _procReturnMultiple402;
_procReturn407.multipleValueReturn = _procReturnMultiple406;
_procReturn413.multipleValueReturn = _procReturnMultiple412;
_procReturn417.multipleValueReturn = _procReturnMultiple416;
_procReturn423.multipleValueReturn = _procReturnMultiple422;
_procReturn427.multipleValueReturn = _procReturnMultiple426;
_procReturn442.multipleValueReturn = _procReturnMultiple441;
_procReturn446.multipleValueReturn = _procReturnMultiple445;
_procReturn450.multipleValueReturn = _procReturnMultiple449;
_procReturn454.multipleValueReturn = _procReturnMultiple453;
_procReturn458.multipleValueReturn = _procReturnMultiple457;
_procReturn462.multipleValueReturn = _procReturnMultiple461;
_procReturn466.multipleValueReturn = _procReturnMultiple465;
_procReturn470.multipleValueReturn = _procReturnMultiple469;
_procReturn474.multipleValueReturn = _procReturnMultiple473;
_procReturn478.multipleValueReturn = _procReturnMultiple477;
_procReturn482.multipleValueReturn = _procReturnMultiple481;
_procReturn486.multipleValueReturn = _procReturnMultiple485;
_procReturn496.multipleValueReturn = _procReturnMultiple495;
_procReturn500.multipleValueReturn = _procReturnMultiple499;
_procReturn508.multipleValueReturn = _procReturnMultiple507;
_procReturn512.multipleValueReturn = _procReturnMultiple511;
_procReturn520.multipleValueReturn = _procReturnMultiple519;
_procReturn524.multipleValueReturn = _procReturnMultiple523;
_procReturn528.multipleValueReturn = _procReturnMultiple527;
_procReturn532.multipleValueReturn = _procReturnMultiple531;
_procReturn536.multipleValueReturn = _procReturnMultiple535;
_procReturn540.multipleValueReturn = _procReturnMultiple539;
_procReturn544.multipleValueReturn = _procReturnMultiple543;
_procReturn548.multipleValueReturn = _procReturnMultiple547;
_procReturn552.multipleValueReturn = _procReturnMultiple551;
_procReturn556.multipleValueReturn = _procReturnMultiple555;
_procReturn573.multipleValueReturn = _procReturnMultiple572;
_procReturn581.multipleValueReturn = _procReturnMultiple580;
_procReturn587.multipleValueReturn = _procReturnMultiple586;
_procReturn593.multipleValueReturn = _procReturnMultiple592;
_procReturn598.multipleValueReturn = _procReturnMultiple597;
_procReturn602.multipleValueReturn = _procReturnMultiple601;
_procReturn606.multipleValueReturn = _procReturnMultiple605;
_procReturn610.multipleValueReturn = _procReturnMultiple609;
_procReturn622.multipleValueReturn = _procReturnMultiple621;
_procReturn640.multipleValueReturn = _procReturnMultiple639;
_procReturn644.multipleValueReturn = _procReturnMultiple643;
_procReturn648.multipleValueReturn = _procReturnMultiple647;
_procReturn652.multipleValueReturn = _procReturnMultiple651;
_procReturn660.multipleValueReturn = _procReturnMultiple659;
_procReturn664.multipleValueReturn = _procReturnMultiple663;
_procReturn672.multipleValueReturn = _procReturnMultiple671;
_procReturn676.multipleValueReturn = _procReturnMultiple675;
_procReturn684.multipleValueReturn = _procReturnMultiple683;
_procReturn688.multipleValueReturn = _procReturnMultiple687;
_procReturn697.multipleValueReturn = _procReturnMultiple696;
_procReturn715.multipleValueReturn = _procReturnMultiple714;
_procReturn719.multipleValueReturn = _procReturnMultiple718;
_procReturn723.multipleValueReturn = _procReturnMultiple722;
_procReturn727.multipleValueReturn = _procReturnMultiple726;
_procReturn735.multipleValueReturn = _procReturnMultiple734;
_procReturn739.multipleValueReturn = _procReturnMultiple738;
_procReturn747.multipleValueReturn = _procReturnMultiple746;
_procReturn751.multipleValueReturn = _procReturnMultiple750;
_procReturn759.multipleValueReturn = _procReturnMultiple758;
_procReturn763.multipleValueReturn = _procReturnMultiple762;
_procReturn775.multipleValueReturn = _procReturnMultiple774;
_procReturn779.multipleValueReturn = _procReturnMultiple778;
_procReturn783.multipleValueReturn = _procReturnMultiple782;
_procReturn787.multipleValueReturn = _procReturnMultiple786;
_procReturn795.multipleValueReturn = _procReturnMultiple794;
_procReturn799.multipleValueReturn = _procReturnMultiple798;
_procReturn807.multipleValueReturn = _procReturnMultiple806;
_procReturn811.multipleValueReturn = _procReturnMultiple810;
_procReturn819.multipleValueReturn = _procReturnMultiple818;
_procReturn823.multipleValueReturn = _procReturnMultiple822;
_procReturn831.multipleValueReturn = _procReturnMultiple830;
_procReturn845.multipleValueReturn = _procReturnMultiple844;
_procReturn856.multipleValueReturn = _procReturnMultiple855;
_procReturn867.multipleValueReturn = _procReturnMultiple866;
_procReturn878.multipleValueReturn = _procReturnMultiple877;
_procReturn886.multipleValueReturn = _procReturnMultiple885;
_procReturn890.multipleValueReturn = _procReturnMultiple889;
_procReturn895.multipleValueReturn = _procReturnMultiple894;
_procReturn899.multipleValueReturn = _procReturnMultiple898;
_procReturn903.multipleValueReturn = _procReturnMultiple902;
_procReturn911.multipleValueReturn = _procReturnMultiple910;
_procReturn916.multipleValueReturn = _procReturnMultiple915;
_procReturn920.multipleValueReturn = _procReturnMultiple919;
_procReturn924.multipleValueReturn = _procReturnMultiple923;
_procReturn928.multipleValueReturn = _procReturnMultiple927;
_procReturn935.multipleValueReturn = _procReturnMultiple934;
_procReturn943.multipleValueReturn = _procReturnMultiple942;
_procReturn951.multipleValueReturn = _procReturnMultiple950;
_procReturn959.multipleValueReturn = _procReturnMultiple958;
_procReturn964.multipleValueReturn = _procReturnMultiple963;
_procReturn968.multipleValueReturn = _procReturnMultiple967;
_procReturn972.multipleValueReturn = _procReturnMultiple971;
_procReturn980.multipleValueReturn = _procReturnMultiple979;
_procReturn985.multipleValueReturn = _procReturnMultiple984;
_procReturn989.multipleValueReturn = _procReturnMultiple988;
_procReturn993.multipleValueReturn = _procReturnMultiple992;
_procReturn1001.multipleValueReturn = _procReturnMultiple1000;
_procReturn1009.multipleValueReturn = _procReturnMultiple1008;
_procReturn1013.multipleValueReturn = _procReturnMultiple1012;
_procReturn1017.multipleValueReturn = _procReturnMultiple1016;
_procReturn1025.multipleValueReturn = _procReturnMultiple1024;
_procReturn1029.multipleValueReturn = _procReturnMultiple1028;
_procReturn1033.multipleValueReturn = _procReturnMultiple1032;
_procReturn1041.multipleValueReturn = _procReturnMultiple1040;
_procReturn1045.multipleValueReturn = _procReturnMultiple1044;
_procReturn1050.multipleValueReturn = _procReturnMultiple1049;
_procReturn1054.multipleValueReturn = _procReturnMultiple1053;
_procReturn1062.multipleValueReturn = _procReturnMultiple1061;
_procReturn1070.multipleValueReturn = _procReturnMultiple1069;
_procReturn1078.multipleValueReturn = _procReturnMultiple1077;
_procReturn1084.multipleValueReturn = _procReturnMultiple1083;
_procReturn1088.multipleValueReturn = _procReturnMultiple1087;
_procReturn1098.multipleValueReturn = _procReturnMultiple1097;
_procReturn1103.multipleValueReturn = _procReturnMultiple1102;
_procReturn1107.multipleValueReturn = _procReturnMultiple1106;
_procReturn1111.multipleValueReturn = _procReturnMultiple1110;
_procReturn1115.multipleValueReturn = _procReturnMultiple1114;
_procReturn1119.multipleValueReturn = _procReturnMultiple1118;
_procReturn1123.multipleValueReturn = _procReturnMultiple1122;
_procReturn1127.multipleValueReturn = _procReturnMultiple1126;
_procReturn1131.multipleValueReturn = _procReturnMultiple1130;
_procReturn1135.multipleValueReturn = _procReturnMultiple1134;
_procReturn1139.multipleValueReturn = _procReturnMultiple1138;
_procReturn1144.multipleValueReturn = _procReturnMultiple1143;
_procReturn1148.multipleValueReturn = _procReturnMultiple1147;
_procReturn1156.multipleValueReturn = _procReturnMultiple1155;
_procReturn1160.multipleValueReturn = _procReturnMultiple1159;
_procReturn1167.multipleValueReturn = _procReturnMultiple1166;
_procReturn1171.multipleValueReturn = _procReturnMultiple1170;
_procReturn1182.multipleValueReturn = _procReturnMultiple1181;
_procReturn1186.multipleValueReturn = _procReturnMultiple1185;
_procReturn1193.multipleValueReturn = _procReturnMultiple1192;
_procReturn1197.multipleValueReturn = _procReturnMultiple1196;
_procReturn1201.multipleValueReturn = _procReturnMultiple1200;
_procReturn1210.multipleValueReturn = _procReturnMultiple1209;
_procReturn1214.multipleValueReturn = _procReturnMultiple1213;
_procReturn1218.multipleValueReturn = _procReturnMultiple1217;
_procReturn1222.multipleValueReturn = _procReturnMultiple1221;
_procReturn1226.multipleValueReturn = _procReturnMultiple1225;
_procReturn1230.multipleValueReturn = _procReturnMultiple1229;
_procReturn1234.multipleValueReturn = _procReturnMultiple1233;
_procReturn1238.multipleValueReturn = _procReturnMultiple1237;
_procReturn1242.multipleValueReturn = _procReturnMultiple1241;
_procReturn1246.multipleValueReturn = _procReturnMultiple1245;
_procReturn1250.multipleValueReturn = _procReturnMultiple1249;
_procReturn1254.multipleValueReturn = _procReturnMultiple1253;
_procReturn1260.multipleValueReturn = _procReturnMultiple1259;
_procReturn1264.multipleValueReturn = _procReturnMultiple1263;
_procReturn1268.multipleValueReturn = _procReturnMultiple1267;
_procReturn1272.multipleValueReturn = _procReturnMultiple1271;
_procReturn1276.multipleValueReturn = _procReturnMultiple1275;
_procReturn1280.multipleValueReturn = _procReturnMultiple1279;
_procReturn1284.multipleValueReturn = _procReturnMultiple1283;
_procReturn1288.multipleValueReturn = _procReturnMultiple1287;
_procReturn1292.multipleValueReturn = _procReturnMultiple1291;
_procReturn1296.multipleValueReturn = _procReturnMultiple1295;
_procReturn1301.multipleValueReturn = _procReturnMultiple1300;
_procReturn1306.multipleValueReturn = _procReturnMultiple1305;
_procReturn1310.multipleValueReturn = _procReturnMultiple1309;
_procReturn1314.multipleValueReturn = _procReturnMultiple1313;
_procReturn1318.multipleValueReturn = _procReturnMultiple1317;
_procReturn1325.multipleValueReturn = _procReturnMultiple1324;
_procReturn1329.multipleValueReturn = _procReturnMultiple1328;
_procReturn1333.multipleValueReturn = _procReturnMultiple1332;
_procReturn1337.multipleValueReturn = _procReturnMultiple1336;
_procReturn1341.multipleValueReturn = _procReturnMultiple1340;
_procReturn1345.multipleValueReturn = _procReturnMultiple1344;
_procReturn1349.multipleValueReturn = _procReturnMultiple1348;
_procReturn1353.multipleValueReturn = _procReturnMultiple1352;
_procReturn1358.multipleValueReturn = _procReturnMultiple1357;
_procReturn1362.multipleValueReturn = _procReturnMultiple1361;
_procReturn1366.multipleValueReturn = _procReturnMultiple1365;
_procReturn1370.multipleValueReturn = _procReturnMultiple1369;
_procReturn1374.multipleValueReturn = _procReturnMultiple1373;
_procReturn1378.multipleValueReturn = _procReturnMultiple1377;
_procReturn1396.multipleValueReturn = _procReturnMultiple1395;
_procReturn1400.multipleValueReturn = _procReturnMultiple1399;
_procReturn1405.multipleValueReturn = _procReturnMultiple1404;
_procReturn1409.multipleValueReturn = _procReturnMultiple1408;
_procReturn1413.multipleValueReturn = _procReturnMultiple1412;
_procReturn1419.multipleValueReturn = _procReturnMultiple1418;
_procReturn1423.multipleValueReturn = _procReturnMultiple1422;
_procReturn1428.multipleValueReturn = _procReturnMultiple1427;
_procReturn1432.multipleValueReturn = _procReturnMultiple1431;
_procReturn1436.multipleValueReturn = _procReturnMultiple1435;
_procReturn1440.multipleValueReturn = _procReturnMultiple1439;
_procReturn1444.multipleValueReturn = _procReturnMultiple1443;
_procReturn1448.multipleValueReturn = _procReturnMultiple1447;
_procReturn1454.multipleValueReturn = _procReturnMultiple1453;
_procReturn1460.multipleValueReturn = _procReturnMultiple1459;
_procReturn1464.multipleValueReturn = _procReturnMultiple1463;
_procReturn1469.multipleValueReturn = _procReturnMultiple1468;
_procReturn1473.multipleValueReturn = _procReturnMultiple1472;
_procReturn1477.multipleValueReturn = _procReturnMultiple1476;
_procReturn1489.multipleValueReturn = _procReturnMultiple1488;
_procReturn1494.multipleValueReturn = _procReturnMultiple1493;
_procReturn1499.multipleValueReturn = _procReturnMultiple1498;
_procReturn1503.multipleValueReturn = _procReturnMultiple1502;
_procReturn1507.multipleValueReturn = _procReturnMultiple1506;
_procReturn1511.multipleValueReturn = _procReturnMultiple1510;
_procReturn1518.multipleValueReturn = _procReturnMultiple1517;
_procReturn1531.multipleValueReturn = _procReturnMultiple1530;
_procReturn1535.multipleValueReturn = _procReturnMultiple1534;
_procReturn1542.multipleValueReturn = _procReturnMultiple1541;
_procReturn1546.multipleValueReturn = _procReturnMultiple1545;
_procReturn1550.multipleValueReturn = _procReturnMultiple1549;
_procReturn1560.multipleValueReturn = _procReturnMultiple1559;
_procReturn1564.multipleValueReturn = _procReturnMultiple1563;
_procReturn1568.multipleValueReturn = _procReturnMultiple1567;
_procReturn1580.multipleValueReturn = _procReturnMultiple1579;
_procReturn1585.multipleValueReturn = _procReturnMultiple1584;
_procReturn1593.multipleValueReturn = _procReturnMultiple1592;
_procReturn1598.multipleValueReturn = _procReturnMultiple1597;
_procReturn1606.multipleValueReturn = _procReturnMultiple1605;
_procReturn1610.multipleValueReturn = _procReturnMultiple1609;
_procReturn1614.multipleValueReturn = _procReturnMultiple1613;
_procReturn1619.multipleValueReturn = _procReturnMultiple1618;
_procReturn1623.multipleValueReturn = _procReturnMultiple1622;
_procReturn1627.multipleValueReturn = _procReturnMultiple1626;
_procReturn1632.multipleValueReturn = _procReturnMultiple1631;
_procReturn1636.multipleValueReturn = _procReturnMultiple1635;
_procReturn1640.multipleValueReturn = _procReturnMultiple1639;
_procReturn1645.multipleValueReturn = _procReturnMultiple1644;
_procReturn1649.multipleValueReturn = _procReturnMultiple1648;
_procReturn1654.multipleValueReturn = _procReturnMultiple1653;
_procReturn1658.multipleValueReturn = _procReturnMultiple1657;
_procReturn1669.multipleValueReturn = _procReturnMultiple1668;
_procReturn1679.multipleValueReturn = _procReturnMultiple1678;
_onReturn1688.multipleValueReturn = _onReturnMultiple1687;
_onReturn1691.multipleValueReturn = _onReturnMultiple1690;
_onReturn1694.multipleValueReturn = _onReturnMultiple1693;
_onReturn1697.multipleValueReturn = _onReturnMultiple1696;
_onReturn1700.multipleValueReturn = _onReturnMultiple1699;
_onReturn1703.multipleValueReturn = _onReturnMultiple1702;
_beforePromptPop1705.multipleValueReturn = _beforePromptPopMultiple1704;
_beforePromptPop1707.multipleValueReturn = _beforePromptPopMultiple1706;
_beforePromptPop1709.multipleValueReturn = _beforePromptPopMultiple1708;
_beforePromptPop1711.multipleValueReturn = _beforePromptPopMultiple1710;
_beforePromptPop1713.multipleValueReturn = _beforePromptPopMultiple1712;
_beforePromptPop1715.multipleValueReturn = _beforePromptPopMultiple1714;
_beforePromptPop1717.multipleValueReturn = _beforePromptPopMultiple1716;
_beforePromptPop1719.multipleValueReturn = _beforePromptPopMultiple1718;
_beforePromptPop1721.multipleValueReturn = _beforePromptPopMultiple1720;
_beforePromptPop1723.multipleValueReturn = _beforePromptPopMultiple1722;
_beforePromptPop1725.multipleValueReturn = _beforePromptPopMultiple1724;
_beforePromptPop1727.multipleValueReturn = _beforePromptPopMultiple1726;
_beforePromptPop1729.multipleValueReturn = _beforePromptPopMultiple1728;
_beforePromptPop1731.multipleValueReturn = _beforePromptPopMultiple1730;
_beforePromptPop1733.multipleValueReturn = _beforePromptPopMultiple1732;
_beforePromptPop1735.multipleValueReturn = _beforePromptPopMultiple1734;
_procReturn1743.multipleValueReturn = _procReturnMultiple1742;
_procReturn1747.multipleValueReturn = _procReturnMultiple1746;
_procReturn1752.multipleValueReturn = _procReturnMultiple1751;
_procReturn1756.multipleValueReturn = _procReturnMultiple1755;
_procReturn1760.multipleValueReturn = _procReturnMultiple1759;
_procReturn1764.multipleValueReturn = _procReturnMultiple1763;
_procReturn1768.multipleValueReturn = _procReturnMultiple1767;
_procReturn1772.multipleValueReturn = _procReturnMultiple1771;
_procReturn1776.multipleValueReturn = _procReturnMultiple1775;
_beforePromptPop1737.multipleValueReturn = _beforePromptPopMultiple1736;
_beforePromptPop1779.multipleValueReturn = _beforePromptPopMultiple1778;
_beforePromptPop1781.multipleValueReturn = _beforePromptPopMultiple1780;
_beforePromptPop1783.multipleValueReturn = _beforePromptPopMultiple1782;
_beforePromptPop1785.multipleValueReturn = _beforePromptPopMultiple1784;
_beforePromptPop1787.multipleValueReturn = _beforePromptPopMultiple1786;
_beforePromptPop1789.multipleValueReturn = _beforePromptPopMultiple1788;
_procReturn1796.multipleValueReturn = _procReturnMultiple1795;
_procReturn1808.multipleValueReturn = _procReturnMultiple1807;
_beforePromptPop1791.multipleValueReturn = _beforePromptPopMultiple1790;
_beforePromptPop1810.multipleValueReturn = _beforePromptPopMultiple1809;
_beforePromptPop1812.multipleValueReturn = _beforePromptPopMultiple1811;
_beforePromptPop1814.multipleValueReturn = _beforePromptPopMultiple1813;
_beforePromptPop1816.multipleValueReturn = _beforePromptPopMultiple1815;
_beforePromptPop1818.multipleValueReturn = _beforePromptPopMultiple1817;
_beforePromptPop1820.multipleValueReturn = _beforePromptPopMultiple1819;
_beforePromptPop1822.multipleValueReturn = _beforePromptPopMultiple1821;
_beforePromptPop1824.multipleValueReturn = _beforePromptPopMultiple1823;
_beforePromptPop1826.multipleValueReturn = _beforePromptPopMultiple1825;
_beforePromptPop1828.multipleValueReturn = _beforePromptPopMultiple1827;
_beforePromptPop1830.multipleValueReturn = _beforePromptPopMultiple1829;
_beforePromptPop1832.multipleValueReturn = _beforePromptPopMultiple1831;
_beforePromptPop1834.multipleValueReturn = _beforePromptPopMultiple1833;
_beforePromptPop1836.multipleValueReturn = _beforePromptPopMultiple1835;
_beforePromptPop1838.multipleValueReturn = _beforePromptPopMultiple1837;
_beforePromptPop1840.multipleValueReturn = _beforePromptPopMultiple1839;
_beforePromptPop1842.multipleValueReturn = _beforePromptPopMultiple1841;
_beforePromptPop1844.multipleValueReturn = _beforePromptPopMultiple1843;
_beforePromptPop1846.multipleValueReturn = _beforePromptPopMultiple1845;
_beforePromptPop1848.multipleValueReturn = _beforePromptPopMultiple1847;
_beforePromptPop1850.multipleValueReturn = _beforePromptPopMultiple1849;
_beforePromptPop1852.multipleValueReturn = _beforePromptPopMultiple1851;
_beforePromptPop1854.multipleValueReturn = _beforePromptPopMultiple1853;
_beforePromptPop1856.multipleValueReturn = _beforePromptPopMultiple1855;
_beforePromptPop1858.multipleValueReturn = _beforePromptPopMultiple1857;
_beforePromptPop1860.multipleValueReturn = _beforePromptPopMultiple1859;
_beforePromptPop1863.multipleValueReturn = _beforePromptPopMultiple1862;
_beforePromptPop1865.multipleValueReturn = _beforePromptPopMultiple1864;
_beforePromptPop1867.multipleValueReturn = _beforePromptPopMultiple1866;
_beforePromptPop1869.multipleValueReturn = _beforePromptPopMultiple1868;
_beforePromptPop1871.multipleValueReturn = _beforePromptPopMultiple1870;
_beforePromptPop1875.multipleValueReturn = _beforePromptPopMultiple1874;
_beforePromptPop1877.multipleValueReturn = _beforePromptPopMultiple1876;
_beforePromptPop1879.multipleValueReturn = _beforePromptPopMultiple1878;
_beforePromptPop1881.multipleValueReturn = _beforePromptPopMultiple1880;
_beforePromptPop1883.multipleValueReturn = _beforePromptPopMultiple1882;
_procReturn1891.multipleValueReturn = _procReturnMultiple1890;
_procReturn1895.multipleValueReturn = _procReturnMultiple1894;
_procReturn1899.multipleValueReturn = _procReturnMultiple1898;
_procReturn1903.multipleValueReturn = _procReturnMultiple1902;
_procReturn1907.multipleValueReturn = _procReturnMultiple1906;
_procReturn1912.multipleValueReturn = _procReturnMultiple1911;
_procReturn1916.multipleValueReturn = _procReturnMultiple1915;
_procReturn1920.multipleValueReturn = _procReturnMultiple1919;
_procReturn1924.multipleValueReturn = _procReturnMultiple1923;
_procReturn1928.multipleValueReturn = _procReturnMultiple1927;
_procReturn1932.multipleValueReturn = _procReturnMultiple1931;
_procReturn1936.multipleValueReturn = _procReturnMultiple1935;
_procReturn1941.multipleValueReturn = _procReturnMultiple1940;
_procReturn1945.multipleValueReturn = _procReturnMultiple1944;
_procReturn1950.multipleValueReturn = _procReturnMultiple1949;
_procReturn1954.multipleValueReturn = _procReturnMultiple1953;
_procReturn1958.multipleValueReturn = _procReturnMultiple1957;
_procReturn1962.multipleValueReturn = _procReturnMultiple1961;
_procReturn1969.multipleValueReturn = _procReturnMultiple1968;
_procReturn1973.multipleValueReturn = _procReturnMultiple1972;
_procReturn1980.multipleValueReturn = _procReturnMultiple1979;
_procReturn1984.multipleValueReturn = _procReturnMultiple1983;
_procReturn1988.multipleValueReturn = _afterCall1986;
_procReturn1993.multipleValueReturn = _procReturnMultiple1992;
_beforePromptPop1885.multipleValueReturn = _beforePromptPopMultiple1884;
_beforePopPrompt134.multipleValueReturn = _beforePopPromptMultiple133;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start1994); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _procReturnMultiple2198 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2198;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2199)(MACHINE);
};

var _procReturnMultiple2194 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2194;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2195)(MACHINE);
};

var _procReturnMultiple2188 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2188;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2189)(MACHINE);
};

var _procReturnMultiple2178 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2178;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2179)(MACHINE);
};

var _procReturnMultiple2174 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2174;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2175)(MACHINE);
};

var _procReturnMultiple2166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2166;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2167)(MACHINE);
};

var _afterCall2161 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2161;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2165)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2167, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2154 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2154;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2155)(MACHINE);
};

var _procReturnMultiple2150 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2150;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2151)(MACHINE);
};

var _afterCall2141 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2141;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2138 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2138;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2139)(MACHINE);
};

var _procReturnMultiple2130 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2130;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2131)(MACHINE);
};

var _procReturnMultiple2126 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2126;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2127)(MACHINE);
};

var _afterCall2117 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2117;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2125)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2127, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2118 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2118;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2119)(MACHINE);
};

var _procReturnMultiple2107 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2107;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2108)(MACHINE);
};

var _procReturnMultiple2103 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2103;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2104)(MACHINE);
};

var _afterCall2095 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2095;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2149)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2151, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2102)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2104, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2092 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2092;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2093)(MACHINE);
};

var _procReturnMultiple2085 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2085;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2086)(MACHINE);
};

var _procReturnMultiple2081 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2081;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2082)(MACHINE);
};

var _afterCall2070 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2070;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2063 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2063;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2064)(MACHINE);
};

var _procReturnMultiple2055 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2055;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2056)(MACHINE);
};

var _afterCall2046 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2046;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2047 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2047;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2048)(MACHINE);
};

var _procReturnMultiple2039 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2039;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2040)(MACHINE);
};

var _procReturnMultiple2035 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2035;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2036)(MACHINE);
};

var _procReturnMultiple2028 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2028;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2029)(MACHINE);
};

var _procReturnMultiple2024 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2024;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2025)(MACHINE);
};

var _procReturnMultiple2013 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2013;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2014)(MACHINE);
};

var _procReturnMultiple2006 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2006;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2007)(MACHINE);
};

var _procReturnMultiple2002 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2002;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2003)(MACHINE);
};

var _lamEntry97 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry97;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2001)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2003, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody2405 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2405;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody2382)(MACHINE);
};

var _afterLetBody2400 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2400;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody2385)(MACHINE);
};

var _lamEntry102 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry102;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][11]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2373)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2375, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry101 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry101;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = "";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2285)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2287, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry99 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry99;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][1]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][2]);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][3]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2173)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2175, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry98 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry98;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2080)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2082, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2113 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2113;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2117)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2119, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2080 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2080;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2084)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2086, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2177 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2177;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2173 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2173;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2177)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2179, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2165 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2165;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2162 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2162;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2163)(MACHINE);
};

var _afterCall2153 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2153;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2149 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2149;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2153)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2155, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2142 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2142;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2143)(MACHINE);
};

var _afterCall2137 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2137;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2141)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2143, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2129 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2129;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2125 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2125;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2129)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2131, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2114 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2114;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2115)(MACHINE);
};

var _afterCall2106 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2106;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2137)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2139, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2113)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2115, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2102 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2102;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2106)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2108, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2096 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2096;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2097)(MACHINE);
};

var _afterCall2091 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2091;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2095)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2097, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2084 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2084;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2161)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2163, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2091)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2093, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2071 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2071;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2072)(MACHINE);
};

var _afterCall2062 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2062;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2392 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2392;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody2395)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2399, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPop2437 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2437;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2439, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry103, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "string-append-n");
MACHINE.env[MACHINE.env.length - 1 - 0][13] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop2427 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2427;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2429, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry98, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "doloop");
MACHINE.env[MACHINE.env.length - 1 - 0][15] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn2409 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2409;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody2405)(MACHINE);
};

var _procReturn2375 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2375;
    }
    return (_afterCall2373)(MACHINE);
};

var _procReturn2331 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2331;
    }
    return (_afterCall2329)(MACHINE);
};

var _procReturn2309 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2309;
    }
    return (_afterCall2307)(MACHINE);
};

var _procReturn2287 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2287;
    }
    return (_afterCall2285)(MACHINE);
};

var _procReturn2261 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2261;
    }
    return (_afterCall2259)(MACHINE);
};

var _procReturn2237 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2237;
    }
    return (_afterCall2235)(MACHINE);
};

var _procReturn2215 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2215;
    }
    return (_afterCall2213)(MACHINE);
};

var _procReturn2189 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2189;
    }
    return (_afterCall2187)(MACHINE);
};

var _procReturn2163 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2163;
    }
    return (_afterCall2161)(MACHINE);
};

var _procReturn2143 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2143;
    }
    return (_afterCall2141)(MACHINE);
};

var _procReturn2131 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2131;
    }
    return (_afterCall2129)(MACHINE);
};

var _procReturn2097 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2097;
    }
    return (_afterCall2095)(MACHINE);
};

var _procReturn2072 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2072;
    }
    return (_afterCall2070)(MACHINE);
};

var _procReturn2048 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2048;
    }
    return (_afterCall2046)(MACHINE);
};

var _procReturn2025 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2025;
    }
    return (_afterCall2023)(MACHINE);
};

var _procReturn2007 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2007;
    }
    return (_afterCall2005)(MACHINE);
};

var _beforePromptPopMultiple2432 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2432;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2433)(MACHINE);
};

var _afterCall2054 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2054;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2027 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2027;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2054)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2056, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2034)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2036, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2187 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2187;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2193)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2195, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePromptPop2439 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2439;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["root/utilities/string.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt1997 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt1997;
    }
    
};

var _procReturn2404 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2404;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody2400)(MACHINE);
};

var _procReturn2359 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2359;
    }
    return (_afterCall2357)(MACHINE);
};

var _procReturn2343 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2343;
    }
    return (_afterCall2341)(MACHINE);
};

var _procReturn2320 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2320;
    }
    return (_afterCall2318)(MACHINE);
};

var _procReturn2291 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2291;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2289)(MACHINE);
};

var _procReturn2265 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2265;
    }
    return (_afterCall2263)(MACHINE);
};

var _procReturn2241 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2241;
    }
    return (_afterCall2239)(MACHINE);
};

var _procReturn2225 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2225;
    }
    return (_afterCall2223)(MACHINE);
};

var _procReturn2199 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2199;
    }
    return (_afterCall2197)(MACHINE);
};

var _procReturn2175 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2175;
    }
    return (_afterCall2173)(MACHINE);
};

var _procReturn2155 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2155;
    }
    return (_afterCall2153)(MACHINE);
};

var _procReturn2115 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2115;
    }
    return (_afterCall2113)(MACHINE);
};

var _procReturn2108 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2108;
    }
    return (_afterCall2106)(MACHINE);
};

var _procReturn2086 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2086;
    }
    return (_afterCall2084)(MACHINE);
};

var _procReturn2036 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2036;
    }
    return (_afterCall2034)(MACHINE);
};

var _procReturn2029 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2029;
    }
    return (_afterCall2027)(MACHINE);
};

var _beforePromptPopMultiple2438 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2438;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2439)(MACHINE);
};

var _beforePromptPopMultiple2428 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2428;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2429)(MACHINE);
};

var _onReturn2425 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn2425;
    }
    MACHINE.env.push([MACHINE.params.currentNamespace["string-reverse"] || MACHINE.primitives["string-reverse"],MACHINE.primitives["list->string"],MACHINE.primitives["reverse"],MACHINE.primitives["string->list"],MACHINE.params.currentNamespace["string-trim-left"] || MACHINE.primitives["string-trim-left"],MACHINE.primitives["string=?"],MACHINE.modules["root/lang/char.rkt"].namespace["char-whitespace?"],MACHINE.primitives["string-ref"],MACHINE.primitives["void"],MACHINE.primitives["substring"],MACHINE.primitives["string-length"],MACHINE.params.currentNamespace["string-trim-right"] || MACHINE.primitives["string-trim-right"],MACHINE.params.currentNamespace["string-trim-both"] || MACHINE.primitives["string-trim-both"],MACHINE.params.currentNamespace["string-append-n"] || MACHINE.primitives["string-append-n"],MACHINE.primitives["string-append"],false,false]);  MACHINE.env[MACHINE.env.length-1].names = ["string-reverse","list->string","reverse","string->list","string-trim-left","string=?","char-whitespace?","string-ref","void","substring","string-length","string-trim-right","string-trim-both","string-append-n","string-append",false,false];
MACHINE.modules["root/utilities/string.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2427, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry97, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "doloop");
MACHINE.env[MACHINE.env.length - 1 - 0][16] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _onReturnMultiple2418 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple2418;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn2419)(MACHINE);
};

var _afterCall2034 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2034;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2038)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2040, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2023 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2023;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2027)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2029, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2012 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2012;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2016)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2018, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2005 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2005;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2070)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2072, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2012)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2014, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2001 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2001;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2005)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2007, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody2382 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2382;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody2395 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2395;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody2388)(MACHINE);
};

var _afterCall2311 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2311;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2357)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2359, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2318)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2320, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2296 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2296;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2300)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2302, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2223 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2223;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2227)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2229, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2207 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2207;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2259)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2261, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2213)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2215, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2203 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2203;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2207)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2209, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry100 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry100;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = "";
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2187)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2189, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPop2433 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2433;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2435, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry101, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "string-trim-right");
MACHINE.env[MACHINE.env.length - 1 - 0][11] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop2429 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2429;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2431, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry99, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "string-reverse");
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn2399 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2399;
    }
    MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody2395)(MACHINE);
};

var _procReturn2351 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2351;
    }
    return (_afterCall2349)(MACHINE);
};

var _procReturn2324 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2324;
    }
    return (_afterCall2322)(MACHINE);
};

var _procReturn2302 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2302;
    }
    return (_afterCall2300)(MACHINE);
};

var _procReturn2277 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2277;
    }
    return (_afterCall2275)(MACHINE);
};

var _procReturn2253 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2253;
    }
    return (_afterCall2251)(MACHINE);
};

var _procReturn2229 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2229;
    }
    return (_afterCall2227)(MACHINE);
};

var _procReturn2209 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2209;
    }
    return (_afterCall2207)(MACHINE);
};

var _procReturn2195 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2195;
    }
    return (_afterCall2193)(MACHINE);
};

var _procReturn2167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2167;
    }
    return (_afterCall2165)(MACHINE);
};

var _procReturn2139 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2139;
    }
    return (_afterCall2137)(MACHINE);
};

var _procReturn2127 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2127;
    }
    return (_afterCall2125)(MACHINE);
};

var _procReturn2093 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2093;
    }
    return (_afterCall2091)(MACHINE);
};

var _procReturn2082 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2082;
    }
    return (_afterCall2080)(MACHINE);
};

var _procReturn2056 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2056;
    }
    return (_afterCall2054)(MACHINE);
};

var _procReturn2018 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2018;
    }
    return (_afterCall2016)(MACHINE);
};

var _beforePromptPopMultiple2436 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2436;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2437)(MACHINE);
};

var _beforePromptPopMultiple2430 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2430;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2431)(MACHINE);
};

var _onReturnMultiple2424 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple2424;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn2425)(MACHINE);
};

var _onReturnMultiple2421 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple2421;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn2422)(MACHINE);
};

var _moduleEntry2416 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry2416;
    }
    MACHINE.modules["root/utilities/string.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn2419)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn2419, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn2419)(MACHINE);
}
};

var _afterCall2038 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2038;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2046)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2048, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][16];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2408 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2408;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2409)(MACHINE);
};

var _procReturnMultiple2398 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2398;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2399)(MACHINE);
};

var _procReturnMultiple2017 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2017;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2018)(MACHINE);
};

var _afterCall2373 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2373;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2365 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2365;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2357 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2357;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody2385 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2385;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody2405)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2409, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody2388 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2388;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
return (_afterLetBody2400)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2404, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2341 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2341;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2333 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2333;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2341)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2343, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][16];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2329 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2329;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2333)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2335, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2322 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2322;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2349)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2351, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2329)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2331, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2318 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2318;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2322)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2324, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2307 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2307;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2311)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2313, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2300 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2300;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2365)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2367, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2307)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2309, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2301 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2301;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2302)(MACHINE);
};

var _afterCall2289 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2289;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2296)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2298, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2285 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2285;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2289)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2291, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2275 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2275;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2271 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2271;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2275)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2277, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2263 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2263;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2259 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2259;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = 1;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2263)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2265, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2251 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2251;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2247 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2247;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = 2;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2251)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2253, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2239 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2239;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2235 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2235;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = 3;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2239)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2241, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2228 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2228;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2229)(MACHINE);
};

var _afterCall2217 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2217;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2247)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2249, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2223)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2225, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2213 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2213;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2217)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2219, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2208 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2208;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2209)(MACHINE);
};

var _afterCall2197 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2197;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2271)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2273, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2203)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2205, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2193 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2193;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2197)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2199, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _start2440 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start2440;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt1997, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["root/utilities/string.rkt"]=new RUNTIME.ModuleRecord("string", _moduleEntry2416);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop2435 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2435;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2437, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry102, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "string-trim-both");
MACHINE.env[MACHINE.env.length - 1 - 0][12] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop2431 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop2431;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop2433, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry100, 1, [MACHINE.env[MACHINE.env.length - 1 - 0]], "string-trim-left");
MACHINE.env[MACHINE.env.length - 1 - 0][4] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn2394 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2394;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2392)(MACHINE);
};

var _procReturn2367 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2367;
    }
    return (_afterCall2365)(MACHINE);
};

var _procReturn2335 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2335;
    }
    return (_afterCall2333)(MACHINE);
};

var _procReturn2313 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2313;
    }
    return (_afterCall2311)(MACHINE);
};

var _procReturn2298 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2298;
    }
    return (_afterCall2296)(MACHINE);
};

var _procReturn2273 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2273;
    }
    return (_afterCall2271)(MACHINE);
};

var _procReturn2249 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2249;
    }
    return (_afterCall2247)(MACHINE);
};

var _procReturn2219 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2219;
    }
    return (_afterCall2217)(MACHINE);
};

var _procReturn2205 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2205;
    }
    return (_afterCall2203)(MACHINE);
};

var _procReturn2179 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2179;
    }
    return (_afterCall2177)(MACHINE);
};

var _procReturn2151 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2151;
    }
    return (_afterCall2149)(MACHINE);
};

var _procReturn2119 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2119;
    }
    return (_afterCall2117)(MACHINE);
};

var _procReturn2104 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2104;
    }
    return (_afterCall2102)(MACHINE);
};

var _procReturn2064 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2064;
    }
    return (_afterCall2062)(MACHINE);
};

var _procReturn2040 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2040;
    }
    return (_afterCall2038)(MACHINE);
};

var _procReturn2014 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2014;
    }
    return (_afterCall2012)(MACHINE);
};

var _procReturn2003 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2003;
    }
    return (_afterCall2001)(MACHINE);
};

var _beforePromptPopMultiple2434 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2434;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2435)(MACHINE);
};

var _beforePromptPopMultiple2426 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple2426;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop2427)(MACHINE);
};

var _onReturn2422 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn2422;
    }
    if ((MACHINE.modules["root/lang/char.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["root/lang/char.rkt"].isInvoked !== false)
{
return (_onReturn2425)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn2425, MACHINE.proc));
return (MACHINE.modules["root/lang/char.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module root/lang/char.rkt hasn't been linked in!!!"));
return (_onReturn2425)(MACHINE);
}
};

var _onReturn2419 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn2419;
    }
    if ((MACHINE.modules["root/lang/do.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["root/lang/do.rkt"].isInvoked !== false)
{
return (_onReturn2422)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn2422, MACHINE.proc));
return (MACHINE.modules["root/lang/do.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module root/lang/do.rkt hasn't been linked in!!!"));
return (_onReturn2422)(MACHINE);
}
};

var _beforePopPromptMultiple1996 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple1996;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt1997)(MACHINE);
};

var _procReturnMultiple2403 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2403;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2404)(MACHINE);
};

var _procReturnMultiple2393 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2393;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2394)(MACHINE);
};

var _afterCall2016 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2016;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2062)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2064, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][6]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][7];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2023)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2025, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry103 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry103;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = ((plt.baselib.numbers.lessThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "<=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])),0)));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])), 1);
MACHINE.val = ((plt.baselib.numbers.lessThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "<=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),0)));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])), 1);
MACHINE.val = ((plt.baselib.numbers.lessThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "<=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),0)));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])), 1);
MACHINE.val = ((plt.baselib.numbers.lessThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "<=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),0)));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][13];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2392)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2394, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 1] = "";
return (_afterLetBody2388)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 1] = "";
return (_afterLetBody2385)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 1] = "";
return (_afterLetBody2382)(MACHINE);
}
} else {
MACHINE.val = "";
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2374 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2374;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2375)(MACHINE);
};

var _procReturnMultiple2366 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2366;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2367)(MACHINE);
};

var _procReturnMultiple2358 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2358;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2359)(MACHINE);
};

var _afterCall2349 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2349;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2350 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2350;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2351)(MACHINE);
};

var _procReturnMultiple2342 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2342;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2343)(MACHINE);
};

var _procReturnMultiple2334 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2334;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2335)(MACHINE);
};

var _procReturnMultiple2330 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2330;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2331)(MACHINE);
};

var _procReturnMultiple2323 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2323;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2324)(MACHINE);
};

var _procReturnMultiple2319 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2319;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2320)(MACHINE);
};

var _procReturnMultiple2312 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2312;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2313)(MACHINE);
};

var _procReturnMultiple2308 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2308;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2309)(MACHINE);
};

var _procReturnMultiple2297 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2297;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2298)(MACHINE);
};

var _procReturnMultiple2290 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2290;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2291)(MACHINE);
};

var _procReturnMultiple2286 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2286;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2287)(MACHINE);
};

var _procReturnMultiple2276 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2276;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2277)(MACHINE);
};

var _procReturnMultiple2272 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2272;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2273)(MACHINE);
};

var _procReturnMultiple2264 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2264;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2265)(MACHINE);
};

var _procReturnMultiple2260 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2260;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2261)(MACHINE);
};

var _procReturnMultiple2252 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2252;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2253)(MACHINE);
};

var _procReturnMultiple2248 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2248;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2249)(MACHINE);
};

var _procReturnMultiple2240 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2240;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2241)(MACHINE);
};

var _procReturnMultiple2236 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2236;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2237)(MACHINE);
};

var _afterCall2227 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2227;
    }
    if (MACHINE.val === false)
{
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0][8];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2235)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2237, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 4;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 2), 2);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2224 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2224;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2225)(MACHINE);
};

var _procReturnMultiple2218 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2218;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2219)(MACHINE);
};

var _procReturnMultiple2214 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2214;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2215)(MACHINE);
};

var _procReturnMultiple2204 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2204;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2205)(MACHINE);
};

_procReturn2003.multipleValueReturn = _procReturnMultiple2002;
_procReturn2007.multipleValueReturn = _procReturnMultiple2006;
_procReturn2014.multipleValueReturn = _procReturnMultiple2013;
_procReturn2018.multipleValueReturn = _procReturnMultiple2017;
_procReturn2025.multipleValueReturn = _procReturnMultiple2024;
_procReturn2029.multipleValueReturn = _procReturnMultiple2028;
_procReturn2036.multipleValueReturn = _procReturnMultiple2035;
_procReturn2040.multipleValueReturn = _procReturnMultiple2039;
_procReturn2048.multipleValueReturn = _procReturnMultiple2047;
_procReturn2056.multipleValueReturn = _procReturnMultiple2055;
_procReturn2064.multipleValueReturn = _procReturnMultiple2063;
_procReturn2072.multipleValueReturn = _procReturnMultiple2071;
_procReturn2082.multipleValueReturn = _procReturnMultiple2081;
_procReturn2086.multipleValueReturn = _procReturnMultiple2085;
_procReturn2093.multipleValueReturn = _procReturnMultiple2092;
_procReturn2097.multipleValueReturn = _procReturnMultiple2096;
_procReturn2104.multipleValueReturn = _procReturnMultiple2103;
_procReturn2108.multipleValueReturn = _procReturnMultiple2107;
_procReturn2115.multipleValueReturn = _procReturnMultiple2114;
_procReturn2119.multipleValueReturn = _procReturnMultiple2118;
_procReturn2127.multipleValueReturn = _procReturnMultiple2126;
_procReturn2131.multipleValueReturn = _procReturnMultiple2130;
_procReturn2139.multipleValueReturn = _procReturnMultiple2138;
_procReturn2143.multipleValueReturn = _procReturnMultiple2142;
_procReturn2151.multipleValueReturn = _procReturnMultiple2150;
_procReturn2155.multipleValueReturn = _procReturnMultiple2154;
_procReturn2163.multipleValueReturn = _procReturnMultiple2162;
_procReturn2167.multipleValueReturn = _procReturnMultiple2166;
_procReturn2175.multipleValueReturn = _procReturnMultiple2174;
_procReturn2179.multipleValueReturn = _procReturnMultiple2178;
_procReturn2189.multipleValueReturn = _procReturnMultiple2188;
_procReturn2195.multipleValueReturn = _procReturnMultiple2194;
_procReturn2199.multipleValueReturn = _procReturnMultiple2198;
_procReturn2205.multipleValueReturn = _procReturnMultiple2204;
_procReturn2209.multipleValueReturn = _procReturnMultiple2208;
_procReturn2215.multipleValueReturn = _procReturnMultiple2214;
_procReturn2219.multipleValueReturn = _procReturnMultiple2218;
_procReturn2225.multipleValueReturn = _procReturnMultiple2224;
_procReturn2229.multipleValueReturn = _procReturnMultiple2228;
_procReturn2237.multipleValueReturn = _procReturnMultiple2236;
_procReturn2241.multipleValueReturn = _procReturnMultiple2240;
_procReturn2249.multipleValueReturn = _procReturnMultiple2248;
_procReturn2253.multipleValueReturn = _procReturnMultiple2252;
_procReturn2261.multipleValueReturn = _procReturnMultiple2260;
_procReturn2265.multipleValueReturn = _procReturnMultiple2264;
_procReturn2273.multipleValueReturn = _procReturnMultiple2272;
_procReturn2277.multipleValueReturn = _procReturnMultiple2276;
_procReturn2287.multipleValueReturn = _procReturnMultiple2286;
_procReturn2291.multipleValueReturn = _procReturnMultiple2290;
_procReturn2298.multipleValueReturn = _procReturnMultiple2297;
_procReturn2302.multipleValueReturn = _procReturnMultiple2301;
_procReturn2309.multipleValueReturn = _procReturnMultiple2308;
_procReturn2313.multipleValueReturn = _procReturnMultiple2312;
_procReturn2320.multipleValueReturn = _procReturnMultiple2319;
_procReturn2324.multipleValueReturn = _procReturnMultiple2323;
_procReturn2331.multipleValueReturn = _procReturnMultiple2330;
_procReturn2335.multipleValueReturn = _procReturnMultiple2334;
_procReturn2343.multipleValueReturn = _procReturnMultiple2342;
_procReturn2351.multipleValueReturn = _procReturnMultiple2350;
_procReturn2359.multipleValueReturn = _procReturnMultiple2358;
_procReturn2367.multipleValueReturn = _procReturnMultiple2366;
_procReturn2375.multipleValueReturn = _procReturnMultiple2374;
_procReturn2394.multipleValueReturn = _procReturnMultiple2393;
_procReturn2399.multipleValueReturn = _procReturnMultiple2398;
_procReturn2404.multipleValueReturn = _procReturnMultiple2403;
_procReturn2409.multipleValueReturn = _procReturnMultiple2408;
_onReturn2419.multipleValueReturn = _onReturnMultiple2418;
_onReturn2422.multipleValueReturn = _onReturnMultiple2421;
_onReturn2425.multipleValueReturn = _onReturnMultiple2424;
_beforePromptPop2427.multipleValueReturn = _beforePromptPopMultiple2426;
_beforePromptPop2429.multipleValueReturn = _beforePromptPopMultiple2428;
_beforePromptPop2431.multipleValueReturn = _beforePromptPopMultiple2430;
_beforePromptPop2433.multipleValueReturn = _beforePromptPopMultiple2432;
_beforePromptPop2435.multipleValueReturn = _beforePromptPopMultiple2434;
_beforePromptPop2437.multipleValueReturn = _beforePromptPopMultiple2436;
_beforePromptPop2439.multipleValueReturn = _beforePromptPopMultiple2438;
_beforePopPrompt1997.multipleValueReturn = _beforePopPromptMultiple1996;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start2440); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _beforePopPrompt2443 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt2443;
    }
    
};

var _onReturnMultiple2447 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple2447;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn2448)(MACHINE);
};

var _moduleEntry2445 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry2445;
    }
    MACHINE.modules["whalesong/lang/base.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/private/list.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/private/list.rkt"].isInvoked !== false)
{
return (_onReturn2448)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn2448, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/private/list.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/private/list.rkt hasn't been linked in!!!"));
return (_onReturn2448)(MACHINE);
}
};

var _onReturn2451 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn2451;
    }
    MACHINE.env.push([]);  MACHINE.env[MACHINE.env.length-1].names = [];
MACHINE.modules["whalesong/lang/base.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["whalesong/lang/base.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _onReturnMultiple2450 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple2450;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn2451)(MACHINE);
};

var _start2452 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start2452;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt2443, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["whalesong/lang/base.rkt"]=new RUNTIME.ModuleRecord("base", _moduleEntry2445);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _onReturn2448 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn2448;
    }
    if ((MACHINE.modules["collects/racket/private/modbeg.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["collects/racket/private/modbeg.rkt"].isInvoked !== false)
{
return (_onReturn2451)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn2451, MACHINE.proc));
return (MACHINE.modules["collects/racket/private/modbeg.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module collects/racket/private/modbeg.rkt hasn't been linked in!!!"));
return (_onReturn2451)(MACHINE);
}
};

var _beforePopPromptMultiple2442 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple2442;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt2443)(MACHINE);
};

_onReturn2448.multipleValueReturn = _onReturnMultiple2447;
_onReturn2451.multipleValueReturn = _onReturnMultiple2450;
_beforePopPrompt2443.multipleValueReturn = _beforePopPromptMultiple2442;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start2452); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _afterCall3723 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3723;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3728)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3730, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2741 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2741;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2745)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2747, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3356 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3356;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3361)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3363, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn4076 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4076;
    }
    return (_afterIf4068)(MACHINE);
};

var _afterLetBody3060 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3060;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3066)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3068, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2535 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2535;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2542)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2544, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePromptPopMultiple6215 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6215;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6216)(MACHINE);
};

var _afterCall3258 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3258;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 15][47];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 17];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 18];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 16;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 16;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 16), 16);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 16;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 16), 16);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall3582 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3582;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14][45];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4254 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4254;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry131, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4259, MACHINE.proc));
return (_lamEntry131)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4248)(MACHINE);
}
};

var _afterCall2556 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2556;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2560)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2562, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3802 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3802;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3814)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3816, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn4325 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4325;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4319)(MACHINE);
};

var _afterCall2907 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2907;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2911)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2913, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5852 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5852;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5853)(MACHINE);
};

var _procReturn3853 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3853;
    }
    return (_afterCall3851)(MACHINE);
};

var _afterCall4101 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4101;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4110)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4112, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3212 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3212;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3221)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3223, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturn3479 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3479;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3477)(MACHINE);
};

var _afterCall2745 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2745;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody2733)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2751, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3153 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3153;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3162)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3164, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf2823 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2823;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2837)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2841, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2837)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3391 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3391;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3398)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3400, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2560 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2560;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 3])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2567)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2569, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2953 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2953;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2951)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2959, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2951)(MACHINE);
}
};

var _beforePromptPopMultiple6288 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6288;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6289)(MACHINE);
};

var _beforePromptPopMultiple6271 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6271;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6272)(MACHINE);
};

var _afterCall3339 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3339;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3348)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3350, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall3332 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3332;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3339)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3341, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _beforePromptPopMultiple6241 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6241;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6242)(MACHINE);
};

var _afterCall2900 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2900;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][50];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 14][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2907)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2909, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5453 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5453;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5454)(MACHINE);
};

var _procReturn4025 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4025;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4014)(MACHINE);
};

var _afterIf4217 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4217;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4227)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4229, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4130 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4130;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4139)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4141, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5796 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5796;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5797)(MACHINE);
};

var _afterCall3668 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3668;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3672)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3674, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3236 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3236;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 14), 14);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3245)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3247, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4062 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4062;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4052)(MACHINE);
};

var _procReturnMultiple5731 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5731;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5732)(MACHINE);
};

var _afterCall3166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3166;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3170)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3172, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4011 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4011;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4020)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4022, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4014)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4005)(MACHINE);
}
};

var _afterCall3569 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3569;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3573)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3575, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn3179 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3179;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3177)(MACHINE);
};

var _afterCall2689 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2689;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2687)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2695, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2687)(MACHINE);
}
};

var _afterIf2837 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2837;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2845)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2847, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3510 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3510;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3514)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3516, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3486 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3486;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3490)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3492, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3415 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3415;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3420)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3422, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn2526 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2526;
    }
    return (_afterCall2524)(MACHINE);
};

var _procReturn2511 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2511;
    }
    return (_afterCall2509)(MACHINE);
};

var _afterCall3387 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3387;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3391)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3393, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePromptPopMultiple6294 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6294;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6295)(MACHINE);
};

var _beforePromptPopMultiple6290 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6290;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6291)(MACHINE);
};

var _procReturnMultiple5498 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5498;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5499)(MACHINE);
};

var _beforePromptPopMultiple6257 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6257;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6258)(MACHINE);
};

var _beforePromptPopMultiple6247 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6247;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6248)(MACHINE);
};

var _beforePromptPopMultiple6245 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6245;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6246)(MACHINE);
};

var _beforePromptPopMultiple6233 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6233;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6234)(MACHINE);
};

var _procReturnMultiple5027 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5027;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5028)(MACHINE);
};

var _moduleEntry6211 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6211;
    }
    MACHINE.modules["whalesong/lang/private/list.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/unsafe/ops.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/unsafe/ops.rkt"].isInvoked !== false)
{
return (_onReturn6214)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6214, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/unsafe/ops.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/unsafe/ops.rkt hasn't been linked in!!!"));
return (_onReturn6214)(MACHINE);
}
};

var _procReturn4004 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4004;
    }
    return (_afterCall4002)(MACHINE);
};

var _afterCall2863 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2863;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2868)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2870, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5792 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5792;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5793)(MACHINE);
};

var _procReturn3792 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3792;
    }
    return (_afterCall3790)(MACHINE);
};

var _procReturn3679 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3679;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3677)(MACHINE);
};

var _procReturn3654 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3654;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3652)(MACHINE);
};

var _afterCall3221 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3221;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3225)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3227, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5350 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5350;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5351)(MACHINE);
};

var _procReturn3330 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3330;
    }
    return (_afterCall3328)(MACHINE);
};

var _afterCall3162 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3162;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3166)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3168, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn3231 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3231;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3229)(MACHINE);
};

var _afterCall3560 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3560;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 13), 13);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3569)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3571, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5683 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5683;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5684)(MACHINE);
};

var _afterIf2925 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2925;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2933)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2935, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn3028 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3028;
    }
    return (_afterLetBody3024)(MACHINE);
};

var _afterCall3514 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3514;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3518)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3520, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3945 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3945;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3954)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3956, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3948)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn2917 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2917;
    }
    return (_afterCall2915)(MACHINE);
};

var _afterCall3066 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3066;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3073)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3075, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturn2595 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2595;
    }
    return (_afterCall2593)(MACHINE);
};

var _afterCall3411 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3411;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3415)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3417, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn2522 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2522;
    }
    return (_afterCall2520)(MACHINE);
};

var _procReturn2505 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2505;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2503)(MACHINE);
};

var _afterCall3814 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3814;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][43];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn2461 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2461;
    }
    return (_afterCall2459)(MACHINE);
};

var _lamEntry190 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry190;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5912)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5914, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5082 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5082;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5083)(MACHINE);
};

var _beforePromptPopMultiple6265 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6265;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6266)(MACHINE);
};

var _beforePromptPopMultiple6261 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6261;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6262)(MACHINE);
};

var _beforePromptPopMultiple6251 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6251;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6252)(MACHINE);
};

var _procReturnMultiple5870 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5870;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5871)(MACHINE);
};

var _beforePromptPopMultiple6237 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6237;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6238)(MACHINE);
};

var _procReturnMultiple4603 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4603;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4604)(MACHINE);
};

var _afterCall2879 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2879;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2884)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2886, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5834 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5834;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5835)(MACHINE);
};

var _procReturnMultiple5830 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5830;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5831)(MACHINE);
};

var _afterCall3699 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3699;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3703)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3705, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5409 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5409;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5410)(MACHINE);
};

var _procReturnMultiple5788 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5788;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5789)(MACHINE);
};

var _afterCall3659 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3659;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3668)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3670, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5767 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5767;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5768)(MACHINE);
};

var _procReturnMultiple5763 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5763;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5764)(MACHINE);
};

var _afterCall4070 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4070;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf4068)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4068)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4076, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4913 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4913;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4914)(MACHINE);
};

var _procReturn3354 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3354;
    }
    return (_afterCall3352)(MACHINE);
};

var _procReturnMultiple5711 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5711;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5712)(MACHINE);
};

var _procReturn3255 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3255;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3253)(MACHINE);
};

var _procReturnMultiple6086 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6086;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6087)(MACHINE);
};

var _afterCall2723 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2723;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
return (_afterLetBody2726)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2730)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2732, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5292 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5292;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5293)(MACHINE);
};

var _afterCall3536 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3536;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3545)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3547, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple6052 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6052;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6053)(MACHINE);
};

var _afterCall3954 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3954;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3963)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3965, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3957)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3948)(MACHINE);
}
};

var _procReturn2975 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2975;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2973)(MACHINE);
};

var _afterCall2669 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2669;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2667)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2675, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2667)(MACHINE);
}
};

var _procReturnMultiple5637 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5637;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5638)(MACHINE);
};

var _afterCall3925 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3925;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3934)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3936, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3928)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3919)(MACHINE);
}
};

var _procReturn2827 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2827;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2825)(MACHINE);
};

var _procReturnMultiple5560 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5560;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5561)(MACHINE);
};

var _afterCall2582 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2582;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2589)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2591, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5940 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5940;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5941)(MACHINE);
};

var _procReturnMultiple5927 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5927;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5928)(MACHINE);
};

var _procReturn2477 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2477;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2475)(MACHINE);
};

var _procReturnMultiple5520 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5520;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5521)(MACHINE);
};

var _procReturnMultiple5510 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5510;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5511)(MACHINE);
};

var _afterCall3361 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3361;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3374)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3376, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry165 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry165;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry166, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry166)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePromptPopMultiple6269 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6269;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6270)(MACHINE);
};

var _procReturnMultiple5490 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5490;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5491)(MACHINE);
};

var _procReturnMultiple5879 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5879;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5880)(MACHINE);
};

var _procReturnMultiple5475 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5475;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5476)(MACHINE);
};

var _procReturnMultiple5866 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5866;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5867)(MACHINE);
};

var _afterCall4161 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4161;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4158 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4158;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4159)(MACHINE);
};

var _afterCall3719 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3719;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3723)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3725, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5439 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5439;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5440)(MACHINE);
};

var _procReturnMultiple5826 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5826;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5827)(MACHINE);
};

var _procReturn3974 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3974;
    }
    return (_afterCall3972)(MACHINE);
};

var _procReturn3909 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3909;
    }
    return (_afterCall3907)(MACHINE);
};

var _procReturnMultiple4973 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4973;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4974)(MACHINE);
};

var _procReturnMultiple5784 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5784;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5785)(MACHINE);
};

var _afterCall3245 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3245;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3249)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3251, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5388 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5388;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5389)(MACHINE);
};

var _procReturnMultiple5757 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5757;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5758)(MACHINE);
};

var _procReturn3555 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3555;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3553)(MACHINE);
};

var _procReturnMultiple4907 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4907;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4908)(MACHINE);
};

var _afterCall3186 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3186;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3190)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3192, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6107 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6107;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6108)(MACHINE);
};

var _procReturnMultiple4877 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4877;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4878)(MACHINE);
};

var _procReturnMultiple5704 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5704;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5705)(MACHINE);
};

var _procReturnMultiple5695 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5695;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5696)(MACHINE);
};

var _procReturn3201 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3201;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3199)(MACHINE);
};

var _procReturnMultiple4853 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4853;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4854)(MACHINE);
};

var _afterCall3976 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3976;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3966)(MACHINE);
};

var _procReturn3059 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3059;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3057)(MACHINE);
};

var _procReturnMultiple5660 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5660;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5661)(MACHINE);
};

var _procReturn2998 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2998;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2996)(MACHINE);
};

var _procReturnMultiple6036 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6036;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6037)(MACHINE);
};

var _procReturn2939 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2939;
    }
    return (_afterIf2931)(MACHINE);
};

var _procReturnMultiple5629 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5629;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5630)(MACHINE);
};

var _procReturn2877 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2877;
    }
    return (_afterCall2875)(MACHINE);
};

var _procReturnMultiple6003 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6003;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6004)(MACHINE);
};

var _afterCall3862 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3862;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3873)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3875, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5146 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5146;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5147)(MACHINE);
};

var _procReturn2573 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2573;
    }
    return (_afterCall2571)(MACHINE);
};

var _procReturnMultiple5536 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5536;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5537)(MACHINE);
};

var _procReturnMultiple5530 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5530;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5531)(MACHINE);
};

var _procReturn2473 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2473;
    }
    return (_afterCall2471)(MACHINE);
};

var _procReturnMultiple5514 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5514;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5515)(MACHINE);
};

var _procReturnMultiple5100 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5100;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5101)(MACHINE);
};

var _procReturn4351 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4351;
    }
    return (_afterCall4349)(MACHINE);
};

var _procReturnMultiple4213 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4213;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4214)(MACHINE);
};

var _procReturnMultiple5893 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5893;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5894)(MACHINE);
};

var _procReturnMultiple5486 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5486;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5487)(MACHINE);
};

var _procReturnMultiple5480 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5480;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5481)(MACHINE);
};

var _afterCall2509 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2509;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2513)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2515, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5467 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5467;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5468)(MACHINE);
};

var _afterCall3315 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3315;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3324)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3326, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3729 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3729;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3730)(MACHINE);
};

var _afterCall2884 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2884;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2891)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2893, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5011 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5011;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5012)(MACHINE);
};

var _procReturnMultiple5432 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5432;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5433)(MACHINE);
};

var _procReturnMultiple5822 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5822;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5823)(MACHINE);
};

var _procReturnMultiple6189 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6189;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6190)(MACHINE);
};

var _procReturnMultiple4557 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4557;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4558)(MACHINE);
};

var _procReturnMultiple5402 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5402;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5403)(MACHINE);
};

var _procReturn3712 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3712;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3710)(MACHINE);
};

var _lamEntry179 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry179;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5387)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5389, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 2], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5378 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5378;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5379)(MACHINE);
};

var _afterCall2805 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2805;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2803)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2811, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2803)(MACHINE);
}
};

var _procReturnMultiple5747 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5747;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5748)(MACHINE);
};

var _procReturn3525 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3525;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3523)(MACHINE);
};

var _afterCall4049 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4049;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4058)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4060, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4052)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4043)(MACHINE);
}
};

var _afterCall4040 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4040;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4049)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4051, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4043)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4034)(MACHINE);
}
};

var _afterCall4031 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4031;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4040)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4042, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4034)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5715 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5715;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5716)(MACHINE);
};

var _lamEntry172 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry172;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5699 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5699;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5700)(MACHINE);
};

var _procReturnMultiple4869 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4869;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4870)(MACHINE);
};

var _procReturnMultiple6082 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6082;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6083)(MACHINE);
};

var _procReturnMultiple4847 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4847;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4848)(MACHINE);
};

var _afterCall3545 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3545;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3549)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3551, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5664 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5664;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5665)(MACHINE);
};

var _procReturnMultiple5265 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5265;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5266)(MACHINE);
};

var _procReturnMultiple5656 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5656;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5657)(MACHINE);
};

var _procReturnMultiple5645 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5645;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5646)(MACHINE);
};

var _procReturnMultiple6032 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6032;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6033)(MACHINE);
};

var _procReturnMultiple5233 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5233;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5234)(MACHINE);
};

var _afterCall3490 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3490;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3494)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3496, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple6011 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6011;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6012)(MACHINE);
};

var _afterCall3916 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3916;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3925)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3927, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3919)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3910)(MACHINE);
}
};

var _procReturnMultiple5609 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5609;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5610)(MACHINE);
};

var _afterCall4283 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4283;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4292)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4294, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3852 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3852;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3853)(MACHINE);
};

var _procReturnMultiple5954 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5954;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5955)(MACHINE);
};

var _afterCall2578 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2578;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2582)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2584, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5126 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5126;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5127)(MACHINE);
};

var _procReturnMultiple5120 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5120;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5121)(MACHINE);
};

var _procReturnMultiple5921 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5921;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5922)(MACHINE);
};

var _procReturnMultiple5106 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5106;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5107)(MACHINE);
};

var _procReturnMultiple4666 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4666;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4667)(MACHINE);
};

var _beforePromptPopMultiple6282 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6282;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6283)(MACHINE);
};

var _procReturnMultiple3357 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3357;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3358)(MACHINE);
};

var _procReturnMultiple5494 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5494;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5495)(MACHINE);
};

var _afterCall5884 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5884;
    }
    MACHINE.val = plt.baselib.numbers.add(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5888)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5890, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5059 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5059;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5060)(MACHINE);
};

var _procReturnMultiple4626 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4626;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4627)(MACHINE);
};

var _procReturnMultiple5043 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5043;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5044)(MACHINE);
};

var _beforePromptPopMultiple6223 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6223;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6224)(MACHINE);
};

var _afterCall2495 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2495;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 15]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2499)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2501, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 3] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody2467)(MACHINE);
}
};

var _procReturn4060 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4060;
    }
    return (_afterCall4058)(MACHINE);
};

var _procReturnMultiple4149 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4149;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4150)(MACHINE);
};

var _afterCall4582 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4582;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry140, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5425 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5425;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5426)(MACHINE);
};

var _procReturnMultiple5800 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5800;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5801)(MACHINE);
};

var _procReturnMultiple4111 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4111;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4112)(MACHINE);
};

var _procReturnMultiple4967 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4967;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4968)(MACHINE);
};

var _procReturnMultiple6167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6167;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6168)(MACHINE);
};

var _procReturnMultiple4953 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4953;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4954)(MACHINE);
};

var _procReturnMultiple4947 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4947;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4948)(MACHINE);
};

var _afterCall3639 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3639;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3648)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3650, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5370 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5370;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5371)(MACHINE);
};

var _lamEntry193 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry193;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][34]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6140)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6142, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4050 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4050;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4051)(MACHINE);
};

var _procReturn3409 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3409;
    }
    return (_afterCall3407)(MACHINE);
};

var _procReturn3385 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3385;
    }
    return (_afterCall3383)(MACHINE);
};

var _lamEntry173 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry173;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][44];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4448 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4448;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4449)(MACHINE);
};

var _afterCall2737 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2737;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2741)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2743, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4434 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4434;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4435)(MACHINE);
};

var _procReturnMultiple5688 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5688;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5689)(MACHINE);
};

var _afterCall3553 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3553;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3560)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3562, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf2945 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2945;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2953)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2955, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn3084 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3084;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3082)(MACHINE);
};

var _procReturnMultiple5269 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5269;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5270)(MACHINE);
};

var _procReturnMultiple4395 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4395;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4396)(MACHINE);
};

var _procReturnMultiple5650 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5650;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5651)(MACHINE);
};

var _procReturnMultiple4813 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4813;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4814)(MACHINE);
};

var _procReturnMultiple5641 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5641;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5642)(MACHINE);
};

var _procReturnMultiple4793 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4793;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4794)(MACHINE);
};

var _procReturn2897 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2897;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2895)(MACHINE);
};

var _procReturnMultiple5619 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5619;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5620)(MACHINE);
};

var _procReturn2851 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2851;
    }
    return (_afterIf2843)(MACHINE);
};

var _procReturnMultiple5200 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5200;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5201)(MACHINE);
};

var _procReturn2801 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2801;
    }
    return (_afterIf2797)(MACHINE);
};

var _procReturn2755 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2755;
    }
    return (_afterCall2753)(MACHINE);
};

var _procReturn2711 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2711;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2709)(MACHINE);
};

var _afterCall3005 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3005;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3012)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3014, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3421 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3421;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3422)(MACHINE);
};

var _procReturnMultiple5552 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5552;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5553)(MACHINE);
};

var _procReturn2548 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2548;
    }
    return (_afterCall2546)(MACHINE);
};

var _procReturnMultiple4258 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4258;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4259)(MACHINE);
};

var _procReturnMultiple4686 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4686;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4687)(MACHINE);
};

var _procReturnMultiple5526 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5526;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5527)(MACHINE);
};

var _afterCall3383 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3383;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3387)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3389, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5912 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5912;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf5910)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5910)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5918, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5901 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5901;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5902)(MACHINE);
};

var _afterCall5497 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5497;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5076 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5076;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5077)(MACHINE);
};

var _procReturnMultiple5889 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5889;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5890)(MACHINE);
};

var _afterCall2513 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2513;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 3])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2520)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2522, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5873 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5873;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 7][53];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5878)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5880, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4620 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4620;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4621)(MACHINE);
};

var _beforePromptPopMultiple6229 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6229;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6230)(MACHINE);
};

var _afterCall4602 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4602;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry141, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _onReturnMultiple6213 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6213;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6214)(MACHINE);
};

var _procReturnMultiple3720 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3720;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3721)(MACHINE);
};

var _procReturnMultiple4583 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4583;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4584)(MACHINE);
};

var _procReturnMultiple4993 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4993;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4994)(MACHINE);
};

var _afterCall2859 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2859;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2863)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2865, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5412 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5412;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5413)(MACHINE);
};

var _procReturnMultiple3678 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3678;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3679)(MACHINE);
};

var _procReturnMultiple4102 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4102;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4103)(MACHINE);
};

var _procReturnMultiple5395 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5395;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5396)(MACHINE);
};

var _procReturnMultiple4093 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4093;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4094)(MACHINE);
};

var _procReturnMultiple4520 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4520;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4521)(MACHINE);
};

var _procReturn3579 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3579;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3577)(MACHINE);
};

var _lamEntry178 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry178;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5369)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5371, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry186 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry186;
    }
    if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0]).racketArity, MACHINE.argcount))
{
if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1]).racketArity, MACHINE.argcount))
{
return (_lamEntry187)(MACHINE);
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1];
return (_lamEntry189)(MACHINE);
}
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0];
return (_lamEntry187)(MACHINE);
}
};

var _procReturn3503 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3503;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3501)(MACHINE);
};

var _afterCall3194 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3194;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3199)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3201, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5727 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5727;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5728)(MACHINE);
};

var _procReturnMultiple5720 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5720;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5721)(MACHINE);
};

var _procReturnMultiple4883 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4883;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4884)(MACHINE);
};

var _procReturnMultiple4021 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4021;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4022)(MACHINE);
};

var _procReturnMultiple4873 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4873;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4874)(MACHINE);
};

var _procReturnMultiple4012 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4012;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4013)(MACHINE);
};

var _procReturnMultiple5304 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5304;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5305)(MACHINE);
};

var _afterCall5678 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5678;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5682)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5684, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn3098 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3098;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3096)(MACHINE);
};

var _lamEntry192 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry192;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][34]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6065)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6067, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4833 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4833;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4834)(MACHINE);
};

var _procReturnMultiple4389 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4389;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4390)(MACHINE);
};

var _procReturnMultiple5261 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5261;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5262)(MACHINE);
};

var _procReturnMultiple4807 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4807;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4808)(MACHINE);
};

var _afterCall3501 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3501;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3510)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3512, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4363 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4363;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4364)(MACHINE);
};

var _procReturnMultiple6022 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6022;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6023)(MACHINE);
};

var _procReturnMultiple4350 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4350;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4351)(MACHINE);
};

var _procReturnMultiple6007 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6007;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6008)(MACHINE);
};

var _procReturnMultiple4763 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4763;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4764)(MACHINE);
};

var _procReturnMultiple5601 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5601;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5602)(MACHINE);
};

var _procReturnMultiple5991 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5991;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5992)(MACHINE);
};

var _procReturnMultiple5981 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5981;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5982)(MACHINE);
};

var _afterCall3873 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3873;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][42];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn2653 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2653;
    }
    return (_afterCall2651)(MACHINE);
};

var _procReturnMultiple3002 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3002;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3003)(MACHINE);
};

var _procReturnMultiple5140 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5140;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5141)(MACHINE);
};

var _afterCall3407 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3407;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3411)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3413, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn2533 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2533;
    }
    return (_afterCall2531)(MACHINE);
};

var _procReturn2501 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2501;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2499)(MACHINE);
};

var _procReturn2489 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2489;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2487)(MACHINE);
};

var _beforePromptPopMultiple6296 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6296;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6297)(MACHINE);
};

var _beforePromptPopMultiple6292 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6292;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6293)(MACHINE);
};

var _afterCall3790 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3790;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3802)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3804, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5892 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5892;
    }
    MACHINE.val = plt.baselib.numbers.add(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5896)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5898, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPopMultiple6263 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6263;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6264)(MACHINE);
};

var _beforePromptPopMultiple6255 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6255;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6256)(MACHINE);
};

var _beforePromptPopMultiple6249 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6249;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6250)(MACHINE);
};

var _beforePromptPopMultiple6239 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6239;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6240)(MACHINE);
};

var _beforePromptPopMultiple6231 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6231;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6232)(MACHINE);
};

var _beforePromptPopMultiple6225 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6225;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6226)(MACHINE);
};

var _beforePromptPopMultiple6221 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6221;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6222)(MACHINE);
};

var _procReturnMultiple5449 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5449;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5450)(MACHINE);
};

var _afterCall6207 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6207;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4140 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4140;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4141)(MACHINE);
};

var _lamEntry160 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry160;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = new RUNTIME.Closure(_lamEntry161, 4, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry161)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturn3939 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3939;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3928)(MACHINE);
};

var _afterCall4556 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4556;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3259 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3259;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3260)(MACHINE);
};

var _afterCall6170 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6170;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6177)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6179, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4543 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4543;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4544)(MACHINE);
};

var _procReturnMultiple4085 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4085;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4086)(MACHINE);
};

var _procReturnMultiple4079 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4079;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4080)(MACHINE);
};

var _procReturnMultiple6145 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6145;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6146)(MACHINE);
};

var _procReturnMultiple4933 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4933;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4934)(MACHINE);
};

var _procReturnMultiple5358 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5358;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5359)(MACHINE);
};

var _procReturnMultiple6127 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6127;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6128)(MACHINE);
};

var _afterCall5730 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5730;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5734)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5736, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry175 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry175;
    }
    if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0]).racketArity, MACHINE.argcount))
{
if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1]).racketArity, MACHINE.argcount))
{
return (_lamEntry176)(MACHINE);
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1];
return (_lamEntry177)(MACHINE);
}
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0];
return (_lamEntry176)(MACHINE);
}
};

var _procReturnMultiple4889 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4889;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4890)(MACHINE);
};

var _procReturnMultiple4454 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4454;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4455)(MACHINE);
};

var _afterCall6100 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6100;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(1,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 1;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6106)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6108, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3578 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3578;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3579)(MACHINE);
};

var _procReturnMultiple3574 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3574;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3575)(MACHINE);
};

var _afterCall4002 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4002;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4011)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4013, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4005)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3996)(MACHINE);
}
};

var _afterCall6077 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6077;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf6075)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6075)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6083, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5679 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5679;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5680)(MACHINE);
};

var _procReturnMultiple5668 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5668;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5669)(MACHINE);
};

var _afterCall6055 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6055;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 5][55];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = 4;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3964 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3964;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3965)(MACHINE);
};

var _afterCall6041 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6041;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6045)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6047, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3096 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3096;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14][48];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4369 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4369;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4370)(MACHINE);
};

var _procReturnMultiple3938 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3938;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3939)(MACHINE);
};

var _procReturnMultiple5623 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5623;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5624)(MACHINE);
};

var _procReturnMultiple4344 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4344;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4345)(MACHINE);
};

var _procReturnMultiple5211 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5211;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5212)(MACHINE);
};

var _procReturnMultiple4330 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4330;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4331)(MACHINE);
};

var _procReturnMultiple5190 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5190;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5191)(MACHINE);
};

var _procReturnMultiple5593 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5593;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5594)(MACHINE);
};

var _procReturnMultiple5577 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5577;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5578)(MACHINE);
};

var _procReturn2685 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2685;
    }
    return (_afterIf2681)(MACHINE);
};

var _procReturnMultiple5968 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5968;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5969)(MACHINE);
};

var _procReturnMultiple2997 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2997;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2998)(MACHINE);
};

var _procReturnMultiple4706 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4706;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4707)(MACHINE);
};

var _procReturnMultiple5544 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5544;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5545)(MACHINE);
};

var _procReturn4598 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4598;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4596)(MACHINE);
};

var _procReturn4558 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4558;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4556)(MACHINE);
};

var _procReturn4515 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4515;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4513)(MACHINE);
};

var _procReturn4472 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4472;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4466)(MACHINE);
};

var _procReturn4429 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4429;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4427)(MACHINE);
};

var _procReturnMultiple4660 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4660;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4661)(MACHINE);
};

var _afterCall5896 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5896;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5876)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5902, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn6205 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6205;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6203)(MACHINE);
};

var _procReturn6183 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6183;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6181)(MACHINE);
};

var _procReturn6162 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6162;
    }
    return (_afterIf6148)(MACHINE);
};

var _procReturn6142 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6142;
    }
    return (_afterCall6140)(MACHINE);
};

var _procReturn6118 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6118;
    }
    return (_afterCall6116)(MACHINE);
};

var _procReturn6098 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6098;
    }
    return (_afterCall6096)(MACHINE);
};

var _beforePromptPopMultiple6217 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6217;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6218)(MACHINE);
};

var _procReturnMultiple5443 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5443;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5444)(MACHINE);
};

var _procReturnMultiple6208 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6208;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6209)(MACHINE);
};

var _afterCall6203 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6203;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 14][57];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 1] = 4;
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall6207)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6209, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall6199 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6199;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 13]);
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6203)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6205, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple6193 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6193;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6194)(MACHINE);
};

var _afterCall6188 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6188;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10]);
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6192)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6194, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall6177 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6177;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6181)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6183, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple6178 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6178;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6179)(MACHINE);
};

var _procReturnMultiple4537 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4537;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4538)(MACHINE);
};

var _procReturnMultiple3653 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3653;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3654)(MACHINE);
};

var _afterCall6152 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6152;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf6150)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6150)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6158, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5751 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5751;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5752)(MACHINE);
};

var _afterCall6140 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6140;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("build-list");
MACHINE.env[MACHINE.env.length - 1 - 1] = "exact-nonnegative-integer";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6138)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6146, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf6138)(MACHINE);
}
};

var _procReturnMultiple4927 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4927;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4928)(MACHINE);
};

var _afterCall6126 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6126;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6130)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6132, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall6120 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6120;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(3,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 3;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6126)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6128, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall6116 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6116;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6120)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6122, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall6110 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6110;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(2,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 2;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6116)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6118, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5710 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5710;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5714)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5716, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall6096 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6096;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6100)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6102, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall6089 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6089;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(0,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6096)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6098, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3570 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3570;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3571)(MACHINE);
};

var _procReturnMultiple4428 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4428;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4429)(MACHINE);
};

var _procReturnMultiple6078 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6078;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6079)(MACHINE);
};

var _afterCall6065 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6065;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("build-string");
MACHINE.env[MACHINE.env.length - 1 - 1] = "exact-nonnegative-integer";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6063)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6071, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf6063)(MACHINE);
}
};

var _procReturnMultiple5280 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5280;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5281)(MACHINE);
};

var _afterCall6051 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6051;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6055)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6057, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5659 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5659;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][27];
MACHINE.env[MACHINE.env.length - 1 - 0] = "given procedure does not accept ~a arguments: ";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5663)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5665, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterLetBody5647)(MACHINE);
}
};

var _procReturnMultiple6046 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6046;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6047)(MACHINE);
};

var _procReturnMultiple3955 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3955;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3956)(MACHINE);
};

var _procReturnMultiple3946 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3946;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3947)(MACHINE);
};

var _afterCall6025 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6025;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(1,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 1;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6031)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6033, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5222 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5222;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5223)(MACHINE);
};

var _afterCall6014 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6014;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(0,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 0;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6021)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6023, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple4769 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4769;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4770)(MACHINE);
};

var _procReturnMultiple3908 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3908;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3909)(MACHINE);
};

var _afterCall5990 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5990;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("build-vector");
MACHINE.env[MACHINE.env.length - 1 - 1] = "exact-nonnegative-integer";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5988)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5996, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5988)(MACHINE);
}
};

var _procReturnMultiple5182 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5182;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5183)(MACHINE);
};

var _procReturn2739 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2739;
    }
    return (_afterCall2737)(MACHINE);
};

var _procReturnMultiple5166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5166;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5167)(MACHINE);
};

var _afterCall4725 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4725;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry146, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5568 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5568;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5569)(MACHINE);
};

var _procReturnMultiple2594 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2594;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2595)(MACHINE);
};

var _procReturnMultiple4275 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4275;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4276)(MACHINE);
};

var _procReturnMultiple4700 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4700;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4701)(MACHINE);
};

var _procReturn4584 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4584;
    }
    return (_afterCall4582)(MACHINE);
};

var _procReturn4544 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4544;
    }
    return (_afterCall4542)(MACHINE);
};

var _procReturn4501 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4501;
    }
    return (_afterCall4499)(MACHINE);
};

var _procReturn4455 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4455;
    }
    return (_afterCall4453)(MACHINE);
};

var _procReturn4416 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4416;
    }
    return (_afterCall4414)(MACHINE);
};

var _procReturn4390 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4390;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4384)(MACHINE);
};

var _procReturn4310 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4310;
    }
    return (_afterIf4306)(MACHINE);
};

var _procReturn6201 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6201;
    }
    return (_afterCall6199)(MACHINE);
};

var _procReturn6179 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6179;
    }
    return (_afterCall6177)(MACHINE);
};

var _procReturn6158 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6158;
    }
    return (_afterIf6150)(MACHINE);
};

var _procReturn6132 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6132;
    }
    return (_afterCall6130)(MACHINE);
};

var _procReturn6112 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6112;
    }
    return (_afterCall6110)(MACHINE);
};

var _procReturn6091 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6091;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6089)(MACHINE);
};

var _procReturn6079 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6079;
    }
    return (_afterCall6077)(MACHINE);
};

var _procReturn4051 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4051;
    }
    return (_afterCall4049)(MACHINE);
};

var _procReturn4022 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4022;
    }
    return (_afterCall4020)(MACHINE);
};

var _procReturn3995 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3995;
    }
    return (_afterCall3993)(MACHINE);
};

var _procReturn3965 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3965;
    }
    return (_afterCall3963)(MACHINE);
};

var _procReturn3936 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3936;
    }
    return (_afterCall3934)(MACHINE);
};

var _procReturn3901 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3901;
    }
    return (_afterIf3897)(MACHINE);
};

var _procReturn3842 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3842;
    }
    return (_afterCall3840)(MACHINE);
};

var _procReturn3730 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3730;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3728)(MACHINE);
};

var _procReturn3705 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3705;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3703)(MACHINE);
};

var _procReturn3674 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3674;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3672)(MACHINE);
};

var _procReturn3650 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3650;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3648)(MACHINE);
};

var _procReturn3575 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3575;
    }
    return (_afterCall3573)(MACHINE);
};

var _procReturn3551 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3551;
    }
    return (_afterCall3549)(MACHINE);
};

var _procReturn3520 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3520;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3518)(MACHINE);
};

var _procReturn3496 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3496;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3494)(MACHINE);
};

var _procReturn3422 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3422;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3420)(MACHINE);
};

var _procReturn3400 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3400;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3398)(MACHINE);
};

var _procReturn3376 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3376;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3374)(MACHINE);
};

var _procReturn3350 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3350;
    }
    return (_afterCall3348)(MACHINE);
};

var _procReturn3326 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3326;
    }
    return (_afterCall3324)(MACHINE);
};

var _procReturn3251 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3251;
    }
    return (_afterCall3249)(MACHINE);
};

var _procReturn3227 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3227;
    }
    return (_afterCall3225)(MACHINE);
};

var _procReturn3196 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3196;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3194)(MACHINE);
};

var _procReturn3172 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3172;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3170)(MACHINE);
};

var _procReturn3093 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3093;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3091)(MACHINE);
};

var _procReturn3075 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3075;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3073)(MACHINE);
};

var _procReturn3050 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3050;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3048)(MACHINE);
};

var _procReturn3023 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3023;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3021)(MACHINE);
};

var _procReturn2989 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2989;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2987)(MACHINE);
};

var _procReturn2969 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2969;
    }
    return (_afterIf2965)(MACHINE);
};

var _procReturn2935 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2935;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2933)(MACHINE);
};

var _procReturn2913 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2913;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2911)(MACHINE);
};

var _procReturn2893 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2893;
    }
    return (_afterCall2891)(MACHINE);
};

var _procReturn2870 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2870;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2868)(MACHINE);
};

var _procReturn2847 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2847;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2845)(MACHINE);
};

var _procReturn2821 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2821;
    }
    return (_afterIf2817)(MACHINE);
};

var _procReturn2793 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2793;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2791)(MACHINE);
};

var _procReturn2751 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2751;
    }
    return (_afterLetBody2733)(MACHINE);
};

var _procReturn2732 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2732;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2730)(MACHINE);
};

var _procReturn2705 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2705;
    }
    return (_afterIf2701)(MACHINE);
};

var _procReturn2675 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2675;
    }
    return (_afterIf2667)(MACHINE);
};

var _procReturn2640 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2640;
    }
    return (_afterCall2638)(MACHINE);
};

var _procReturn2591 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2591;
    }
    return (_afterCall2589)(MACHINE);
};

var _procReturn2569 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2569;
    }
    return (_afterCall2567)(MACHINE);
};

var _procReturn2544 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2544;
    }
    return (_afterCall2542)(MACHINE);
};

var _procReturn4578 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4578;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4576)(MACHINE);
};

var _procReturn4538 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4538;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4532)(MACHINE);
};

var _procReturn4495 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4495;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4489)(MACHINE);
};

var _procReturn4449 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4449;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4447)(MACHINE);
};

var _procReturn4410 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4410;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4408)(MACHINE);
};

var _procReturn4370 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4370;
    }
    return (_afterCall4368)(MACHINE);
};

var _procReturn6209 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6209;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall6207)(MACHINE);
};

var _procReturn6194 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6194;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6192)(MACHINE);
};

var _procReturn6172 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6172;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6170)(MACHINE);
};

var _procReturn6154 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6154;
    }
    return (_afterCall6152)(MACHINE);
};

var _procReturn6128 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6128;
    }
    return (_afterCall6126)(MACHINE);
};

var _procReturn6108 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6108;
    }
    return (_afterCall6106)(MACHINE);
};

var _procReturn6087 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6087;
    }
    return (_afterIf6073)(MACHINE);
};

var _procReturn6071 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6071;
    }
    return (_afterIf6063)(MACHINE);
};

var _procReturn6053 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6053;
    }
    return (_afterCall6051)(MACHINE);
};

var _procReturn6033 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6033;
    }
    return (_afterCall6031)(MACHINE);
};

var _procReturn6012 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6012;
    }
    return (_afterIf5998)(MACHINE);
};

var _procReturn5992 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5992;
    }
    return (_afterCall5990)(MACHINE);
};

var _procReturn5941 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5941;
    }
    return (_afterCall5939)(MACHINE);
};

var _procReturn5914 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5914;
    }
    return (_afterCall5912)(MACHINE);
};

var _procReturn5890 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5890;
    }
    return (_afterCall5888)(MACHINE);
};

var _procReturn5871 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5871;
    }
    return (_afterIf5861)(MACHINE);
};

var _procReturn5849 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5849;
    }
    return (_afterCall5847)(MACHINE);
};

var _procReturn5827 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5827;
    }
    return (_afterLetBody5817)(MACHINE);
};

var _procReturn5793 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5793;
    }
    return (_afterLetBody5777)(MACHINE);
};

var _procReturn5764 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5764;
    }
    return (_afterCall5762)(MACHINE);
};

var _procReturn5736 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5736;
    }
    return (_afterCall5734)(MACHINE);
};

var _procReturn5716 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5716;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5714)(MACHINE);
};

var _procReturn5696 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5696;
    }
    return (_afterCall5694)(MACHINE);
};

var _procReturn5673 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5673;
    }
    return (_afterLetBody5647)(MACHINE);
};

var _procReturn5657 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5657;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5655)(MACHINE);
};

var _procReturn5638 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5638;
    }
    return (_afterCall5636)(MACHINE);
};

var _procReturn5610 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5610;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5608)(MACHINE);
};

var _procReturn5578 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5578;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5576)(MACHINE);
};

var _procReturn5545 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5545;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5543)(MACHINE);
};

var _procReturn5521 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5521;
    }
    return (_afterIf5517)(MACHINE);
};

var _procReturn5495 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5495;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5493)(MACHINE);
};

var _procReturn5476 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5476;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5474)(MACHINE);
};

var _procReturn5450 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5450;
    }
    return (_afterCall5448)(MACHINE);
};

var _procReturn5426 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5426;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5424)(MACHINE);
};

var _procReturn5403 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5403;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5401)(MACHINE);
};

var _procReturn5375 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5375;
    }
    return (_afterIf5367)(MACHINE);
};

var _procReturn5351 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5351;
    }
    return (_afterCall5349)(MACHINE);
};

var _procReturn5270 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5270;
    }
    return (_afterIf5256)(MACHINE);
};

var _procReturn5223 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5223;
    }
    return (_afterCall5221)(MACHINE);
};

var _procReturn5187 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5187;
    }
    return (_afterIf5179)(MACHINE);
};

var _procReturn5147 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5147;
    }
    return (_afterCall5145)(MACHINE);
};

var _procReturn5107 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5107;
    }
    return (_afterCall5105)(MACHINE);
};

var _procReturn5060 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5060;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5058)(MACHINE);
};

var _procReturn4994 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4994;
    }
    return (_afterIf4990)(MACHINE);
};

var _procReturn4954 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4954;
    }
    return (_afterCall4952)(MACHINE);
};

var _procReturn4914 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4914;
    }
    return (_afterCall4912)(MACHINE);
};

var _procReturn4878 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4878;
    }
    return (_afterIf4864)(MACHINE);
};

var _procReturn4848 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4848;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4846)(MACHINE);
};

var _procReturn4808 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4808;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4806)(MACHINE);
};

var _procReturn4764 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4764;
    }
    return (_afterIf4760)(MACHINE);
};

var _procReturn4721 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4721;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4719)(MACHINE);
};

var _procReturn4681 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4681;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4679)(MACHINE);
};

var _procReturn4641 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4641;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4639)(MACHINE);
};

var _beforePromptPop6264 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6264;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6266, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry170, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "findf");
MACHINE.env[MACHINE.env.length - 1 - 0][15] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6256 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6256;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6258, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry149, 2, [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:98:4");
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry154, 3, [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:99:4");
MACHINE.val = new RUNTIME.Closure(_lamEntry148, RUNTIME.makePair(2, RUNTIME.makePair(3, RUNTIME.NULL)), [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "remove*");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env[MACHINE.env.length - 1 - 0][10] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6246 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6246;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6248, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry121, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "do-remove");
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6238 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6238;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6240, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry117, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][45] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6232 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6232;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6234, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry114, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][48] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6226 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6226;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6228, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry111, 6, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][51] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn4345 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4345;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4343)(MACHINE);
};

var _procReturn6190 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6190;
    }
    return (_afterCall6188)(MACHINE);
};

var _procReturn6168 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6168;
    }
    return (_afterCall6166)(MACHINE);
};

var _procReturn6146 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6146;
    }
    return (_afterIf6138)(MACHINE);
};

var _procReturn6122 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6122;
    }
    return (_afterCall6120)(MACHINE);
};

var _procReturn6102 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6102;
    }
    return (_afterCall6100)(MACHINE);
};

var _procReturn6083 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6083;
    }
    return (_afterIf6075)(MACHINE);
};

var _procReturn6067 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6067;
    }
    return (_afterCall6065)(MACHINE);
};

var _procReturn6047 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6047;
    }
    return (_afterCall6045)(MACHINE);
};

var _procReturn6027 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6027;
    }
    return (_afterCall6025)(MACHINE);
};

var _procReturn6008 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6008;
    }
    return (_afterIf6000)(MACHINE);
};

var _procReturn5982 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5982;
    }
    return (_afterCall5980)(MACHINE);
};

var _procReturn5928 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5928;
    }
    return (_afterIf5924)(MACHINE);
};

var _procReturn5902 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5902;
    }
    return (_afterLetBody5876)(MACHINE);
};

var _procReturn5886 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5886;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5884)(MACHINE);
};

var _procReturn5867 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5867;
    }
    return (_afterCall5865)(MACHINE);
};

var _procReturn5839 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5839;
    }
    return (_afterLetBody5808)(MACHINE);
};

var _procReturn5823 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5823;
    }
    return (_afterCall5821)(MACHINE);
};

var _procReturn5789 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5789;
    }
    return (_afterLetBody5780)(MACHINE);
};

var _procReturn5758 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5758;
    }
    return (_afterIf5754)(MACHINE);
};

var _procReturn5732 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5732;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5730)(MACHINE);
};

var _procReturn5712 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5712;
    }
    return (_afterCall5710)(MACHINE);
};

var _procReturn5689 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5689;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5687)(MACHINE);
};

var _procReturn5669 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5669;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5667)(MACHINE);
};

var _procReturn5651 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5651;
    }
    return (_afterCall5649)(MACHINE);
};

var _procReturn5630 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5630;
    }
    return (_afterIf5626)(MACHINE);
};

var _procReturn5602 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5602;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5600)(MACHINE);
};

var _procReturn5569 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5569;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5567)(MACHINE);
};

var _procReturn5537 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5537;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5535)(MACHINE);
};

var _procReturn5515 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5515;
    }
    return (_afterIf5507)(MACHINE);
};

var _procReturn5491 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5491;
    }
    return (_afterCall5489)(MACHINE);
};

var _procReturn5468 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5468;
    }
    return (_afterCall5466)(MACHINE);
};

var _procReturn5444 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5444;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5442)(MACHINE);
};

var _procReturn5419 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5419;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5417)(MACHINE);
};

var _procReturn5396 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5396;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5394)(MACHINE);
};

var _procReturn5371 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5371;
    }
    return (_afterCall5369)(MACHINE);
};

var _procReturn5305 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5305;
    }
    return (_afterCall5303)(MACHINE);
};

var _procReturn5266 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5266;
    }
    return (_afterIf5258)(MACHINE);
};

var _procReturn5212 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5212;
    }
    return (_afterCall5210)(MACHINE);
};

var _procReturn5183 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5183;
    }
    return (_afterCall5181)(MACHINE);
};

var _procReturn5141 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5141;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5139)(MACHINE);
};

var _procReturn5101 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5101;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody5095)(MACHINE);
};

var _procReturn5044 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5044;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5042)(MACHINE);
};

var _procReturn4988 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4988;
    }
    return (_afterIf4984)(MACHINE);
};

var _procReturn4948 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4948;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4946)(MACHINE);
};

var _procReturn4908 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4908;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4902)(MACHINE);
};

var _procReturn4874 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4874;
    }
    return (_afterIf4866)(MACHINE);
};

var _procReturn4834 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4834;
    }
    return (_afterCall4832)(MACHINE);
};

var _procReturn4794 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4794;
    }
    return (_afterCall4792)(MACHINE);
};

var _procReturn4747 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4747;
    }
    return (_afterCall4745)(MACHINE);
};

var _procReturn4707 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4707;
    }
    return (_afterCall4705)(MACHINE);
};

var _procReturn4667 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4667;
    }
    return (_afterCall4665)(MACHINE);
};

var _procReturn4627 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4627;
    }
    return (_afterCall4625)(MACHINE);
};

var _beforePromptPop6260 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6260;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6262, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry164, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "remv*");
MACHINE.env[MACHINE.env.length - 1 - 0][12] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6254 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6254;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6256, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry132, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "do-remove*");
MACHINE.env[MACHINE.env.length - 1 - 0][9] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6250 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6250;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6252, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry128, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "remq");
MACHINE.env[MACHINE.env.length - 1 - 0][6] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6242 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6242;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6244, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry119, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][43] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6230 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6230;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6232, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry113, 7, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][49] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6224 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6224;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6226, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry109, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][52] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6216 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6216;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6218, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry105, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][56] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn4304 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4304;
    }
    return (_afterIf4300)(MACHINE);
};

var _procReturn4276 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4276;
    }
    return (_afterCall4274)(MACHINE);
};

var _procReturn4247 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4247;
    }
    return (_afterCall4245)(MACHINE);
};

var _procReturn4214 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4214;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4212)(MACHINE);
};

var _procReturn4159 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4159;
    }
    return (_afterCall4157)(MACHINE);
};

var _procReturn4124 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4124;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4113)(MACHINE);
};

var _procReturn6057 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6057;
    }
    return (_afterCall6055)(MACHINE);
};

var _procReturn6043 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6043;
    }
    return (_afterCall6041)(MACHINE);
};

var _procReturn6023 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6023;
    }
    return (_afterCall6021)(MACHINE);
};

var _procReturn6004 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6004;
    }
    return (_afterCall6002)(MACHINE);
};

var _procReturn5969 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5969;
    }
    return (_afterCall5967)(MACHINE);
};

var _procReturn5922 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5922;
    }
    return (_afterIf5908)(MACHINE);
};

var _procReturn5898 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5898;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5896)(MACHINE);
};

var _procReturn5880 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5880;
    }
    return (_afterCall5878)(MACHINE);
};

var _procReturn5859 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5859;
    }
    return (_afterIf5855)(MACHINE);
};

var _procReturn5835 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5835;
    }
    return (_afterLetBody5811)(MACHINE);
};

var _procReturn5801 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5801;
    }
    return (_afterLetBody5771)(MACHINE);
};

var _procReturn5785 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5785;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5780)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5789, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn5752 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5752;
    }
    return (_afterIf5744)(MACHINE);
};

var _procReturn5728 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5728;
    }
    return (_afterCall5726)(MACHINE);
};

var _procReturn5705 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5705;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5703)(MACHINE);
};

var _procReturn5684 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5684;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5682)(MACHINE);
};

var _procReturn5665 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5665;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5663)(MACHINE);
};

var _procReturn5646 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5646;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5644)(MACHINE);
};

var _procReturn5624 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5624;
    }
    return (_afterIf5616)(MACHINE);
};

var _procReturn5594 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5594;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5592)(MACHINE);
};

var _procReturn5561 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5561;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5559)(MACHINE);
};

var _procReturn5531 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5531;
    }
    return (_afterIf5523)(MACHINE);
};

var _procReturn5511 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5511;
    }
    return (_afterCall5509)(MACHINE);
};

var _procReturn5487 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5487;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5485)(MACHINE);
};

var _procReturn5460 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5460;
    }
    return (_afterIf5456)(MACHINE);
};

var _procReturn5440 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5440;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5438)(MACHINE);
};

var _procReturn5413 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5413;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody5404)(MACHINE);
};

var _procReturn5389 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5389;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5387)(MACHINE);
};

var _procReturn5359 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5359;
    }
    return (_afterIf5345)(MACHINE);
};

var _procReturn5293 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5293;
    }
    return (_afterCall5291)(MACHINE);
};

var _procReturn5262 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5262;
    }
    return (_afterCall5260)(MACHINE);
};

var _procReturn5201 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5201;
    }
    return (_afterCall5199)(MACHINE);
};

var _procReturn5167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5167;
    }
    return (_afterCall5165)(MACHINE);
};

var _procReturn5127 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5127;
    }
    return (_afterCall5125)(MACHINE);
};

var _procReturn5083 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5083;
    }
    return (_afterIf5079)(MACHINE);
};

var _procReturn5028 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5028;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5026)(MACHINE);
};

var _procReturn4974 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4974;
    }
    return (_afterCall4972)(MACHINE);
};

var _procReturn4934 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4934;
    }
    return (_afterCall4932)(MACHINE);
};

var _procReturn4890 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4890;
    }
    return (_afterIf4886)(MACHINE);
};

var _procReturn4870 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4870;
    }
    return (_afterCall4868)(MACHINE);
};

var _procReturn4828 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4828;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4826)(MACHINE);
};

var _procReturn4788 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4788;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4782)(MACHINE);
};

var _procReturn4741 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4741;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4739)(MACHINE);
};

var _procReturn4701 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4701;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4699)(MACHINE);
};

var _procReturn4661 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4661;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4659)(MACHINE);
};

var _procReturn4621 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4621;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody4615)(MACHINE);
};

var _beforePromptPop6266 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6266;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6268, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry171, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "bad-list");
MACHINE.env[MACHINE.env.length - 1 - 0][16] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6258 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6258;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6260, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry159, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "remq*");
MACHINE.env[MACHINE.env.length - 1 - 0][11] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6244 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6244;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6246, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry120, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][42] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6236 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6236;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6238, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry116, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][46] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6228 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6228;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6230, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry112, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][50] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6220 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6220;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6222, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry107, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][54] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6218 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6218;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6220, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry106, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][55] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn4298 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4298;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4296)(MACHINE);
};

var _procReturn4267 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4267;
    }
    return (_afterCall4265)(MACHINE);
};

var _procReturn4238 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4238;
    }
    return (_afterCall4236)(MACHINE);
};

var _procReturn4191 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4191;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4184)(MACHINE);
};

var _procReturn4150 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4150;
    }
    return (_afterCall4148)(MACHINE);
};

var _procReturn4121 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4121;
    }
    return (_afterCall4119)(MACHINE);
};

var _procReturn4094 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4094;
    }
    return (_afterCall4092)(MACHINE);
};

var _procReturn6037 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6037;
    }
    return (_afterCall6035)(MACHINE);
};

var _procReturn6016 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6016;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6014)(MACHINE);
};

var _procReturn5996 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5996;
    }
    return (_afterIf5988)(MACHINE);
};

var _procReturn5955 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5955;
    }
    return (_afterCall5953)(MACHINE);
};

var _procReturn5918 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5918;
    }
    return (_afterIf5910)(MACHINE);
};

var _procReturn5894 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5894;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5892)(MACHINE);
};

var _procReturn5875 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5875;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5873)(MACHINE);
};

var _procReturn5853 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5853;
    }
    return (_afterIf5845)(MACHINE);
};

var _procReturn5831 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5831;
    }
    return (_afterLetBody5814)(MACHINE);
};

var _procReturn5797 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5797;
    }
    return (_afterLetBody5774)(MACHINE);
};

var _procReturn5768 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5768;
    }
    return (_afterIf5760)(MACHINE);
};

var _procReturn5748 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5748;
    }
    return (_afterCall5746)(MACHINE);
};

var _procReturn5721 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5721;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5719)(MACHINE);
};

var _procReturn5700 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5700;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5698)(MACHINE);
};

var _procReturn5680 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5680;
    }
    return (_afterCall5678)(MACHINE);
};

var _procReturn5661 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5661;
    }
    return (_afterCall5659)(MACHINE);
};

var _procReturn5642 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5642;
    }
    return (_afterIf5632)(MACHINE);
};

var _procReturn5620 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5620;
    }
    return (_afterCall5618)(MACHINE);
};

var _procReturn5586 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5586;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5584)(MACHINE);
};

var _procReturn5553 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5553;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5551)(MACHINE);
};

var _procReturn5527 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5527;
    }
    return (_afterCall5525)(MACHINE);
};

var _procReturn5499 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5499;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5497)(MACHINE);
};

var _procReturn5481 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5481;
    }
    return (_afterCall5479)(MACHINE);
};

var _procReturn5454 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5454;
    }
    return (_afterIf5446)(MACHINE);
};

var _procReturn5433 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5433;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5431)(MACHINE);
};

var _procReturn5410 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5410;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5408)(MACHINE);
};

var _procReturn5379 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5379;
    }
    return (_afterIf5365)(MACHINE);
};

var _procReturn5355 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5355;
    }
    return (_afterIf5347)(MACHINE);
};

var _procReturn5281 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5281;
    }
    return (_afterCall5279)(MACHINE);
};

var _procReturn5234 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5234;
    }
    return (_afterCall5232)(MACHINE);
};

var _procReturn5191 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5191;
    }
    return (_afterIf5177)(MACHINE);
};

var _procReturn5161 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5161;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5159)(MACHINE);
};

var _procReturn5121 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5121;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5119)(MACHINE);
};

var _procReturn5077 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5077;
    }
    return (_afterIf5073)(MACHINE);
};

var _procReturn5012 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn5012;
    }
    MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
return (_afterLetBody5006)(MACHINE);
};

var _procReturn4968 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4968;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4966)(MACHINE);
};

var _procReturn4928 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4928;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4926)(MACHINE);
};

var _procReturn4884 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4884;
    }
    return (_afterIf4880)(MACHINE);
};

var _procReturn4854 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4854;
    }
    return (_afterCall4852)(MACHINE);
};

var _procReturn4814 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4814;
    }
    return (_afterCall4812)(MACHINE);
};

var _procReturn4770 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4770;
    }
    return (_afterIf4766)(MACHINE);
};

var _procReturn4727 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4727;
    }
    return (_afterCall4725)(MACHINE);
};

var _procReturn4687 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4687;
    }
    return (_afterCall4685)(MACHINE);
};

var _procReturn4647 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4647;
    }
    return (_afterCall4645)(MACHINE);
};

var _procReturn4604 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4604;
    }
    return (_afterCall4602)(MACHINE);
};

var _beforePromptPop6262 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6262;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6264, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry169, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "memf");
MACHINE.env[MACHINE.env.length - 1 - 0][13] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6252 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6252;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6254, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry130, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "remv");
MACHINE.env[MACHINE.env.length - 1 - 0][7] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6248 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6248;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6250, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry124, 2, [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:68:4");
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry126, 3, [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:69:4");
MACHINE.val = new RUNTIME.Closure(_lamEntry123, RUNTIME.makePair(2, RUNTIME.makePair(3, RUNTIME.NULL)), [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "remove");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env[MACHINE.env.length - 1 - 0][2] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6240 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6240;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6242, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry118, 4, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][44] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6234 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6234;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6236, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry115, 5, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][47] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6222 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6222;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6224, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry108, 6, [MACHINE.env[MACHINE.env.length - 1 - 0]], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0][53] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt2455 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt2455;
    }
    
};

var _procReturn4294 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4294;
    }
    return (_afterCall4292)(MACHINE);
};

var _procReturn4259 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4259;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4248)(MACHINE);
};

var _procReturn4229 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4229;
    }
    return (_afterCall4227)(MACHINE);
};

var _procReturn4169 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4169;
    }
    return (_afterIf4165)(MACHINE);
};

var _procReturn4141 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4141;
    }
    return (_afterCall4139)(MACHINE);
};

var _procReturn4112 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4112;
    }
    return (_afterCall4110)(MACHINE);
};

var _procReturn4086 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4086;
    }
    return (_afterIf4082)(MACHINE);
};

var _procReturn4072 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4072;
    }
    return (_afterCall4070)(MACHINE);
};

var _procReturn4042 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4042;
    }
    return (_afterCall4040)(MACHINE);
};

var _procReturn3987 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3987;
    }
    return (_afterIf3983)(MACHINE);
};

var _procReturn3956 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3956;
    }
    return (_afterCall3954)(MACHINE);
};

var _procReturn3927 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3927;
    }
    return (_afterCall3925)(MACHINE);
};

var _procReturn3875 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3875;
    }
    return (_afterCall3873)(MACHINE);
};

var _procReturn3816 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3816;
    }
    return (_afterCall3814)(MACHINE);
};

var _procReturn3725 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3725;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3723)(MACHINE);
};

var _procReturn3701 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3701;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3699)(MACHINE);
};

var _procReturn3670 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3670;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3668)(MACHINE);
};

var _procReturn3641 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3641;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3639)(MACHINE);
};

var _procReturn3571 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3571;
    }
    return (_afterCall3569)(MACHINE);
};

var _procReturn3547 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3547;
    }
    return (_afterCall3545)(MACHINE);
};

var _procReturn3516 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3516;
    }
    return (_afterCall3514)(MACHINE);
};

var _procReturn3492 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3492;
    }
    return (_afterCall3490)(MACHINE);
};

var _procReturn3417 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3417;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3415)(MACHINE);
};

var _procReturn3393 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3393;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3391)(MACHINE);
};

var _procReturn3363 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3363;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3361)(MACHINE);
};

var _procReturn3341 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3341;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3339)(MACHINE);
};

var _procReturn3317 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3317;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3315)(MACHINE);
};

var _procReturn3247 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3247;
    }
    return (_afterCall3245)(MACHINE);
};

var _procReturn3223 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3223;
    }
    return (_afterCall3221)(MACHINE);
};

var _procReturn3192 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3192;
    }
    return (_afterCall3190)(MACHINE);
};

var _procReturn3168 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3168;
    }
    return (_afterCall3166)(MACHINE);
};

var _procReturn3164 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3164;
    }
    return (_afterCall3162)(MACHINE);
};

var _procReturn3068 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3068;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3066)(MACHINE);
};

var _procReturn3037 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3037;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3035)(MACHINE);
};

var _procReturn3014 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3014;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3012)(MACHINE);
};

var _procReturn3007 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3007;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3005)(MACHINE);
};

var _procReturn2959 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2959;
    }
    return (_afterIf2951)(MACHINE);
};

var _procReturn2955 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2955;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2953)(MACHINE);
};

var _procReturn2909 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2909;
    }
    return (_afterCall2907)(MACHINE);
};

var _procReturn2886 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2886;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2884)(MACHINE);
};

var _procReturn2865 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2865;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2863)(MACHINE);
};

var _procReturn2841 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2841;
    }
    return (_afterIf2837)(MACHINE);
};

var _procReturn2811 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2811;
    }
    return (_afterIf2803)(MACHINE);
};

var _procReturn2774 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2774;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody2769)(MACHINE);
};

var _procReturn2747 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2747;
    }
    return (_afterCall2745)(MACHINE);
};

var _procReturn2725 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2725;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2723)(MACHINE);
};

var _procReturn2695 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2695;
    }
    return (_afterIf2687)(MACHINE);
};

var _procReturn2671 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2671;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2669)(MACHINE);
};

var _procReturn2626 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2626;
    }
    return (_afterCall2624)(MACHINE);
};

var _procReturn2584 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2584;
    }
    return (_afterCall2582)(MACHINE);
};

var _procReturn2580 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2580;
    }
    return (_afterCall2578)(MACHINE);
};

var _procReturn2537 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2537;
    }
    return (_afterCall2535)(MACHINE);
};

var _procReturn4564 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4564;
    }
    return (_afterCall4562)(MACHINE);
};

var _procReturn4521 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4521;
    }
    return (_afterCall4519)(MACHINE);
};

var _procReturn4478 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4478;
    }
    return (_afterCall4476)(MACHINE);
};

var _procReturn4435 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4435;
    }
    return (_afterCall4433)(MACHINE);
};

var _procReturn4396 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4396;
    }
    return (_afterCall4394)(MACHINE);
};

var _procReturn4364 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4364;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn4331 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4331;
    }
    return (_afterCall4329)(MACHINE);
};

var _procReturn4285 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4285;
    }
    return (_afterCall4283)(MACHINE);
};

var _procReturn4256 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4256;
    }
    return (_afterCall4254)(MACHINE);
};

var _procReturn4221 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4221;
    }
    return (_afterIf4217)(MACHINE);
};

var _procReturn4163 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4163;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4161)(MACHINE);
};

var _procReturn4132 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4132;
    }
    return (_afterCall4130)(MACHINE);
};

var _procReturn4103 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4103;
    }
    return (_afterCall4101)(MACHINE);
};

var _procReturn4080 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4080;
    }
    return (_afterIf4066)(MACHINE);
};

var _procReturn4064 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4064;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4062)(MACHINE);
};

var _procReturn4033 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4033;
    }
    return (_afterCall4031)(MACHINE);
};

var _procReturn4013 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn4013;
    }
    return (_afterCall4011)(MACHINE);
};

var _procReturn3978 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3978;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3976)(MACHINE);
};

var _procReturn3947 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3947;
    }
    return (_afterCall3945)(MACHINE);
};

var _procReturn3918 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3918;
    }
    return (_afterCall3916)(MACHINE);
};

var _procReturn3864 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3864;
    }
    return (_afterCall3862)(MACHINE);
};

var _procReturn3804 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3804;
    }
    return (_afterCall3802)(MACHINE);
};

var _procReturn3721 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3721;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3719)(MACHINE);
};

var _procReturn3692 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3692;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3690)(MACHINE);
};

var _procReturn3661 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3661;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3659)(MACHINE);
};

var _procReturn3584 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3584;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3582)(MACHINE);
};

var _procReturn3562 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3562;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3560)(MACHINE);
};

var _procReturn3538 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3538;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3536)(MACHINE);
};

var _procReturn3512 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3512;
    }
    return (_afterCall3510)(MACHINE);
};

var _procReturn3488 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3488;
    }
    return (_afterCall3486)(MACHINE);
};

var _procReturn3413 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3413;
    }
    return (_afterCall3411)(MACHINE);
};

var _procReturn3389 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3389;
    }
    return (_afterCall3387)(MACHINE);
};

var _procReturn3358 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3358;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3356)(MACHINE);
};

var _procReturn3334 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3334;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3332)(MACHINE);
};

var _procReturn3260 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3260;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3258)(MACHINE);
};

var _procReturn3238 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3238;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3236)(MACHINE);
};

var _procReturn3214 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3214;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3212)(MACHINE);
};

var _procReturn3188 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3188;
    }
    return (_afterCall3186)(MACHINE);
};

var _procReturn3155 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3155;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3153)(MACHINE);
};

var _procReturn3089 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3089;
    }
    return (_afterLetBody3085)(MACHINE);
};

var _procReturn3064 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3064;
    }
    return (_afterLetBody3060)(MACHINE);
};

var _procReturn3032 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3032;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3030)(MACHINE);
};

var _procReturn3003 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn3003;
    }
    return (_afterLetBody2999)(MACHINE);
};

var _procReturn2979 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2979;
    }
    return (_afterIf2971)(MACHINE);
};

var _procReturn2949 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2949;
    }
    return (_afterIf2945)(MACHINE);
};

var _procReturn2929 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2929;
    }
    return (_afterIf2925)(MACHINE);
};

var _procReturn2902 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2902;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2900)(MACHINE);
};

var _procReturn2881 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2881;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2879)(MACHINE);
};

var _procReturn2861 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2861;
    }
    return (_afterCall2859)(MACHINE);
};

var _procReturn2831 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2831;
    }
    return (_afterIf2823)(MACHINE);
};

var _procReturn2807 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2807;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2805)(MACHINE);
};

var _procReturn2759 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2759;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterLetBody2726)(MACHINE);
};

var _procReturn2743 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2743;
    }
    return (_afterCall2741)(MACHINE);
};

var _procReturn2715 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2715;
    }
    return (_afterIf2707)(MACHINE);
};

var _procReturn2691 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2691;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2689)(MACHINE);
};

var _procReturn2665 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2665;
    }
    return (_afterIf2661)(MACHINE);
};

var _procReturn2612 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2612;
    }
    return (_afterCall2610)(MACHINE);
};

var _procReturn2562 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2562;
    }
    return (_afterCall2560)(MACHINE);
};

var _procReturn2558 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2558;
    }
    return (_afterCall2556)(MACHINE);
};

var _procReturn2515 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2515;
    }
    return (_afterCall2513)(MACHINE);
};

var _procReturn2497 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2497;
    }
    return (_afterCall2495)(MACHINE);
};

var _procReturn2485 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2485;
    }
    return (_afterCall2483)(MACHINE);
};

var _procReturn2465 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn2465;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2463)(MACHINE);
};

var _beforePromptPopMultiple6286 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6286;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6287)(MACHINE);
};

var _beforePromptPopMultiple6284 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6284;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6285)(MACHINE);
};

var _procReturnMultiple6279 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6279;
    }
    if ((MACHINE.argcount - 4) === 0)
{
return (_afterLetBody6276)(MACHINE);
} else {
return (_procReturn6280)(MACHINE);
}
};

var _beforePromptPopMultiple6267 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6267;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6268)(MACHINE);
};

var _beforePromptPopMultiple6259 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6259;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6260)(MACHINE);
};

var _beforePromptPopMultiple6253 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6253;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6254)(MACHINE);
};

var _beforePromptPopMultiple6243 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6243;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6244)(MACHINE);
};

var _beforePromptPopMultiple6235 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6235;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6236)(MACHINE);
};

var _beforePromptPopMultiple6227 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6227;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6228)(MACHINE);
};

var _beforePromptPopMultiple6219 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6219;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6220)(MACHINE);
};

var _onReturn6214 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6214;
    }
    MACHINE.env.push([MACHINE.params.currentNamespace["do-remove"] || MACHINE.primitives["do-remove"],MACHINE.primitives["raise-type-error"],MACHINE.params.currentNamespace["remove"] || MACHINE.primitives["remove"],MACHINE.primitives["equal?"],MACHINE.primitives["procedure?"],MACHINE.primitives["procedure-arity-includes?"],MACHINE.params.currentNamespace["remq"] || MACHINE.primitives["remq"],MACHINE.params.currentNamespace["remv"] || MACHINE.primitives["remv"],MACHINE.primitives["eqv?"],MACHINE.params.currentNamespace["do-remove*"] || MACHINE.primitives["do-remove*"],MACHINE.params.currentNamespace["remove*"] || MACHINE.primitives["remove*"],MACHINE.params.currentNamespace["remq*"] || MACHINE.primitives["remq*"],MACHINE.params.currentNamespace["remv*"] || MACHINE.primitives["remv*"],MACHINE.params.currentNamespace["memf"] || MACHINE.primitives["memf"],MACHINE.primitives["raise-mismatch-error"],MACHINE.params.currentNamespace["findf"] || MACHINE.primitives["findf"],MACHINE.params.currentNamespace["bad-list"] || MACHINE.primitives["bad-list"],MACHINE.params.currentNamespace["bad-item"] || MACHINE.primitives["bad-item"],MACHINE.params.currentNamespace["assq"] || MACHINE.primitives["assq"],MACHINE.params.currentNamespace["assv"] || MACHINE.primitives["assv"],MACHINE.params.currentNamespace["assoc"] || MACHINE.primitives["assoc"],MACHINE.params.currentNamespace["assf"] || MACHINE.primitives["assf"],MACHINE.modules["whalesong/lang/unsafe/ops.rkt"].namespace["unsafe-car1.1"],MACHINE.modules["whalesong/lang/unsafe/ops.rkt"].namespace["unsafe-cdr2.2"],MACHINE.params.currentNamespace["mapadd"] || MACHINE.primitives["mapadd"],MACHINE.params.currentNamespace["check-fold"] || MACHINE.primitives["check-fold"],MACHINE.primitives["length"],MACHINE.primitives["format"],MACHINE.params.currentNamespace["foldl"] || MACHINE.primitives["foldl"],MACHINE.primitives["map"],MACHINE.params.currentNamespace["foldr"] || MACHINE.primitives["foldr"],MACHINE.params.currentNamespace["filter"] || MACHINE.primitives["filter"],MACHINE.primitives["reverse"],MACHINE.params.currentNamespace["build-vector"] || MACHINE.primitives["build-vector"],MACHINE.primitives["exact-nonnegative-integer?"],MACHINE.primitives["make-vector"],MACHINE.primitives["vector-set!"],MACHINE.params.currentNamespace["build-string"] || MACHINE.primitives["build-string"],MACHINE.primitives["make-string"],MACHINE.primitives["string-set!"],MACHINE.params.currentNamespace["build-list"] || MACHINE.primitives["build-list"],MACHINE.primitives["zero?"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);  MACHINE.env[MACHINE.env.length-1].names = ["do-remove","raise-type-error","remove","equal?","procedure?","procedure-arity-includes?","remq","remv","eqv?","do-remove*","remove*","remq*","remv*","memf","raise-mismatch-error","findf","bad-list","bad-item","assq","assv","assoc","assf","unsafe-car1.1","unsafe-cdr2.2","mapadd","check-fold","length","format","foldl","map","foldr","filter","reverse","build-vector","exact-nonnegative-integer?","make-vector","vector-set!","build-string","make-string","string-set!","build-list","zero?",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
MACHINE.modules["whalesong/lang/private/list.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6216, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry104, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "recr");
MACHINE.env[MACHINE.env.length - 1 - 0][57] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPromptMultiple2454 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple2454;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt2455)(MACHINE);
};

var _procReturnMultiple6204 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6204;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6205)(MACHINE);
};

var _procReturnMultiple6200 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6200;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6201)(MACHINE);
};

var _afterCall6192 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6192;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6199)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6201, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall6181 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6181;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6188)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6190, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6182 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6182;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6183)(MACHINE);
};

var _procReturnMultiple6171 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6171;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6172)(MACHINE);
};

var _afterCall6166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6166;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4]);
MACHINE.val = 0;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6170)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6172, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple6161 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6161;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6162)(MACHINE);
};

var _procReturnMultiple6157 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6157;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6158)(MACHINE);
};

var _procReturnMultiple6153 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6153;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6154)(MACHINE);
};

var _procReturnMultiple6141 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6141;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6142)(MACHINE);
};

var _afterCall6130 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6130;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 5][56];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = 4;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6131 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6131;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6132)(MACHINE);
};

var _procReturnMultiple6121 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6121;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6122)(MACHINE);
};

var _procReturnMultiple6117 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6117;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6118)(MACHINE);
};

var _procReturnMultiple6111 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6111;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6112)(MACHINE);
};

var _afterCall6106 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6106;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6110)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6112, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6101 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6101;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6102)(MACHINE);
};

var _procReturnMultiple6097 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6097;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6098)(MACHINE);
};

var _procReturnMultiple6090 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6090;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6091)(MACHINE);
};

var _procReturnMultiple4003 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4003;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4004)(MACHINE);
};

var _procReturnMultiple6070 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6070;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6071)(MACHINE);
};

var _procReturnMultiple6066 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6066;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6067)(MACHINE);
};

var _afterCall4408 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4408;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple6056 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6056;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6057)(MACHINE);
};

var _afterCall6045 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6045;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(3,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 3;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6051)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6053, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple6042 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6042;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6043)(MACHINE);
};

var _afterCall6035 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6035;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(2,((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = 2;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6041)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6043, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall6031 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6031;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6035)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6037, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6026 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6026;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6027)(MACHINE);
};

var _afterCall6021 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6021;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6025)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6027, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6015 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6015;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6016)(MACHINE);
};

var _lamEntry150 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry150;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry151, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry151)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall6002 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6002;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf6000)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6000)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6008, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple5995 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5995;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5996)(MACHINE);
};

var _procReturnMultiple4746 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4746;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4747)(MACHINE);
};

var _afterCall5584 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5584;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5592)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5594, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5980 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5980;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall5159 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5159;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5967 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5967;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][54];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5980)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5982, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][54];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5980)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5982, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
}
};

var _procReturnMultiple2590 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2590;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2591)(MACHINE);
};

var _afterCall5953 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5953;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5967)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5969, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5967)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5969, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
}
};

var _procReturnMultiple4266 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4266;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4267)(MACHINE);
};

var _afterCall5939 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5939;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.NULL;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5953)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5955, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.NULL;
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5953)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5955, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
}
};

var _procReturnMultiple4255 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4255;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4256)(MACHINE);
};

var _afterCall4679 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4679;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple5917 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5917;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5918)(MACHINE);
};

var _procReturnMultiple5913 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5913;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5914)(MACHINE);
};

var _procReturnMultiple4228 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4228;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4229)(MACHINE);
};

var _procReturnMultiple5897 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5897;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5898)(MACHINE);
};

var _afterCall5888 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5888;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][27];
MACHINE.env[MACHINE.env.length - 1 - 0] = "given procedure does not accept ~a arguments: ";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5892)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5894, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterLetBody5876)(MACHINE);
}
};

var _procReturnMultiple5885 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5885;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5886)(MACHINE);
};

var _afterCall5878 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5878;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5884)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5886, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5874 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5874;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5875)(MACHINE);
};

var _afterCall5865 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5865;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given procedure does not accept 2 arguments: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5861)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5871, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5861)(MACHINE);
}
};

var _procReturnMultiple5858 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5858;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5859)(MACHINE);
};

var _afterCall5847 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5847;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 2] = "procedure";
MACHINE.env[MACHINE.env.length - 1 - 3] = 0;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5845)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5853, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5845)(MACHINE);
}
};

var _procReturnMultiple5848 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5848;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5849)(MACHINE);
};

var _procReturnMultiple5838 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5838;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5839)(MACHINE);
};

var _procReturnMultiple3704 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3704;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3705)(MACHINE);
};

var _afterCall5821 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5821;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5817)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5827, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5417 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5417;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5424)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5426, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 4], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple4563 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4563;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4564)(MACHINE);
};

var _procReturnMultiple2850 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2850;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2851)(MACHINE);
};

var _procReturnMultiple3673 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3673;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3674)(MACHINE);
};

var _procReturnMultiple3669 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3669;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3670)(MACHINE);
};

var _procReturnMultiple3237 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3237;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3238)(MACHINE);
};

var _afterCall5762 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5762;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given procedure does not accept 2 arguments: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5760)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5768, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5760)(MACHINE);
}
};

var _procReturnMultiple5374 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5374;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5375)(MACHINE);
};

var _afterCall5746 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5746;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 6][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure";
MACHINE.env[MACHINE.env.length - 1 - 2] = 0;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5744)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5752, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5744)(MACHINE);
}
};

var _procReturnMultiple4500 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4500;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4501)(MACHINE);
};

var _afterCall5734 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5734;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5735 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5735;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5736)(MACHINE);
};

var _afterCall5726 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5726;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5730)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5732, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5719 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5719;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][50];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 15][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5726)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5728, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall5714 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5714;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5719)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5721, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5703 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5703;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5710)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5712, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall5698 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5698;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5703)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5705, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5694 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5694;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5698)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5700, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5687 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5687;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5694)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5696, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall5682 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5682;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5687)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5689, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple5672 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5672;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5673)(MACHINE);
};

var _afterCall5667 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5667;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5647)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5673, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5663 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5663;
    }
    MACHINE.val = plt.baselib.numbers.add(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5667)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5669, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5655 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5655;
    }
    MACHINE.val = plt.baselib.numbers.add(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5659)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5661, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5649 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5649;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5655)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5657, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5644 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5644;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 7][51];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5649)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5651, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5636 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5636;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given procedure does not accept 2 arguments: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5632)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5642, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5632)(MACHINE);
}
};

var _procReturnMultiple3502 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3502;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3503)(MACHINE);
};

var _procReturnMultiple4787 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4787;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4788)(MACHINE);
};

var _afterCall5618 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5618;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 2] = "procedure";
MACHINE.env[MACHINE.env.length - 1 - 3] = 0;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5616)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5624, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5616)(MACHINE);
}
};

var _procReturnMultiple3917 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3917;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3918)(MACHINE);
};

var _afterCall5608 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5608;
    }
    MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5600 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5600;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry184, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5608)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5610, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5592 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5592;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5600)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5602, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5585 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5585;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5586)(MACHINE);
};

var _afterCall5576 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5576;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5584)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5586, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5160 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5160;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5161)(MACHINE);
};

var _afterCall5567 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5567;
    }
    MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.env.splice(MACHINE.env.length - (3 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry184)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5559 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5559;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry184, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5567)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5569, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5551 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5551;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5559)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5561, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5543 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5543;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5551)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5553, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5535 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5535;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5543)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5545, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3392 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3392;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3393)(MACHINE);
};

var _afterCall5525 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5525;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given procedure does not accept 2 arguments: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5523)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5531, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5523)(MACHINE);
}
};

var _procReturnMultiple4237 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4237;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4238)(MACHINE);
};

var _afterCall5509 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5509;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 6][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure";
MACHINE.env[MACHINE.env.length - 1 - 2] = 0;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5507)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5515, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5507)(MACHINE);
}
};

var _procReturnMultiple4220 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4220;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4221)(MACHINE);
};

var _afterCall5493 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5493;
    }
    MACHINE.val = plt.baselib.numbers.add(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5497)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5499, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5489 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5489;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][27];
MACHINE.env[MACHINE.env.length - 1 - 0] = "given procedure does not accept ~a arguments: ";
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5493)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5495, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5485 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5485;
    }
    MACHINE.val = plt.baselib.numbers.add(2, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 0])));
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5489)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5491, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5479 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5479;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5485)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5487, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5474 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5474;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 8][49];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = 3;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5479)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5481, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5466 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5466;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = "given procedure does not accept 2 arguments: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5459 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5459;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn5460)(MACHINE);
};

var _afterCall5448 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5448;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 2] = "procedure";
MACHINE.env[MACHINE.env.length - 1 - 3] = 0;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5446)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5454, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5446)(MACHINE);
}
};

var _afterCall5442 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5442;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5438 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5438;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry180, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5442)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5444, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5431 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5431;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 11]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5438)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5440, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 10], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5424 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5424;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5431)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5433, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 7], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5418 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5418;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5419)(MACHINE);
};

var _afterCall5408 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5408;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry180, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5413, MACHINE.proc));
return (_lamEntry180)(MACHINE);
};

var _afterCall5401 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5401;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 11]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5408)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5410, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 11], RUNTIME.NULL);
return (_afterLetBody5404)(MACHINE);
}
};

var _afterCall5394 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5394;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5401)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5403, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 8], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5387 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5387;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5394)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5396, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 5], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2826 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2826;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2827)(MACHINE);
};

var _procReturnMultiple3649 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3649;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3650)(MACHINE);
};

var _afterCall4513 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4513;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5369 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5369;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf5367)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5367)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5375, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4063 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4063;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4064)(MACHINE);
};

var _procReturnMultiple5354 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5354;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5355)(MACHINE);
};

var _afterCall5349 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5349;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf5347)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5347)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5355, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry177 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry177;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5349)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5351, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry174 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry174;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][45];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4024 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4024;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4025)(MACHINE);
};

var _lamEntry125 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry125;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4031)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4033, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3167;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3168)(MACHINE);
};

var _procReturnMultiple3154 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3154;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3155)(MACHINE);
};

var _afterCall5303 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5303;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][43];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5291 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5291;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5303)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5305, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3549 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3549;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3553)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3555, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5279 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5279;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5291)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5293, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple4827 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4827;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4828)(MACHINE);
};

var _afterCall5260 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5260;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf5258)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5258)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5266, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody5780 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5780;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5777)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5793, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3515 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3515;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3516)(MACHINE);
};

var _procReturnMultiple3511 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3511;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3512)(MACHINE);
};

var _afterCall5232 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5232;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][42];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5221 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5221;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5232)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5234, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5210 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5210;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5221)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5223, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3478 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3478;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3479)(MACHINE);
};

var _afterCall5199 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5199;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5210)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5212, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple5186 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple5186;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn5187)(MACHINE);
};

var _afterCall5181 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5181;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf5179)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5179)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5187, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4739 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4739;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5165 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5165;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry168, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4726 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4726;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4727)(MACHINE);
};

var _afterCall4719 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4719;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5145 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5145;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry167, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall5139 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5139;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3841 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3841;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3842)(MACHINE);
};

var _afterCall5125 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5125;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry166, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall5119 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5119;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4680 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4680;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4681)(MACHINE);
};

var _afterCall5105 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5105;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5125)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5127, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5119)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5121, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry168, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry168)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _afterIf5365 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5365;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][48];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3791 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3791;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3792)(MACHINE);
};

var _procReturnMultiple2934 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2934;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2935)(MACHINE);
};

var _procReturnMultiple4646 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4646;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4647)(MACHINE);
};

var _afterCall4639 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4639;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall5058 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5058;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall3328 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3328;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3332)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3334, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall5042 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5042;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall2499 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2499;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 17][57];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 18];
MACHINE.env[MACHINE.env.length - 1 - 1] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 6])));
MACHINE.val = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])), 1);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2503)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2505, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall5026 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall5026;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall4148 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4148;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4157)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4159, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3711 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3711;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3712)(MACHINE);
};

var _afterCall2475 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2475;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2483)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2485, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple4577 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4577;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4578)(MACHINE);
};

var _procReturnMultiple4987 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4987;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4988)(MACHINE);
};

var _procReturnMultiple4120 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4120;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4121)(MACHINE);
};

var _afterCall4972 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4972;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry158, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4966 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4966;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3660 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3660;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3661)(MACHINE);
};

var _afterCall4952 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4952;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry157, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4946 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4946;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4514 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4514;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4515)(MACHINE);
};

var _afterCall4932 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4932;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry156, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4926 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4926;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf4990 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4990;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.env.splice(MACHINE.env.length - (2 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry160)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall4912 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4912;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4932)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4934, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4926)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4928, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry158, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry158)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _procReturnMultiple4477 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4477;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4478)(MACHINE);
};

var _lamEntry155 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry155;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry156, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry156)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3178 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3178;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3179)(MACHINE);
};

var _procReturnMultiple3583 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3583;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3584)(MACHINE);
};

var _afterCall4868 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4868;
    }
    if (MACHINE.val === false)
{
MACHINE.val = false;
return (_afterIf4866)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4866)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4874, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2731 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2731;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2732)(MACHINE);
};

var _afterCall4852 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4852;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry153, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4846 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4846;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall4414 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4414;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry138, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry138)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4832 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4832;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry152, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4826 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4826;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3524 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3524;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3525)(MACHINE);
};

var _afterCall4812 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4812;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry151, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4806 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4806;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3092 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3092;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3093)(MACHINE);
};

var _afterCall4792 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4792;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4812)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4814, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4806)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4808, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry153, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry153)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _afterCall4349 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4349;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry133, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3926 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3926;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3927)(MACHINE);
};

var _procReturnMultiple3063 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3063;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3064)(MACHINE);
};

var _afterCall3048 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3048;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3057)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3059, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4745 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4745;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry147, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4740 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4740;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4741)(MACHINE);
};

var _afterCall4296 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4296;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4293 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4293;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4294)(MACHINE);
};

var _procReturnMultiple4720 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4720;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4721)(MACHINE);
};

var _lamEntry183 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry183;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5509)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5511, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall4705 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4705;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry145, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4699 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4699;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry131 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry131;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4265)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4267, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4685 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4685;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry144, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4246 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4246;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4247)(MACHINE);
};

var _procReturnMultiple3803 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3803;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3804)(MACHINE);
};

var _afterCall4665 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4665;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry143, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4659 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4659;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple2928 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2928;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2929)(MACHINE);
};

var _afterCall4645 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4645;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry142, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4640 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4640;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4641)(MACHINE);
};

var _procReturnMultiple4190 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4190;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4191)(MACHINE);
};

var _afterCall4625 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4625;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4645)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4647, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4639)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4641, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry144, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry144)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _procReturnMultiple4168 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4168;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4169)(MACHINE);
};

var _afterCall2503 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2503;
    }
    MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody2467)(MACHINE);
};

var _afterCall4596 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4596;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4597 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4597;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4598)(MACHINE);
};

var _procReturnMultiple2880 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2880;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2881)(MACHINE);
};

var _afterCall4576 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4576;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple4131 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4131;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4132)(MACHINE);
};

var _afterCall3690 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3690;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3699)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3701, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4562 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4562;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry139, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4110 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4110;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4119)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4121, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4113)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4542 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4542;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4562)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4564, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4556)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4558, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry141, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry141)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _procReturnMultiple3250 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3250;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3251)(MACHINE);
};

var _afterIf6150 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6150;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("build-list");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6148)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6162, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf6148)(MACHINE);
}
};

var _afterCall4519 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4519;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry138, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple4075 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4075;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4076)(MACHINE);
};

var _afterIf6063 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6063;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6077)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6079, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall4499 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4499;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4519)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4521, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4513)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4515, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry146, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry146)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _procReturnMultiple4494 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4494;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4495)(MACHINE);
};

var _afterCall4476 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4476;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4499)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4501, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry145, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4495, MACHINE.proc));
return (_lamEntry145)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4489)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry142, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry142)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _procReturnMultiple4471 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4471;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4472)(MACHINE);
};

var _afterCall3177 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3177;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 9), 9);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3186)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3188, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4453 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4453;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry137, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4447 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4447;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3163 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3163;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3164)(MACHINE);
};

var _afterCall4433 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4433;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry136, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall4427 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4427;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3994 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3994;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3995)(MACHINE);
};

var _procReturnMultiple4415 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4415;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4416)(MACHINE);
};

var _procReturnMultiple4409 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4409;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4410)(MACHINE);
};

var _afterCall3972 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3972;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry122, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3976)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3978, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3966)(MACHINE);
}
};

var _afterCall4394 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4394;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4414)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4416, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4408)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4410, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry137, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry137)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _afterIf4760 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4760;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4766)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4770, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4766)(MACHINE);
}
};

var _procReturnMultiple3097 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3097;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3098)(MACHINE);
};

var _afterCall4368 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4368;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry134, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3083 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3083;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3084)(MACHINE);
};

var _procReturnMultiple3935 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3935;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3936)(MACHINE);
};

var _afterCall4343 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4343;
    }
    MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple3058 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3058;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3059)(MACHINE);
};

var _afterCall4329 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4329;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4349)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4351, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4343)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4345, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry147, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry147)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
};

var _procReturnMultiple4324 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4324;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4325)(MACHINE);
};

var _procReturnMultiple4309 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4309;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4310)(MACHINE);
};

var _procReturnMultiple4303 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4303;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn4304)(MACHINE);
};

var _procReturnMultiple4297 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4297;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4298)(MACHINE);
};

var _afterCall4292 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4292;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry131, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4296)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4298, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple4284 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4284;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4285)(MACHINE);
};

var _afterCall4274 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4274;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4283)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4285, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3840 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3840;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3851)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3853, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4265 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4265;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4274)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4276, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2571 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2571;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2578)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2580, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2974 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2974;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2975)(MACHINE);
};

var _afterCall4245 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4245;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4254)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4256, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4248)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4236 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4236;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4245)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4247, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall4227 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4227;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4236)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4238, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3362 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3362;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3363)(MACHINE);
};

var _afterCall4212 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4212;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall3348 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3348;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3352)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3354, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2915 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2915;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3333 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3333;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3334)(MACHINE);
};

var _procReturnMultiple3329 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3329;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3330)(MACHINE);
};

var _procReturnMultiple4162 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4162;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4163)(MACHINE);
};

var _afterCall4157 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4157;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry127, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4161)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4163, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2487 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2487;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 12][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2495)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2497, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2876 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2876;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2877)(MACHINE);
};

var _afterCall4139 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4139;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4148)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4150, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3700 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3700;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3701)(MACHINE);
};

var _procReturnMultiple4123 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4123;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4124)(MACHINE);
};

var _afterCall4119 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4119;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry127, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 17];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4124, MACHINE.proc));
return (_lamEntry127)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4113)(MACHINE);
}
};

var _afterCall3672 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3672;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3677)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3679, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3254 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3254;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3255)(MACHINE);
};

var _afterCall4092 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4092;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4101)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4103, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry164 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry164;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][8]);
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remv*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5073)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5077, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5073)(MACHINE);
}
};

var _procReturnMultiple3230 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3230;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3231)(MACHINE);
};

var _procReturnMultiple3640 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3640;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3641)(MACHINE);
};

var _procReturnMultiple4071 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4071;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4072)(MACHINE);
};

var _afterCall4058 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4058;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry125, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4062)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4064, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4052)(MACHINE);
}
};

var _procReturnMultiple4059 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4059;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4060)(MACHINE);
};

var _procReturnMultiple3195 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3195;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3196)(MACHINE);
};

var _procReturnMultiple4041 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4041;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4042)(MACHINE);
};

var _procReturnMultiple4032 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple4032;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn4033)(MACHINE);
};

var _procReturnMultiple2754 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2754;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2755)(MACHINE);
};

var _afterCall4020 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall4020;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry125, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4025, MACHINE.proc));
return (_lamEntry125)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4014)(MACHINE);
}
};

var _procReturnMultiple2742 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2742;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2743)(MACHINE);
};

var _afterIf4864 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4864;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4880)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4884, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4880)(MACHINE);
}
};

var _procReturnMultiple3561 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3561;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3562)(MACHINE);
};

var _afterCall3993 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3993;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4002)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4004, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3996)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3986 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3986;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn3987)(MACHINE);
};

var _procReturnMultiple3977 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3977;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3978)(MACHINE);
};

var _procReturnMultiple3973 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3973;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3974)(MACHINE);
};

var _afterCall3963 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3963;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3972)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3974, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3966)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3957)(MACHINE);
}
};

var _afterCall3518 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3518;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3523)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3525, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2674 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2674;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2675)(MACHINE);
};

var _procReturnMultiple3088 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3088;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3089)(MACHINE);
};

var _afterCall3934 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3934;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry122, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 18];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3939, MACHINE.proc));
return (_lamEntry122)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody3928)(MACHINE);
}
};

var _procReturnMultiple3495 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3495;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3496)(MACHINE);
};

var _procReturnMultiple3491 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3491;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3492)(MACHINE);
};

var _procReturnMultiple2652 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2652;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2653)(MACHINE);
};

var _afterCall3907 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3907;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3916)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3918, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody3910)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3900 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3900;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn3901)(MACHINE);
};

var _afterCall3030 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3030;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3035)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3037, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3874 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3874;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3875)(MACHINE);
};

var _procReturnMultiple3863 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3863;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3864)(MACHINE);
};

var _afterCall3851 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3851;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3862)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3864, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3416 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3416;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3417)(MACHINE);
};

var _procReturnMultiple3412 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3412;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3413)(MACHINE);
};

var _procReturnMultiple3399 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3399;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3400)(MACHINE);
};

var _procReturnMultiple2968 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2968;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2969)(MACHINE);
};

var _procReturnMultiple3815 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3815;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3816)(MACHINE);
};

var _procReturnMultiple3384 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3384;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3385)(MACHINE);
};

var _afterCall2546 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2546;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][56];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2938 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2938;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2939)(MACHINE);
};

var _procReturnMultiple2536 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2536;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2537)(MACHINE);
};

var _afterCall3352 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3352;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3356)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3358, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2520 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2520;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2524)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2526, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3340 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3340;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3341)(MACHINE);
};

var _procReturnMultiple2912 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2912;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2913)(MACHINE);
};

var _procReturnMultiple3325 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3325;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3326)(MACHINE);
};

var _afterCall2895 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2895;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2900)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2902, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3728 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3728;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14][44];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3724 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3724;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3725)(MACHINE);
};

var _afterCall3710 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3710;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 13), 13);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall3719)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3721, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall3703 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3703;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3710)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3712, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall2471 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2471;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2475)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2477, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 3] = RUNTIME.NULL;
return (_afterLetBody2467)(MACHINE);
}
};

var _procReturnMultiple3691 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3691;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3692)(MACHINE);
};

var _afterCall3677 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3677;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3690)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3692, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2846 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2846;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2847)(MACHINE);
};

var _procReturnMultiple3246 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3246;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3247)(MACHINE);
};

var _afterCall3652 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3652;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3659)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3661, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall3648 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3648;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3652)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3654, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple3226 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3226;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3227)(MACHINE);
};

var _procReturnMultiple3222 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3222;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3223)(MACHINE);
};

var _afterCall2791 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2791;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall3199 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3199;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3212)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3214, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf4984 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4984;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remq*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4990)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4994, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4990)(MACHINE);
}
};

var _afterCall3190 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3190;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3194)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3196, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall2753 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2753;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterLetBody2726)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2759, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2750 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2750;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2751)(MACHINE);
};

var _afterCall3577 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3577;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3582)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3584, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3573 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3573;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3577)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3579, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody3996 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3996;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf4866 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4866;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 2)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4864)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4878, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4864)(MACHINE);
}
};

var _procReturnMultiple3554 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3554;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3555)(MACHINE);
};

var _procReturnMultiple3550 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3550;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3551)(MACHINE);
};

var _procReturnMultiple3546 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3546;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3547)(MACHINE);
};

var _procReturnMultiple3537 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3537;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3538)(MACHINE);
};

var _afterCall3523 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3523;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3536)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3538, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3519 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3519;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3520)(MACHINE);
};

var _lamEntry148 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry148;
    }
    if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0]).racketArity, MACHINE.argcount))
{
if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1]).racketArity, MACHINE.argcount))
{
return (_lamEntry149)(MACHINE);
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1];
return (_lamEntry154)(MACHINE);
}
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0];
return (_lamEntry149)(MACHINE);
}
};

var _procReturnMultiple2670 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2670;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2671)(MACHINE);
};

var _afterCall3494 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3494;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 7), 7);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3501)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3503, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3074 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3074;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3075)(MACHINE);
};

var _procReturnMultiple3487 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3487;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3488)(MACHINE);
};

var _afterCall3477 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3477;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3][8];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3486)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3488, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3049 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3049;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3050)(MACHINE);
};

var _afterCall3035 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3035;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3048)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3050, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3031 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3031;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3032)(MACHINE);
};

var _afterCall3021 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3021;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody3024)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3028, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3012 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3012;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3021)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3023, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf5507 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5507;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 6][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.env[MACHINE.env.length - 1 - 2] = 2;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5517)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5521, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5517)(MACHINE);
}
};

var _afterCall3420 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3420;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14][46];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 15;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 15), 15);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2988 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2988;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2989)(MACHINE);
};

var _procReturnMultiple3408 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3408;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3409)(MACHINE);
};

var _afterCall3398 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3398;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 13), 13);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10][3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3407)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3409, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2568 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2568;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2569)(MACHINE);
};

var _procReturnMultiple3388 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3388;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3389)(MACHINE);
};

var _afterCall3374 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3374;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8][3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3383)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3385, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3375 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3375;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3376)(MACHINE);
};

var _procReturnMultiple2543 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2543;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2544)(MACHINE);
};

var _lamEntry176 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry176;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 4][46];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3353 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3353;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3354)(MACHINE);
};

var _procReturnMultiple3349 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3349;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3350)(MACHINE);
};

var _procReturnMultiple2916 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2916;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2917)(MACHINE);
};

var _procReturnMultiple2908 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2908;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2909)(MACHINE);
};

var _afterCall3324 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3324;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3328)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3330, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3316 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3316;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3317)(MACHINE);
};

var _procReturnMultiple2892 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2892;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2893)(MACHINE);
};

var _procReturnMultiple2885 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2885;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2886)(MACHINE);
};

var _procReturnMultiple2484 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2484;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2485)(MACHINE);
};

var _procReturnMultiple2869 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2869;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2870)(MACHINE);
};

var _procReturnMultiple2864 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2864;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2865)(MACHINE);
};

var _afterCall2463 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2463;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 5])));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "sub1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 7])), 1);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2471)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2473, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2459 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2459;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2463)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2465, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterCall3253 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3253;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3258)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3260, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3249 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3249;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3253)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3255, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 14;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2830 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2830;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2831)(MACHINE);
};

var _lamEntry128 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry128;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4165)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4169, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4165)(MACHINE);
}
};

var _afterCall3229 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3229;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 13), 13);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3236)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3238, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterCall3225 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3225;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3229)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3231, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2806 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2806;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2807)(MACHINE);
};

var _procReturnMultiple3213 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3213;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3214)(MACHINE);
};

var _procReturnMultiple3200 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3200;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3201)(MACHINE);
};

var _lamEntry191 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry191;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][34]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5990)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5992, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple3191 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3191;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3192)(MACHINE);
};

var _procReturnMultiple3187 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3187;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3188)(MACHINE);
};

var _afterCall3170 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3170;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3177)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3179, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3171 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3171;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3172)(MACHINE);
};

var _procReturnMultiple2738 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2738;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2739)(MACHINE);
};

var _afterIf5845 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5845;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = 2;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5855)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5859, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5855)(MACHINE);
}
};

var _procReturnMultiple2724 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2724;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2725)(MACHINE);
};

var _afterIf2951 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2951;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 17];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2965)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2969, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2965)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody5814 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5814;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5811)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5835, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2709 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2709;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2707)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2715, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2707)(MACHINE);
}
};

var _afterLetBody5774 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5774;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5771)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5801, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf4766 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4766;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry150)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturnMultiple2690 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2690;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2691)(MACHINE);
};

var _afterCall3091 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3091;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3096)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3098, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry187 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry187;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5746)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5748, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3082 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3082;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody3085)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3089, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall3073 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3073;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 13][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 13), 13);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3082)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3084, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple3067 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3067;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3068)(MACHINE);
};

var _afterCall3057 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall3057;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody3060)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3064, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2638 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2638;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][54];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2651)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2653, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9][54];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 10]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2651)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2653, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
}
};

var _procReturnMultiple3036 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3036;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3037)(MACHINE);
};

var _procReturnMultiple3027 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3027;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3028)(MACHINE);
};

var _procReturnMultiple3022 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3022;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3023)(MACHINE);
};

var _procReturnMultiple3013 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3013;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3014)(MACHINE);
};

var _procReturnMultiple3006 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple3006;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn3007)(MACHINE);
};

var _afterCall2996 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2996;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody2999)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3003, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2987 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2987;
    }
    MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 6][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "non-pair found in list: ";
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 3] = " in ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2996)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2998, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf5446 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5446;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 4]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = 2;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5456)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5460, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5456)(MACHINE);
}
};

var _procReturnMultiple2978 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2978;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2979)(MACHINE);
};

var _afterCall2973 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2973;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2971)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2979, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2971)(MACHINE);
}
};

var _procReturnMultiple2958 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2958;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2959)(MACHINE);
};

var _procReturnMultiple2954 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2954;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2955)(MACHINE);
};

var _procReturnMultiple2948 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2948;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2949)(MACHINE);
};

var _afterIf5347 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5347;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 2)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5345)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5359, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5345)(MACHINE);
}
};

var _afterCall2933 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2933;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2931)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2939, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2931)(MACHINE);
}
};

var _afterCall2524 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2524;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 4])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 8]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2531)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2533, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2525 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2525;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2526)(MACHINE);
};

var _afterCall2911 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2911;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2915)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2917, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2510 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2510;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2511)(MACHINE);
};

var _procReturnMultiple2901 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2901;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2902)(MACHINE);
};

var _procReturnMultiple2896 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2896;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2897)(MACHINE);
};

var _afterCall2891 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2891;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2895)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2897, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2496 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2496;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2497)(MACHINE);
};

var _afterCall2875 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2875;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2879)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2881, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2868 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2868;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2875)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2877, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2472 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2472;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2473)(MACHINE);
};

var _procReturnMultiple2860 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2860;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2861)(MACHINE);
};

var _procReturnMultiple2460 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2460;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2461)(MACHINE);
};

var _afterCall2845 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2845;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2843)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2851, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2843)(MACHINE);
}
};

var _procReturnMultiple2840 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2840;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2841)(MACHINE);
};

var _afterIf6148 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6148;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6166)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6168, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2825 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2825;
    }
    MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 1] = "given list does not have the same size as the first list: ";
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2823)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2831, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2823)(MACHINE);
}
};

var _procReturnMultiple2820 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2820;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2821)(MACHINE);
};

var _procReturnMultiple2810 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2810;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2811)(MACHINE);
};

var _procReturnMultiple2800 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2800;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2801)(MACHINE);
};

var _procReturnMultiple2792 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2792;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2793)(MACHINE);
};

var _afterIf5998 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5998;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][35]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6014)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6016, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry159 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry159;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 1]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remq*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4984)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4988, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4984)(MACHINE);
}
};

var _procReturnMultiple2773 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2773;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2774)(MACHINE);
};

var _procReturnMultiple2758 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2758;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2759)(MACHINE);
};

var _afterIf5910 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5910;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("filter");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5908)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5922, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5908)(MACHINE);
}
};

var _procReturnMultiple2746 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2746;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2747)(MACHINE);
};

var _afterIf5861 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5861;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][52];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 6], MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2730 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2730;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
return (_afterLetBody2733)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 15][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 18][52];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 19];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 20];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 20][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2737)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2739, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry189 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry189;
    }
    MACHINE.unspliceRestFromStack(3, (MACHINE.argcount - 3));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5847)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5849, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf3983 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf3983;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3993)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3995, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _procReturnMultiple2714 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2714;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2715)(MACHINE);
};

var _procReturnMultiple2710 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2710;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2711)(MACHINE);
};

var _procReturnMultiple2704 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2704;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2705)(MACHINE);
};

var _procReturnMultiple2694 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2694;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2695)(MACHINE);
};

var _procReturnMultiple2684 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2684;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2685)(MACHINE);
};

var _afterIf5760 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5760;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry188, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 18];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 19];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5785, MACHINE.proc));
return (_lamEntry188)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 14];
return (_afterLetBody5780)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 11];
return (_afterLetBody5777)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
return (_afterLetBody5774)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
return (_afterLetBody5771)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry146 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry146;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4725)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4727, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4719)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4721, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _procReturnMultiple2664 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2664;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2665)(MACHINE);
};

var _afterCall2651 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2651;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 10), 10);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf5632 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5632;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 4], MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5678)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5680, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry185 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry185;
    }
    MACHINE.unspliceRestFromStack(3, (MACHINE.argcount - 3));
MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5618)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5620, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2639 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2639;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2640)(MACHINE);
};

var _afterCall2624 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2624;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2638)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2640, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 7]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2638)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2640, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
}
};

var _procReturnMultiple2625 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2625;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2626)(MACHINE);
};

var _afterCall2610 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2610;
    }
    if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2624)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2626, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 5]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2624)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2626, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
}
};

var _procReturnMultiple2611 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2611;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2612)(MACHINE);
};

var _afterCall2593 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2593;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7][55];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 8), 8);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2589 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2589;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2593)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2595, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2583 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2583;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2584)(MACHINE);
};

var _procReturnMultiple2579 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2579;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2580)(MACHINE);
};

var _procReturnMultiple2572 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2572;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2573)(MACHINE);
};

var _afterCall2567 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2567;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2571)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2573, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2561 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2561;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2562)(MACHINE);
};

var _procReturnMultiple2557 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2557;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2558)(MACHINE);
};

var _procReturnMultiple2547 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2547;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2548)(MACHINE);
};

var _afterCall2542 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2542;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2546)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2548, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterCall2531 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2531;
    }
    MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2535)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2537, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2532 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2532;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2533)(MACHINE);
};

var _procReturnMultiple2521 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2521;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2522)(MACHINE);
};

var _procReturnMultiple2514 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2514;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn2515)(MACHINE);
};

var _afterIf5256 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5256;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5279)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5281, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf5258 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5258;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5256)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5270, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5256)(MACHINE);
}
};

var _procReturnMultiple2504 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2504;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2505)(MACHINE);
};

var _procReturnMultiple2500 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2500;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2501)(MACHINE);
};

var _procReturnMultiple2488 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2488;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2489)(MACHINE);
};

var _afterCall2483 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall2483;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 11]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2487)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2489, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 3] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 5] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody2467)(MACHINE);
}
};

var _procReturnMultiple2476 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2476;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2477)(MACHINE);
};

var _lamEntry169 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry169;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5181)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5183, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple2464 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple2464;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn2465)(MACHINE);
};

var _lamEntry104 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry104;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][41]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2459)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2461, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody6276 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody6276;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 3][18] = MACHINE.val;
MACHINE.env[MACHINE.env.length - 1 - 3][19] = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 3][20] = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 3][21] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry166 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry166;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5105)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5107, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry167, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5101, MACHINE.proc));
return (_lamEntry167)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody5095)(MACHINE);
}
}
};

var _afterIf6138 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6138;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6152)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6154, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf6073 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6073;
    }
    MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][38]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6089)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6091, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf6075 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6075;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("build-string");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf6073)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6087, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf6073)(MACHINE);
}
};

var _afterIf6000 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf6000;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("build-vector");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5998)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6012, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5998)(MACHINE);
}
};

var _afterIf5988 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5988;
    }
    MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6002)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6004, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf4066 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4066;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4082)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4086, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4082)(MACHINE);
}
};

var _afterIf5924 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5924;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5939)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5941, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][32]);
MACHINE.val = RUNTIME.NULL;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf5908 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5908;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("filter");
MACHINE.env[MACHINE.env.length - 1 - 1] = "proper list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5924)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5928, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5924)(MACHINE);
}
};

var _afterLetBody5876 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5876;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
return (_afterIf5861)(MACHINE);
};

var _lamEntry156 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry156;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4912)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4914, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry157, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4908, MACHINE.proc));
return (_lamEntry157)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4902)(MACHINE);
}
}
};

var _afterIf5855 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5855;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5873)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5875, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5865)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5867, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody5808 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5808;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody5811 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5811;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5808)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5839, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody5817 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5817;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5814)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5831, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry188 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry188;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry188, 3, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 17];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 18];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5821)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5823, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
return (_afterLetBody5817)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
return (_afterLetBody5814)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
return (_afterLetBody5811)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
return (_afterLetBody5808)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody5771 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5771;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody5777 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5777;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterLetBody5774)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5797, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody3910 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3910;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf5754 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5754;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5762)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5764, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf5744 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5744;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 6][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.env[MACHINE.env.length - 1 - 2] = 2;
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5754)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5758, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5754)(MACHINE);
}
};

var _lamEntry144 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry144;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4685)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4687, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4679)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4681, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody5647 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5647;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
return (_afterIf5632)(MACHINE);
};

var _afterIf5626 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5626;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5644)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5646, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5636)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5638, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf5616 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5616;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = 2;
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5626)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5630, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5626)(MACHINE);
}
};

var _lamEntry184 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry184;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5576)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5578, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf5523 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5523;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5535)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5537, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf5517 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5517;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5525)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5527, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry182 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry182;
    }
    if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0]).racketArity, MACHINE.argcount))
{
if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1]).racketArity, MACHINE.argcount))
{
return (_lamEntry183)(MACHINE);
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1];
return (_lamEntry185)(MACHINE);
}
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0];
return (_lamEntry183)(MACHINE);
}
};

var _afterIf5456 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5456;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 5] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][26]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5474)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5476, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2][5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5466)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5468, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry181 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry181;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5448)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5450, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry180 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry180;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall5417)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5419, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 1], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody5404 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5404;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf5367 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5367;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5365)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5379, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5365)(MACHINE);
}
};

var _afterIf5345 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5345;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 5][47];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (5 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry171 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry171;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf4306 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4306;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry133, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.env.splice(MACHINE.env.length - (5 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry133)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry132 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry132;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4300)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4304, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4300)(MACHINE);
}
};

var _lamEntry170 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry170;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5260)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5262, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf5177 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5177;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 3), 3);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5199)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5201, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf5179 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5179;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 1)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5177)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5191, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5177)(MACHINE);
}
};

var _lamEntry168 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry168;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5165)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5167, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5159)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5161, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry167 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry167;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall5145)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5147, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5139)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5141, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody5095 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5095;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf5079 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5079;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry165, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry165)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf5073 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf5073;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remv*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf5079)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5083, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf5079)(MACHINE);
}
};

var _lamEntry163 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry163;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = new RUNTIME.Closure(_lamEntry163, 4, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5058)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5060, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry162 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry162;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = new RUNTIME.Closure(_lamEntry162, 4, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5042)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5044, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody5006 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody5006;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry161 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry161;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = new RUNTIME.Closure(_lamEntry161, 4, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (4 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry160, 2, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall5026)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5028, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = new RUNTIME.Closure(_lamEntry163, 4, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
MACHINE.env.splice(MACHINE.env.length - (4 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry163)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = new RUNTIME.Closure(_lamEntry162, 4, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn5012, MACHINE.proc));
return (_lamEntry162)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody5006)(MACHINE);
}
}
};

var _afterLetBody4113 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4113;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry158 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry158;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4972)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4974, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4966)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4968, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry157 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry157;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4952)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4954, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4946)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4948, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody4034 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4034;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterLetBody4902 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4902;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf4886 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4886;
    }
    MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry155, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return (_lamEntry155)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf4880 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4880;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4886)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4890, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4886)(MACHINE);
}
};

var _lamEntry154 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry154;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4868)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4870, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry153 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry153;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4852)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4854, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4846)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4848, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry152 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry152;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4832)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4834, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry150, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4826)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4828, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody3948 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3948;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterLetBody4782 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4782;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry151 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry151;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4792)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4794, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry152, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4788, MACHINE.proc));
return (_lamEntry152)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4782)(MACHINE);
}
}
};

var _lamEntry149 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry149;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][3]);
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 2]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove*");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4760)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4764, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4760)(MACHINE);
}
};

var _lamEntry147 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry147;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4745)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4747, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4739)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4741, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry121 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry121;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf3897)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3901, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.val = RUNTIME.VOID;
return (_afterIf3897)(MACHINE);
}
};

var _lamEntry145 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry145;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4705)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4707, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4699)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4701, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry143 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry143;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4665)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4667, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4659)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4661, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody4615 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4615;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry142 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry142;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4625)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4627, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry143, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4621, MACHINE.proc));
return (_lamEntry143)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4615)(MACHINE);
}
}
};

var _lamEntry141 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry141;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4602)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4604, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4596)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4598, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry140 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry140;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4582)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4584, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4576)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4578, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody4532 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4532;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry139 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry139;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4542)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4544, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry140, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4538, MACHINE.proc));
return (_lamEntry140)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4532)(MACHINE);
}
}
};

var _afterLetBody4489 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4489;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterLetBody4466 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4466;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry138 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry138;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4476)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4478, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry139, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4472, MACHINE.proc));
return (_lamEntry139)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4466)(MACHINE);
}
}
};

var _lamEntry137 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry137;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4453)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4455, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4447)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4449, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry136 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry136;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4433)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4435, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4427)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4429, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody4384 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4384;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry135 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry135;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4394)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4396, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry136, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4390, MACHINE.proc));
return (_lamEntry136)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4384)(MACHINE);
}
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry134 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry134;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4368)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4370, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry135, 3, [], "rloop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4364, MACHINE.proc));
return (_lamEntry135)(MACHINE);
}
};

var _afterLetBody4319 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4319;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry133 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry133;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4329)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4331, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).first;
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 4] = new RUNTIME.Closure(_lamEntry134, 5, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.val;
MACHINE.argcount = 5;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4325, MACHINE.proc));
return (_lamEntry134)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4319)(MACHINE);
}
}
};

var _afterIf4300 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4300;
    }
    MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4306)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4310, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4306)(MACHINE);
}
};

var _afterLetBody4248 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4248;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _lamEntry130 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry130;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][8]);
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4217)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4221, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4217)(MACHINE);
}
};

var _lamEntry129 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry129;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry129, 2, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall4212)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4214, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 1]))).rest;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody4184 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4184;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterIf4165 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4165;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry129, 2, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4191, MACHINE.proc));
return (_lamEntry129)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
return (_afterLetBody4184)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
return (_afterLetBody4184)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).rest;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry127 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry127;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4130)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4132, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf4082 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4082;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4092)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4094, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf4068 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf4068;
    }
    if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove");
MACHINE.env[MACHINE.env.length - 1 - 1] = "procedure (arity 2)";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf4066)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4080, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf4066)(MACHINE);
}
};

var _lamEntry126 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry126;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][4]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall4070)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn4072, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterLetBody4043 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4043;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4034)(MACHINE);
};

var _afterLetBody4052 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4052;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4043)(MACHINE);
};

var _afterLetBody2999 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2999;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3005)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3007, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody4005 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4005;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3996)(MACHINE);
};

var _afterLetBody4014 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody4014;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody4005)(MACHINE);
};

var _lamEntry124 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry124;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][3]);
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 4][1];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("remove");
MACHINE.env[MACHINE.env.length - 1 - 1] = "list";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf3983)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3987, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf3983)(MACHINE);
}
};

var _lamEntry123 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry123;
    }
    if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0]).racketArity, MACHINE.argcount))
{
if (! RUNTIME.isArityMatching(((MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1]).racketArity, MACHINE.argcount))
{
return (_lamEntry124)(MACHINE);
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 1];
return (_lamEntry126)(MACHINE);
}
} else {
MACHINE.proc = (MACHINE.proc).closedVals[(MACHINE.proc).closedVals.length - 1 - 0];
return (_lamEntry124)(MACHINE);
}
};

var _afterLetBody3957 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3957;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3948)(MACHINE);
};

var _afterLetBody3966 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3966;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3957)(MACHINE);
};

var _lamEntry122 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry122;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3945)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3947, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody3919 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3919;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3910)(MACHINE);
};

var _afterLetBody3928 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3928;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
return (_afterLetBody3919)(MACHINE);
};

var _afterIf3897 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf3897;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3907)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3909, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf2803 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2803;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 8])));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2817)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2821, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2817)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry120 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry120;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("memf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3840)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3842, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody2769 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2769;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry119 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry119;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("findf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall3790)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3792, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf2687 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2687;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).rest;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 2])));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2701)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2705, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2701)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf2667 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2667;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).rest;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 8])));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2681)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2685, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2681)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterIf2661 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2661;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2669)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2671, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry118 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry118;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assq");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3639)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3641, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry117 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry117;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assv");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3477)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3479, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry116 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry116;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3315)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3317, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _beforePromptPop6295 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6295;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6297, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry193, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "build-list");
MACHINE.env[MACHINE.env.length - 1 - 0][40] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6287 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6287;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6289, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry187, 3, [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:252:4");
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry189, (RUNTIME.makeArityAtLeast(3)), [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:258:4");
MACHINE.val = new RUNTIME.Closure(_lamEntry186, RUNTIME.makePair(3, RUNTIME.makePair((RUNTIME.makeArityAtLeast(3)), RUNTIME.NULL)), [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "foldr");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env[MACHINE.env.length - 1 - 0][30] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn6280 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6280;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 4);
return (_afterLetBody6276)(MACHINE);
};

var _lamEntry115 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry115;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 4] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assoc");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 6), 6);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 6;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3153)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3155, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody3085 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3085;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 9][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3091)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3093, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 13;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody3024 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody3024;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][23]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall3030)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn3032, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry114 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry114;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3]);
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 3] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][14];
MACHINE.env[MACHINE.env.length - 1 - 0] = RUNTIME.makeSymbol("assf");
MACHINE.env[MACHINE.env.length - 1 - 1] = "not a proper list: ";
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (3 + 5), 5);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = false;
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 1][22]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2987)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2989, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf2971 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2971;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 11][49];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 16];
MACHINE.env[MACHINE.env.length - 1 - 5] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).rest;
MACHINE.val = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 7])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.val;
MACHINE.argcount = 7;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 12;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (7 + 12), 12);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf2965 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2965;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2973)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2975, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf2931 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2931;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 9])));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 2]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 10][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2945)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2949, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2945)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry113 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry113;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 6] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 15];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2925)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2929, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2925)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry112 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry112;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 6][24];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["car"];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2859)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2861, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf2843 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2843;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 10][51];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 4] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.val = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 6])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf2817 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2817;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2825)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2827, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf2797 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2797;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 8]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2805)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2807, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry111 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry111;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 5] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldl");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2797)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2801, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2797)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry110 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry110;
    }
    MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry110, 2, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2791)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2793, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 9], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 6], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 3], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody2726 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2726;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 6] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 9])) ? (MACHINE.env[MACHINE.env.length - 1 - 9]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 9]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 0] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).first;
MACHINE.env[MACHINE.env.length - 1 - 1] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 0]))).first;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry110, 2, [], "loop");
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).rest;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2774, MACHINE.proc));
return (_lamEntry110)(MACHINE);
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 9], RUNTIME.NULL);
return (_afterLetBody2769)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 6], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 3], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
} else {
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], RUNTIME.NULL);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterLetBody2733 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2733;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.val;
MACHINE.argcount = 3;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2753)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2755, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry109 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry109;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.val = RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined);
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6][29];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["cdr"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 9];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall2723)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2725, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _afterIf2707 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2707;
    }
    MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 10][53];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 4] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 7]))).rest;
MACHINE.val = plt.baselib.numbers.add(1, ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "add1", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 6])));
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.val;
MACHINE.argcount = 6;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 11;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 10;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 9;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 8;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (6 + 11), 11);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf2701 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2701;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2709)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2711, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _afterIf2681 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterIf2681;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 4][26]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 4]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall2689)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2691, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _lamEntry108 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry108;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 5] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 6]))).first;
MACHINE.val = RUNTIME.isList(MACHINE.env[MACHINE.env.length - 1 - 0]);
MACHINE.env.length = MACHINE.env.length - 1;
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 8][1];
MACHINE.env[MACHINE.env.length - 1 - 1] = RUNTIME.makeSymbol("foldr");
MACHINE.env[MACHINE.env.length - 1 - 2] = "list";
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.env[MACHINE.env.length - 1 - 14];
MACHINE.env[MACHINE.env.length - 1 - 4] = MACHINE.env[MACHINE.env.length - 1 - 10];
MACHINE.env[MACHINE.env.length - 1 - 5] = MACHINE.env[MACHINE.env.length - 1 - 11];
MACHINE.env[MACHINE.env.length - 1 - 6] = MACHINE.env[MACHINE.env.length - 1 - 12];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 13];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 7] = MACHINE.val;
MACHINE.argcount = 8;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterIf2661)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2665, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
return (_afterIf2661)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.VOID;
MACHINE.env.length = MACHINE.env.length - 7;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry107 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry107;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.NULL);
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "cdr", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 3]))).rest;
MACHINE.env.push(undefined);
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 3]);
MACHINE.val = (((RUNTIME.isPair(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, "car", "pair", 0, MACHINE.env[MACHINE.env.length - 1 - 5]))).first;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2610)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2612, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 0][32]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (1 + 4), 4);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
}
};

var _lamEntry106 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry106;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][36];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2556)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2558, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _lamEntry105 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry105;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = ((plt.baselib.numbers.equals(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, "=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 3][39];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 6]);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 8];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall2509)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn2511, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 5;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _afterLetBody2467 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterLetBody2467;
    }
    MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 4;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6291 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6291;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6293, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry191, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "build-vector");
MACHINE.env[MACHINE.env.length - 1 - 0][33] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6283 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6283;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6285, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry181, 5, [MACHINE.env[MACHINE.env.length - 1 - 0]], "check-fold");
MACHINE.env[MACHINE.env.length - 1 - 0][25] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6270 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6270;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6272, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry173, 2, [MACHINE.env[MACHINE.env.length - 1 - 1]], "assq");
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry174, 2, [MACHINE.env[MACHINE.env.length - 1 - 2]], "assv");
MACHINE.env.push(undefined);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry176, 2, [MACHINE.env[MACHINE.env.length - 1 - 5]], "...private/list.rkt:186:13");
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry177, 3, [MACHINE.env[MACHINE.env.length - 1 - 5]], "...private/list.rkt:187:13");
MACHINE.env[MACHINE.env.length - 1 - 2] = new RUNTIME.Closure(_lamEntry175, RUNTIME.makePair(2, RUNTIME.makePair(3, RUNTIME.NULL)), [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "assoc");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry178, 2, [MACHINE.env[MACHINE.env.length - 1 - 4]], "assf");
MACHINE.env.push(undefined, undefined, undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.primitives["values"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 7];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 6];
MACHINE.env[MACHINE.env.length - 1 - 2] = MACHINE.env[MACHINE.env.length - 1 - 5];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 4];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env[MACHINE.env.length - 1 - 3] = MACHINE.val;
MACHINE.argcount = 4;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.argcount = 1;
RUNTIME.raiseContextExpectedValuesError(MACHINE, 4);
return (_afterLetBody6276)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6280, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPop6297 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6297;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["whalesong/lang/private/list.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6289 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6289;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6291, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry190, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "filter");
MACHINE.env[MACHINE.env.length - 1 - 0][31] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6272 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6272;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6283, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry179, 3, [], "mapadd");
MACHINE.env[MACHINE.env.length - 1 - 0][24] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _start6298 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6298;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt2455, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["whalesong/lang/private/list.rkt"]=new RUNTIME.ModuleRecord("list", _moduleEntry6211);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6293 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6293;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6295, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry192, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "build-string");
MACHINE.env[MACHINE.env.length - 1 - 0][37] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6285 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6285;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6287, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = new RUNTIME.Closure(_lamEntry183, 3, [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:239:4");
MACHINE.env[MACHINE.env.length - 1 - 1] = new RUNTIME.Closure(_lamEntry185, (RUNTIME.makeArityAtLeast(3)), [MACHINE.env[MACHINE.env.length - 1 - 2]], "...private/list.rkt:243:4");
MACHINE.val = new RUNTIME.Closure(_lamEntry182, RUNTIME.makePair(3, RUNTIME.makePair((RUNTIME.makeArityAtLeast(3)), RUNTIME.NULL)), [MACHINE.env[MACHINE.env.length - 1 - 1], MACHINE.env[MACHINE.env.length - 1 - 0]], "foldl");
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env[MACHINE.env.length - 1 - 0][28] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPop6268 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6268;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6270, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry172, 3, [MACHINE.env[MACHINE.env.length - 1 - 0]], "bad-item");
MACHINE.env[MACHINE.env.length - 1 - 0][17] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

_procReturn2461.multipleValueReturn = _procReturnMultiple2460;
_procReturn2465.multipleValueReturn = _procReturnMultiple2464;
_procReturn2473.multipleValueReturn = _procReturnMultiple2472;
_procReturn2477.multipleValueReturn = _procReturnMultiple2476;
_procReturn2485.multipleValueReturn = _procReturnMultiple2484;
_procReturn2489.multipleValueReturn = _procReturnMultiple2488;
_procReturn2497.multipleValueReturn = _procReturnMultiple2496;
_procReturn2501.multipleValueReturn = _procReturnMultiple2500;
_procReturn2505.multipleValueReturn = _procReturnMultiple2504;
_procReturn2511.multipleValueReturn = _procReturnMultiple2510;
_procReturn2515.multipleValueReturn = _procReturnMultiple2514;
_procReturn2522.multipleValueReturn = _procReturnMultiple2521;
_procReturn2526.multipleValueReturn = _procReturnMultiple2525;
_procReturn2533.multipleValueReturn = _procReturnMultiple2532;
_procReturn2537.multipleValueReturn = _procReturnMultiple2536;
_procReturn2544.multipleValueReturn = _procReturnMultiple2543;
_procReturn2548.multipleValueReturn = _procReturnMultiple2547;
_procReturn2558.multipleValueReturn = _procReturnMultiple2557;
_procReturn2562.multipleValueReturn = _procReturnMultiple2561;
_procReturn2569.multipleValueReturn = _procReturnMultiple2568;
_procReturn2573.multipleValueReturn = _procReturnMultiple2572;
_procReturn2580.multipleValueReturn = _procReturnMultiple2579;
_procReturn2584.multipleValueReturn = _procReturnMultiple2583;
_procReturn2591.multipleValueReturn = _procReturnMultiple2590;
_procReturn2595.multipleValueReturn = _procReturnMultiple2594;
_procReturn2612.multipleValueReturn = _procReturnMultiple2611;
_procReturn2626.multipleValueReturn = _procReturnMultiple2625;
_procReturn2640.multipleValueReturn = _procReturnMultiple2639;
_procReturn2653.multipleValueReturn = _procReturnMultiple2652;
_procReturn2665.multipleValueReturn = _procReturnMultiple2664;
_procReturn2671.multipleValueReturn = _procReturnMultiple2670;
_procReturn2675.multipleValueReturn = _procReturnMultiple2674;
_procReturn2685.multipleValueReturn = _procReturnMultiple2684;
_procReturn2691.multipleValueReturn = _procReturnMultiple2690;
_procReturn2695.multipleValueReturn = _procReturnMultiple2694;
_procReturn2705.multipleValueReturn = _procReturnMultiple2704;
_procReturn2711.multipleValueReturn = _procReturnMultiple2710;
_procReturn2715.multipleValueReturn = _procReturnMultiple2714;
_procReturn2725.multipleValueReturn = _procReturnMultiple2724;
_procReturn2732.multipleValueReturn = _procReturnMultiple2731;
_procReturn2739.multipleValueReturn = _procReturnMultiple2738;
_procReturn2743.multipleValueReturn = _procReturnMultiple2742;
_procReturn2747.multipleValueReturn = _procReturnMultiple2746;
_procReturn2751.multipleValueReturn = _procReturnMultiple2750;
_procReturn2755.multipleValueReturn = _procReturnMultiple2754;
_procReturn2759.multipleValueReturn = _procReturnMultiple2758;
_procReturn2774.multipleValueReturn = _procReturnMultiple2773;
_procReturn2793.multipleValueReturn = _procReturnMultiple2792;
_procReturn2801.multipleValueReturn = _procReturnMultiple2800;
_procReturn2807.multipleValueReturn = _procReturnMultiple2806;
_procReturn2811.multipleValueReturn = _procReturnMultiple2810;
_procReturn2821.multipleValueReturn = _procReturnMultiple2820;
_procReturn2827.multipleValueReturn = _procReturnMultiple2826;
_procReturn2831.multipleValueReturn = _procReturnMultiple2830;
_procReturn2841.multipleValueReturn = _procReturnMultiple2840;
_procReturn2847.multipleValueReturn = _procReturnMultiple2846;
_procReturn2851.multipleValueReturn = _procReturnMultiple2850;
_procReturn2861.multipleValueReturn = _procReturnMultiple2860;
_procReturn2865.multipleValueReturn = _procReturnMultiple2864;
_procReturn2870.multipleValueReturn = _procReturnMultiple2869;
_procReturn2877.multipleValueReturn = _procReturnMultiple2876;
_procReturn2881.multipleValueReturn = _procReturnMultiple2880;
_procReturn2886.multipleValueReturn = _procReturnMultiple2885;
_procReturn2893.multipleValueReturn = _procReturnMultiple2892;
_procReturn2897.multipleValueReturn = _procReturnMultiple2896;
_procReturn2902.multipleValueReturn = _procReturnMultiple2901;
_procReturn2909.multipleValueReturn = _procReturnMultiple2908;
_procReturn2913.multipleValueReturn = _procReturnMultiple2912;
_procReturn2917.multipleValueReturn = _procReturnMultiple2916;
_procReturn2929.multipleValueReturn = _procReturnMultiple2928;
_procReturn2935.multipleValueReturn = _procReturnMultiple2934;
_procReturn2939.multipleValueReturn = _procReturnMultiple2938;
_procReturn2949.multipleValueReturn = _procReturnMultiple2948;
_procReturn2955.multipleValueReturn = _procReturnMultiple2954;
_procReturn2959.multipleValueReturn = _procReturnMultiple2958;
_procReturn2969.multipleValueReturn = _procReturnMultiple2968;
_procReturn2975.multipleValueReturn = _procReturnMultiple2974;
_procReturn2979.multipleValueReturn = _procReturnMultiple2978;
_procReturn2989.multipleValueReturn = _procReturnMultiple2988;
_procReturn2998.multipleValueReturn = _procReturnMultiple2997;
_procReturn3003.multipleValueReturn = _procReturnMultiple3002;
_procReturn3007.multipleValueReturn = _procReturnMultiple3006;
_procReturn3014.multipleValueReturn = _procReturnMultiple3013;
_procReturn3023.multipleValueReturn = _procReturnMultiple3022;
_procReturn3028.multipleValueReturn = _procReturnMultiple3027;
_procReturn3032.multipleValueReturn = _procReturnMultiple3031;
_procReturn3037.multipleValueReturn = _procReturnMultiple3036;
_procReturn3050.multipleValueReturn = _procReturnMultiple3049;
_procReturn3059.multipleValueReturn = _procReturnMultiple3058;
_procReturn3064.multipleValueReturn = _procReturnMultiple3063;
_procReturn3068.multipleValueReturn = _procReturnMultiple3067;
_procReturn3075.multipleValueReturn = _procReturnMultiple3074;
_procReturn3084.multipleValueReturn = _procReturnMultiple3083;
_procReturn3089.multipleValueReturn = _procReturnMultiple3088;
_procReturn3093.multipleValueReturn = _procReturnMultiple3092;
_procReturn3098.multipleValueReturn = _procReturnMultiple3097;
_procReturn3155.multipleValueReturn = _procReturnMultiple3154;
_procReturn3164.multipleValueReturn = _procReturnMultiple3163;
_procReturn3168.multipleValueReturn = _procReturnMultiple3167;
_procReturn3172.multipleValueReturn = _procReturnMultiple3171;
_procReturn3179.multipleValueReturn = _procReturnMultiple3178;
_procReturn3188.multipleValueReturn = _procReturnMultiple3187;
_procReturn3192.multipleValueReturn = _procReturnMultiple3191;
_procReturn3196.multipleValueReturn = _procReturnMultiple3195;
_procReturn3201.multipleValueReturn = _procReturnMultiple3200;
_procReturn3214.multipleValueReturn = _procReturnMultiple3213;
_procReturn3223.multipleValueReturn = _procReturnMultiple3222;
_procReturn3227.multipleValueReturn = _procReturnMultiple3226;
_procReturn3231.multipleValueReturn = _procReturnMultiple3230;
_procReturn3238.multipleValueReturn = _procReturnMultiple3237;
_procReturn3247.multipleValueReturn = _procReturnMultiple3246;
_procReturn3251.multipleValueReturn = _procReturnMultiple3250;
_procReturn3255.multipleValueReturn = _procReturnMultiple3254;
_procReturn3260.multipleValueReturn = _procReturnMultiple3259;
_procReturn3317.multipleValueReturn = _procReturnMultiple3316;
_procReturn3326.multipleValueReturn = _procReturnMultiple3325;
_procReturn3330.multipleValueReturn = _procReturnMultiple3329;
_procReturn3334.multipleValueReturn = _procReturnMultiple3333;
_procReturn3341.multipleValueReturn = _procReturnMultiple3340;
_procReturn3350.multipleValueReturn = _procReturnMultiple3349;
_procReturn3354.multipleValueReturn = _procReturnMultiple3353;
_procReturn3358.multipleValueReturn = _procReturnMultiple3357;
_procReturn3363.multipleValueReturn = _procReturnMultiple3362;
_procReturn3376.multipleValueReturn = _procReturnMultiple3375;
_procReturn3385.multipleValueReturn = _procReturnMultiple3384;
_procReturn3389.multipleValueReturn = _procReturnMultiple3388;
_procReturn3393.multipleValueReturn = _procReturnMultiple3392;
_procReturn3400.multipleValueReturn = _procReturnMultiple3399;
_procReturn3409.multipleValueReturn = _procReturnMultiple3408;
_procReturn3413.multipleValueReturn = _procReturnMultiple3412;
_procReturn3417.multipleValueReturn = _procReturnMultiple3416;
_procReturn3422.multipleValueReturn = _procReturnMultiple3421;
_procReturn3479.multipleValueReturn = _procReturnMultiple3478;
_procReturn3488.multipleValueReturn = _procReturnMultiple3487;
_procReturn3492.multipleValueReturn = _procReturnMultiple3491;
_procReturn3496.multipleValueReturn = _procReturnMultiple3495;
_procReturn3503.multipleValueReturn = _procReturnMultiple3502;
_procReturn3512.multipleValueReturn = _procReturnMultiple3511;
_procReturn3516.multipleValueReturn = _procReturnMultiple3515;
_procReturn3520.multipleValueReturn = _procReturnMultiple3519;
_procReturn3525.multipleValueReturn = _procReturnMultiple3524;
_procReturn3538.multipleValueReturn = _procReturnMultiple3537;
_procReturn3547.multipleValueReturn = _procReturnMultiple3546;
_procReturn3551.multipleValueReturn = _procReturnMultiple3550;
_procReturn3555.multipleValueReturn = _procReturnMultiple3554;
_procReturn3562.multipleValueReturn = _procReturnMultiple3561;
_procReturn3571.multipleValueReturn = _procReturnMultiple3570;
_procReturn3575.multipleValueReturn = _procReturnMultiple3574;
_procReturn3579.multipleValueReturn = _procReturnMultiple3578;
_procReturn3584.multipleValueReturn = _procReturnMultiple3583;
_procReturn3641.multipleValueReturn = _procReturnMultiple3640;
_procReturn3650.multipleValueReturn = _procReturnMultiple3649;
_procReturn3654.multipleValueReturn = _procReturnMultiple3653;
_procReturn3661.multipleValueReturn = _procReturnMultiple3660;
_procReturn3670.multipleValueReturn = _procReturnMultiple3669;
_procReturn3674.multipleValueReturn = _procReturnMultiple3673;
_procReturn3679.multipleValueReturn = _procReturnMultiple3678;
_procReturn3692.multipleValueReturn = _procReturnMultiple3691;
_procReturn3701.multipleValueReturn = _procReturnMultiple3700;
_procReturn3705.multipleValueReturn = _procReturnMultiple3704;
_procReturn3712.multipleValueReturn = _procReturnMultiple3711;
_procReturn3721.multipleValueReturn = _procReturnMultiple3720;
_procReturn3725.multipleValueReturn = _procReturnMultiple3724;
_procReturn3730.multipleValueReturn = _procReturnMultiple3729;
_procReturn3792.multipleValueReturn = _procReturnMultiple3791;
_procReturn3804.multipleValueReturn = _procReturnMultiple3803;
_procReturn3816.multipleValueReturn = _procReturnMultiple3815;
_procReturn3842.multipleValueReturn = _procReturnMultiple3841;
_procReturn3853.multipleValueReturn = _procReturnMultiple3852;
_procReturn3864.multipleValueReturn = _procReturnMultiple3863;
_procReturn3875.multipleValueReturn = _procReturnMultiple3874;
_procReturn3901.multipleValueReturn = _procReturnMultiple3900;
_procReturn3909.multipleValueReturn = _procReturnMultiple3908;
_procReturn3918.multipleValueReturn = _procReturnMultiple3917;
_procReturn3927.multipleValueReturn = _procReturnMultiple3926;
_procReturn3936.multipleValueReturn = _procReturnMultiple3935;
_procReturn3939.multipleValueReturn = _procReturnMultiple3938;
_procReturn3947.multipleValueReturn = _procReturnMultiple3946;
_procReturn3956.multipleValueReturn = _procReturnMultiple3955;
_procReturn3965.multipleValueReturn = _procReturnMultiple3964;
_procReturn3974.multipleValueReturn = _procReturnMultiple3973;
_procReturn3978.multipleValueReturn = _procReturnMultiple3977;
_procReturn3987.multipleValueReturn = _procReturnMultiple3986;
_procReturn3995.multipleValueReturn = _procReturnMultiple3994;
_procReturn4004.multipleValueReturn = _procReturnMultiple4003;
_procReturn4013.multipleValueReturn = _procReturnMultiple4012;
_procReturn4022.multipleValueReturn = _procReturnMultiple4021;
_procReturn4025.multipleValueReturn = _procReturnMultiple4024;
_procReturn4033.multipleValueReturn = _procReturnMultiple4032;
_procReturn4042.multipleValueReturn = _procReturnMultiple4041;
_procReturn4051.multipleValueReturn = _procReturnMultiple4050;
_procReturn4060.multipleValueReturn = _procReturnMultiple4059;
_procReturn4064.multipleValueReturn = _procReturnMultiple4063;
_procReturn4072.multipleValueReturn = _procReturnMultiple4071;
_procReturn4076.multipleValueReturn = _procReturnMultiple4075;
_procReturn4080.multipleValueReturn = _procReturnMultiple4079;
_procReturn4086.multipleValueReturn = _procReturnMultiple4085;
_procReturn4094.multipleValueReturn = _procReturnMultiple4093;
_procReturn4103.multipleValueReturn = _procReturnMultiple4102;
_procReturn4112.multipleValueReturn = _procReturnMultiple4111;
_procReturn4121.multipleValueReturn = _procReturnMultiple4120;
_procReturn4124.multipleValueReturn = _procReturnMultiple4123;
_procReturn4132.multipleValueReturn = _procReturnMultiple4131;
_procReturn4141.multipleValueReturn = _procReturnMultiple4140;
_procReturn4150.multipleValueReturn = _procReturnMultiple4149;
_procReturn4159.multipleValueReturn = _procReturnMultiple4158;
_procReturn4163.multipleValueReturn = _procReturnMultiple4162;
_procReturn4169.multipleValueReturn = _procReturnMultiple4168;
_procReturn4191.multipleValueReturn = _procReturnMultiple4190;
_procReturn4214.multipleValueReturn = _procReturnMultiple4213;
_procReturn4221.multipleValueReturn = _procReturnMultiple4220;
_procReturn4229.multipleValueReturn = _procReturnMultiple4228;
_procReturn4238.multipleValueReturn = _procReturnMultiple4237;
_procReturn4247.multipleValueReturn = _procReturnMultiple4246;
_procReturn4256.multipleValueReturn = _procReturnMultiple4255;
_procReturn4259.multipleValueReturn = _procReturnMultiple4258;
_procReturn4267.multipleValueReturn = _procReturnMultiple4266;
_procReturn4276.multipleValueReturn = _procReturnMultiple4275;
_procReturn4285.multipleValueReturn = _procReturnMultiple4284;
_procReturn4294.multipleValueReturn = _procReturnMultiple4293;
_procReturn4298.multipleValueReturn = _procReturnMultiple4297;
_procReturn4304.multipleValueReturn = _procReturnMultiple4303;
_procReturn4310.multipleValueReturn = _procReturnMultiple4309;
_procReturn4325.multipleValueReturn = _procReturnMultiple4324;
_procReturn4331.multipleValueReturn = _procReturnMultiple4330;
_procReturn4345.multipleValueReturn = _procReturnMultiple4344;
_procReturn4351.multipleValueReturn = _procReturnMultiple4350;
_procReturn4364.multipleValueReturn = _procReturnMultiple4363;
_procReturn4370.multipleValueReturn = _procReturnMultiple4369;
_procReturn4390.multipleValueReturn = _procReturnMultiple4389;
_procReturn4396.multipleValueReturn = _procReturnMultiple4395;
_procReturn4410.multipleValueReturn = _procReturnMultiple4409;
_procReturn4416.multipleValueReturn = _procReturnMultiple4415;
_procReturn4429.multipleValueReturn = _procReturnMultiple4428;
_procReturn4435.multipleValueReturn = _procReturnMultiple4434;
_procReturn4449.multipleValueReturn = _procReturnMultiple4448;
_procReturn4455.multipleValueReturn = _procReturnMultiple4454;
_procReturn4472.multipleValueReturn = _procReturnMultiple4471;
_procReturn4478.multipleValueReturn = _procReturnMultiple4477;
_procReturn4495.multipleValueReturn = _procReturnMultiple4494;
_procReturn4501.multipleValueReturn = _procReturnMultiple4500;
_procReturn4515.multipleValueReturn = _procReturnMultiple4514;
_procReturn4521.multipleValueReturn = _procReturnMultiple4520;
_procReturn4538.multipleValueReturn = _procReturnMultiple4537;
_procReturn4544.multipleValueReturn = _procReturnMultiple4543;
_procReturn4558.multipleValueReturn = _procReturnMultiple4557;
_procReturn4564.multipleValueReturn = _procReturnMultiple4563;
_procReturn4578.multipleValueReturn = _procReturnMultiple4577;
_procReturn4584.multipleValueReturn = _procReturnMultiple4583;
_procReturn4598.multipleValueReturn = _procReturnMultiple4597;
_procReturn4604.multipleValueReturn = _procReturnMultiple4603;
_procReturn4621.multipleValueReturn = _procReturnMultiple4620;
_procReturn4627.multipleValueReturn = _procReturnMultiple4626;
_procReturn4641.multipleValueReturn = _procReturnMultiple4640;
_procReturn4647.multipleValueReturn = _procReturnMultiple4646;
_procReturn4661.multipleValueReturn = _procReturnMultiple4660;
_procReturn4667.multipleValueReturn = _procReturnMultiple4666;
_procReturn4681.multipleValueReturn = _procReturnMultiple4680;
_procReturn4687.multipleValueReturn = _procReturnMultiple4686;
_procReturn4701.multipleValueReturn = _procReturnMultiple4700;
_procReturn4707.multipleValueReturn = _procReturnMultiple4706;
_procReturn4721.multipleValueReturn = _procReturnMultiple4720;
_procReturn4727.multipleValueReturn = _procReturnMultiple4726;
_procReturn4741.multipleValueReturn = _procReturnMultiple4740;
_procReturn4747.multipleValueReturn = _procReturnMultiple4746;
_procReturn4764.multipleValueReturn = _procReturnMultiple4763;
_procReturn4770.multipleValueReturn = _procReturnMultiple4769;
_procReturn4788.multipleValueReturn = _procReturnMultiple4787;
_procReturn4794.multipleValueReturn = _procReturnMultiple4793;
_procReturn4808.multipleValueReturn = _procReturnMultiple4807;
_procReturn4814.multipleValueReturn = _procReturnMultiple4813;
_procReturn4828.multipleValueReturn = _procReturnMultiple4827;
_procReturn4834.multipleValueReturn = _procReturnMultiple4833;
_procReturn4848.multipleValueReturn = _procReturnMultiple4847;
_procReturn4854.multipleValueReturn = _procReturnMultiple4853;
_procReturn4870.multipleValueReturn = _procReturnMultiple4869;
_procReturn4874.multipleValueReturn = _procReturnMultiple4873;
_procReturn4878.multipleValueReturn = _procReturnMultiple4877;
_procReturn4884.multipleValueReturn = _procReturnMultiple4883;
_procReturn4890.multipleValueReturn = _procReturnMultiple4889;
_procReturn4908.multipleValueReturn = _procReturnMultiple4907;
_procReturn4914.multipleValueReturn = _procReturnMultiple4913;
_procReturn4928.multipleValueReturn = _procReturnMultiple4927;
_procReturn4934.multipleValueReturn = _procReturnMultiple4933;
_procReturn4948.multipleValueReturn = _procReturnMultiple4947;
_procReturn4954.multipleValueReturn = _procReturnMultiple4953;
_procReturn4968.multipleValueReturn = _procReturnMultiple4967;
_procReturn4974.multipleValueReturn = _procReturnMultiple4973;
_procReturn4988.multipleValueReturn = _procReturnMultiple4987;
_procReturn4994.multipleValueReturn = _procReturnMultiple4993;
_procReturn5012.multipleValueReturn = _procReturnMultiple5011;
_procReturn5028.multipleValueReturn = _procReturnMultiple5027;
_procReturn5044.multipleValueReturn = _procReturnMultiple5043;
_procReturn5060.multipleValueReturn = _procReturnMultiple5059;
_procReturn5077.multipleValueReturn = _procReturnMultiple5076;
_procReturn5083.multipleValueReturn = _procReturnMultiple5082;
_procReturn5101.multipleValueReturn = _procReturnMultiple5100;
_procReturn5107.multipleValueReturn = _procReturnMultiple5106;
_procReturn5121.multipleValueReturn = _procReturnMultiple5120;
_procReturn5127.multipleValueReturn = _procReturnMultiple5126;
_procReturn5141.multipleValueReturn = _procReturnMultiple5140;
_procReturn5147.multipleValueReturn = _procReturnMultiple5146;
_procReturn5161.multipleValueReturn = _procReturnMultiple5160;
_procReturn5167.multipleValueReturn = _procReturnMultiple5166;
_procReturn5183.multipleValueReturn = _procReturnMultiple5182;
_procReturn5187.multipleValueReturn = _procReturnMultiple5186;
_procReturn5191.multipleValueReturn = _procReturnMultiple5190;
_procReturn5201.multipleValueReturn = _procReturnMultiple5200;
_procReturn5212.multipleValueReturn = _procReturnMultiple5211;
_procReturn5223.multipleValueReturn = _procReturnMultiple5222;
_procReturn5234.multipleValueReturn = _procReturnMultiple5233;
_procReturn5262.multipleValueReturn = _procReturnMultiple5261;
_procReturn5266.multipleValueReturn = _procReturnMultiple5265;
_procReturn5270.multipleValueReturn = _procReturnMultiple5269;
_procReturn5281.multipleValueReturn = _procReturnMultiple5280;
_procReturn5293.multipleValueReturn = _procReturnMultiple5292;
_procReturn5305.multipleValueReturn = _procReturnMultiple5304;
_procReturn5351.multipleValueReturn = _procReturnMultiple5350;
_procReturn5355.multipleValueReturn = _procReturnMultiple5354;
_procReturn5359.multipleValueReturn = _procReturnMultiple5358;
_procReturn5371.multipleValueReturn = _procReturnMultiple5370;
_procReturn5375.multipleValueReturn = _procReturnMultiple5374;
_procReturn5379.multipleValueReturn = _procReturnMultiple5378;
_procReturn5389.multipleValueReturn = _procReturnMultiple5388;
_procReturn5396.multipleValueReturn = _procReturnMultiple5395;
_procReturn5403.multipleValueReturn = _procReturnMultiple5402;
_procReturn5410.multipleValueReturn = _procReturnMultiple5409;
_procReturn5413.multipleValueReturn = _procReturnMultiple5412;
_procReturn5419.multipleValueReturn = _procReturnMultiple5418;
_procReturn5426.multipleValueReturn = _procReturnMultiple5425;
_procReturn5433.multipleValueReturn = _procReturnMultiple5432;
_procReturn5440.multipleValueReturn = _procReturnMultiple5439;
_procReturn5444.multipleValueReturn = _procReturnMultiple5443;
_procReturn5450.multipleValueReturn = _procReturnMultiple5449;
_procReturn5454.multipleValueReturn = _procReturnMultiple5453;
_procReturn5460.multipleValueReturn = _procReturnMultiple5459;
_procReturn5468.multipleValueReturn = _procReturnMultiple5467;
_procReturn5476.multipleValueReturn = _procReturnMultiple5475;
_procReturn5481.multipleValueReturn = _procReturnMultiple5480;
_procReturn5487.multipleValueReturn = _procReturnMultiple5486;
_procReturn5491.multipleValueReturn = _procReturnMultiple5490;
_procReturn5495.multipleValueReturn = _procReturnMultiple5494;
_procReturn5499.multipleValueReturn = _procReturnMultiple5498;
_procReturn5511.multipleValueReturn = _procReturnMultiple5510;
_procReturn5515.multipleValueReturn = _procReturnMultiple5514;
_procReturn5521.multipleValueReturn = _procReturnMultiple5520;
_procReturn5527.multipleValueReturn = _procReturnMultiple5526;
_procReturn5531.multipleValueReturn = _procReturnMultiple5530;
_procReturn5537.multipleValueReturn = _procReturnMultiple5536;
_procReturn5545.multipleValueReturn = _procReturnMultiple5544;
_procReturn5553.multipleValueReturn = _procReturnMultiple5552;
_procReturn5561.multipleValueReturn = _procReturnMultiple5560;
_procReturn5569.multipleValueReturn = _procReturnMultiple5568;
_procReturn5578.multipleValueReturn = _procReturnMultiple5577;
_procReturn5586.multipleValueReturn = _procReturnMultiple5585;
_procReturn5594.multipleValueReturn = _procReturnMultiple5593;
_procReturn5602.multipleValueReturn = _procReturnMultiple5601;
_procReturn5610.multipleValueReturn = _procReturnMultiple5609;
_procReturn5620.multipleValueReturn = _procReturnMultiple5619;
_procReturn5624.multipleValueReturn = _procReturnMultiple5623;
_procReturn5630.multipleValueReturn = _procReturnMultiple5629;
_procReturn5638.multipleValueReturn = _procReturnMultiple5637;
_procReturn5642.multipleValueReturn = _procReturnMultiple5641;
_procReturn5646.multipleValueReturn = _procReturnMultiple5645;
_procReturn5651.multipleValueReturn = _procReturnMultiple5650;
_procReturn5657.multipleValueReturn = _procReturnMultiple5656;
_procReturn5661.multipleValueReturn = _procReturnMultiple5660;
_procReturn5665.multipleValueReturn = _procReturnMultiple5664;
_procReturn5669.multipleValueReturn = _procReturnMultiple5668;
_procReturn5673.multipleValueReturn = _procReturnMultiple5672;
_procReturn5680.multipleValueReturn = _procReturnMultiple5679;
_procReturn5684.multipleValueReturn = _procReturnMultiple5683;
_procReturn5689.multipleValueReturn = _procReturnMultiple5688;
_procReturn5696.multipleValueReturn = _procReturnMultiple5695;
_procReturn5700.multipleValueReturn = _procReturnMultiple5699;
_procReturn5705.multipleValueReturn = _procReturnMultiple5704;
_procReturn5712.multipleValueReturn = _procReturnMultiple5711;
_procReturn5716.multipleValueReturn = _procReturnMultiple5715;
_procReturn5721.multipleValueReturn = _procReturnMultiple5720;
_procReturn5728.multipleValueReturn = _procReturnMultiple5727;
_procReturn5732.multipleValueReturn = _procReturnMultiple5731;
_procReturn5736.multipleValueReturn = _procReturnMultiple5735;
_procReturn5748.multipleValueReturn = _procReturnMultiple5747;
_procReturn5752.multipleValueReturn = _procReturnMultiple5751;
_procReturn5758.multipleValueReturn = _procReturnMultiple5757;
_procReturn5764.multipleValueReturn = _procReturnMultiple5763;
_procReturn5768.multipleValueReturn = _procReturnMultiple5767;
_procReturn5785.multipleValueReturn = _procReturnMultiple5784;
_procReturn5789.multipleValueReturn = _procReturnMultiple5788;
_procReturn5793.multipleValueReturn = _procReturnMultiple5792;
_procReturn5797.multipleValueReturn = _procReturnMultiple5796;
_procReturn5801.multipleValueReturn = _procReturnMultiple5800;
_procReturn5823.multipleValueReturn = _procReturnMultiple5822;
_procReturn5827.multipleValueReturn = _procReturnMultiple5826;
_procReturn5831.multipleValueReturn = _procReturnMultiple5830;
_procReturn5835.multipleValueReturn = _procReturnMultiple5834;
_procReturn5839.multipleValueReturn = _procReturnMultiple5838;
_procReturn5849.multipleValueReturn = _procReturnMultiple5848;
_procReturn5853.multipleValueReturn = _procReturnMultiple5852;
_procReturn5859.multipleValueReturn = _procReturnMultiple5858;
_procReturn5867.multipleValueReturn = _procReturnMultiple5866;
_procReturn5871.multipleValueReturn = _procReturnMultiple5870;
_procReturn5875.multipleValueReturn = _procReturnMultiple5874;
_procReturn5880.multipleValueReturn = _procReturnMultiple5879;
_procReturn5886.multipleValueReturn = _procReturnMultiple5885;
_procReturn5890.multipleValueReturn = _procReturnMultiple5889;
_procReturn5894.multipleValueReturn = _procReturnMultiple5893;
_procReturn5898.multipleValueReturn = _procReturnMultiple5897;
_procReturn5902.multipleValueReturn = _procReturnMultiple5901;
_procReturn5914.multipleValueReturn = _procReturnMultiple5913;
_procReturn5918.multipleValueReturn = _procReturnMultiple5917;
_procReturn5922.multipleValueReturn = _procReturnMultiple5921;
_procReturn5928.multipleValueReturn = _procReturnMultiple5927;
_procReturn5941.multipleValueReturn = _procReturnMultiple5940;
_procReturn5955.multipleValueReturn = _procReturnMultiple5954;
_procReturn5969.multipleValueReturn = _procReturnMultiple5968;
_procReturn5982.multipleValueReturn = _procReturnMultiple5981;
_procReturn5992.multipleValueReturn = _procReturnMultiple5991;
_procReturn5996.multipleValueReturn = _procReturnMultiple5995;
_procReturn6004.multipleValueReturn = _procReturnMultiple6003;
_procReturn6008.multipleValueReturn = _procReturnMultiple6007;
_procReturn6012.multipleValueReturn = _procReturnMultiple6011;
_procReturn6016.multipleValueReturn = _procReturnMultiple6015;
_procReturn6023.multipleValueReturn = _procReturnMultiple6022;
_procReturn6027.multipleValueReturn = _procReturnMultiple6026;
_procReturn6033.multipleValueReturn = _procReturnMultiple6032;
_procReturn6037.multipleValueReturn = _procReturnMultiple6036;
_procReturn6043.multipleValueReturn = _procReturnMultiple6042;
_procReturn6047.multipleValueReturn = _procReturnMultiple6046;
_procReturn6053.multipleValueReturn = _procReturnMultiple6052;
_procReturn6057.multipleValueReturn = _procReturnMultiple6056;
_procReturn6067.multipleValueReturn = _procReturnMultiple6066;
_procReturn6071.multipleValueReturn = _procReturnMultiple6070;
_procReturn6079.multipleValueReturn = _procReturnMultiple6078;
_procReturn6083.multipleValueReturn = _procReturnMultiple6082;
_procReturn6087.multipleValueReturn = _procReturnMultiple6086;
_procReturn6091.multipleValueReturn = _procReturnMultiple6090;
_procReturn6098.multipleValueReturn = _procReturnMultiple6097;
_procReturn6102.multipleValueReturn = _procReturnMultiple6101;
_procReturn6108.multipleValueReturn = _procReturnMultiple6107;
_procReturn6112.multipleValueReturn = _procReturnMultiple6111;
_procReturn6118.multipleValueReturn = _procReturnMultiple6117;
_procReturn6122.multipleValueReturn = _procReturnMultiple6121;
_procReturn6128.multipleValueReturn = _procReturnMultiple6127;
_procReturn6132.multipleValueReturn = _procReturnMultiple6131;
_procReturn6142.multipleValueReturn = _procReturnMultiple6141;
_procReturn6146.multipleValueReturn = _procReturnMultiple6145;
_procReturn6154.multipleValueReturn = _procReturnMultiple6153;
_procReturn6158.multipleValueReturn = _procReturnMultiple6157;
_procReturn6162.multipleValueReturn = _procReturnMultiple6161;
_procReturn6168.multipleValueReturn = _procReturnMultiple6167;
_procReturn6172.multipleValueReturn = _procReturnMultiple6171;
_procReturn6179.multipleValueReturn = _procReturnMultiple6178;
_procReturn6183.multipleValueReturn = _procReturnMultiple6182;
_procReturn6190.multipleValueReturn = _procReturnMultiple6189;
_procReturn6194.multipleValueReturn = _procReturnMultiple6193;
_procReturn6201.multipleValueReturn = _procReturnMultiple6200;
_procReturn6205.multipleValueReturn = _procReturnMultiple6204;
_procReturn6209.multipleValueReturn = _procReturnMultiple6208;
_onReturn6214.multipleValueReturn = _onReturnMultiple6213;
_beforePromptPop6216.multipleValueReturn = _beforePromptPopMultiple6215;
_beforePromptPop6218.multipleValueReturn = _beforePromptPopMultiple6217;
_beforePromptPop6220.multipleValueReturn = _beforePromptPopMultiple6219;
_beforePromptPop6222.multipleValueReturn = _beforePromptPopMultiple6221;
_beforePromptPop6224.multipleValueReturn = _beforePromptPopMultiple6223;
_beforePromptPop6226.multipleValueReturn = _beforePromptPopMultiple6225;
_beforePromptPop6228.multipleValueReturn = _beforePromptPopMultiple6227;
_beforePromptPop6230.multipleValueReturn = _beforePromptPopMultiple6229;
_beforePromptPop6232.multipleValueReturn = _beforePromptPopMultiple6231;
_beforePromptPop6234.multipleValueReturn = _beforePromptPopMultiple6233;
_beforePromptPop6236.multipleValueReturn = _beforePromptPopMultiple6235;
_beforePromptPop6238.multipleValueReturn = _beforePromptPopMultiple6237;
_beforePromptPop6240.multipleValueReturn = _beforePromptPopMultiple6239;
_beforePromptPop6242.multipleValueReturn = _beforePromptPopMultiple6241;
_beforePromptPop6244.multipleValueReturn = _beforePromptPopMultiple6243;
_beforePromptPop6246.multipleValueReturn = _beforePromptPopMultiple6245;
_beforePromptPop6248.multipleValueReturn = _beforePromptPopMultiple6247;
_beforePromptPop6250.multipleValueReturn = _beforePromptPopMultiple6249;
_beforePromptPop6252.multipleValueReturn = _beforePromptPopMultiple6251;
_beforePromptPop6254.multipleValueReturn = _beforePromptPopMultiple6253;
_beforePromptPop6256.multipleValueReturn = _beforePromptPopMultiple6255;
_beforePromptPop6258.multipleValueReturn = _beforePromptPopMultiple6257;
_beforePromptPop6260.multipleValueReturn = _beforePromptPopMultiple6259;
_beforePromptPop6262.multipleValueReturn = _beforePromptPopMultiple6261;
_beforePromptPop6264.multipleValueReturn = _beforePromptPopMultiple6263;
_beforePromptPop6266.multipleValueReturn = _beforePromptPopMultiple6265;
_beforePromptPop6268.multipleValueReturn = _beforePromptPopMultiple6267;
_beforePromptPop6270.multipleValueReturn = _beforePromptPopMultiple6269;
_procReturn6280.multipleValueReturn = _procReturnMultiple6279;
_beforePromptPop6272.multipleValueReturn = _beforePromptPopMultiple6271;
_beforePromptPop6283.multipleValueReturn = _beforePromptPopMultiple6282;
_beforePromptPop6285.multipleValueReturn = _beforePromptPopMultiple6284;
_beforePromptPop6287.multipleValueReturn = _beforePromptPopMultiple6286;
_beforePromptPop6289.multipleValueReturn = _beforePromptPopMultiple6288;
_beforePromptPop6291.multipleValueReturn = _beforePromptPopMultiple6290;
_beforePromptPop6293.multipleValueReturn = _beforePromptPopMultiple6292;
_beforePromptPop6295.multipleValueReturn = _beforePromptPopMultiple6294;
_beforePromptPop6297.multipleValueReturn = _beforePromptPopMultiple6296;
_beforePopPrompt2455.multipleValueReturn = _beforePopPromptMultiple2454;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6298); })(MACHINE, function() { 
MACHINE.modules["whalesong/lang/unsafe/ops.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/lang/unsafe/ops.rkt",
        function(MACHINE) {
            
             if(--MACHINE.callsBeforeTrampoline<0) { throw arguments.callee; }
             var modrec = MACHINE.modules["whalesong/lang/unsafe/ops.rkt"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, RUNTIME, EXPORTS){
EXPORTS['unsafe-car'] =
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-car',
        1,
        function(MACHINE) {
            return MACHINE.env[MACHINE.env.length - 1].first;
        });


EXPORTS['unsafe-cdr'] = 
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-cdr',
        1,
        function(MACHINE) {
            return MACHINE.env[MACHINE.env.length - 1].rest;
        });
})(MACHINE, plt.runtime, exports);
             modrec.namespace["unsafe-car1.1"] = exports["unsafe-car"];
modrec.namespace["unsafe-cdr2.2"] = exports["unsafe-cdr"];

             modrec.privateExports = exports;
             return MACHINE.control.pop().label(MACHINE);
        });
(function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _beforePopPrompt6301 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt6301;
    }
    
};

var _procReturn6309 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6309;
    }
    return (_afterCall6307)(MACHINE);
};

var _afterCall6303 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6303;
    }
    MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_afterCall6307)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6309, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _beforePromptPop6317 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6317;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["collects/racket/private/modbeg.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _procReturn6305 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6305;
    }
    MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6303)(MACHINE);
};

var _moduleEntry6315 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6315;
    }
    MACHINE.modules["collects/racket/private/modbeg.rkt"].isInvoked = true;
MACHINE.env.push([MACHINE.params.currentNamespace["print-values"] || MACHINE.primitives["print-values"]]);  MACHINE.env[MACHINE.env.length-1].names = ["print-values"];
MACHINE.modules["collects/racket/private/modbeg.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6317, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry194, (RUNTIME.makeArityAtLeast(0)), [], "print-values");
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall6307 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6307;
    }
    MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["apply"];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.primitives["values"];
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.env.splice(MACHINE.env.length - (2 + 1), 1);
MACHINE.control[MACHINE.control.length-1].proc = MACHINE.proc;
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturnMultiple6304 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6304;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6305)(MACHINE);
};

var _start6318 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6318;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt6301, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["collects/racket/private/modbeg.rkt"]=new RUNTIME.ModuleRecord("modbeg", _moduleEntry6315);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPopMultiple6316 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6316;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6317)(MACHINE);
};

var _beforePopPromptMultiple6300 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple6300;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt6301)(MACHINE);
};

var _procReturnMultiple6308 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6308;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_procReturn6309)(MACHINE);
};

var _lamEntry194 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry194;
    }
    MACHINE.unspliceRestFromStack(0, (MACHINE.argcount - 0));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.primitives["for-each"];
MACHINE.proc = MACHINE.primitives["current-print"];
MACHINE.argcount = 0;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
return (_afterCall6303)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6305, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

_procReturn6305.multipleValueReturn = _procReturnMultiple6304;
_procReturn6309.multipleValueReturn = _procReturnMultiple6308;
_beforePromptPop6317.multipleValueReturn = _beforePromptPopMultiple6316;
_beforePopPrompt6301.multipleValueReturn = _beforePopPromptMultiple6300;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6318); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _beforePopPrompt6321 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt6321;
    }
    
};

var _onReturn6326 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6326;
    }
    MACHINE.env.push([]);  MACHINE.env[MACHINE.env.length-1].names = [];
MACHINE.modules["root/lang/do.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["root/lang/do.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _onReturnMultiple6325 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6325;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6326)(MACHINE);
};

var _start6327 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6327;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt6321, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["root/lang/do.rkt"]=new RUNTIME.ModuleRecord("do", _moduleEntry6323);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _moduleEntry6323 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6323;
    }
    MACHINE.modules["root/lang/do.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn6326)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6326, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn6326)(MACHINE);
}
};

var _beforePopPromptMultiple6320 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple6320;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt6321)(MACHINE);
};

_onReturn6326.multipleValueReturn = _onReturnMultiple6325;
_beforePopPrompt6321.multipleValueReturn = _beforePopPromptMultiple6320;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6327); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _beforePromptPop6343 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6343;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["root/lang/char.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPopMultiple6342 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6342;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6343)(MACHINE);
};

var _beforePopPromptMultiple6329 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple6329;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt6330)(MACHINE);
};

var _lamEntry195 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry195;
    }
    MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (MACHINE.env[MACHINE.env.length - 1 - 1] === RUNTIME.makeChar(" "));
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
if (MACHINE.val === false)
{
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.makeChar("\n"));
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
if (MACHINE.val === false)
{
MACHINE.val = (MACHINE.env[MACHINE.env.length - 1 - 2] === RUNTIME.makeChar("\t"));
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _start6344 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6344;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt6330, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["root/lang/char.rkt"]=new RUNTIME.ModuleRecord("char", _moduleEntry6338);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt6330 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt6330;
    }
    
};

var _moduleEntry6338 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6338;
    }
    MACHINE.modules["root/lang/char.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn6341)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6341, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn6341)(MACHINE);
}
};

var _onReturnMultiple6340 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6340;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6341)(MACHINE);
};

var _onReturn6341 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6341;
    }
    MACHINE.env.push([MACHINE.params.currentNamespace["char-whitespace?"] || MACHINE.primitives["char-whitespace?"]]);  MACHINE.env[MACHINE.env.length-1].names = ["char-whitespace?"];
MACHINE.modules["root/lang/char.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6343, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry195, 1, [], "char-whitespace?");
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

_onReturn6341.multipleValueReturn = _onReturnMultiple6340;
_beforePromptPop6343.multipleValueReturn = _beforePromptPopMultiple6342;
_beforePopPrompt6330.multipleValueReturn = _beforePopPromptMultiple6329;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6344); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _lamEntry196 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry196;
    }
    MACHINE.val = ((plt.baselib.numbers.lessThan(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "<", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "<", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _start6361 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6361;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt6347, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["root/lang/primitives.rkt"]=new RUNTIME.ModuleRecord("primitives", _moduleEntry6353);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPopMultiple6359 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6359;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6360)(MACHINE);
};

var _onReturnMultiple6355 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6355;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6356)(MACHINE);
};

var _beforePromptPop6358 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6358;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6360, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry197, 2, [], "max");
MACHINE.env[MACHINE.env.length - 1 - 0][1] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPopMultiple6357 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6357;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6358)(MACHINE);
};

var _moduleEntry6353 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6353;
    }
    MACHINE.modules["root/lang/primitives.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn6356)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6356, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn6356)(MACHINE);
}
};

var _beforePopPromptMultiple6346 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple6346;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt6347)(MACHINE);
};

var _lamEntry197 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry197;
    }
    MACHINE.val = ((plt.baselib.numbers.greaterThan(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])))));
if (MACHINE.val === false)
{
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
} else {
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _beforePromptPop6360 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6360;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["root/lang/primitives.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt6347 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt6347;
    }
    
};

var _onReturn6356 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6356;
    }
    MACHINE.env.push([MACHINE.params.currentNamespace["min"] || MACHINE.primitives["min"],MACHINE.params.currentNamespace["max"] || MACHINE.primitives["max"]]);  MACHINE.env[MACHINE.env.length-1].names = ["min","max"];
MACHINE.modules["root/lang/primitives.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6358, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry196, 2, [], "min");
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

_onReturn6356.multipleValueReturn = _onReturnMultiple6355;
_beforePromptPop6358.multipleValueReturn = _beforePromptPopMultiple6357;
_beforePromptPop6360.multipleValueReturn = _beforePromptPopMultiple6359;
_beforePopPrompt6347.multipleValueReturn = _beforePopPromptMultiple6346;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6361); })(MACHINE, function() { (function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _beforePopPrompt6364 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt6364;
    }
    
};

var _onReturn6369 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6369;
    }
    if ((MACHINE.modules["whalesong/js/main.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/js/main.rkt"].isInvoked !== false)
{
return (_onReturn6372)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6372, MACHINE.proc));
return (MACHINE.modules["whalesong/js/main.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/js/main.rkt hasn't been linked in!!!"));
return (_onReturn6372)(MACHINE);
}
};

var _moduleEntry6366 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6366;
    }
    MACHINE.modules["whalesong/js.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn6369)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6369, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn6369)(MACHINE);
}
};

var _onReturn6372 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6372;
    }
    MACHINE.env.push([]);  MACHINE.env[MACHINE.env.length-1].names = [];
MACHINE.modules["whalesong/js.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["whalesong/js.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _onReturnMultiple6368 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6368;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6369)(MACHINE);
};

var _beforePopPromptMultiple6363 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple6363;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt6364)(MACHINE);
};

var _start6373 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6373;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt6364, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["whalesong/js.rkt"]=new RUNTIME.ModuleRecord("js", _moduleEntry6366);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _onReturnMultiple6371 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6371;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6372)(MACHINE);
};

_onReturn6369.multipleValueReturn = _onReturnMultiple6368;
_onReturn6372.multipleValueReturn = _onReturnMultiple6371;
_beforePopPrompt6364.multipleValueReturn = _beforePopPromptMultiple6363;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6373); })(MACHINE, function() { 
MACHINE.modules["whalesong/js/main.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/js/main.rkt",
        function(MACHINE) {
            
             if(--MACHINE.callsBeforeTrampoline<0) { throw arguments.callee; }
             var modrec = MACHINE.modules["whalesong/js/main.rkt"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, RUNTIME, EXPORTS){EXPORTS['alert'] =
    RUNTIME.makePrimitiveProcedure(
        'alert',
        1,
        function(MACHINE) {
            var elt = MACHINE.env[MACHINE.env.length - 1];
            alert(String(elt));
            return RUNTIME.VOID;
        });


EXPORTS['body'] = $(document.body);

EXPORTS['$'] =
    RUNTIME.makePrimitiveProcedure(
        '$',
        1,
        function(MACHINE) {
            var obj = MACHINE.env[MACHINE.env.length - 1];
            return $(obj);
        });

EXPORTS['call-method'] = 
    RUNTIME.makePrimitiveProcedure(
        'call-method',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
            var obj = MACHINE.env[MACHINE.env.length - 1];
            var methodName = MACHINE.env[MACHINE.env.length - 2];
            var args = [];
            for (var i = 0; i < MACHINE.argcount - 2; i++) {
                args.push(MACHINE.env[MACHINE.env.length -1 - 2 - i]);
            }
            var result = obj[methodName].apply(obj, args);
            return result;
        });




// Javascript-specific extensions.  A small experiment.
EXPORTS['viewport-width'] = 
    RUNTIME.makePrimitiveProcedure(
        'viewport-width',
        0,
        function(MACHINE) {
            return $(window).width();
        });

EXPORTS['viewport-height'] = 
    RUNTIME.makePrimitiveProcedure(
        'viewport-height',
        0,
        function(MACHINE) {
            return $(window).height();
        });


EXPORTS['in-javascript-context?'] =
    RUNTIME.makePrimitiveProcedure(
        'in-javascript-context?',
        0,
        function(MACHINE) {
            return true;
        });
})(MACHINE, plt.runtime, exports);
             modrec.namespace["$4.4"] = exports["$"];
modrec.namespace["alert1.1"] = exports["alert"];
modrec.namespace["body2.2"] = exports["body"];
modrec.namespace["call-method3.3"] = exports["call-method"];
modrec.namespace["in-javascript-context?7.7"] = exports["in-javascript-context?"];
modrec.namespace["viewport-height6.6"] = exports["viewport-height"];
modrec.namespace["viewport-width5.5"] = exports["viewport-width"];

             modrec.privateExports = exports;
             return MACHINE.control.pop().label(MACHINE);
        });
(function(MACHINE, success, fail, params) {
var param;
var RUNTIME = plt.runtime;
var _lamEntry198 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry198;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.val = ((plt.baselib.numbers.greaterThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 1])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 2])) ? (MACHINE.env[MACHINE.env.length - 1 - 2]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 2])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])), 1);
MACHINE.val = ((plt.baselib.numbers.greaterThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 5])) ? (MACHINE.env[MACHINE.env.length - 1 - 5]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 5])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.val = ((plt.baselib.numbers.greaterThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 8])) ? (MACHINE.env[MACHINE.env.length - 1 - 8]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 8])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.val = ((plt.baselib.numbers.greaterThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 11])) ? (MACHINE.env[MACHINE.env.length - 1 - 11]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 11])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 3])) ? (MACHINE.env[MACHINE.env.length - 1 - 3]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 3])), 1);
MACHINE.val = ((plt.baselib.numbers.greaterThanOrEqual(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])),((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 14])) ? (MACHINE.env[MACHINE.env.length - 1 - 14]) : RUNTIME.raiseArgumentTypeError(MACHINE, ">=", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 14])))));
if (MACHINE.val === false)
{
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 2];
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.env[MACHINE.env.length - 1 - 16][0];
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 4])) ? (MACHINE.env[MACHINE.env.length - 1 - 4]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 4])), 1);
MACHINE.val = MACHINE.env[MACHINE.env.length - 1 - 18];
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 1];
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
MACHINE.argcount = 2;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall6392)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6394, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.env[MACHINE.env.length - 1 - 2] = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
} else {
MACHINE.val = RUNTIME.NULL;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
}
};

var _onReturnMultiple6402 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturnMultiple6402;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_onReturn6403)(MACHINE);
};

var _moduleEntry6400 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _moduleEntry6400;
    }
    MACHINE.modules["root/utilities/random.rkt"].isInvoked = true;
if ((MACHINE.modules["whalesong/lang/base.rkt"] !== undefined) !== false)
{
if (MACHINE.modules["whalesong/lang/base.rkt"].isInvoked !== false)
{
return (_onReturn6403)(MACHINE);
} else {
MACHINE.control.push(new RUNTIME.CallFrame(_onReturn6403, MACHINE.proc));
return (MACHINE.modules["whalesong/lang/base.rkt"].label)(MACHINE);
}
} else {
MACHINE.params.currentOutputPort.writeDomNode(MACHINE, $('<span/>').text("DEBUG: the module whalesong/lang/base.rkt hasn't been linked in!!!"));
return (_onReturn6403)(MACHINE);
}
};

var _procReturnMultiple6397 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6397;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6398)(MACHINE);
};

var _start6408 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _start6408;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePopPrompt6376, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.env.push([false]);  MACHINE.env[MACHINE.env.length-1].names = [false];
MACHINE.modules["root/utilities/random.rkt"]=new RUNTIME.ModuleRecord("random", _moduleEntry6400);
MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _beforePromptPopMultiple6406 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6406;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6407)(MACHINE);
};

var _onReturn6403 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _onReturn6403;
    }
    MACHINE.env.push([MACHINE.params.currentNamespace["interval"] || MACHINE.primitives["interval"],MACHINE.params.currentNamespace["random-in-interval"] || MACHINE.primitives["random-in-interval"],MACHINE.primitives["random"]]);  MACHINE.env[MACHINE.env.length-1].names = ["interval","random-in-interval","random"];
MACHINE.modules["root/utilities/random.rkt"].prefix = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6405, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry198, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "interval");
MACHINE.env[MACHINE.env.length - 1 - 0][0] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall6396 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6396;
    }
    MACHINE.val = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 1])) ? (MACHINE.env[MACHINE.env.length - 1 - 1]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 1])));
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _afterCall6392 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _afterCall6392;
    }
    MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.env[MACHINE.env.length - 1 - 4] = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.val = RUNTIME.makePair(MACHINE.env[MACHINE.env.length - 1 - 0], MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.env.length = MACHINE.env.length - 3;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

var _procReturn6394 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6394;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall6392)(MACHINE);
};

var _lamEntry199 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _lamEntry199;
    }
    MACHINE.env.splice.apply(MACHINE.env, [MACHINE.env.length, 0].concat(MACHINE.proc.closedVals));
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.env[MACHINE.env.length - 1 - 3];
MACHINE.env.push(MACHINE.env[MACHINE.env.length - 1 - 2][2]);
MACHINE.env.push(undefined, undefined);
MACHINE.env[MACHINE.env.length - 1 - 0] = plt.baselib.numbers.subtract(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 7])) ? (MACHINE.env[MACHINE.env.length - 1 - 7]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 7])), ((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 6])) ? (MACHINE.env[MACHINE.env.length - 1 - 6]) : RUNTIME.raiseArgumentTypeError(MACHINE, "-", "number", 1, MACHINE.env[MACHINE.env.length - 1 - 6])));
MACHINE.env[MACHINE.env.length - 1 - 1] = 1;
MACHINE.val = plt.baselib.numbers.add(((RUNTIME.isNumber(MACHINE.env[MACHINE.env.length - 1 - 0])) ? (MACHINE.env[MACHINE.env.length - 1 - 0]) : RUNTIME.raiseArgumentTypeError(MACHINE, "+", "number", 0, MACHINE.env[MACHINE.env.length - 1 - 0])), MACHINE.env[MACHINE.env.length - 1 - 1]);
MACHINE.env.length = MACHINE.env.length - 2;
MACHINE.proc = MACHINE.env[MACHINE.env.length - 1 - 0];
MACHINE.env[MACHINE.env.length - 1 - 0] = MACHINE.val;
MACHINE.argcount = 1;
if (typeof(MACHINE.proc) === 'function')
{
              if (! (typeof(MACHINE.proc) === 'function')) {
                  RUNTIME.raiseOperatorIsNotPrimitiveProcedure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.val = MACHINE.proc(MACHINE);
MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall6396)(MACHINE);
} else {
              if (! (MACHINE.proc instanceof RUNTIME.Closure)) {
                  RUNTIME.raiseOperatorIsNotClosure(MACHINE, MACHINE.proc);
              }
              if (! RUNTIME.isArityMatching(MACHINE.proc.racketArity, MACHINE.argcount)) {
                  RUNTIME.raiseArityMismatchError(MACHINE,
                                                  MACHINE.proc,
                                                  MACHINE.proc.racketArity,
                                                  MACHINE.argcount);
              }
MACHINE.control.push(new RUNTIME.CallFrame(_procReturn6398, MACHINE.proc));
return ((MACHINE.proc).label)(MACHINE);
}
};

var _procReturn6398 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturn6398;
    }
    MACHINE.env[MACHINE.env.length - 1 - 1] = MACHINE.val;
return (_afterCall6396)(MACHINE);
};

var _beforePromptPop6407 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6407;
    }
    MACHINE.val = MACHINE.val;
MACHINE.env.length = MACHINE.env.length - 1;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
MACHINE.modules["root/utilities/random.rkt"].finalizeModuleInvokation();
return (MACHINE.proc)(MACHINE);
};

var _beforePopPrompt6376 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPrompt6376;
    }
    
};

var _beforePromptPopMultiple6404 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPopMultiple6404;
    }
    MACHINE.env.length = MACHINE.env.length - (MACHINE.argcount - 1);
return (_beforePromptPop6405)(MACHINE);
};

var _beforePopPromptMultiple6375 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePopPromptMultiple6375;
    }
    MACHINE.env.length = MACHINE.env.length - MACHINE.argcount;
return (_beforePopPrompt6376)(MACHINE);
};

var _procReturnMultiple6393 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _procReturnMultiple6393;
    }
    RUNTIME.raiseContextExpectedValuesError(MACHINE, 1);
return (_procReturn6394)(MACHINE);
};

var _beforePromptPop6405 = function(MACHINE){
    if(--MACHINE.callsBeforeTrampoline < 0) {
        throw _beforePromptPop6405;
    }
    MACHINE.control.push(new RUNTIME.PromptFrame(_beforePromptPop6407, RUNTIME.DEFAULT_CONTINUATION_PROMPT_TAG));
MACHINE.val = new RUNTIME.Closure(_lamEntry199, 2, [MACHINE.env[MACHINE.env.length - 1 - 0]], "random-in-interval");
MACHINE.env[MACHINE.env.length - 1 - 0][1] = MACHINE.val;
MACHINE.proc = MACHINE.control[MACHINE.control.length-1].label;
MACHINE.control.pop();
return (MACHINE.proc)(MACHINE);
};

_procReturn6394.multipleValueReturn = _procReturnMultiple6393;
_procReturn6398.multipleValueReturn = _procReturnMultiple6397;
_onReturn6403.multipleValueReturn = _onReturnMultiple6402;
_beforePromptPop6405.multipleValueReturn = _beforePromptPopMultiple6404;
_beforePromptPop6407.multipleValueReturn = _beforePromptPopMultiple6406;
_beforePopPrompt6376.multipleValueReturn = _beforePopPromptMultiple6375;
MACHINE.params.currentErrorHandler = fail;
MACHINE.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        MACHINE.params[param] = params[param];
    }
}MACHINE.trampoline(_start6408); })(MACHINE, function() { plt.runtime.setReadyTrue();SUCCESS(); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS); }, FAIL, PARAMS);    });});
var invokeMainModule = function() {
    var MACHINE = plt.runtime.currentMachine;
    invoke(MACHINE,
           function() {
                var startTime = new Date().valueOf();
                plt.runtime.invokeMains(
                    MACHINE,
                    function() {
                        // On main module invokation success:
                        var stopTime = new Date().valueOf();                                
                        if (console && console.log) {
                            console.log('evaluation took ' + (stopTime - startTime) + ' milliseconds');
                        }
                    },
                    function(MACHINE, e) {
                        // On main module invokation failure
                        if (console && console.log) {
                            console.log(e.stack || e);
                        }
                        MACHINE.params.currentErrorDisplayer(
                             MACHINE, $(plt.baselib.format.toDomNode(e.stack || e)).css('color', 'red'));
                    })},
           function() {
               // On module loading failure
               if (console && console.log) {
                   console.log(e.stack || e);
               }                       
           },
           {});
};
  
  $(document).ready(invokeMainModule);]]>  </script>
  
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX", "output/HTML-CSS"],
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
      processEscapes: true
    },
    "HTML-CSS": { availableFonts: ["TeX"] }
  });
</script>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<script type="text/javascript" src="../js-libs/raphael.js"></script>
<script type="text/javascript" src="../js-libs/scratchpad.js"></script>
<body></body></html>
