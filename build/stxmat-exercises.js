
// The following contains the Whalesong runtime.


(function(window, undefined) {
    // dyoo: this library has been modified slightly so it checks to see
    // if window.jQuery has already been installed.  This is to prevent an ugly issue
    // with regards to a memory leak if one tries to repeatedly load jQuery.
    // NOTE: this portion of the file (jquery-protect-header.js) is intentionally
    // unbalanced.  It'll be closed up by jquery-protect-footer.js.
    if (!window.jQuery) {
/*! jQuery v1.6.3 http://jquery.com/ | http://jquery.org/license */
(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cq(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cp(){cn=b}function co(){setTimeout(cp,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bA.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bW(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bP,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bW(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bW(a,c,d,e,"*",g));return l}function bV(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bL),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function by(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bt:bu;if(d>0){c!=="border"&&f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bv(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&&f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bl(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bd,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bk(a){f.nodeName(a,"input")?bj(a):"getElementsByTagName"in a&&f.grep(a.getElementsByTagName("input"),bj)}function bj(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bi(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bh(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bg(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i<j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bf(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function V(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(Q.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function U(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function M(a,b){return(a&&a!=="*"?a+".":"")+b.replace(y,"`").replace(z,"&")}function L(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&&a.type==="click")){a.namespace&&(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i<s.length;i++)g=s[i],g.origType.replace(w,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j<k;j++){m=e[j];for(i=0;i<s.length;i++){g=s[i];if(m.selector===g.selector&&(!n||n.test(g.namespace))&&!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&&f.contains(h,d)&&(d=h);(!d||d!==h)&&p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j<k;j++){e=p[j];if(c&&e.level>c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&&(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function J(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function D(){return!0}function C(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&&(d==="queue"||!f.data(a,g,b,!0))&&(d==="mark"||!f.data(a,h,b,!0))&&setTimeout(function(){!f.data(a,g,b,!0)&&!f.data(a,h,b,!0)&&(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(j,"$1-$2").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.3",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;B.resolveWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!E.call(a,"constructor")&&!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(!b)return-1;if(I)return I.call(b,a);for(var c=0,d=b.length;c<d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&&(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&&(C=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",C),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&&(k=b,b=0);for(g=0,h=c.length;g<h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&&a.push(i);k&&e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&&!b&&!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&&f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g+"With"](this===b?d:this,[h])}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&&a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length>1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred();if(d>1){for(;c<d;c++)b[c]&&f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&&g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   <link><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type=checkbox>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&&f.extend(p,{position:"absolute",left:"-1000px",top:"-1000px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&&q[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([a-z])([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i=f.expando,j=typeof c=="string",k=a.nodeType,l=k?f.cache:a,m=k?a[f.expando]:a[f.expando]&&f.expando;if((!m||e&&m&&l[m]&&!l[m][i])&&j&&d===b)return;m||(k?a[f.expando]=m=++f.uuid:m=f.expando),l[m]||(l[m]={},k||(l[m].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?l[m][i]=f.extend(l[m][i],c):l[m]=f.extend(l[m],c);g=l[m],e&&(g[i]||(g[i]={}),g=g[i]),d!==b&&(g[f.camelCase(c)]=d);if(c==="events"&&!g[c])return g[i]&&g[i].events;j?(h=g[c],h==null&&(h=g[f.camelCase(c)])):h=g;return h}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e=f.expando,g=a.nodeType,h=g?f.cache:a,i=g?a[f.expando]:f.expando;if(!h[i])return;if(b){d=c?h[i][e]:h[i];if(d){d[b]||(b=f.camelCase(b)),delete d[b];if(!l(d))return}}if(c){delete h[i][e];if(!l(h[i]))return}var j=h[i][e];f.support.deleteExpando||!h.setInterval?delete h[i]:h[i]=null,j?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=j):g&&(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h<i;h++)g=e[h].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&&this.length&&(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&&j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&&(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&&(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u,v;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(n," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&&"get"in c&&(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c<0)return null;for(var h=g?c:0,i=g?c+1:e.length;h<i;h++){var j=e[h];if(j.selected&&(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&&(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&&!d.length&&e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&&(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=v:u&&(i=u)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&&"set"in i&&j&&(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&&"get"in i&&j&&(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&&(b=f.attrFix[b]||b,f.attr(a,b,""),a.removeAttribute(b),t.test(b)&&(c=f.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(u&&f.nodeName(a,"button"))return u.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(u&&f.nodeName(a,"button"))return u.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&&(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&&"set"in h&&(g=h.set(a,d,c))!==b?g:a[c]=d:h&&"get"in h&&(g=h.get(a,c))!==null?g:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabIndex=f.propHooks.tabIndex,v={get:function(a,c){var d;return f.prop(a,c)===!0||(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(u=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&d.nodeValue!==""?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var w=/\.(.*)$/,x=/^(?:textarea|input|select)$/i,y=/\./g,z=/ /g,A=/[^\w\s.|`]/g,B=function(a){return a.replace(A,"\\$&")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){if(d===!1)d=C;else if(!d)return;var g,h;d.handler&&(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")>-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&&a.attachEvent("on"+l,k)}p.add&&(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){d===!1&&(d=C);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&&f._data(a),t=s&&s.events;if(!s||!t)return;c&&c.type&&(d=c.handler,c=c.type);if(!c||typeof c=="string"&&c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")<0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),B).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j<p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j<p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&&p.splice(j--,1),o.remove&&o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&&p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&&f.removeEvent(a,h,s.handle),g=null
,delete t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&&(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&&f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")>=0&&(h=h.slice(0,-1),j=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if(!!e&&!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&&b.events&&b.events[h]&&f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")<0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&&m.apply(k,d),l&&f.acceptData(k)&&k[l]&&k[l].apply(k,d)===!1&&(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&&a}while(k&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)){try{l&&e[h]&&(n=e[l],n&&(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&&(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h<i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&&(c.result=k,k===!1&&(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&&a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&&i.scrollLeft||j&&j.scrollLeft||0)-(i&&i.clientLeft||j&&j.clientLeft||0),a.pageY=a.clientY+(i&&i.scrollTop||j&&j.scrollTop||0)-(i&&i.clientTop||j&&j.clientTop||0)}a.which==null&&(a.charCode!=null||a.keyCode!=null)&&(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=a.button&1?1:a.button&2?3:a.button&4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,M(a.origType,a.selector),f.extend({},a,{handler:L,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,M(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?D:C):this.type=a,b&&f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=D;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=D;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=D,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var E=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&&(b&&(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},F=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&&c.selector?F:E,a)},teardown:function(a){f.event.remove(this,b,a&&a.selector?F:E)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="submit"||c==="image")&&f(b).closest("form").length&&J("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="text"||c==="password")&&f(b).closest("form").length&&a.keyCode===13&&J("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var G,H=function(a){var b=f.nodeName(a,"input")?a.type:"",c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex>-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&&(c=a.selectedIndex);return c},I=function(c){var d=c.target,e,g;if(!!x.test(d.nodeName)&&!d.readOnly){e=f._data(d,"_change_data"),g=H(d),(c.type!=="focusout"||d.type!=="radio")&&f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:I,beforedeactivate:I,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&&I.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&&!f.nodeName(b,"textarea")||a.keyCode===32&&(c==="checkbox"||c==="radio")||c==="select-multiple")&&I.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",H(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in G)f.event.add(this,c+".specialChange",G[c]);return x.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return x.test(this.nodeName)}},G=f.event.special.change.filters,G.focus=G.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&&c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i<j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&&!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d<e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var K={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&&!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&&!a&&g&&g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||C,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=w.exec(h),k="",j&&(k=j[0],h=h.replace(w,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,K[h]?(a.push(K[h]+k),h=h+k):h=(K[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p<q;p++)f.event.add(n[p],"live."+M(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+M(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&&!f&&(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length>1&&m.exec(b))if(x.length===2&&l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&&(b+=x.shift()),j=v(b,j)}else{!g&&x.length>1&&d.nodeType===9&&!w&&l.match.ID.test(x[0])&&!l.match.ID.test(x[x.length-1])&&(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&&(x[0]==="~"||x[0]==="+")&&d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length>0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&&(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&&d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&&(n[t]===!0||n[t].nodeType===1&&k.contains(d,n[t]))&&f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&&n[t].nodeType===1&&f.push(j[t]);else p(n,f);o&&(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e<f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);while(a&&c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&&f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&&(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&o!=null?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!j.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&&f===0)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&&j/e>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c<f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&&(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&&!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&&l.find.CLASS&&e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return p([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&"):e.setAttribute("id",o),r&&q&&(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g<h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var N=/Until$/,O=/^(?:parents|prevUntil|prevAll)/,P=/,/,Q=/^.[^:#\[\.,]*$/,R=Array.prototype.slice,S=f.expr.match.POS,T={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(V(this,a,!1),"not",a)},filter:function(a){return this.pushStack(V(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&&a.length){for(d=0,e=a.length;d<e;d++)i=a[d],j[i]||(j[i]=S.test(i)?f(i,b||this.context):i);while(g&&g.ownerDocument&&g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)>-1:f(g).is(h))&&c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=S.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(l?l.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(U(c[0])||U(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=R.call(arguments);N.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!T[a]?f.unique(e):e,(this.length>1||P.test(d))&&O.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|object|embed|option|style)/i,bb=/checked\s*(?:[^=]|=\s*.checked.)/i,bc=/\/(java|ecma)script/i,bd=/^\s*<!(?:\[CDATA\[|\-\-)/,be={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};be.optgroup=be.option,be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,f.support.htmlSerialize||(be._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!be[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bb.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bf(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bl)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof a[0]=="string"&&a[0].length<512&&i===c&&a[0].charAt(0)==="<"&&!ba.test(a[0])&&(f.support.checkClone||!bb.test(a[0]))&&(g=!0,h=f.fragments[a[0]],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[a[0]]=h?e:1);
return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bh(a,d),e=bi(a),g=bi(d);for(h=0;e[h];++h)g[h]&&bh(e[h],g[h])}if(b){bg(a,d);if(c){e=bi(a),g=bi(d);for(h=0;e[h];++h)bg(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=be[l]||be._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bk(k[i]);else bk(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bc.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&&f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&&d[c][e];if(b&&b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&&(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&&j.removeAttribute(f.expando),delete d[c]}}}});var bm=/alpha\([^)]*\)/i,bn=/opacity=([^)]*)/,bo=/([A-Z]|^ms)/g,bp=/^-?\d+(?:px)?$/i,bq=/^-?\d/,br=/^([\-+])=([\-+.\de]+)/,bs={position:"absolute",visibility:"hidden",display:"block"},bt=["Left","Right"],bu=["Top","Bottom"],bv,bw,bx;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bv(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=br.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bv)return bv(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return by(a,b,d);f.swap(a,bs,function(){e=by(a,b,d)});return e}},set:function(a,b){if(!bp.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bn.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bm,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bm.test(g)?g.replace(bm,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bv(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bw=function(a,c){var d,e,g;c=c.replace(bo,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bx=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;!bp.test(d)&&bq.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e));return d===""?"auto":d}),bv=bw||bx,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bz=/%20/g,bA=/\[\]$/,bB=/\r?\n/g,bC=/#.*$/,bD=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bE=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bF=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bG=/^(?:GET|HEAD)$/,bH=/^\/\//,bI=/\?/,bJ=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bK=/^(?:select|textarea)/i,bL=/\s+/,bM=/([?&])_=[^&]*/,bN=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bO=f.fn.load,bP={},bQ={},bR,bS,bT=["*/"]+["*"];try{bR=e.href}catch(bU){bR=c.createElement("a"),bR.href="",bR=bR.href}bS=bN.exec(bR.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bO)return bO.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bJ,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bK.test(this.nodeName)||bE.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bB,"\r\n")}}):{name:b.name,value:c.replace(bB,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?bX(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),bX(a,b);return a},ajaxSettings:{url:bR,isLocal:bF.test(bS[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bT},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bV(bP),ajaxTransport:bV(bQ),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?bZ(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=b$(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bD.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bC,"").replace(bH,bS[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bL),d.crossDomain==null&&(r=bN.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bS[1]&&r[2]==bS[2]&&(r[3]||(r[1]==="http:"?80:443))==(bS[3]||(bS[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bW(bP,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bG.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bI.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bM,"$1_="+x);d.url=y+(y===d.url?(bI.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bT+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bW(bQ,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&").replace(bz,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ca.test(b.url)||e&&ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ca,l),b.url===j&&(e&&(k=k.replace(ca,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cb&&delete cd[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&&(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cq("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cr(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cq("hide",3),a,b,c);for(var d=0,e=this.length;d<e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&&!f._data(this[d],"olddisplay")&&f._data(this[d],"olddisplay",g)}for(d=0;d<e;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cq("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(f.support.inlineBlockNeedsLayout?(j=cr(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&&(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&&(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&&this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cq("show",1),slideUp:cq("hide",1),slideToggle:cq("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function g(a){return d.step(a)}var d=this,e=f.fx;this.startTime=cn||co(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,g.elem=this.elem,g()&&f.timers.push(g)&&!cl&&(cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||co(),c=!0,d=this.elem,e=this.options,g,h;if(a||b>=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&&(c=!1);if(c){e.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&&f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cs=/^t(?:able|d|h)$/i,ct=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cu(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.offset.supportsFixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&&(!f.offset.doesAddBorderForTableAndCells||!cs.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=ct.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!ct.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cu(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cu(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&&a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&&b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNaN(j)?i:j}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);    }
})(window);/**
 * Copyright 2010 Tim Down.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * jshashtable
 *
 * jshashtable is a JavaScript implementation of a hash table. It creates a single constructor function called Hashtable
 * in the global scope.
 *
 * Author: Tim Down <tim@timdown.co.uk>
 * Version: 2.1
 * Build date: 21 March 2010
 * Website: http://www.timdown.co.uk/jshashtable
 */

var Hashtable = (function() {
	var FUNCTION = "function";

	var arrayRemoveAt = (typeof Array.prototype.splice == FUNCTION) ?
		function(arr, idx) {
			arr.splice(idx, 1);
		} :

		function(arr, idx) {
			var itemsAfterDeleted, i, len;
			if (idx === arr.length - 1) {
				arr.length = idx;
			} else {
				itemsAfterDeleted = arr.slice(idx + 1);
				arr.length = idx;
				for (i = 0, len = itemsAfterDeleted.length; i < len; ++i) {
					arr[idx + i] = itemsAfterDeleted[i];
				}
			}
		};

	function hashObject(obj) {
		var hashCode;
		if (typeof obj == "string") {
			return obj;
		} else if (typeof obj.hashCode == FUNCTION) {
			// Check the hashCode method really has returned a string
			hashCode = obj.hashCode();
			return (typeof hashCode == "string") ? hashCode : hashObject(hashCode);
		} else if (typeof obj.toString == FUNCTION) {
			return obj.toString();
		} else {
			try {
				return String(obj);
			} catch (ex) {
				// For host objects (such as ActiveObjects in IE) that have no toString() method and throw an error when
				// passed to String()
				return Object.prototype.toString.call(obj);
			}
		}
	}

	function equals_fixedValueHasEquals(fixedValue, variableValue) {
		return fixedValue.equals(variableValue);
	}

	function equals_fixedValueNoEquals(fixedValue, variableValue) {
		return (typeof variableValue.equals == FUNCTION) ?
			   variableValue.equals(fixedValue) : (fixedValue === variableValue);
	}

	function createKeyValCheck(kvStr) {
		return function(kv) {
			if (kv === null) {
				throw new Error("null is not a valid " + kvStr);
			} else if (typeof kv == "undefined") {
				throw new Error(kvStr + " must not be undefined");
			}
		};
	}

	var checkKey = createKeyValCheck("key"), checkValue = createKeyValCheck("value");

	/*----------------------------------------------------------------------------------------------------------------*/

	function Bucket(hash, firstKey, firstValue, equalityFunction) {
        this[0] = hash;
		this.entries = [];
		this.addEntry(firstKey, firstValue);

		if (equalityFunction !== null) {
			this.getEqualityFunction = function() {
				return equalityFunction;
			};
		}
	}

	var EXISTENCE = 0, ENTRY = 1, ENTRY_INDEX_AND_VALUE = 2;

	function createBucketSearcher(mode) {
		return function(key) {
			var i = this.entries.length, entry, equals = this.getEqualityFunction(key);
			while (i--) {
				entry = this.entries[i];
				if ( equals(key, entry[0]) ) {
					switch (mode) {
						case EXISTENCE:
							return true;
						case ENTRY:
							return entry;
						case ENTRY_INDEX_AND_VALUE:
							return [ i, entry[1] ];
					}
				}
			}
			return false;
		};
	}

	function createBucketLister(entryProperty) {
		return function(aggregatedArr) {
			var startIndex = aggregatedArr.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				aggregatedArr[startIndex + i] = this.entries[i][entryProperty];
			}
		};
	}

	Bucket.prototype = {
		getEqualityFunction: function(searchValue) {
			return (typeof searchValue.equals == FUNCTION) ? equals_fixedValueHasEquals : equals_fixedValueNoEquals;
		},

		getEntryForKey: createBucketSearcher(ENTRY),

		getEntryAndIndexForKey: createBucketSearcher(ENTRY_INDEX_AND_VALUE),

		removeEntryForKey: function(key) {
			var result = this.getEntryAndIndexForKey(key);
			if (result) {
				arrayRemoveAt(this.entries, result[0]);
				return result[1];
			}
			return null;
		},

		addEntry: function(key, value) {
			this.entries[this.entries.length] = [key, value];
		},

		keys: createBucketLister(0),

		values: createBucketLister(1),

		getEntries: function(entries) {
			var startIndex = entries.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				// Clone the entry stored in the bucket before adding to array
				entries[startIndex + i] = this.entries[i].slice(0);
			}
		},

		containsKey: createBucketSearcher(EXISTENCE),

		containsValue: function(value) {
			var i = this.entries.length;
			while (i--) {
				if ( value === this.entries[i][1] ) {
					return true;
				}
			}
			return false;
		}
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	// Supporting functions for searching hashtable buckets

	function searchBuckets(buckets, hash) {
		var i = buckets.length, bucket;
		while (i--) {
			bucket = buckets[i];
			if (hash === bucket[0]) {
				return i;
			}
		}
		return null;
	}

	function getBucketForHash(bucketsByHash, hash) {
		var bucket = bucketsByHash[hash];

		// Check that this is a genuine bucket and not something inherited from the bucketsByHash's prototype
		return ( bucket && (bucket instanceof Bucket) ) ? bucket : null;
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	function Hashtable(hashingFunctionParam, equalityFunctionParam) {
		var that = this;
		var buckets = [];
		var bucketsByHash = {};

		var hashingFunction = (typeof hashingFunctionParam == FUNCTION) ? hashingFunctionParam : hashObject;
		var equalityFunction = (typeof equalityFunctionParam == FUNCTION) ? equalityFunctionParam : null;

		this.put = function(key, value) {
			checkKey(key);
			checkValue(value);
			var hash = hashingFunction(key), bucket, bucketEntry, oldValue = null;

			// Check if a bucket exists for the bucket key
			bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it already contains this key
				bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so replace old value and we're done.
					oldValue = bucketEntry[1];
					bucketEntry[1] = value;
				} else {
					// The bucket does not contain an entry for this key, so add one
					bucket.addEntry(key, value);
				}
			} else {
				// No bucket exists for the key, so create one and put our key/value mapping in
				bucket = new Bucket(hash, key, value, equalityFunction);
				buckets[buckets.length] = bucket;
				bucketsByHash[hash] = bucket;
			}
			return oldValue;
		};

		this.get = function(key) {
			checkKey(key);

			var hash = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it contains this key
				var bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so return the value.
					return bucketEntry[1];
				}
			}
			return null;
		};

		this.containsKey = function(key) {
			checkKey(key);
			var bucketKey = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, bucketKey);

			return bucket ? bucket.containsKey(key) : false;
		};

		this.containsValue = function(value) {
			checkValue(value);
			var i = buckets.length;
			while (i--) {
				if (buckets[i].containsValue(value)) {
					return true;
				}
			}
			return false;
		};

		this.clear = function() {
			buckets.length = 0;
			bucketsByHash = {};
		};

		this.isEmpty = function() {
			return !buckets.length;
		};

		var createBucketAggregator = function(bucketFuncName) {
			return function() {
				var aggregated = [], i = buckets.length;
				while (i--) {
					buckets[i][bucketFuncName](aggregated);
				}
				return aggregated;
			};
		};

		this.keys = createBucketAggregator("keys");
		this.values = createBucketAggregator("values");
		this.entries = createBucketAggregator("getEntries");

		this.remove = function(key) {
			checkKey(key);

			var hash = hashingFunction(key), bucketIndex, oldValue = null;

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);

			if (bucket) {
				// Remove entry from this bucket for this key
				oldValue = bucket.removeEntryForKey(key);
				if (oldValue !== null) {
					// Entry was removed, so check if bucket is empty
					if (!bucket.entries.length) {
						// Bucket is empty, so remove it from the bucket collections
						bucketIndex = searchBuckets(buckets, hash);
						arrayRemoveAt(buckets, bucketIndex);
						delete bucketsByHash[hash];
					}
				}
			}
			return oldValue;
		};

		this.size = function() {
			var total = 0, i = buckets.length;
			while (i--) {
				total += buckets[i].entries.length;
			}
			return total;
		};

		this.each = function(callback) {
			var entries = that.entries(), i = entries.length, entry;
			while (i--) {
				entry = entries[i];
				callback(entry[0], entry[1]);
			}
		};

		this.putAll = function(hashtable, conflictCallback) {
			var entries = hashtable.entries();
			var entry, key, value, thisValue, i = entries.length;
			var hasConflictCallback = (typeof conflictCallback == FUNCTION);
			while (i--) {
				entry = entries[i];
				key = entry[0];
				value = entry[1];

				// Check for a conflict. The default behaviour is to overwrite the value for an existing key
				if ( hasConflictCallback && (thisValue = that.get(key)) ) {
					value = conflictCallback(key, thisValue, value);
				}
				that.put(key, value);
			}
		};

		this.clone = function() {
			var clone = new Hashtable(hashingFunctionParam, equalityFunctionParam);
			clone.putAll(that);
			return clone;
		};
	}

	return Hashtable;
})();// Scheme numbers.


var __PLTNUMBERS_TOP__;
if (typeof(exports) !== 'undefined') {
    __PLTNUMBERS_TOP__ = exports;
} else {
    if (! this['jsnums']) {
 	this['jsnums'] = {};
    }
    __PLTNUMBERS_TOP__  = this['jsnums'];
}

//var jsnums = {};


// The numeric tower has the following levels:
//     integers
//     rationals
//     floats
//     complex numbers
//
// with the representations:
//     integers: fixnum or BigInteger [level=0]
//     rationals: Rational [level=1]
//     floats: FloatPoint [level=2]
//     complex numbers: Complex [level=3]

// We try to stick with the unboxed fixnum representation for
// integers, since that's what scheme programs commonly deal with, and
// we want that common type to be lightweight.


// A boxed-scheme-number is either BigInteger, Rational, FloatPoint, or Complex.
// An integer-scheme-number is either fixnum or BigInteger.


(function() {
    // Abbreviation
    var Numbers = __PLTNUMBERS_TOP__;
    //var Numbers = jsnums;


    // makeNumericBinop: (fixnum fixnum -> any) (scheme-number scheme-number -> any) -> (scheme-number scheme-number) X
    // Creates a binary function that works either on fixnums or boxnums.
    // Applies the appropriate binary function, ensuring that both scheme numbers are
    // lifted to the same level.
    var makeNumericBinop = function(onFixnums, onBoxednums, options) {
	options = options || {};
	return function(x, y) {
	    if (options.isXSpecialCase && options.isXSpecialCase(x))
		return options.onXSpecialCase(x, y);
	    if (options.isYSpecialCase && options.isYSpecialCase(y))
		return options.onYSpecialCase(x, y);

	    if (typeof(x) === 'number' &&
		typeof(y) === 'number') {
		return onFixnums(x, y);
	    }
	    if (typeof(x) === 'number') {
		x = liftFixnumInteger(x, y);
	    }
	    if (typeof(y) === 'number') {
		y = liftFixnumInteger(y, x);
	    }

	    if (x.level < y.level) x = x.liftTo(y);
	    if (y.level < x.level) y = y.liftTo(x);
	    return onBoxednums(x, y);
	};
    }
    
    
    // fromFixnum: fixnum -> scheme-number
    var fromFixnum = function(x) {
	if (isNaN(x) || (! isFinite(x))) {
	    return FloatPoint.makeInstance(x);
	}
	var nf = Math.floor(x);
	if (nf === x) {
            if (isOverflow(nf)) {
		return makeBignum(expandExponent(x+''));
            } else {
		return nf;
	    }
	} else {
            return FloatPoint.makeInstance(x);
	}
    };

    var expandExponent = function(s) {
	var match = s.match(scientificPattern), mantissaChunks, exponent;
	if (match) {
	    mantissaChunks = match[1].match(/^([^.]*)(.*)$/);
	    exponent = Number(match[2]);

	    if (mantissaChunks[2].length === 0) {
		return mantissaChunks[1] + zfill(exponent);
	    }

	    if (exponent >= mantissaChunks[2].length - 1) {
		return (mantissaChunks[1] + 
			mantissaChunks[2].substring(1) + 
			zfill(exponent - (mantissaChunks[2].length - 1)));
	    } else {
		return (mantissaChunks[1] +
			mantissaChunks[2].substring(1, 1+exponent));
	    }
	} else {
	    return s;
	}
    };

    // zfill: integer -> string
    // builds a string of "0"'s of length n.
    var zfill = function(n) {
	var buffer = [];
	buffer.length = n;
	for (var i = 0; i < n; i++) {
	    buffer[i] = '0';
	}
	return buffer.join('');
    };
    

    
    // liftFixnumInteger: fixnum-integer boxed-scheme-number -> boxed-scheme-number
    // Lifts up fixnum integers to a boxed type.
    var liftFixnumInteger = function(x, other) {
	switch(other.level) {
	case 0: // BigInteger
	    return makeBignum(x);
	case 1: // Rational
	    return new Rational(x, 1);
	case 2: // FloatPoint
	    return new FloatPoint(x);
	case 3: // Complex
	    return new Complex(x, 0);
	default:
	    throwRuntimeError("IMPOSSIBLE: cannot lift fixnum integer to " + other.toString(), x, other);
	}
    };
    
    
    // throwRuntimeError: string (scheme-number | undefined) (scheme-number | undefined) -> void
    // Throws a runtime error with the given message string.
    var throwRuntimeError = function(msg, x, y) {
	Numbers['onThrowRuntimeError'](msg, x, y);
    };



    // onThrowRuntimeError: string (scheme-number | undefined) (scheme-number | undefined) -> void
    // By default, will throw a new Error with the given message.
    // Override Numbers['onThrowRuntimeError'] if you need to do something special.
    var onThrowRuntimeError = function(msg, x, y) {
	throw new Error(msg);
    };


    // isSchemeNumber: any -> boolean
    // Returns true if the thing is a scheme number.
    var isSchemeNumber = function(thing) {
	return (typeof(thing) === 'number'
		|| (thing instanceof Rational ||
		    thing instanceof FloatPoint ||
		    thing instanceof Complex ||
		    thing instanceof BigInteger));
    };


    // isRational: scheme-number -> boolean
    var isRational = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isRational()));
    };

    // isReal: scheme-number -> boolean
    var isReal = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isReal()));
    };

    // isExact: scheme-number -> boolean
    var isExact = function(n) {
	return (typeof(n) === 'number' || 
		(isSchemeNumber(n) && n.isExact()));
    };

    // isExact: scheme-number -> boolean
    var isInexact = function(n) {
	if (typeof(n) === 'number') {
	    return false;
	} else {
	    return (isSchemeNumber(n) && n.isInexact());
	}
    };

    // isInteger: scheme-number -> boolean
    var isInteger = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isInteger()));
    };

    // isExactInteger: scheme-number -> boolean
    var isExactInteger = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && 
		 n.isInteger() && 
		 n.isExact()));
    }



    // toFixnum: scheme-number -> javascript-number
    var toFixnum = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.toFixnum();
    };

    // toExact: scheme-number -> scheme-number
    var toExact = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.toExact();
    };


    // toExact: scheme-number -> scheme-number
    var toInexact = function(n) {
	if (typeof(n) === 'number')
	    return FloatPoint.makeInstance(n);
	return n.toInexact();
    };



    //////////////////////////////////////////////////////////////////////


    // add: scheme-number scheme-number -> scheme-number
    var add = makeNumericBinop(
	function(x, y) {
	    var sum = x + y;
	    if (isOverflow(sum)) {
		return (makeBignum(x)).add(makeBignum(y));
	    } else {
		return sum;
	    }
	},
	function(x, y) {
	    return x.add(y);
	},
	{isXSpecialCase: function(x) { 
	    return isExactInteger(x) && _integerIsZero(x) },
	 onXSpecialCase: function(x, y) { return y; },
	 isYSpecialCase: function(y) { 
	     return isExactInteger(y) && _integerIsZero(y) },
	 onYSpecialCase: function(x, y) { return x; }
	});


    // subtract: scheme-number scheme-number -> scheme-number
    var subtract = makeNumericBinop(
	function(x, y) {
	    var diff = x - y;
	    if (isOverflow(diff)) {
		return (makeBignum(x)).subtract(makeBignum(y));
	    } else {
		return diff;
	    }
	},
	function(x, y) {
	    return x.subtract(y);
	},
	{isXSpecialCase: function(x) { 
	    return isExactInteger(x) && _integerIsZero(x) },
	 onXSpecialCase: function(x, y) { return negate(y); },
	 isYSpecialCase: function(y) { 
	     return isExactInteger(y) && _integerIsZero(y) },
	 onYSpecialCase: function(x, y) { return x; }
	});


    // mulitply: scheme-number scheme-number -> scheme-number
    var multiply = makeNumericBinop(
	function(x, y) {
	    var prod = x * y;
	    if (isOverflow(prod)) {
		return (makeBignum(x)).multiply(makeBignum(y));
	    } else {
		return prod;
	    }
	},
	function(x, y) {
	    return x.multiply(y);
	},
	{isXSpecialCase: function(x) { 
	    return (isExactInteger(x) && 
		    (_integerIsZero(x) || _integerIsOne(x) || _integerIsNegativeOne(x))) },
	 onXSpecialCase: function(x, y) { 
	     if (_integerIsZero(x))
		 return 0;
	     if (_integerIsOne(x))
		 return y;
	     if (_integerIsNegativeOne(x))
		 return negate(y);
	 },
	 isYSpecialCase: function(y) { 
	     return (isExactInteger(y) && 
		     (_integerIsZero(y) || _integerIsOne(y) || _integerIsNegativeOne(y)))},
	 onYSpecialCase: function(x, y) { 
	     if (_integerIsZero(y))
		 return 0;
	     if (_integerIsOne(y))
		 return x;
	     if (_integerIsNegativeOne(y)) 
		 return negate(x);
	 }
	});

    
    // divide: scheme-number scheme-number -> scheme-number
    var divide = makeNumericBinop(
	function(x, y) {
	    if (_integerIsZero(y))
		throwRuntimeError("/: division by zero", x, y);
	    var div = x / y;
	    if (isOverflow(div)) {
		return (makeBignum(x)).divide(makeBignum(y));
	    } else if (Math.floor(div) !== div) {
		return Rational.makeInstance(x, y);
	    } else {
		return div;
	    }
	},
	function(x, y) {
	    return x.divide(y);
	},
	{ isXSpecialCase: function(x) {
	    return (eqv(x, 0));
	},
	  onXSpecialCase: function(x, y) {
	      if (eqv(y, 0)) {
		  throwRuntimeError("/: division by zero", x, y);
	      }
	      return 0;
	  },
	  isYSpecialCase: function(y) { 
	    return (eqv(y, 0)); },
	  onYSpecialCase: function(x, y) {
	      throwRuntimeError("/: division by zero", x, y);
	  }
	});
    
    
    // equals: scheme-number scheme-number -> boolean
    var equals = makeNumericBinop(
	function(x, y) {
	    return x === y;
	},
	function(x, y) {
	    return x.equals(y);
	});


    // eqv: scheme-number scheme-number -> boolean
    var eqv = function(x, y) {
	if (x === y)
	    return true;
	if (typeof(x) === 'number' && typeof(y) === 'number')
	    return x === y;
	if (x === NEGATIVE_ZERO || y === NEGATIVE_ZERO)
	    return x === y;
	if (x instanceof Complex || y instanceof Complex) {
	    return (eqv(realPart(x), realPart(y)) &&
		    eqv(imaginaryPart(x), imaginaryPart(y)));
	}
	var ex = isExact(x), ey = isExact(y);
	return (((ex && ey) || (!ex && !ey)) && equals(x, y));
    };

    // approxEqual: scheme-number scheme-number scheme-number -> boolean
    var approxEquals = function(x, y, delta) {
	return lessThan(abs(subtract(x, y)),
                        delta);
    };

    // greaterThanOrEqual: scheme-number scheme-number -> boolean
    var greaterThanOrEqual = makeNumericBinop(
	function(x, y) {
	    return x >= y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError(
		    ">=: couldn't be applied to complex number", x, y);
	    return x.greaterThanOrEqual(y);
	});


    // lessThanOrEqual: scheme-number scheme-number -> boolean
    var lessThanOrEqual = makeNumericBinop(
	function(x, y){

	    return x <= y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError("<=: couldn't be applied to complex number", x, y);
	    return x.lessThanOrEqual(y);
	});


    // greaterThan: scheme-number scheme-number -> boolean
    var greaterThan = makeNumericBinop(
	function(x, y){
	    return x > y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError(">: couldn't be applied to complex number", x, y);
	    return x.greaterThan(y);
	});


    // lessThan: scheme-number scheme-number -> boolean
    var lessThan = makeNumericBinop(
	function(x, y){

	    return x < y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError("<: couldn't be applied to complex number", x, y);
	    return x.lessThan(y);
	});



    // expt: scheme-number scheme-number -> scheme-number
    var expt = (function() {
	var _expt = makeNumericBinop(
	    function(x, y){
		var pow = Math.pow(x, y);
		if (isOverflow(pow)) {
		    return (makeBignum(x)).expt(makeBignum(y));
		} else {
		    return pow;
		}
	    },
	    function(x, y) {
		if (equals(y, 0)) {
		    return add(y, 1);
		} else {
		    return x.expt(y);
		}
	    });
	return function(x, y) {
	    if (equals(y, 0)) 
		return add(y, 1);
	    if (isReal(y) && lessThan(y, 0)) {
		return _expt(divide(1, x), negate(y));
	    }
	    return _expt(x, y);
	};
    })();


    // exp: scheme-number -> scheme-number
    var exp = function(n) {
	if ( eqv(n, 0) ) {
		return 1;
	}
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.exp(n));
	}
	return n.exp();
    };


    // modulo: scheme-number scheme-number -> scheme-number
    var modulo = function(m, n) {
	if (! isInteger(m)) {
	    throwRuntimeError('modulo: the first argument '
			      + m + " is not an integer.", m, n);
	}
	if (! isInteger(n)) {
	    throwRuntimeError('modulo: the second argument '
			      + n + " is not an integer.", m, n);
	}
	var result;
	if (typeof(m) === 'number') {
	    result = m % n;
	    if (n < 0) {
		if (result <= 0)
		    return result;
		else
		    return result + n;
	    } else {
		if (result < 0)
		    return result + n;
		else
		    return result;
	    }
	}
	result = _integerModulo(floor(m), floor(n));
	// The sign of the result should match the sign of n.
	if (lessThan(n, 0)) {
	    if (lessThanOrEqual(result, 0)) {
		return result;
	    }
	    return add(result, n);

	} else {
	    if (lessThan(result, 0)) {
		return add(result, n);
	    }
	    return result;
	}
    };



    // numerator: scheme-number -> scheme-number
    var numerator = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.numerator();
    };


    // denominator: scheme-number -> scheme-number
    var denominator = function(n) {
	if (typeof(n) === 'number')
	    return 1;
	return n.denominator();
    };

    // sqrt: scheme-number -> scheme-number
    var sqrt = function(n) {
	if (typeof(n) === 'number') {
	    if (n >= 0) {
		var result = Math.sqrt(n);
		if (Math.floor(result) === result) {
		    return result;
		} else {
		    return FloatPoint.makeInstance(result);
		}
	    } else {
		return (Complex.makeInstance(0, sqrt(-n)));
	    }
	}
	return n.sqrt();
    };

    // abs: scheme-number -> scheme-number
    var abs = function(n) {
	if (typeof(n) === 'number') {
	    return Math.abs(n);
	}
	return n.abs();
    };

    // floor: scheme-number -> scheme-number
    var floor = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.floor();
    };

    // ceiling: scheme-number -> scheme-number
    var ceiling = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.ceiling();
    };

    // conjugate: scheme-number -> scheme-number
    var conjugate = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.conjugate();
    };

    // magnitude: scheme-number -> scheme-number
    var magnitude = function(n) {
	if (typeof(n) === 'number')
	    return Math.abs(n);
	return n.magnitude();
    };


    // log: scheme-number -> scheme-number
    var log = function(n) {
	if ( eqv(n, 1) ) {
		return 0;
	}
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.log(n));
	}
	return n.log();
    };

    // angle: scheme-number -> scheme-number
    var angle = function(n) {
	if (typeof(n) === 'number') {
	    if (n > 0)
		return 0;
	    else
		return FloatPoint.pi;
	}
	return n.angle();
    };

    // tan: scheme-number -> scheme-number
    var tan = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.tan(n));
	}
	return n.tan();
    };

    // atan: scheme-number -> scheme-number
    var atan = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.atan(n));
	}
	return n.atan();
    };

    // cos: scheme-number -> scheme-number
    var cos = function(n) {
	if (eqv(n, 0)) { return 1; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.cos(n));
	}
	return n.cos();
    };

    // sin: scheme-number -> scheme-number
    var sin = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.sin(n));
	}
	return n.sin();
    };

    // acos: scheme-number -> scheme-number
    var acos = function(n) {
	if (eqv(n, 1)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.acos(n));
	}
	return n.acos();
    };

    // asin: scheme-number -> scheme-number
    var asin = function(n) {
        if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.asin(n));
	}
	return n.asin();
    };

    // imaginaryPart: scheme-number -> scheme-number
    var imaginaryPart = function(n) {
	if (typeof(n) === 'number') {
	    return 0;
	}
	return n.imaginaryPart();
    };

    // realPart: scheme-number -> scheme-number
    var realPart = function(n) {
	if (typeof(n) === 'number') {
	    return n;
	}
	return n.realPart();
    };

    // round: scheme-number -> scheme-number
    var round = function(n) {
	if (typeof(n) === 'number') {
	    return n;
	}
	return n.round();
    };



    // sqr: scheme-number -> scheme-number
    var sqr = function(x) {
	return multiply(x, x);
    };


    // integerSqrt: scheme-number -> scheme-number
    var integerSqrt = function(x) {
	if (! isInteger(x)) {
	    throwRuntimeError('integer-sqrt: the argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (typeof (x) === 'number') {
	    if(x < 0) {
	        return Complex.makeInstance(0,
					    Math.floor(Math.sqrt(-x)))
	    } else {
		return Math.floor(Math.sqrt(x));
	    }
	}
	return x.integerSqrt();
    };


    // gcd: scheme-number [scheme-number ...] -> scheme-number
    var gcd = function(first, rest) {
	if (! isInteger(first)) {
	    throwRuntimeError('gcd: the argument ' + first.toString() +
			      " is not an integer.", first);
	}
	var a = abs(first), t, b;
	for(var i = 0; i < rest.length; i++) {
	    b = abs(rest[i]);	
	    if (! isInteger(b)) {
		throwRuntimeError('gcd: the argument ' + b.toString() +
				  " is not an integer.", b);
	    }
	    while (! _integerIsZero(b)) {
		t = a;
		a = b;
		b = _integerModulo(t, b);
	    }
	}
	return a;
    };

    // lcm: scheme-number [scheme-number ...] -> scheme-number
    var lcm = function(first, rest) {
	if (! isInteger(first)) {
	    throwRuntimeError('lcm: the argument ' + first.toString() +
			      " is not an integer.", first);
	}
	var result = abs(first);
	if (_integerIsZero(result)) { return 0; }
	for (var i = 0; i < rest.length; i++) {
	    if (! isInteger(rest[i])) {
		throwRuntimeError('lcm: the argument ' + rest[i].toString() +
				  " is not an integer.", rest[i]);
	    }
	    var divisor = _integerGcd(result, rest[i]);
	    if (_integerIsZero(divisor)) {
		return 0;
	    }
	    result = divide(multiply(result, rest[i]), divisor);
	}
	return result;
    };
    

    var quotient = function(x, y) {
 	if (! isInteger(x)) {
	    throwRuntimeError('quotient: the first argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (! isInteger(y)) {
	    throwRuntimeError('quotient: the second argument ' + y.toString() +
			      " is not an integer.", y);
	}
	return _integerQuotient(x, y);
    };

    
    var remainder = function(x, y) {
	if (! isInteger(x)) {
	    throwRuntimeError('remainder: the first argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (! isInteger(y)) {
	    throwRuntimeError('remainder: the second argument ' + y.toString() +
			      " is not an integer.", y);
	}
	return _integerRemainder(x, y);
    };


    // Implementation of the hyperbolic functions
    // http://en.wikipedia.org/wiki/Hyperbolic_cosine
    var cosh = function(x) {
	if (eqv(x, 0)) {
	    return FloatPoint.makeInstance(1.0);
	}
	return divide(add(exp(x), exp(negate(x))),
		      2);
    };
	
    var sinh = function(x) {
	return divide(subtract(exp(x), exp(negate(x))),
		      2);
    };


        
    var makeComplexPolar = function(r, theta) {
	// special case: if theta is zero, just return
	// the scalar.
	if (eqv(theta, 0)) {
	    return r;
	}
	return Complex.makeInstance(multiply(r, cos(theta)),
				    multiply(r, sin(theta)));
    };



    //////////////////////////////////////////////////////////////////////

    // Helpers


    // IsFinite: scheme-number -> boolean
    // Returns true if the scheme number is finite or not.
    var isSchemeNumberFinite = function(n) {
	if (typeof(n) === 'number') {
	    return isFinite(n);
	} else {
	    return n.isFinite();
	}
    };

    // isOverflow: javascript-number -> boolean
    // Returns true if we consider the number an overflow.
    var MIN_FIXNUM = -(9e15);
    var MAX_FIXNUM = (9e15);
    var isOverflow = function(n) {
	return (n < MIN_FIXNUM ||  MAX_FIXNUM < n);
    };


    // negate: scheme-number -> scheme-number
    // multiplies a number times -1.
    var negate = function(n) {
	if (typeof(n) === 'number') {
	    return -n;
	}
	return n.negate();
    };


    // halve: scheme-number -> scheme-number
    // Divide a number by 2.
    var halve = function(n) {
	return divide(n, 2);
    };


    // timesI: scheme-number scheme-number
    // multiplies a number times i.
    var timesI = function(x) {
	return multiply(x, plusI);
    };


    // fastExpt: computes n^k by squaring.
    // n^k = (n^2)^(k/2)
    // Assumes k is non-negative integer.
    var fastExpt = function(n, k) {
	var acc = 1;
	while (true) {
	    if (_integerIsZero(k)) {
		return acc;
	    }
	    if (equals(modulo(k, 2), 0)) {
		n = multiply(n, n);
		k = divide(k, 2);
	    } else {
		acc = multiply(acc, n);
		k = subtract(k, 1);
	    }
	}
    };



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Integer operations
    // Integers are either represented as fixnums or as BigIntegers.

    // makeIntegerBinop: (fixnum fixnum -> X) (BigInteger BigInteger -> X) -> X
    // Helper to collect the common logic for coersing integer fixnums or bignums to a
    // common type before doing an operation.
    var makeIntegerBinop = function(onFixnums, onBignums, options) {
	options = options || {};
	return (function(m, n) {
	    if (m instanceof Rational) {
		m = numerator(m);
	    } else if (m instanceof Complex) {
		m = realPart(m);
	    }

	    if (n instanceof Rational) {
		n = numerator(n);
	    }else if (n instanceof Complex) {
		n = realPart(n);
	    }

	    if (typeof(m) === 'number' && typeof(n) === 'number') {
		var result = onFixnums(m, n);
		if (! isOverflow(result) ||
		    (options.ignoreOverflow)) {
		    return result;
		}
	    }
	    if (m instanceof FloatPoint || n instanceof FloatPoint) {
		if (options.doNotCoerseToFloating) {
		    return onFixnums(toFixnum(m), toFixnum(n));
		}
		else {
		    return FloatPoint.makeInstance(
			onFixnums(toFixnum(m), toFixnum(n)));
		}
	    }
	    if (typeof(m) === 'number') {
		m = makeBignum(m);
	    }
	    if (typeof(n) === 'number') {
		n = makeBignum(n);
	    }
	    return onBignums(m, n);
	});
    };


    var makeIntegerUnOp = function(onFixnums, onBignums, options) {
	options = options || {};
	return (function(m) {
	    if (m instanceof Rational) {
		m = numerator(m);
	    } else if (m instanceof Complex) {
		m = realPart(m);
	    }

	    if (typeof(m) === 'number') {
		var result = onFixnums(m);
		if (! isOverflow(result) ||
		    (options.ignoreOverflow)) {
		    return result;
		}
	    }
	    if (m instanceof FloatPoint) {
		return onFixnums(toFixnum(m));
	    }
	    if (typeof(m) === 'number') {
		m = makeBignum(m);
	    }
	    return onBignums(m);
	});
    };



    // _integerModulo: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerModulo = makeIntegerBinop(
	function(m, n) {
	    return m % n;
	},
	function(m, n) {
	    return bnMod.call(m, n);
	});


    // _integerGcd: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerGcd = makeIntegerBinop(
	function(a, b) {
	    var t;
	    while (b !== 0) {
		t = a;
		a = b;
		b = t % b;
	    }
	    return a;
	},
	function(m, n) {
	    return bnGCD.call(m, n);
	});


    // _integerIsZero: integer-scheme-number -> boolean
    // Returns true if the number is zero.
    var _integerIsZero = makeIntegerUnOp(
	function(n){
	    return n === 0;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.ZERO);
	}
    );


    // _integerIsOne: integer-scheme-number -> boolean
    var _integerIsOne = makeIntegerUnOp(
	function(n) {
	    return n === 1;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.ONE);
	});
    

 
    // _integerIsNegativeOne: integer-scheme-number -> boolean
    var _integerIsNegativeOne = makeIntegerUnOp(
	function(n) {
	    return n === -1;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.NEGATIVE_ONE);
	});
    


    // _integerAdd: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerAdd = makeIntegerBinop(
	function(m, n) {
	    return m + n;
	},
	function(m, n) {
	    return bnAdd.call(m, n);
	});

    // _integerSubtract: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerSubtract = makeIntegerBinop(
	function(m, n) {
	    return m - n;
	},
	function(m, n) {
	    return bnSubtract.call(m, n);
	});

    // _integerMultiply: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerMultiply = makeIntegerBinop(
	function(m, n) {
	    return m * n;
	},
	function(m, n) {
	    return bnMultiply.call(m, n);
	});

    //_integerQuotient: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerQuotient = makeIntegerBinop(
	function(m, n) {
	    return ((m - (m % n))/ n);
	},
	function(m, n) {
            return bnDivide.call(m, n);
	});

    var _integerRemainder = makeIntegerBinop(
	function(m, n) {
	    return m % n;
	},
	function(m, n) {
	    return bnRemainder.call(m, n);
	});


    // _integerDivideToFixnum: integer-scheme-number integer-scheme-number -> fixnum
    var _integerDivideToFixnum = makeIntegerBinop(
	function(m, n) {
	    return m / n;
	},
	function(m, n) {
	    return toFixnum(m) / toFixnum(n);
	},
	{ignoreOverflow: true,
	 doNotCoerseToFloating: true});


    // _integerEquals: integer-scheme-number integer-scheme-number -> boolean
    var _integerEquals = makeIntegerBinop(
	function(m, n) {
	    return m === n;
	},
	function(m, n) {
	    return bnEquals.call(m, n);
	},
	{doNotCoerseToFloating: true});

    // _integerGreaterThan: integer-scheme-number integer-scheme-number -> boolean
    var _integerGreaterThan = makeIntegerBinop(
	function(m, n) {
	    return m > n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) > 0;
	},
	{doNotCoerseToFloating: true});

    // _integerLessThan: integer-scheme-number integer-scheme-number -> boolean
    var _integerLessThan = makeIntegerBinop(
	function(m, n) {
	    return m < n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) < 0;
	},
	{doNotCoerseToFloating: true});

    // _integerGreaterThanOrEqual: integer-scheme-number integer-scheme-number -> boolean
    var _integerGreaterThanOrEqual = makeIntegerBinop(
	function(m, n) {
	    return m >= n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) >= 0;
	},
	{doNotCoerseToFloating: true});

    // _integerLessThanOrEqual: integer-scheme-number integer-scheme-number -> boolean
    var _integerLessThanOrEqual = makeIntegerBinop(
	function(m, n) {
	    return m <= n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) <= 0;
	},
	{doNotCoerseToFloating: true});



    //////////////////////////////////////////////////////////////////////
    // The boxed number types are expected to implement the following
    // interface.
    //
    // toString: -> string

    // level: number

    // liftTo: scheme-number -> scheme-number

    // isFinite: -> boolean

    // isInteger: -> boolean
    // Produce true if this number can be coersed into an integer.

    // isRational: -> boolean
    // Produce true if the number is rational.

    // isReal: -> boolean
    // Produce true if the number is real.

    // isExact: -> boolean
    // Produce true if the number is exact

    // toExact: -> scheme-number
    // Produce an exact number.

    // toFixnum: -> javascript-number
    // Produce a javascript number.

    // greaterThan: scheme-number -> boolean
    // Compare against instance of the same type.

    // greaterThanOrEqual: scheme-number -> boolean
    // Compare against instance of the same type.

    // lessThan: scheme-number -> boolean
    // Compare against instance of the same type.

    // lessThanOrEqual: scheme-number -> boolean
    // Compare against instance of the same type.

    // add: scheme-number -> scheme-number
    // Add with an instance of the same type.

    // subtract: scheme-number -> scheme-number
    // Subtract with an instance of the same type.

    // multiply: scheme-number -> scheme-number
    // Multiply with an instance of the same type.

    // divide: scheme-number -> scheme-number
    // Divide with an instance of the same type.

    // numerator: -> scheme-number
    // Return the numerator.

    // denominator: -> scheme-number
    // Return the denominator.

    // integerSqrt: -> scheme-number
    // Produce the integer square root.

    // sqrt: -> scheme-number
    // Produce the square root.

    // abs: -> scheme-number
    // Produce the absolute value.

    // floor: -> scheme-number
    // Produce the floor.

    // ceiling: -> scheme-number
    // Produce the ceiling.

    // conjugate: -> scheme-number
    // Produce the conjugate.

    // magnitude: -> scheme-number
    // Produce the magnitude.

    // log: -> scheme-number
    // Produce the log.

    // angle: -> scheme-number
    // Produce the angle.

    // atan: -> scheme-number
    // Produce the arc tangent.

    // cos: -> scheme-number
    // Produce the cosine.

    // sin: -> scheme-number
    // Produce the sine.

    // expt: scheme-number -> scheme-number
    // Produce the power to the input.

    // exp: -> scheme-number
    // Produce e raised to the given power.

    // acos: -> scheme-number
    // Produce the arc cosine.

    // asin: -> scheme-number
    // Produce the arc sine.

    // imaginaryPart: -> scheme-number
    // Produce the imaginary part

    // realPart: -> scheme-number
    // Produce the real part.

    // round: -> scheme-number
    // Round to the nearest integer.

    // equals: scheme-number -> boolean
    // Produce true if the given number of the same type is equal.



    //////////////////////////////////////////////////////////////////////

    // Rationals


    var Rational = function(n, d) {
	this.n = n;
	this.d = d;
    };


    Rational.prototype.toString = function() {
	if (_integerIsOne(this.d)) {
	    return this.n.toString() + "";
	} else {
	    return this.n.toString() + "/" + this.d.toString();
	}
    };


    Rational.prototype.level = 1;


    Rational.prototype.liftTo = function(target) {
	if (target.level === 2)
	    return new FloatPoint(
		_integerDivideToFixnum(this.n, this.d));
	if (target.level === 3)
	    return new Complex(this, 0);
	return throwRuntimeError("invalid level of Number", this, target);
    };

    Rational.prototype.isFinite = function() {
	return true;
    };

    Rational.prototype.equals = function(other) {
	return (other instanceof Rational &&
		_integerEquals(this.n, other.n) &&
		_integerEquals(this.d, other.d));
    };



    Rational.prototype.isInteger = function() {
	return _integerIsOne(this.d);
    };

    Rational.prototype.isRational = function() {
        return true;
    };

    Rational.prototype.isReal = function() {
	return true;
    };


    Rational.prototype.add = function(other) {
	return Rational.makeInstance(_integerAdd(_integerMultiply(this.n, other.d),
						 _integerMultiply(this.d, other.n)),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.subtract = function(other) {
	return Rational.makeInstance(_integerSubtract(_integerMultiply(this.n, other.d),
						      _integerMultiply(this.d, other.n)),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.negate = function() { 
	return Rational.makeInstance(-this.n, this.d) 
    };

    Rational.prototype.multiply = function(other) {
	return Rational.makeInstance(_integerMultiply(this.n, other.n),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.divide = function(other) {
	if (_integerIsZero(this.d) || _integerIsZero(other.n)) {
	    throwRuntimeError("/: division by zero", this, other);
	}
	return Rational.makeInstance(_integerMultiply(this.n, other.d),
				     _integerMultiply(this.d, other.n));
    };


    Rational.prototype.toExact = function() {
	return this;
    };

    Rational.prototype.toInexact = function() {
	return FloatPoint.makeInstance(this.toFixnum());
    };


    Rational.prototype.isExact = function() {
        return true;
    };

    Rational.prototype.isInexact = function() {
        return false;
    };


    Rational.prototype.toFixnum = function() {
	return _integerDivideToFixnum(this.n, this.d);
    };

    Rational.prototype.numerator = function() {
	return this.n;
    };

    Rational.prototype.denominator = function() {
	return this.d;
    };

    Rational.prototype.greaterThan = function(other) {
	return _integerGreaterThan(_integerMultiply(this.n, other.d),
				   _integerMultiply(this.d, other.n));
    };

    Rational.prototype.greaterThanOrEqual = function(other) {
	return _integerGreaterThanOrEqual(_integerMultiply(this.n, other.d),
					  _integerMultiply(this.d, other.n));
    };

    Rational.prototype.lessThan = function(other) {
	return _integerLessThan(_integerMultiply(this.n, other.d),
				_integerMultiply(this.d, other.n));
    };

    Rational.prototype.lessThanOrEqual = function(other) {
	return _integerLessThanOrEqual(_integerMultiply(this.n, other.d),
				       _integerMultiply(this.d, other.n));
    };

    Rational.prototype.integerSqrt = function() {
	var result = sqrt(this);
	if (isRational(result)) {
	    return toExact(floor(result));
	} else if (isReal(result)) {
	    return toExact(floor(result));
	} else {
	    return Complex.makeInstance(toExact(floor(realPart(result))),
					toExact(floor(imaginaryPart(result))));
	}
    };


    Rational.prototype.sqrt = function() {
	if (_integerGreaterThanOrEqual(this.n,  0)) {
	    var newN = sqrt(this.n);
	    var newD = sqrt(this.d);
	    if (equals(floor(newN), newN) &&
		equals(floor(newD), newD)) {
		return Rational.makeInstance(newN, newD);
	    } else {
		return FloatPoint.makeInstance(_integerDivideToFixnum(newN, newD));
	    }
	} else {
	    var newN = sqrt(negate(this.n));
	    var newD = sqrt(this.d);
	    if (equals(floor(newN), newN) &&
		equals(floor(newD), newD)) {
		return Complex.makeInstance(
		    0,
		    Rational.makeInstance(newN, newD));
	    } else {
		return Complex.makeInstance(
		    0,
		    FloatPoint.makeInstance(_integerDivideToFixnum(newN, newD)));
	    }
	}
    };

    Rational.prototype.abs = function() {
	return Rational.makeInstance(abs(this.n),
				     this.d);
    };


    Rational.prototype.floor = function() {
	var quotient = _integerQuotient(this.n, this.d);
	if (_integerLessThan(this.n, 0)) {
	    return subtract(quotient, 1);
	} else {
	    return quotient;
	}
    };


    Rational.prototype.ceiling = function() {
	var quotient = _integerQuotient(this.n, this.d);
	if (_integerLessThan(this.n, 0)) {
	    return quotient;
	} else {
	    return add(quotient, 1);
	}
    };

    Rational.prototype.conjugate = function() {
	return this;
    };

    Rational.prototype.magnitude = Rational.prototype.abs;

    Rational.prototype.log = function(){
	return FloatPoint.makeInstance(Math.log(this.n / this.d));
    };

    Rational.prototype.angle = function(){
	if (_integerIsZero(this.n))
	    return 0;
	if (_integerGreaterThan(this.n, 0))
	    return 0;
	else
	    return FloatPoint.pi;
    };

    Rational.prototype.tan = function(){
	return FloatPoint.makeInstance(Math.tan(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.atan = function(){
	return FloatPoint.makeInstance(Math.atan(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.cos = function(){
	return FloatPoint.makeInstance(Math.cos(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.sin = function(){
	return FloatPoint.makeInstance(Math.sin(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.expt = function(a){
	if (isExactInteger(a) && greaterThanOrEqual(a, 0)) {
	    return fastExpt(this, a);
	}
	return FloatPoint.makeInstance(Math.pow(_integerDivideToFixnum(this.n, this.d),
						_integerDivideToFixnum(a.n, a.d)));
    };

    Rational.prototype.exp = function(){
	return FloatPoint.makeInstance(Math.exp(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.acos = function(){
	return FloatPoint.makeInstance(Math.acos(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.asin = function(){
	return FloatPoint.makeInstance(Math.asin(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.imaginaryPart = function(){
	return 0;
    };

    Rational.prototype.realPart = function(){
	return this;
    };


    Rational.prototype.round = function() {
	// FIXME: not correct when values are bignums
	if (equals(this.d, 2)) {
	    // Round to even if it's a n/2
	    var v = _integerDivideToFixnum(this.n, this.d);
	    var fl = Math.floor(v);
	    var ce = Math.ceil(v);
	    if (_integerIsZero(fl % 2)) {
		return fl;
	    }
	    else {
		return ce;
	    }
	} else {
	    return Math.round(this.n / this.d);
	}
    };


    Rational.makeInstance = function(n, d) {
	if (n === undefined)
	    throwRuntimeError("n undefined", n, d);

	if (d === undefined) { d = 1; }

	if (_integerLessThan(d, 0)) {
	    n = negate(n);
	    d = negate(d);
	}

	var divisor = _integerGcd(abs(n), abs(d));
	n = _integerQuotient(n, divisor);
	d = _integerQuotient(d, divisor);

	// Optimization: if we can get around construction the rational
	// in favor of just returning n, do it:
	if (_integerIsOne(d) || _integerIsZero(n)) {
	    return n;
	}

	return new Rational(n, d);
    };



    // Floating Point numbers
    var FloatPoint = function(n) {
	this.n = n;
    };
    FloatPoint = FloatPoint;


    var NaN = new FloatPoint(Number.NaN);
    var inf = new FloatPoint(Number.POSITIVE_INFINITY);
    var neginf = new FloatPoint(Number.NEGATIVE_INFINITY);

    // We use these two constants to represent the floating-point coersion
    // of bignums that can't be represented with fidelity.
    var TOO_POSITIVE_TO_REPRESENT = new FloatPoint(Number.POSITIVE_INFINITY);
    var TOO_NEGATIVE_TO_REPRESENT = new FloatPoint(Number.NEGATIVE_INFINITY);

    // Negative zero is a distinguished value representing -0.0.
    // There should only be one instance for -0.0.
    var NEGATIVE_ZERO = new FloatPoint(-0.0);
    var INEXACT_ZERO = new FloatPoint(0.0);

    FloatPoint.pi = new FloatPoint(Math.PI);
    FloatPoint.e = new FloatPoint(Math.E);
    FloatPoint.nan = NaN;
    FloatPoint.inf = inf;
    FloatPoint.neginf = neginf;

    FloatPoint.makeInstance = function(n) {
	if (isNaN(n)) {
	    return FloatPoint.nan;
	} else if (n === Number.POSITIVE_INFINITY) {
	    return FloatPoint.inf;
	} else if (n === Number.NEGATIVE_INFINITY) {
	    return FloatPoint.neginf;
	} else if (n === 0) {
	    if ((1/n) === -Infinity) {
		return NEGATIVE_ZERO;
	    } else {
		return INEXACT_ZERO;
	    }
	}
	return new FloatPoint(n);
    };


    FloatPoint.prototype.isExact = function() {
	return false;
    };

    FloatPoint.prototype.isInexact = function() {
	return true;
    };


    FloatPoint.prototype.isFinite = function() {
	return (isFinite(this.n) ||
		this === TOO_POSITIVE_TO_REPRESENT ||
		this === TOO_NEGATIVE_TO_REPRESENT);
    };


    FloatPoint.prototype.toExact = function() {
	// The precision of ieee is about 16 decimal digits, which we use here.
	if (! isFinite(this.n) || isNaN(this.n)) {
	    throwRuntimeError("toExact: no exact representation for " + this, this);
	}

	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var intPart = parseInt(match[1]);
	    var fracPart = parseInt(match[2]);
	    var tenToDecimalPlaces = Math.pow(10, match[2].length);
	    return Rational.makeInstance(Math.round(this.n * tenToDecimalPlaces),
					 tenToDecimalPlaces);
	}
	else {
	    return this.n;
	}
    };

    FloatPoint.prototype.toInexact = function() {
	return this;
    };

    FloatPoint.prototype.isInexact = function() {
	return true;
    };


    FloatPoint.prototype.level = 2;


    FloatPoint.prototype.liftTo = function(target) {
	if (target.level === 3)
	    return new Complex(this, 0);
	return throwRuntimeError("invalid level of Number", this, target);
    };

    FloatPoint.prototype.toString = function() {
	if (isNaN(this.n))
	    return "+nan.0";
	if (this.n === Number.POSITIVE_INFINITY)
	    return "+inf.0";
	if (this.n === Number.NEGATIVE_INFINITY)
	    return "-inf.0";
	if (this === NEGATIVE_ZERO)
	    return "-0.0";
	var partialResult = this.n.toString();
	if (! partialResult.match('\\.')) {
	    return partialResult + ".0";
	} else {
	    return partialResult;
	}
    };


    FloatPoint.prototype.equals = function(other, aUnionFind) {
	return ((other instanceof FloatPoint) &&
		((this.n === other.n)));
    };



    FloatPoint.prototype.isRational = function() {
        return this.isFinite();
    };

    FloatPoint.prototype.isInteger = function() {
	return this.isFinite() && this.n === Math.floor(this.n);
    };

    FloatPoint.prototype.isReal = function() {
	return true;
    };


    // sign: Number -> {-1, 0, 1}
    var sign = function(n) {
	if (lessThan(n, 0)) {
	    return -1;
	} else if (greaterThan(n, 0)) {
	    return 1;
	} else if (n === NEGATIVE_ZERO) {
	    return -1;
	} else {
	    return 0;
	}
    };


    FloatPoint.prototype.add = function(other) {
	if (this.isFinite() && other.isFinite()) {
	    return FloatPoint.makeInstance(this.n + other.n);
	} else {
	    if (isNaN(this.n) || isNaN(other.n)) {
		return NaN;
	    } else if (this.isFinite() && ! other.isFinite()) {
		return other;
	    } else if (!this.isFinite() && other.isFinite()) {
		return this;
	    } else {
		return ((sign(this) * sign(other) === 1) ?
			this : NaN);
	    };
	}
    };

    FloatPoint.prototype.subtract = function(other) {
	if (this.isFinite() && other.isFinite()) {
	    return FloatPoint.makeInstance(this.n - other.n);
	} else if (isNaN(this.n) || isNaN(other.n)) {
	    return NaN;
	} else if (! this.isFinite() && ! other.isFinite()) {
	    if (sign(this) === sign(other)) {
		return NaN;
	    } else {
		return this;
	    }
	} else if (this.isFinite()) {
	    return multiply(other, -1);
	} else {  // other.isFinite()
	    return this;
	}
    };


    FloatPoint.prototype.negate = function() {
	return FloatPoint.makeInstance(-this.n);
    };

    FloatPoint.prototype.multiply = function(other) {
	return FloatPoint.makeInstance(this.n * other.n);
    };

    FloatPoint.prototype.divide = function(other) {
        return FloatPoint.makeInstance(this.n / other.n);
    };


    FloatPoint.prototype.toFixnum = function() {
	return this.n;
    };

    FloatPoint.prototype.numerator = function() {
	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var afterDecimal = parseInt(match[2]);
	    var factorToInt = Math.pow(10, match[2].length);
	    var extraFactor = _integerGcd(factorToInt, afterDecimal);
	    var multFactor = factorToInt / extraFactor;
	    return FloatPoint.makeInstance( Math.round(this.n * multFactor) );
	} else {
	    return this;
	}
    };

    FloatPoint.prototype.denominator = function() {
	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var afterDecimal = parseInt(match[2]);
	    var factorToInt = Math.pow(10, match[2].length);
	    var extraFactor = _integerGcd(factorToInt, afterDecimal);
	    return FloatPoint.makeInstance( Math.round(factorToInt/extraFactor) );
	} else {
	    return FloatPoint.makeInstance(1);
	}
    };


    FloatPoint.prototype.floor = function() {
	return FloatPoint.makeInstance(Math.floor(this.n));
    };

    FloatPoint.prototype.ceiling = function() {
	return FloatPoint.makeInstance(Math.ceil(this.n));
    };


    FloatPoint.prototype.greaterThan = function(other) {
	return this.n > other.n;
    };

    FloatPoint.prototype.greaterThanOrEqual = function(other) {
	return this.n >= other.n;
    };

    FloatPoint.prototype.lessThan = function(other) {
	return this.n < other.n;
    };

    FloatPoint.prototype.lessThanOrEqual = function(other) {
	return this.n <= other.n;
    };


    FloatPoint.prototype.integerSqrt = function() {
	if (this === NEGATIVE_ZERO) { return this; }
	if (isInteger(this)) {
	    if(this.n >= 0) {
	        return FloatPoint.makeInstance(Math.floor(Math.sqrt(this.n)));
	    } else {
	        return Complex.makeInstance(
		    INEXACT_ZERO,
		    FloatPoint.makeInstance(Math.floor(Math.sqrt(-this.n))));
	    }
	} else {
	    throwRuntimeError("integerSqrt: can only be applied to an integer", this);
	}
    };

    FloatPoint.prototype.sqrt = function() {
	if (this.n < 0) {
	    var result = Complex.makeInstance(
		0,
		FloatPoint.makeInstance(Math.sqrt(-this.n)));
	    return result;
	} else {
	    return FloatPoint.makeInstance(Math.sqrt(this.n));
	}
    };

    FloatPoint.prototype.abs = function() {
	return FloatPoint.makeInstance(Math.abs(this.n));
    };



    FloatPoint.prototype.log = function(){
	if (this.n < 0)
	    return (new Complex(this, 0)).log();
	else
	    return FloatPoint.makeInstance(Math.log(this.n));
    };

    FloatPoint.prototype.angle = function(){
	if (0 === this.n)
	    return 0;
	if (this.n > 0)
	    return 0;
	else
	    return FloatPoint.pi;
    };

    FloatPoint.prototype.tan = function(){
	return FloatPoint.makeInstance(Math.tan(this.n));
    };

    FloatPoint.prototype.atan = function(){
	return FloatPoint.makeInstance(Math.atan(this.n));
    };

    FloatPoint.prototype.cos = function(){
	return FloatPoint.makeInstance(Math.cos(this.n));
    };

    FloatPoint.prototype.sin = function(){
	return FloatPoint.makeInstance(Math.sin(this.n));
    };

    FloatPoint.prototype.expt = function(a){
	if (this.n === 1) {
	    if (a.isFinite()) {
		return this;
	    } else if (isNaN(a.n)){
		return this;
	    } else {
		return this;
	    }
	} else {
	    return FloatPoint.makeInstance(Math.pow(this.n, a.n));
	}
    };

    FloatPoint.prototype.exp = function(){
	return FloatPoint.makeInstance(Math.exp(this.n));
    };

    FloatPoint.prototype.acos = function(){
	return FloatPoint.makeInstance(Math.acos(this.n));
    };

    FloatPoint.prototype.asin = function(){
	return FloatPoint.makeInstance(Math.asin(this.n));
    };

    FloatPoint.prototype.imaginaryPart = function(){
	return 0;
    };

    FloatPoint.prototype.realPart = function(){
	return this;
    };


    FloatPoint.prototype.round = function(){
	if (isFinite(this.n)) {
	    if (this === NEGATIVE_ZERO) {
		return this;
	    }
	    if (Math.abs(Math.floor(this.n) - this.n) === 0.5) {
		if (Math.floor(this.n) % 2 === 0)
		    return FloatPoint.makeInstance(Math.floor(this.n));
		return FloatPoint.makeInstance(Math.ceil(this.n));
	    } else {
		return FloatPoint.makeInstance(Math.round(this.n));
	    }
	} else {
	    return this;
	}
    };


    FloatPoint.prototype.conjugate = function() {
	return this;
    };

    FloatPoint.prototype.magnitude = FloatPoint.prototype.abs;



    //////////////////////////////////////////////////////////////////////
    // Complex numbers
    //////////////////////////////////////////////////////////////////////

    var Complex = function(r, i){
	this.r = r;
	this.i = i;
    };

    // Constructs a complex number from two basic number r and i.  r and i can
    // either be plt.type.Rational or plt.type.FloatPoint.
    Complex.makeInstance = function(r, i){
	if (i === undefined) { i = 0; }
	if (isExact(i) && isInteger(i) && _integerIsZero(i)) {
	    return r;
	}
	if (isInexact(r) || isInexact(i)) {
	    r = toInexact(r);
	    i = toInexact(i);
	}
	return new Complex(r, i);
    };

    Complex.prototype.toString = function() {
	var realPart = this.r.toString(), imagPart = this.i.toString();
	if (imagPart[0] === '-' || imagPart[0] === '+') {
	    return realPart + imagPart + 'i';
	} else {
	    return realPart + "+" + imagPart + 'i';
	}
    };


    Complex.prototype.isFinite = function() {
	return isSchemeNumberFinite(this.r) && isSchemeNumberFinite(this.i);
    };


    Complex.prototype.isRational = function() {
	return isRational(this.r) && eqv(this.i, 0);
    };

    Complex.prototype.isInteger = function() {
	return (isInteger(this.r) &&
		eqv(this.i, 0));
    };

    Complex.prototype.toExact = function() {
	return Complex.makeInstance( toExact(this.r), toExact(this.i) );
    };

    Complex.prototype.toInexact = function() {
	return Complex.makeInstance(toInexact(this.r),
				    toInexact(this.i));
    };


    Complex.prototype.isExact = function() {
        return isExact(this.r) && isExact(this.i);
    };


    Complex.prototype.isInexact = function() {
	return isInexact(this.r) || isInexact(this.i);
    };


    Complex.prototype.level = 3;


    Complex.prototype.liftTo = function(target){
	throwRuntimeError("Don't know how to lift Complex number", this, target);
    };

    Complex.prototype.equals = function(other) {
	var result = ((other instanceof Complex) &&
		      (equals(this.r, other.r)) &&
		      (equals(this.i, other.i)));
	return result;
    };



    Complex.prototype.greaterThan = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError(">: expects argument of type real number", this, other);
	}
	return greaterThan(this.r, other.r);
    };

    Complex.prototype.greaterThanOrEqual = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError(">=: expects argument of type real number", this, other);
	}
	return greaterThanOrEqual(this.r, other.r);
    };

    Complex.prototype.lessThan = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError("<: expects argument of type real number", this, other);
	}
	return lessThan(this.r, other.r);
    };

    Complex.prototype.lessThanOrEqual = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError("<=: expects argument of type real number", this, other);
	}
	return lessThanOrEqual(this.r, other.r);
    };


    Complex.prototype.abs = function(){
	if (!equals(this.i, 0).valueOf())
	    throwRuntimeError("abs: expects argument of type real number", this);
	return abs(this.r);
    };

    Complex.prototype.toFixnum = function(){
	if (!equals(this.i, 0).valueOf())
	    throwRuntimeError("toFixnum: expects argument of type real number", this);
	return toFixnum(this.r);
    };

    Complex.prototype.numerator = function() {
	if (!this.isReal())
	    throwRuntimeError("numerator: can only be applied to real number", this);
	return numerator(this.n);
    };


    Complex.prototype.denominator = function() {
	if (!this.isReal())
	    throwRuntimeError("floor: can only be applied to real number", this);
	return denominator(this.n);
    };

    Complex.prototype.add = function(other){
	return Complex.makeInstance(
	    add(this.r, other.r),
	    add(this.i, other.i));
    };

    Complex.prototype.subtract = function(other){
	return Complex.makeInstance(
	    subtract(this.r, other.r),
	    subtract(this.i, other.i));
    };

    Complex.prototype.negate = function() {
	return Complex.makeInstance(negate(this.r),
				    negate(this.i));
    };


    Complex.prototype.multiply = function(other){
	// If the other value is real, just do primitive division
	if (other.isReal()) {
	    return Complex.makeInstance(
		multiply(this.r, other.r),
		multiply(this.i, other.r));
	}
	var r = subtract(
	    multiply(this.r, other.r),
	    multiply(this.i, other.i));
	var i = add(
	    multiply(this.r, other.i),
	    multiply(this.i, other.r));
	return Complex.makeInstance(r, i);
    };





    Complex.prototype.divide = function(other){
	var a, b, c, d, r, x, y;
	// If the other value is real, just do primitive division
	if (other.isReal()) {
	    return Complex.makeInstance(
		divide(this.r, other.r),
		divide(this.i, other.r));
	}

	if (this.isInexact() || other.isInexact()) {
	    // http://portal.acm.org/citation.cfm?id=1039814
	    // We currently use Smith's method, though we should
	    // probably switch over to Priest's method.
	    a = this.r;
	    b = this.i;
	    c = other.r;
	    d = other.i;
	    if (lessThanOrEqual(abs(d), abs(c))) {
		r = divide(d, c);
		x = divide(add(a, multiply(b, r)),
			   add(c, multiply(d, r)));
		y = divide(subtract(b, multiply(a, r)),
			   add(c, multiply(d, r)));
	    } else {
		r = divide(c, d);
		x = divide(add(multiply(a, r), b),
			   add(multiply(c, r), d));
		y = divide(subtract(multiply(b, r), a),
			   add(multiply(c, r), d));
	    }
	    return Complex.makeInstance(x, y);
	} else {
	    var con = conjugate(other);
	    var up = multiply(this, con);

	    // Down is guaranteed to be real by this point.
	    var down = realPart(multiply(other, con));

	    var result = Complex.makeInstance(
		divide(realPart(up), down),
		divide(imaginaryPart(up), down));
	    return result;
	}
    };

    Complex.prototype.conjugate = function(){
	var result = Complex.makeInstance(
	    this.r,
	    subtract(0, this.i));

	return result;
    };

    Complex.prototype.magnitude = function(){
	var sum = add(
	    multiply(this.r, this.r),
	    multiply(this.i, this.i));
	return sqrt(sum);
    };

    Complex.prototype.isReal = function(){
	return eqv(this.i, 0);
    };

    Complex.prototype.integerSqrt = function() {
	if (isInteger(this)) {
	    return integerSqrt(this.r);
	} else {
	    throwRuntimeError("integerSqrt: can only be applied to an integer", this);
	}
    };

    Complex.prototype.sqrt = function(){
	if (this.isReal())
	    return sqrt(this.r);
	// http://en.wikipedia.org/wiki/Square_root#Square_roots_of_negative_and_complex_numbers
	var r_plus_x = add(this.magnitude(), this.r);

	var r = sqrt(halve(r_plus_x));

	var i = divide(this.i, sqrt(multiply(r_plus_x, 2)));


	return Complex.makeInstance(r, i);
    };

    Complex.prototype.log = function(){
	var m = this.magnitude();
	var theta = this.angle();
	var result = add(
	    log(m),
	    timesI(theta));
	return result;
    };

    Complex.prototype.angle = function(){
	if (this.isReal()) {
	    return angle(this.r);
	}
	if (equals(0, this.r)) {
	    var tmp = halve(FloatPoint.pi);
	    return greaterThan(this.i, 0) ?
		tmp : negate(tmp);
	} else {
	    var tmp = atan(divide(abs(this.i), abs(this.r)));
	    if (greaterThan(this.r, 0)) {
		return greaterThan(this.i, 0) ?
		    tmp : negate(tmp);
	    } else {
		return greaterThan(this.i, 0) ?
		    subtract(FloatPoint.pi, tmp) : subtract(tmp, FloatPoint.pi);
	    }
	}
    };

    var plusI = Complex.makeInstance(0, 1);
    var minusI = Complex.makeInstance(0, -1);


    Complex.prototype.tan = function() {
	return divide(this.sin(), this.cos());
    };

    Complex.prototype.atan = function(){
	if (equals(this, plusI) ||
	    equals(this, minusI)) {
	    return neginf;
	}
	return multiply(
	    plusI,
	    multiply(
		FloatPoint.makeInstance(0.5),
		log(divide(
		    add(plusI, this),
		    add(
			plusI,
			subtract(0, this))))));
    };

    Complex.prototype.cos = function(){
	if (this.isReal())
	    return cos(this.r);
	var iz = timesI(this);
	var iz_negate = negate(iz);

	return halve(add(exp(iz), exp(iz_negate)));
    };

    Complex.prototype.sin = function(){
	if (this.isReal())
	    return sin(this.r);
	var iz = timesI(this);
	var iz_negate = negate(iz);
	var z2 = Complex.makeInstance(0, 2);
	var exp_negate = subtract(exp(iz), exp(iz_negate));
	var result = divide(exp_negate, z2);
	return result;
    };


    Complex.prototype.expt = function(y){
	if (isExactInteger(y) && greaterThanOrEqual(y, 0)) {
	    return fastExpt(this, y);
	}
	var expo = multiply(y, this.log());
	return exp(expo);
    };

    Complex.prototype.exp = function(){
	var r = exp(this.r);
	var cos_a = cos(this.i);
	var sin_a = sin(this.i);

	return multiply(
	    r,
	    add(cos_a, timesI(sin_a)));
    };

    Complex.prototype.acos = function(){
	if (this.isReal())
	    return acos(this.r);
	var pi_half = halve(FloatPoint.pi);
	var iz = timesI(this);
	var root = sqrt(subtract(1, sqr(this)));
	var l = timesI(log(add(iz, root)));
	return add(pi_half, l);
    };

    Complex.prototype.asin = function(){
	if (this.isReal())
	    return asin(this.r);

	var oneNegateThisSq =
	    subtract(1, sqr(this));
	var sqrtOneNegateThisSq = sqrt(oneNegateThisSq);
	return multiply(2, atan(divide(this,
				       add(1, sqrtOneNegateThisSq))));
    };

    Complex.prototype.ceiling = function(){
	if (!this.isReal())
	    throwRuntimeError("ceiling: can only be applied to real number", this);
	return ceiling(this.r);
    };

    Complex.prototype.floor = function(){
	if (!this.isReal())
	    throwRuntimeError("floor: can only be applied to real number", this);
	return floor(this.r);
    };

    Complex.prototype.imaginaryPart = function(){
	return this.i;
    };

    Complex.prototype.realPart = function(){
	return this.r;
    };

    Complex.prototype.round = function(){
	if (!this.isReal())
	    throwRuntimeError("round: can only be applied to real number", this);
	return round(this.r);
    };



    var rationalRegexp = new RegExp("^([+-]?\\d+)/(\\d+)$");
    var complexRegexp = new RegExp("^([+-]?[\\d\\w/\\.]*)([+-])([\\d\\w/\\.]*)i$");
    var digitRegexp = new RegExp("^[+-]?\\d+$");
    var flonumRegexp = new RegExp("^([+-]?\\d*)\\.(\\d*)$");
    var scientificPattern = new RegExp("^([+-]?\\d*\\.?\\d*)[Ee](\\+?\\d+)$");

    // fromString: string -> (scheme-number | false)
    var fromString = function(x) {
	var aMatch = x.match(rationalRegexp);
	if (aMatch) {
	    return Rational.makeInstance(fromString(aMatch[1]),
					 fromString(aMatch[2]));
	}

	var cMatch = x.match(complexRegexp);
	if (cMatch) {
	    return Complex.makeInstance(fromString(cMatch[1] || "0"),
					fromString(cMatch[2] + (cMatch[3] || "1")));
	}

	// Floating point tests
	if (x === '+nan.0' || x === '-nan.0')
	    return FloatPoint.nan;
	if (x === '+inf.0')
	    return FloatPoint.inf;
	if (x === '-inf.0')
	    return FloatPoint.neginf;
	if (x === "-0.0") {
	    return NEGATIVE_ZERO;
	}
	if (x.match(flonumRegexp) ||  x.match(scientificPattern)) {
	    return FloatPoint.makeInstance(Number(x));
	}

	// Finally, integer tests.
	if (x.match(digitRegexp)) {
	    var n = Number(x);
	    if (isOverflow(n)) {
		return makeBignum(x);
	    } else {
		return n;
	    }
	} else {
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // The code below comes from Tom Wu's BigInteger implementation:

    // Copyright (c) 2005  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.

    // Basic JavaScript BN library - subset useful for RSA encryption.

    // Bits per digit
    var dbits;

    // JavaScript engine analysis
    var canary = 0xdeadbeefcafe;
    var j_lm = ((canary&0xffffff)==0xefcafe);

    // (public) Constructor
    function BigInteger(a,b,c) {
	if(a != null)
	    if("number" == typeof a) this.fromNumber(a,b,c);
	else if(b == null && "string" != typeof a) this.fromString(a,256);
	else this.fromString(a,b);
    }

    // return new, unset BigInteger
    function nbi() { return new BigInteger(null); }

    // am: Compute w_j += (x*this_i), propagate carries,
    // c is initial carry, returns final carry.
    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
    // We need to select the fastest one that works in this environment.

    // am1: use a single mult and divide to get the high bits,
    // max digit bits should be 26 because
    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
    function am1(i,x,w,j,c,n) {
	while(--n >= 0) {
	    var v = x*this[i++]+w[j]+c;
	    c = Math.floor(v/0x4000000);
	    w[j++] = v&0x3ffffff;
	}
	return c;
    }
    // am2 avoids a big mult-and-extract completely.
    // Max digit bits should be <= 30 because we do bitwise ops
    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
    function am2(i,x,w,j,c,n) {
	var xl = x&0x7fff, xh = x>>15;
	while(--n >= 0) {
	    var l = this[i]&0x7fff;
	    var h = this[i++]>>15;
	    var m = xh*l+h*xl;
	    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
	    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
	    w[j++] = l&0x3fffffff;
	}
	return c;
    }
    // Alternately, set max digit bits to 28 since some
    // browsers slow down when dealing with 32-bit numbers.
    function am3(i,x,w,j,c,n) {
	var xl = x&0x3fff, xh = x>>14;
	while(--n >= 0) {
	    var l = this[i]&0x3fff;
	    var h = this[i++]>>14;
	    var m = xh*l+h*xl;
	    l = xl*l+((m&0x3fff)<<14)+w[j]+c;
	    c = (l>>28)+(m>>14)+xh*h;
	    w[j++] = l&0xfffffff;
	}
	return c;
    }
    if(j_lm && (typeof(navigator) !== 'undefined' && navigator.appName == "Microsoft Internet Explorer")) {
	BigInteger.prototype.am = am2;
	dbits = 30;
    }
    else if(j_lm && (typeof(navigator) !== 'undefined' && navigator.appName != "Netscape")) {
	BigInteger.prototype.am = am1;
	dbits = 26;
    }
    else { // Mozilla/Netscape seems to prefer am3
	BigInteger.prototype.am = am3;
	dbits = 28;
    }

    BigInteger.prototype.DB = dbits;
    BigInteger.prototype.DM = ((1<<dbits)-1);
    BigInteger.prototype.DV = (1<<dbits);

    var BI_FP = 52;
    BigInteger.prototype.FV = Math.pow(2,BI_FP);
    BigInteger.prototype.F1 = BI_FP-dbits;
    BigInteger.prototype.F2 = 2*dbits-BI_FP;

    // Digit conversions
    var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
    var BI_RC = [];
    var rr,vv;
    rr = "0".charCodeAt(0);
    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
    rr = "a".charCodeAt(0);
    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
    rr = "A".charCodeAt(0);
    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

    function int2char(n) { return BI_RM.charAt(n); }
    function intAt(s,i) {
	var c = BI_RC[s.charCodeAt(i)];
	return (c==null)?-1:c;
    }

    // (protected) copy this to r
    function bnpCopyTo(r) {
	for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
	r.t = this.t;
	r.s = this.s;
    }

    // (protected) set from integer value x, -DV <= x < DV
    function bnpFromInt(x) {
	this.t = 1;
	this.s = (x<0)?-1:0;
	if(x > 0) this[0] = x;
	else if(x < -1) this[0] = x+DV;
	else this.t = 0;
    }

    // return bigint initialized to value
    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

    // (protected) set from string and radix
    function bnpFromString(s,b) {
	var k;
	if(b == 16) k = 4;
	else if(b == 8) k = 3;
	else if(b == 256) k = 8; // byte array
	else if(b == 2) k = 1;
	else if(b == 32) k = 5;
	else if(b == 4) k = 2;
	else { this.fromRadix(s,b); return; }
	this.t = 0;
	this.s = 0;
	var i = s.length, mi = false, sh = 0;
	while(--i >= 0) {
	    var x = (k==8)?s[i]&0xff:intAt(s,i);
	    if(x < 0) {
		if(s.charAt(i) == "-") mi = true;
		continue;
	    }
	    mi = false;
	    if(sh == 0)
		this[this.t++] = x;
	    else if(sh+k > this.DB) {
		this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
		this[this.t++] = (x>>(this.DB-sh));
	    }
	    else
		this[this.t-1] |= x<<sh;
	    sh += k;
	    if(sh >= this.DB) sh -= this.DB;
	}
	if(k == 8 && (s[0]&0x80) != 0) {
	    this.s = -1;
	    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
	}
	this.clamp();
	if(mi) BigInteger.ZERO.subTo(this,this);
    }

    // (protected) clamp off excess high words
    function bnpClamp() {
	var c = this.s&this.DM;
	while(this.t > 0 && this[this.t-1] == c) --this.t;
    }

    // (public) return string representation in given radix
    function bnToString(b) {
	if(this.s < 0) return "-"+this.negate().toString(b);
	var k;
	if(b == 16) k = 4;
	else if(b == 8) k = 3;
	else if(b == 2) k = 1;
	else if(b == 32) k = 5;
	else if(b == 4) k = 2;
	else return this.toRadix(b);
	var km = (1<<k)-1, d, m = false, r = [], i = this.t;
	var p = this.DB-(i*this.DB)%k;
	if(i-- > 0) {
	    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r.push(int2char(d)); }
	    while(i >= 0) {
		if(p < k) {
		    d = (this[i]&((1<<p)-1))<<(k-p);
		    d |= this[--i]>>(p+=this.DB-k);
		}
		else {
		    d = (this[i]>>(p-=k))&km;
		    if(p <= 0) { p += this.DB; --i; }
		}
		if(d > 0) m = true;
		if(m) r.push(int2char(d));
	    }
	}
	return m?r.join(""):"0";
    }

    // (public) -this
    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

    // (public) |this|
    function bnAbs() { return (this.s<0)?this.negate():this; }

    // (public) return + if this > a, - if this < a, 0 if equal
    function bnCompareTo(a) {
	var r = this.s-a.s;
	if(r != 0) return r;
	var i = this.t;
	if ( this.s < 0 ) {
		r = a.t - i;
	}
	else {
		r = i - a.t;
	}
	if(r != 0) return r;
	while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
	return 0;
    }

    // returns bit length of the integer x
    function nbits(x) {
	var r = 1, t;
	if((t=x>>>16) != 0) { x = t; r += 16; }
	if((t=x>>8) != 0) { x = t; r += 8; }
	if((t=x>>4) != 0) { x = t; r += 4; }
	if((t=x>>2) != 0) { x = t; r += 2; }
	if((t=x>>1) != 0) { x = t; r += 1; }
	return r;
    }

    // (public) return the number of bits in "this"
    function bnBitLength() {
	if(this.t <= 0) return 0;
	return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
    }

    // (protected) r = this << n*DB
    function bnpDLShiftTo(n,r) {
	var i;
	for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
	for(i = n-1; i >= 0; --i) r[i] = 0;
	r.t = this.t+n;
	r.s = this.s;
    }

    // (protected) r = this >> n*DB
    function bnpDRShiftTo(n,r) {
	for(var i = n; i < this.t; ++i) r[i-n] = this[i];
	r.t = Math.max(this.t-n,0);
	r.s = this.s;
    }

    // (protected) r = this << n
    function bnpLShiftTo(n,r) {
	var bs = n%this.DB;
	var cbs = this.DB-bs;
	var bm = (1<<cbs)-1;
	var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
	for(i = this.t-1; i >= 0; --i) {
	    r[i+ds+1] = (this[i]>>cbs)|c;
	    c = (this[i]&bm)<<bs;
	}
	for(i = ds-1; i >= 0; --i) r[i] = 0;
	r[ds] = c;
	r.t = this.t+ds+1;
	r.s = this.s;
	r.clamp();
    }

    // (protected) r = this >> n
    function bnpRShiftTo(n,r) {
	r.s = this.s;
	var ds = Math.floor(n/this.DB);
	if(ds >= this.t) { r.t = 0; return; }
	var bs = n%this.DB;
	var cbs = this.DB-bs;
	var bm = (1<<bs)-1;
	r[0] = this[ds]>>bs;
	for(var i = ds+1; i < this.t; ++i) {
	    r[i-ds-1] |= (this[i]&bm)<<cbs;
	    r[i-ds] = this[i]>>bs;
	}
	if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
	r.t = this.t-ds;
	r.clamp();
    }

    // (protected) r = this - a
    function bnpSubTo(a,r) {
	var i = 0, c = 0, m = Math.min(a.t,this.t);
	while(i < m) {
	    c += this[i]-a[i];
	    r[i++] = c&this.DM;
	    c >>= this.DB;
	}
	if(a.t < this.t) {
	    c -= a.s;
	    while(i < this.t) {
		c += this[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += this.s;
	}
	else {
	    c += this.s;
	    while(i < a.t) {
		c -= a[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c -= a.s;
	}
	r.s = (c<0)?-1:0;
	if(c < -1) r[i++] = this.DV+c;
	else if(c > 0) r[i++] = c;
	r.t = i;
	r.clamp();
    }

    // (protected) r = this * a, r != this,a (HAC 14.12)
    // "this" should be the larger one if appropriate.
    function bnpMultiplyTo(a,r) {
	var x = this.abs(), y = a.abs();
	var i = x.t;
	r.t = i+y.t;
	while(--i >= 0) r[i] = 0;
	for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
	r.s = 0;
	r.clamp();
	if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
    }

    // (protected) r = this^2, r != this (HAC 14.16)
    function bnpSquareTo(r) {
	var x = this.abs();
	var i = r.t = 2*x.t;
	while(--i >= 0) r[i] = 0;
	for(i = 0; i < x.t-1; ++i) {
	    var c = x.am(i,x[i],r,2*i,0,1);
	    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
		r[i+x.t] -= x.DV;
		r[i+x.t+1] = 1;
	    }
	}
	if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
	r.s = 0;
	r.clamp();
    }


    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
    // r != q, this != m.  q or r may be null.
    function bnpDivRemTo(m,q,r) {
	var pm = m.abs();
	if(pm.t <= 0) return;
	var pt = this.abs();
	if(pt.t < pm.t) {
	    if(q != null) q.fromInt(0);
	    if(r != null) this.copyTo(r);
	    return;
	}
	if(r == null) r = nbi();
	var y = nbi(), ts = this.s, ms = m.s;
	var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
	if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
	else { pm.copyTo(y); pt.copyTo(r); }
	var ys = y.t;
	var y0 = y[ys-1];
	if(y0 == 0) return;
	var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
	var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
	var i = r.t, j = i-ys, t = (q==null)?nbi():q;
	y.dlShiftTo(j,t);
	if(r.compareTo(t) >= 0) {
	    r[r.t++] = 1;
	    r.subTo(t,r);
	}
	BigInteger.ONE.dlShiftTo(ys,t);
	t.subTo(y,y);	// "negative" y so we can replace sub with am later
	while(y.t < ys) y[y.t++] = 0;
	while(--j >= 0) {
	    // Estimate quotient digit
	    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
	    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
		y.dlShiftTo(j,t);
		r.subTo(t,r);
		while(r[i] < --qd) r.subTo(t,r);
	    }
	}
	if(q != null) {
	    r.drShiftTo(ys,q);
	    if(ts != ms) BigInteger.ZERO.subTo(q,q);
	}
	r.t = ys;
	r.clamp();
	if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
	if(ts < 0) BigInteger.ZERO.subTo(r,r);
    }

    // (public) this mod a
    function bnMod(a) {
	var r = nbi();
	this.abs().divRemTo(a,null,r);
	if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
	return r;
    }

    // Modular reduction using "classic" algorithm
    function Classic(m) { this.m = m; }
    function cConvert(x) {
	if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
	else return x;
    }
    function cRevert(x) { return x; }
    function cReduce(x) { x.divRemTo(this.m,null,x); }
    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    Classic.prototype.convert = cConvert;
    Classic.prototype.revert = cRevert;
    Classic.prototype.reduce = cReduce;
    Classic.prototype.mulTo = cMulTo;
    Classic.prototype.sqrTo = cSqrTo;

    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
    // justification:
    //         xy == 1 (mod m)
    //         xy =  1+km
    //   xy(2-xy) = (1+km)(1-km)
    // x[y(2-xy)] = 1-k^2m^2
    // x[y(2-xy)] == 1 (mod m^2)
    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
    // JS multiply "overflows" differently from C/C++, so care is needed here.
    function bnpInvDigit() {
	if(this.t < 1) return 0;
	var x = this[0];
	if((x&1) == 0) return 0;
	var y = x&3;		// y == 1/x mod 2^2
	y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
	y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
	y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
	// last step - calculate inverse mod DV directly;
	// assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
	y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
	// we really want the negative inverse, and -DV < y < DV
	return (y>0)?this.DV-y:-y;
    }

    // Montgomery reduction
    function Montgomery(m) {
	this.m = m;
	this.mp = m.invDigit();
	this.mpl = this.mp&0x7fff;
	this.mph = this.mp>>15;
	this.um = (1<<(m.DB-15))-1;
	this.mt2 = 2*m.t;
    }

    // xR mod m
    function montConvert(x) {
	var r = nbi();
	x.abs().dlShiftTo(this.m.t,r);
	r.divRemTo(this.m,null,r);
	if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
	return r;
    }

    // x/R mod m
    function montRevert(x) {
	var r = nbi();
	x.copyTo(r);
	this.reduce(r);
	return r;
    }

    // x = x/R mod m (HAC 14.32)
    function montReduce(x) {
	while(x.t <= this.mt2)	// pad x so am has enough room later
	    x[x.t++] = 0;
	for(var i = 0; i < this.m.t; ++i) {
	    // faster way of calculating u0 = x[i]*mp mod DV
	    var j = x[i]&0x7fff;
	    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
	    // use am to combine the multiply-shift-add into one call
	    j = i+this.m.t;
	    x[j] += this.m.am(0,u0,x,i,0,this.m.t);
	    // propagate carry
	    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
	}
	x.clamp();
	x.drShiftTo(this.m.t,x);
	if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
    }

    // r = "x^2/R mod m"; x != r
    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    // r = "xy/R mod m"; x,y != r
    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

    Montgomery.prototype.convert = montConvert;
    Montgomery.prototype.revert = montRevert;
    Montgomery.prototype.reduce = montReduce;
    Montgomery.prototype.mulTo = montMulTo;
    Montgomery.prototype.sqrTo = montSqrTo;

    // (protected) true iff this is even
    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
    function bnpExp(e,z) {
	    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
	    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
	    g.copyTo(r);
	    while(--i >= 0) {
	        z.sqrTo(r,r2);
	        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
	        else { var t = r; r = r2; r2 = t; }
	    }
	    return z.revert(r);
    }

    // (public) this^e % m, 0 <= e < 2^32
    function bnModPowInt(e,m) {
	var z;
	if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
	return this.exp(e,z);
    }

    // protected
    BigInteger.prototype.copyTo = bnpCopyTo;
    BigInteger.prototype.fromInt = bnpFromInt;
    BigInteger.prototype.fromString = bnpFromString;
    BigInteger.prototype.clamp = bnpClamp;
    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    BigInteger.prototype.lShiftTo = bnpLShiftTo;
    BigInteger.prototype.rShiftTo = bnpRShiftTo;
    BigInteger.prototype.subTo = bnpSubTo;
    BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    BigInteger.prototype.squareTo = bnpSquareTo;
    BigInteger.prototype.divRemTo = bnpDivRemTo;
    BigInteger.prototype.invDigit = bnpInvDigit;
    BigInteger.prototype.isEven = bnpIsEven;
    BigInteger.prototype.exp = bnpExp;

    // public
    BigInteger.prototype.toString = bnToString;
    BigInteger.prototype.negate = bnNegate;
    BigInteger.prototype.abs = bnAbs;
    BigInteger.prototype.compareTo = bnCompareTo;
    BigInteger.prototype.bitLength = bnBitLength;
    BigInteger.prototype.mod = bnMod;
    BigInteger.prototype.modPowInt = bnModPowInt;

    // "constants"
    BigInteger.ZERO = nbv(0);
    BigInteger.ONE = nbv(1);

    // Copyright (c) 2005-2009  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.

    // Extended JavaScript BN functions, required for RSA private ops.

    // Version 1.1: new BigInteger("0", 10) returns "proper" zero

    // (public)
    function bnClone() { var r = nbi(); this.copyTo(r); return r; }

    // (public) return value as integer
    function bnIntValue() {
	if(this.s < 0) {
	    if(this.t == 1) return this[0]-this.DV;
	    else if(this.t == 0) return -1;
	}
	else if(this.t == 1) return this[0];
	else if(this.t == 0) return 0;
	// assumes 16 < DB < 32
	return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
    }

    // (public) return value as byte
    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }

    // (public) return value as short (assumes DB>=16)
    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }

    // (protected) return x s.t. r^x < DV
    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

    // (public) 0 if this == 0, 1 if this > 0
    function bnSigNum() {
	if(this.s < 0) return -1;
	else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
	else return 1;
    }

    // (protected) convert to radix string
    function bnpToRadix(b) {
	if(b == null) b = 10;
	if(this.signum() == 0 || b < 2 || b > 36) return "0";
	var cs = this.chunkSize(b);
	var a = Math.pow(b,cs);
	var d = nbv(a), y = nbi(), z = nbi(), r = "";
	this.divRemTo(d,y,z);
	while(y.signum() > 0) {
	    r = (a+z.intValue()).toString(b).substr(1) + r;
	    y.divRemTo(d,y,z);
	}
	return z.intValue().toString(b) + r;
    }

    // (protected) convert from radix string
    function bnpFromRadix(s,b) {
	this.fromInt(0);
	if(b == null) b = 10;
	var cs = this.chunkSize(b);
	var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
	for(var i = 0; i < s.length; ++i) {
	    var x = intAt(s,i);
	    if(x < 0) {
		if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
		continue;
	    }
	    w = b*w+x;
	    if(++j >= cs) {
		this.dMultiply(d);
		this.dAddOffset(w,0);
		j = 0;
		w = 0;
	    }
	}
	if(j > 0) {
	    this.dMultiply(Math.pow(b,j));
	    this.dAddOffset(w,0);
	}
	if(mi) BigInteger.ZERO.subTo(this,this);
    }

    // (protected) alternate constructor
    function bnpFromNumber(a,b,c) {
	if("number" == typeof b) {
	    // new BigInteger(int,int,RNG)
	    if(a < 2) this.fromInt(1);
	    else {
		this.fromNumber(a,c);
		if(!this.testBit(a-1))	// force MSB set
		    this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);
		if(this.isEven()) this.dAddOffset(1,0); // force odd
		while(!this.isProbablePrime(b)) {
		    this.dAddOffset(2,0);
		    if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);
		}
	    }
	}
	else {
	    // new BigInteger(int,RNG)
	    var x = [], t = a&7;
	    x.length = (a>>3)+1;
	    b.nextBytes(x);
	    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;
	    this.fromString(x,256);
	}
    }

    // (public) convert to bigendian byte array
    function bnToByteArray() {
	var i = this.t, r = [];
	r[0] = this.s;
	var p = this.DB-(i*this.DB)%8, d, k = 0;
	if(i-- > 0) {
	    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)
		r[k++] = d|(this.s<<(this.DB-p));
	    while(i >= 0) {
		if(p < 8) {
		    d = (this[i]&((1<<p)-1))<<(8-p);
		    d |= this[--i]>>(p+=this.DB-8);
		}
		else {
		    d = (this[i]>>(p-=8))&0xff;
		    if(p <= 0) { p += this.DB; --i; }
		}
		if((d&0x80) != 0) d |= -256;
		if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;
		if(k > 0 || d != this.s) r[k++] = d;
	    }
	}
	return r;
    }

    function bnEquals(a) { return(this.compareTo(a)==0); }
    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }
    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }

    // (protected) r = this op a (bitwise)
    function bnpBitwiseTo(a,op,r) {
	var i, f, m = Math.min(a.t,this.t);
	for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);
	if(a.t < this.t) {
	    f = a.s&this.DM;
	    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);
	    r.t = this.t;
	}
	else {
	    f = this.s&this.DM;
	    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);
	    r.t = a.t;
	}
	r.s = op(this.s,a.s);
	r.clamp();
    }

    // (public) this & a
    function op_and(x,y) { return x&y; }
    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }

    // (public) this | a
    function op_or(x,y) { return x|y; }
    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }

    // (public) this ^ a
    function op_xor(x,y) { return x^y; }
    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }

    // (public) this & ~a
    function op_andnot(x,y) { return x&~y; }
    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }

    // (public) ~this
    function bnNot() {
	var r = nbi();
	for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];
	r.t = this.t;
	r.s = ~this.s;
	return r;
    }

    // (public) this << n
    function bnShiftLeft(n) {
	var r = nbi();
	if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);
	return r;
    }

    // (public) this >> n
    function bnShiftRight(n) {
	var r = nbi();
	if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);
	return r;
    }

    // return index of lowest 1-bit in x, x < 2^31
    function lbit(x) {
	if(x == 0) return -1;
	var r = 0;
	if((x&0xffff) == 0) { x >>= 16; r += 16; }
	if((x&0xff) == 0) { x >>= 8; r += 8; }
	if((x&0xf) == 0) { x >>= 4; r += 4; }
	if((x&3) == 0) { x >>= 2; r += 2; }
	if((x&1) == 0) ++r;
	return r;
    }

    // (public) returns index of lowest 1-bit (or -1 if none)
    function bnGetLowestSetBit() {
	for(var i = 0; i < this.t; ++i)
	    if(this[i] != 0) return i*this.DB+lbit(this[i]);
	if(this.s < 0) return this.t*this.DB;
	return -1;
    }

    // return number of 1 bits in x
    function cbit(x) {
	var r = 0;
	while(x != 0) { x &= x-1; ++r; }
	return r;
    }

    // (public) return number of set bits
    function bnBitCount() {
	var r = 0, x = this.s&this.DM;
	for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);
	return r;
    }

    // (public) true iff nth bit is set
    function bnTestBit(n) {
	var j = Math.floor(n/this.DB);
	if(j >= this.t) return(this.s!=0);
	return((this[j]&(1<<(n%this.DB)))!=0);
    }

    // (protected) this op (1<<n)
    function bnpChangeBit(n,op) {
	var r = BigInteger.ONE.shiftLeft(n);
	this.bitwiseTo(r,op,r);
	return r;
    }

    // (public) this | (1<<n)
    function bnSetBit(n) { return this.changeBit(n,op_or); }

    // (public) this & ~(1<<n)
    function bnClearBit(n) { return this.changeBit(n,op_andnot); }

    // (public) this ^ (1<<n)
    function bnFlipBit(n) { return this.changeBit(n,op_xor); }

    // (protected) r = this + a
    function bnpAddTo(a,r) {
	var i = 0, c = 0, m = Math.min(a.t,this.t);
	while(i < m) {
	    c += this[i]+a[i];
	    r[i++] = c&this.DM;
	    c >>= this.DB;
	}
	if(a.t < this.t) {
	    c += a.s;
	    while(i < this.t) {
		c += this[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += this.s;
	}
	else {
	    c += this.s;
	    while(i < a.t) {
		c += a[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += a.s;
	}
	r.s = (c<0)?-1:0;
	if(c > 0) r[i++] = c;
	else if(c < -1) r[i++] = this.DV+c;
	r.t = i;
	r.clamp();
    }

    // (public) this + a
    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }

    // (public) this - a
    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }

    // (public) this * a
    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }

    // (public) this / a
    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }

    // (public) this % a
    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }

    // (public) [this/a,this%a]
    function bnDivideAndRemainder(a) {
	var q = nbi(), r = nbi();
	this.divRemTo(a,q,r);
	return [q,r];
    }

    // (protected) this *= n, this >= 0, 1 < n < DV
    function bnpDMultiply(n) {
	this[this.t] = this.am(0,n-1,this,0,0,this.t);
	++this.t;
	this.clamp();
    }

    // (protected) this += n << w words, this >= 0
    function bnpDAddOffset(n,w) {
	if(n == 0) return;
	while(this.t <= w) this[this.t++] = 0;
	this[w] += n;
	while(this[w] >= this.DV) {
	    this[w] -= this.DV;
	    if(++w >= this.t) this[this.t++] = 0;
	    ++this[w];
	}
    }

    // A "null" reducer
    function NullExp() {}
    function nNop(x) { return x; }
    function nMulTo(x,y,r) { x.multiplyTo(y,r); }
    function nSqrTo(x,r) { x.squareTo(r); }

    NullExp.prototype.convert = nNop;
    NullExp.prototype.revert = nNop;
    NullExp.prototype.mulTo = nMulTo;
    NullExp.prototype.sqrTo = nSqrTo;

    // (public) this^e
    function bnPow(e) { return this.exp(e,new NullExp()); }

    // (protected) r = lower n words of "this * a", a.t <= n
    // "this" should be the larger one if appropriate.
    function bnpMultiplyLowerTo(a,n,r) {
	var i = Math.min(this.t+a.t,n);
	r.s = 0; // assumes a,this >= 0
	r.t = i;
	while(i > 0) r[--i] = 0;
	var j;
	for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);
	for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);
	r.clamp();
    }

    // (protected) r = "this * a" without lower n words, n > 0
    // "this" should be the larger one if appropriate.
    function bnpMultiplyUpperTo(a,n,r) {
	--n;
	var i = r.t = this.t+a.t-n;
	r.s = 0; // assumes a,this >= 0
	while(--i >= 0) r[i] = 0;
	for(i = Math.max(n-this.t,0); i < a.t; ++i)
	    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);
	r.clamp();
	r.drShiftTo(1,r);
    }

    // Barrett modular reduction
    function Barrett(m) {
	// setup Barrett
	this.r2 = nbi();
	this.q3 = nbi();
	BigInteger.ONE.dlShiftTo(2*m.t,this.r2);
	this.mu = this.r2.divide(m);
	this.m = m;
    }

    function barrettConvert(x) {
	if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);
	else if(x.compareTo(this.m) < 0) return x;
	else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }
    }

    function barrettRevert(x) { return x; }

    // x = x mod m (HAC 14.42)
    function barrettReduce(x) {
	x.drShiftTo(this.m.t-1,this.r2);
	if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }
	this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);
	this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);
	while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);
	x.subTo(this.r2,x);
	while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
    }

    // r = x^2 mod m; x != r
    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    // r = x*y mod m; x,y != r
    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

    Barrett.prototype.convert = barrettConvert;
    Barrett.prototype.revert = barrettRevert;
    Barrett.prototype.reduce = barrettReduce;
    Barrett.prototype.mulTo = barrettMulTo;
    Barrett.prototype.sqrTo = barrettSqrTo;

    // (public) this^e % m (HAC 14.85)
    function bnModPow(e,m) {
	var i = e.bitLength(), k, r = nbv(1), z;
	if(i <= 0) return r;
	else if(i < 18) k = 1;
	else if(i < 48) k = 3;
	else if(i < 144) k = 4;
	else if(i < 768) k = 5;
	else k = 6;
	if(i < 8)
	    z = new Classic(m);
	else if(m.isEven())
	    z = new Barrett(m);
	else
	    z = new Montgomery(m);

	// precomputation
	var g = [], n = 3, k1 = k-1, km = (1<<k)-1;
	g[1] = z.convert(this);
	if(k > 1) {
	    var g2 = nbi();
	    z.sqrTo(g[1],g2);
	    while(n <= km) {
		g[n] = nbi();
		z.mulTo(g2,g[n-2],g[n]);
		n += 2;
	    }
	}

	var j = e.t-1, w, is1 = true, r2 = nbi(), t;
	i = nbits(e[j])-1;
	while(j >= 0) {
	    if(i >= k1) w = (e[j]>>(i-k1))&km;
	    else {
		w = (e[j]&((1<<(i+1))-1))<<(k1-i);
		if(j > 0) w |= e[j-1]>>(this.DB+i-k1);
	    }

	    n = k;
	    while((w&1) == 0) { w >>= 1; --n; }
	    if((i -= n) < 0) { i += this.DB; --j; }
	    if(is1) {	// ret == 1, don't bother squaring or multiplying it
		g[w].copyTo(r);
		is1 = false;
	    }
	    else {
		while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }
		if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }
		z.mulTo(r2,g[w],r);
	    }

	    while(j >= 0 && (e[j]&(1<<i)) == 0) {
		z.sqrTo(r,r2); t = r; r = r2; r2 = t;
		if(--i < 0) { i = this.DB-1; --j; }
	    }
	}
	return z.revert(r);
    }

    // (public) gcd(this,a) (HAC 14.54)
    function bnGCD(a) {
	var x = (this.s<0)?this.negate():this.clone();
	var y = (a.s<0)?a.negate():a.clone();
	if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }
	var i = x.getLowestSetBit(), g = y.getLowestSetBit();
	if(g < 0) return x;
	if(i < g) g = i;
	if(g > 0) {
	    x.rShiftTo(g,x);
	    y.rShiftTo(g,y);
	}
	while(x.signum() > 0) {
	    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);
	    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);
	    if(x.compareTo(y) >= 0) {
		x.subTo(y,x);
		x.rShiftTo(1,x);
	    }
	    else {
		y.subTo(x,y);
		y.rShiftTo(1,y);
	    }
	}
	if(g > 0) y.lShiftTo(g,y);
	return y;
    }

    // (protected) this % n, n < 2^26
    function bnpModInt(n) {
	if(n <= 0) return 0;
	var d = this.DV%n, r = (this.s<0)?n-1:0;
	if(this.t > 0)
	    if(d == 0) r = this[0]%n;
	else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;
	return r;
    }

    // (public) 1/this % m (HAC 14.61)
    function bnModInverse(m) {
	var ac = m.isEven();
	if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;
	var u = m.clone(), v = this.clone();
	var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);
	while(u.signum() != 0) {
	    while(u.isEven()) {
		u.rShiftTo(1,u);
		if(ac) {
		    if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }
		    a.rShiftTo(1,a);
		}
		else if(!b.isEven()) b.subTo(m,b);
		b.rShiftTo(1,b);
	    }
	    while(v.isEven()) {
		v.rShiftTo(1,v);
		if(ac) {
		    if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }
		    c.rShiftTo(1,c);
		}
		else if(!d.isEven()) d.subTo(m,d);
		d.rShiftTo(1,d);
	    }
	    if(u.compareTo(v) >= 0) {
		u.subTo(v,u);
		if(ac) a.subTo(c,a);
		b.subTo(d,b);
	    }
	    else {
		v.subTo(u,v);
		if(ac) c.subTo(a,c);
		d.subTo(b,d);
	    }
	}
	if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;
	if(d.compareTo(m) >= 0) return d.subtract(m);
	if(d.signum() < 0) d.addTo(m,d); else return d;
	if(d.signum() < 0) return d.add(m); else return d;
    }

    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];
    var lplim = (1<<26)/lowprimes[lowprimes.length-1];

    // (public) test primality with certainty >= 1-.5^t
    function bnIsProbablePrime(t) {
	var i, x = this.abs();
	if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {
	    for(i = 0; i < lowprimes.length; ++i)
		if(x[0] == lowprimes[i]) return true;
	    return false;
	}
	if(x.isEven()) return false;
	i = 1;
	while(i < lowprimes.length) {
	    var m = lowprimes[i], j = i+1;
	    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];
	    m = x.modInt(m);
	    while(i < j) if(m%lowprimes[i++] == 0) return false;
	}
	return x.millerRabin(t);
    }

    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
    function bnpMillerRabin(t) {
	var n1 = this.subtract(BigInteger.ONE);
	var k = n1.getLowestSetBit();
	if(k <= 0) return false;
	var r = n1.shiftRight(k);
	t = (t+1)>>1;
	if(t > lowprimes.length) t = lowprimes.length;
	var a = nbi();
	for(var i = 0; i < t; ++i) {
	    a.fromInt(lowprimes[i]);
	    var y = a.modPow(r,this);
	    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
		var j = 1;
		while(j++ < k && y.compareTo(n1) != 0) {
		    y = y.modPowInt(2,this);
		    if(y.compareTo(BigInteger.ONE) == 0) return false;
		}
		if(y.compareTo(n1) != 0) return false;
	    }
	}
	return true;
    }
    
    

    // protected
    BigInteger.prototype.chunkSize = bnpChunkSize;
    BigInteger.prototype.toRadix = bnpToRadix;
    BigInteger.prototype.fromRadix = bnpFromRadix;
    BigInteger.prototype.fromNumber = bnpFromNumber;
    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
    BigInteger.prototype.changeBit = bnpChangeBit;
    BigInteger.prototype.addTo = bnpAddTo;
    BigInteger.prototype.dMultiply = bnpDMultiply;
    BigInteger.prototype.dAddOffset = bnpDAddOffset;
    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
    BigInteger.prototype.modInt = bnpModInt;
    BigInteger.prototype.millerRabin = bnpMillerRabin;

    // public
    BigInteger.prototype.clone = bnClone;
    BigInteger.prototype.intValue = bnIntValue;
    BigInteger.prototype.byteValue = bnByteValue;
    BigInteger.prototype.shortValue = bnShortValue;
    BigInteger.prototype.signum = bnSigNum;
    BigInteger.prototype.toByteArray = bnToByteArray;
    BigInteger.prototype.equals = bnEquals;
    BigInteger.prototype.min = bnMin;
    BigInteger.prototype.max = bnMax;
    BigInteger.prototype.and = bnAnd;
    BigInteger.prototype.or = bnOr;
    BigInteger.prototype.xor = bnXor;
    BigInteger.prototype.andNot = bnAndNot;
    BigInteger.prototype.not = bnNot;
    BigInteger.prototype.shiftLeft = bnShiftLeft;
    BigInteger.prototype.shiftRight = bnShiftRight;
    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
    BigInteger.prototype.bitCount = bnBitCount;
    BigInteger.prototype.testBit = bnTestBit;
    BigInteger.prototype.setBit = bnSetBit;
    BigInteger.prototype.clearBit = bnClearBit;
    BigInteger.prototype.flipBit = bnFlipBit;
    BigInteger.prototype.add = bnAdd;
    BigInteger.prototype.subtract = bnSubtract;
    BigInteger.prototype.multiply = bnMultiply;
    BigInteger.prototype.divide = bnDivide;
    BigInteger.prototype.remainder = bnRemainder;
    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
    BigInteger.prototype.modPow = bnModPow;
    BigInteger.prototype.modInverse = bnModInverse;
    BigInteger.prototype.pow = bnPow;
    BigInteger.prototype.gcd = bnGCD;
    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;

    // BigInteger interfaces not implemented in jsbn:

    // BigInteger(int signum, byte[] magnitude)
    // double doubleValue()
    // float floatValue()
    // int hashCode()
    // long longValue()
    // static BigInteger valueOf(long val)



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // END OF copy-and-paste of jsbn.



    BigInteger.NEGATIVE_ONE = BigInteger.ONE.negate();


    // Other methods we need to add for compatibilty with js-numbers numeric tower.

    // add is implemented above.
    // subtract is implemented above.
    // multiply is implemented above.
    // equals is implemented above.
    // abs is implemented above.
    // negate is defined above.

    // makeBignum: string -> BigInteger
    var makeBignum = function(s) {
	if (typeof(s) === 'number') { s = s + ''; }
	s = expandExponent(s);
	return new BigInteger(s, 10);
    };

    var zerostring = function(n) {
	var buf = [];
	for (var i = 0; i < n; i++) {
	    buf.push('0');
	}
	return buf.join('');
    };


    BigInteger.prototype.level = 0;
    BigInteger.prototype.liftTo = function(target) {
	if (target.level === 1) {
	    return new Rational(this, 1);
	}
	if (target.level === 2) {
	    var fixrep = this.toFixnum();
	    if (fixrep === Number.POSITIVE_INFINITY)
		return TOO_POSITIVE_TO_REPRESENT;
	    if (fixrep === Number.NEGATIVE_INFINITY)
		return TOO_NEGATIVE_TO_REPRESENT;
	    return new FloatPoint(fixrep);
	}
	if (target.level === 3) {
	    return new Complex(this, 0);
	}
	return throwRuntimeError("invalid level for BigInteger lift", this, target);
    };

    BigInteger.prototype.isFinite = function() {
	return true;
    };

    BigInteger.prototype.isInteger = function() {
	return true;
    };

    BigInteger.prototype.isRational = function() {
	return true;
    };

    BigInteger.prototype.isReal = function() {
	return true;
    };

    BigInteger.prototype.isExact = function() {
	return true;
    };

    BigInteger.prototype.isInexact = function() {
	return false;
    };

    BigInteger.prototype.toExact = function() {
	return this;
    };

    BigInteger.prototype.toInexact = function() {
	return FloatPoint.makeInstance(this.toFixnum());
    };

    BigInteger.prototype.toFixnum = function() {
	var result = 0, str = this.toString(), i;
	if (str[0] === '-') {
	    for (i=1; i < str.length; i++) {
		result = result * 10 + Number(str[i]);
	    }
	    return -result;
	} else {
	    for (i=0; i < str.length; i++) {
		result = result * 10 + Number(str[i]);
	    }
	    return result;
	}
    };


    BigInteger.prototype.greaterThan = function(other) {
	return this.compareTo(other) > 0;
    };

    BigInteger.prototype.greaterThanOrEqual = function(other) {
	return this.compareTo(other) >= 0;
    };

    BigInteger.prototype.lessThan = function(other) {
	return this.compareTo(other) < 0;
    };

    BigInteger.prototype.lessThanOrEqual = function(other) {
	return this.compareTo(other) <= 0;
    };

    // divide: scheme-number -> scheme-number
    // WARNING NOTE: we override the old version of divide.
    BigInteger.prototype.divide = function(other) {
	var quotientAndRemainder = bnDivideAndRemainder.call(this, other);
	if (quotientAndRemainder[1].compareTo(BigInteger.ZERO) === 0) {
	    return quotientAndRemainder[0];
	} else {
	    var result = add(quotientAndRemainder[0],
			     Rational.makeInstance(quotientAndRemainder[1], other));
	    return result;
	}
    };

    BigInteger.prototype.numerator = function() {
	return this;
    };

    BigInteger.prototype.denominator = function() {
	return 1;
    };


    (function() {
	// Classic implementation of Newton-Ralphson square-root search,
	// adapted for integer-sqrt.
	// http://en.wikipedia.org/wiki/Newton's_method#Square_root_of_a_number
	    var searchIter = function(n, guess) {
		while(!(lessThanOrEqual(sqr(guess),n) &&
			lessThan(n,sqr(add(guess, 1))))) {
		    guess = floor(divide(add(guess,
					     floor(divide(n, guess))),
					 2));
		}
		return guess;
	    };

	    // integerSqrt: -> scheme-number
	    BigInteger.prototype.integerSqrt = function() {
		var n;
		if(sign(this) >= 0) {
		    return searchIter(this, this);
		} else {
		    n = this.negate();
		    return Complex.makeInstance(0, searchIter(n, n));
		}
	    };
    })();


    (function() {	
	// Get an approximation using integerSqrt, and then start another
	// Newton-Ralphson search if necessary.
	BigInteger.prototype.sqrt = function() {
	    var approx = this.integerSqrt(), fix;
	    if (eqv(sqr(approx), this)) {
		return approx;
	    }
	    fix = toFixnum(this);
	    if (isFinite(fix)) {
		if (fix >= 0) {
		    return FloatPoint.makeInstance(Math.sqrt(fix));
		} else {
		    return Complex.makeInstance(
			0,
			FloatPoint.makeInstance(Math.sqrt(-fix)));
		}
	    } else {
		return approx;
	    }
	};
    })();




    
    // sqrt: -> scheme-number
    // http://en.wikipedia.org/wiki/Newton's_method#Square_root_of_a_number
    // Produce the square root.

    // floor: -> scheme-number
    // Produce the floor.
    BigInteger.prototype.floor = function() {
        return this;
    }

    // ceiling: -> scheme-number
    // Produce the ceiling.
    BigInteger.prototype.ceiling = function() {
        return this;
    }

    // conjugate: -> scheme-number
    // Produce the conjugate.

    // magnitude: -> scheme-number
    // Produce the magnitude.

    // log: -> scheme-number
    // Produce the log.

    // angle: -> scheme-number
    // Produce the angle.

    // atan: -> scheme-number
    // Produce the arc tangent.

    // cos: -> scheme-number
    // Produce the cosine.

    // sin: -> scheme-number
    // Produce the sine.


    // expt: scheme-number -> scheme-number
    // Produce the power to the input.
    BigInteger.prototype.expt = function(n) {
	return bnPow.call(this, n);
    };



    // exp: -> scheme-number
    // Produce e raised to the given power.

    // acos: -> scheme-number
    // Produce the arc cosine.

    // asin: -> scheme-number
    // Produce the arc sine.

    BigInteger.prototype.imaginaryPart = function() {
	    return 0;
    }
    BigInteger.prototype.realPart = function() {
	    return this;
    }

    // round: -> scheme-number
    // Round to the nearest integer.





    //////////////////////////////////////////////////////////////////////
    // toRepeatingDecimal: jsnum jsnum {limit: number}? -> [string, string, string]
    //
    // Given the numerator and denominator parts of a rational,
    // produces the repeating-decimal representation, where the first
    // part are the digits before the decimal, the second are the
    // non-repeating digits after the decimal, and the third are the
    // remaining repeating decimals.
    // 
    // An optional limit on the decimal expansion can be provided, in which
    // case the search cuts off if we go past the limit.
    // If this happens, the third argument returned becomes '...' to indicate
    // that the search was prematurely cut off.
    var toRepeatingDecimal = (function() {
	var getResidue = function(r, d, limit) {
	    var digits = [];
	    var seenRemainders = {};
	    seenRemainders[r] = true;
	    while(true) {	
		if (limit-- <= 0) {
		    return [digits.join(''), '...']
		}

		var nextDigit = quotient(
		    multiply(r, 10), d);
		var nextRemainder = remainder(
		    multiply(r, 10),
		    d);
		digits.push(nextDigit.toString());
		if (seenRemainders[nextRemainder]) {
		    r = nextRemainder;
		    break;
		} else {
		    seenRemainders[nextRemainder] = true;
		    r = nextRemainder;
		}
	    }
	    
	    var firstRepeatingRemainder = r;
	    var repeatingDigits = [];
	    while (true) {
		var nextDigit = quotient(multiply(r, 10), d);
		var nextRemainder = remainder(
		    multiply(r, 10),
		    d);
		repeatingDigits.push(nextDigit.toString());
		if (equals(nextRemainder, firstRepeatingRemainder)) {
		    break;
		} else {
		    r = nextRemainder;
		}
	    };

	    var digitString = digits.join('');
	    var repeatingDigitString = repeatingDigits.join('');

	    while (digitString.length >= repeatingDigitString.length &&
		   (digitString.substring(
		       digitString.length - repeatingDigitString.length)
		    === repeatingDigitString)) {
		digitString = digitString.substring(
		    0, digitString.length - repeatingDigitString.length);
	    }

	    return [digitString, repeatingDigitString];

	};

	return function(n, d, options) {
	    // default limit on decimal expansion; can be overridden
	    var limit = 512;
	    if (options && typeof(options.limit) !== 'undefined') {
		limit = options.limit;
	    }
	    if (! isInteger(n)) {
		throwRuntimeError('toRepeatingDecimal: n ' + n.toString() +
				  " is not an integer.");
	    }
	    if (! isInteger(d)) {
		throwRuntimeError('toRepeatingDecimal: d ' + d.toString() +
				  " is not an integer.");
	    }
	    if (equals(d, 0)) {
		throwRuntimeError('toRepeatingDecimal: d equals 0');
	    }
	    if (lessThan(d, 0)) {
		throwRuntimeError('toRepeatingDecimal: d < 0');
	    }
 	    var sign = (lessThan(n, 0) ? "-" : "");
 	    n = abs(n);
 	    var beforeDecimalPoint = sign + quotient(n, d);
 	    var afterDecimals = getResidue(remainder(n, d), d, limit);
 	    return [beforeDecimalPoint].concat(afterDecimals);
	};
    })();
    //////////////////////////////////////////////////////////////////////




    // External interface of js-numbers:

    Numbers['fromFixnum'] = fromFixnum;
    Numbers['fromString'] = fromString;
    Numbers['makeBignum'] = makeBignum;
    Numbers['makeRational'] = Rational.makeInstance;
    Numbers['makeFloat'] = FloatPoint.makeInstance;
    Numbers['makeComplex'] = Complex.makeInstance;
    Numbers['makeComplexPolar'] = makeComplexPolar;

    Numbers['pi'] = FloatPoint.pi;
    Numbers['e'] = FloatPoint.e;
    Numbers['nan'] = FloatPoint.nan;
    Numbers['negative_inf'] = FloatPoint.neginf;
    Numbers['inf'] = FloatPoint.inf;
    Numbers['negative_one'] = -1;   // Rational.NEGATIVE_ONE;
    Numbers['zero'] = 0;            // Rational.ZERO;
    Numbers['one'] = 1;             // Rational.ONE;
    Numbers['i'] = plusI;
    Numbers['negative_i'] = minusI;
    Numbers['negative_zero'] = NEGATIVE_ZERO;

    Numbers['onThrowRuntimeError'] = onThrowRuntimeError;
    Numbers['isSchemeNumber'] = isSchemeNumber;
    Numbers['isRational'] = isRational;
    Numbers['isReal'] = isReal;
    Numbers['isExact'] = isExact;
    Numbers['isInexact'] = isInexact;
    Numbers['isInteger'] = isInteger;

    Numbers['toFixnum'] = toFixnum;
    Numbers['toExact'] = toExact;
    Numbers['toInexact'] = toInexact;
    Numbers['add'] = add;
    Numbers['subtract'] = subtract;
    Numbers['multiply'] = multiply;
    Numbers['divide'] = divide;
    Numbers['equals'] = equals;
    Numbers['eqv'] = eqv;
    Numbers['approxEquals'] = approxEquals;
    Numbers['greaterThanOrEqual'] = greaterThanOrEqual;
    Numbers['lessThanOrEqual'] = lessThanOrEqual;
    Numbers['greaterThan'] = greaterThan;
    Numbers['lessThan'] = lessThan;
    Numbers['expt'] = expt;
    Numbers['exp'] = exp;
    Numbers['modulo'] = modulo;
    Numbers['numerator'] = numerator;
    Numbers['denominator'] = denominator;
    Numbers['integerSqrt'] = integerSqrt;
    Numbers['sqrt'] = sqrt;
    Numbers['abs'] = abs;
    Numbers['quotient'] = quotient;
    Numbers['remainder'] = remainder;
    Numbers['floor'] = floor;
    Numbers['ceiling'] = ceiling;
    Numbers['conjugate'] = conjugate;
    Numbers['magnitude'] = magnitude;
    Numbers['log'] = log;
    Numbers['angle'] = angle;
    Numbers['tan'] = tan;
    Numbers['atan'] = atan;
    Numbers['cos'] = cos;
    Numbers['sin'] = sin;
    Numbers['tan'] = tan;
    Numbers['acos'] = acos;
    Numbers['asin'] = asin;
    Numbers['cosh'] = cosh;
    Numbers['sinh'] = sinh;
    Numbers['imaginaryPart'] = imaginaryPart;
    Numbers['realPart'] = realPart;
    Numbers['round'] = round;
    Numbers['sqr'] = sqr;
    Numbers['gcd'] = gcd;
    Numbers['lcm'] = lcm;

    Numbers['toRepeatingDecimal'] = toRepeatingDecimal;



    // The following exposes the class representations for easier
    // integration with other projects.
    Numbers['BigInteger'] = BigInteger;
    Numbers['Rational'] = Rational;
    Numbers['FloatPoint'] = FloatPoint;
    Numbers['Complex'] = Complex;   

    Numbers['MIN_FIXNUM'] = MIN_FIXNUM;
    Numbers['MAX_FIXNUM'] = MAX_FIXNUM;

})();
/*jslint vars: true, plusplus: true, maxerr: 50, indent: 4 */

// Basic library functions.  This will include a few simple functions,
// but be augmented with several namespaces for the other libraries in
// the base library.
if (!(this.plt)) { this.plt = {}; }
(function (plt) {
    'use strict';
    var baselib = {};
    plt.baselib = baselib;



    // Simple object inheritance.
    var heir = function (parentPrototype) {
        var F = function () {};
        F.prototype = parentPrototype;
        return new F();
    };



    // clone: object -> object
    // Copies an object.  The new object should respond like the old
    // object, including to things like instanceof.
    var clone = function (obj) {
        var property;
        var C = function () {};
        C.prototype = obj;
        var c = new C();
        for (property in obj) {
            if (obj.hasOwnProperty(property)) {
                c[property] = obj[property];
            }
        }
        return c;
    };


    // Consumes a class and creates a predicate that recognizes subclasses.
    var makeClassPredicate = function (aClass) {
        return function (x) { return x instanceof aClass; };
    };



    // Helper to deal with the argument-passing of primitives.  Call f
    // with arguments bound from MACHINE.e, assuming
    // MACHINE.a has been initialized with the number of
    // arguments on the stack.  vs provides optional values for the
    // arguments that go beyond those of the mandatoryArgCount.
    var withArguments = function (MACHINE, mandatoryArgCount, vs, f) {
        var args = [], i;
        for (i = 0; i < MACHINE.a; i++) {
            if (i < mandatoryArgCount) {
                args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
            } else {
                if (i < MACHINE.a) {
                    args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
                } else {
                    args.push(vs[mandatoryArgCount - i]);
                }
            }
        }
        return f.apply(null, args);
    };



    baselib.heir = heir;
    baselib.clone = clone;
    baselib.makeClassPredicate = makeClassPredicate;
    baselib.withArguments = withArguments;


}(this.plt));
/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Frame structures.
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.frames = exports;



    // A generic frame just holds marks.
    var Frame = function() {
	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;
	this.pendingApplyValuesProc = undefined;
	this.pendingBegin0Count = undefined;
	this.pendingBegin0Values = undefined;
    };


    // Frames must support marks and the temporary variables necessary to
    // support with-continuation-mark and with-values.

    // Specialized frames support more features:

    // A CallFrame represents a call stack frame, and includes the return address
    // as well as the function being called.
    var CallFrame = function(label, proc) {
	this.label = label;
	this.p = proc;

	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;
    };
    CallFrame.prototype = baselib.heir(Frame.prototype);



    // A prompt frame includes a return address, as well as a prompt tag
    // for supporting delimited continuations.
    var PromptFrame = function(label, tag) {
	this.label = label;
	this.tag = tag; // ContinuationPromptTag

	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;	
    };
    PromptFrame.prototype = baselib.heir(Frame.prototype);




    //////////////////////////////////////////////////////////////////////
    exports.Frame = Frame;
    exports.CallFrame = CallFrame;
    exports.PromptFrame = PromptFrame;



}(this.plt.baselib));/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";

    // Union/find for circular equality testing.

    var UnionFind = function () {
        // this.parenMap holds the arrows from an arbitrary pointer
        // to its parent.
        this.parentMap = baselib.hashes.makeLowLevelEqHash();
    };

    // find: ptr -> UnionFindNode
    // Returns the representative for this ptr.
    UnionFind.prototype.find = function (ptr) {
        var parent = (this.parentMap.containsKey(ptr) ? 
                      this.parentMap.get(ptr) : ptr);
        if (parent === ptr) {
            return parent;
        } else {
            var rep = this.find(parent);
            // Path compression:
            this.parentMap.put(ptr, rep);
            return rep;
        }
    };

    // merge: ptr ptr -> void
    // Merge the representative nodes for ptr1 and ptr2.
    UnionFind.prototype.merge = function (ptr1, ptr2) {
        this.parentMap.put(this.find(ptr1), this.find(ptr2));
    };



    baselib.UnionFind = UnionFind;

}(this.plt.baselib));/*jslint vars: true, white: true, maxerr: 50, indent: 4 */


// Equality function
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.equality = exports;



    var eqv = function (x, y) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return jsnums.eqv(x, y);
        } else if (baselib.chars.isChar(x) && baselib.chars.isChar(y)) {
            return x.val === y.val;
        } else {
            return false;
        }
    };




    // equals: X Y -> boolean
    // Returns true if the objects are equivalent; otherwise, returns false.
    var equals = function (x, y, aUnionFind) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return baselib.numbers.eqv(x, y);
        }

        if (baselib.strings.isString(x) && baselib.strings.isString(y)) {
            return x.toString() === y.toString();
        }

        if (x === undefined || x === null) {
            return (y === undefined || y === null);
        }

        if (typeof (x) === 'object' && typeof (y) === 'object' &&
            x.equals && y.equals) {
            if (typeof (aUnionFind) === 'undefined') {
                aUnionFind = new baselib.UnionFind();
            }

            if (aUnionFind.find(x) === aUnionFind.find(y)) {
                return true;
            }
            else {
                aUnionFind.merge(x, y); 
                return x.equals(y, aUnionFind);
            }
        }
        return false;
    };

    exports.eqv = eqv;
    exports.equals = equals;

}(this.plt.baselib, jsnums));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Formatting library.
// Produces string and DOM representations of values.
//
/*global $*/
(function(baselib, $) {
    'use strict';
    var exports = {};
    baselib.format = exports;


    var replaceUnprintableStringChars = function(s) {
        var ret = [], i;
        for (i = 0; i < s.length; i++) {
            var val = s.charCodeAt(i);
            switch(val) {
            case 7: ret.push('\\a'); break;
            case 8: ret.push('\\b'); break;
            case 9: ret.push('\\t'); break;
            case 10: ret.push('\\n'); break;
            case 11: ret.push('\\v'); break;
            case 12: ret.push('\\f'); break;
            case 13: ret.push('\\r'); break;
            case 34: ret.push('\\"'); break;
            case 92: ret.push('\\\\'); break;
            default: if (val >= 32 && val <= 126) {
                ret.push( s.charAt(i) );
            }
                else {
                    var numStr = val.toString(16).toUpperCase();
                    while (numStr.length < 4) {
                        numStr = '0' + numStr;
                    }
                    ret.push('\\u' + numStr);
                }
                break;
            }
        }
        return ret.join('');
    };

    var escapeString = function(s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };


    // toWrittenString: Any Hashtable -> String
    var toWrittenString = function(x, cache) {
        if (! cache) { 
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === undefined) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return escapeString(x.toString());
        }

        if (baselib.functions.isProcedure(x)) {
            return '#<procedure:' + x.displayName + '>';
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (typeof(x.toWrittenString) !== 'undefined') {
            returnVal = x.toWrittenString(cache);
        } else if (typeof(x.toDisplayedString) !== 'undefined') {
            returnVal = x.toDisplayedString(cache);
        } else {
            returnVal = x.toString();
        }
        return returnVal;
    };



    // toDisplayedString: Any Hashtable -> String
    var toDisplayedString = function(x, cache) {
        if (! cache) {
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === undefined || x === null) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return x;
        }

        if (baselib.functions.isProcedure(x)) {
            return '#<procedure:' + x.displayName + '>';
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (typeof(x.toDisplayedString) !== 'undefined') {
            returnVal = x.toDisplayedString(cache);
        } else if (typeof(x.toWrittenString) !== 'undefined') {
            returnVal = x.toWrittenString(cache);
        } else {
            returnVal = x.toString();
        }
        return returnVal;
    };



    var formatRegexp1 = new RegExp('~[sSaA]', 'g');
    var formatRegexp2 = new RegExp("~[sSaAnevE%~]", "g");
    
    // format: string [X ...] string -> string
    // String formatting.  If an exception occurs, throws
    // a plain Error whose message describes the formatting error.
    var format = function(formatStr, args, functionName) {
        var throwFormatError = function() {
            functionName = functionName || 'format';
            var matches = formatStr.match(formatRegexp1);
            var expectedNumberOfArgs = (matches === null ? 0 : matches.length);
            var errorStrBuffer = [functionName + ': format string requires ' + expectedNumberOfArgs
                                  + ' arguments, given ' + args.length + '; arguments were:',
                                  toWrittenString(formatStr)];
            var i;
            for (i = 0; i < args.length; i++) {
                errorStrBuffer.push( toWrittenString(args[i]) );
            }

            throw new Error(errorStrBuffer.join(' '));
        };


        var buffer = args.slice(0);
        var onTemplate = function(s) {
            if (s === "~~") {
                return "~";
            } else if (s === '~n' || s === '~%') {
                return "\n";
            } else if (s === '~s' || s === "~S") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift());
            } else if (s === '~e' || s === "~E") {
                // FIXME: we don't yet have support for the error-print
                // handler, and currently treat ~e just like ~s.
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift()); 
            }
            else if (s === '~v') {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                // fprintf must do something more interesting here by
                // printing the dom representation directly...
                return toWrittenString(buffer.shift());
            } else if (s === '~a' || s === "~A") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toDisplayedString(buffer.shift());
            } else {
                throw new Error(functionName + 
                                ': string.replace matched invalid regexp');
            }
        };
        var result = formatStr.replace(formatRegexp2, onTemplate);
        if (buffer.length > 0) {
            throwFormatError();
        }
        return result;
    };
    



    var ToDomNodeParameters = function(params) {
        if (! params) { params = {}; }
        this.cache = baselib.hashes.makeLowLevelEqHash();
        var k;
        for (k in params) {
            if (params.hasOwnProperty(k)) {
                this[k] = params[k];
            }
        }
        this.objectCounter = 0;
    };

    // getMode: -> (U "print" "display" "write")
    ToDomNodeParameters.prototype.getMode = function() {
        if (this.mode) { 
            return this.mode; 
        }
        return 'print';
    };

    ToDomNodeParameters.prototype.containsKey = function(x) {
        return this.cache.containsKey(x);
    };

    ToDomNodeParameters.prototype.get = function(x) {
        return this.cache.get(x);
    };

    ToDomNodeParameters.prototype.remove = function(x) {
        return this.cache.remove(x);
    };

    ToDomNodeParameters.prototype.put = function(x) {
        this.objectCounter++;
        return this.cache.put(x, this.objectCounter);
    };



    // rationalToDomNode: rational -> dom-node
    var rationalToDomNode = function(n) {
        var repeatingDecimalNode = document.createElement("span");
        var chunks = baselib.numbers.toRepeatingDecimal(baselib.numbers.numerator(n),
                                                        baselib.numbers.denominator(n),
                                                        {limit: 25});
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[0] + '.'));
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[1]));
        if (chunks[2] === '...') {
            repeatingDecimalNode.appendChild(
                document.createTextNode(chunks[2]));
        } else if (chunks[2] !== '0') {
            var overlineSpan = document.createElement("span");
            overlineSpan.style.textDecoration = 'overline';
            overlineSpan.appendChild(document.createTextNode(chunks[2]));
            repeatingDecimalNode.appendChild(overlineSpan);
        }


        var fractionalNode = document.createElement("span");
        var numeratorNode = document.createElement("sup");
        numeratorNode.appendChild(document.createTextNode(String(baselib.numbers.numerator(n))));
        var denominatorNode = document.createElement("sub");
        denominatorNode.appendChild(document.createTextNode(String(baselib.numbers.denominator(n))));
        fractionalNode.appendChild(numeratorNode);
        fractionalNode.appendChild(document.createTextNode("/"));
        fractionalNode.appendChild(denominatorNode);

        
        var numberNode = document.createElement("span");
        numberNode.appendChild(repeatingDecimalNode);
        numberNode.appendChild(fractionalNode);
        fractionalNode.style['display'] = 'none';

        var showingRepeating = true;

        numberNode.onclick = function(e) {
            showingRepeating = !showingRepeating;
            repeatingDecimalNode.style['display'] = 
                (showingRepeating ? 'inline' : 'none');
            fractionalNode.style['display'] = 
                (!showingRepeating ? 'inline' : 'none');
        };
        numberNode.style['cursor'] = 'pointer';
        return numberNode;
    };


    // numberToDomNode: jsnum -> dom
    // Given a jsnum, produces a dom-node representation.
    var numberToDomNode = function(n, params) {
        var node;
        if (baselib.numbers.isExact(n)) {
            if (baselib.numbers.isInteger(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else if (baselib.numbers.isRational(n)) {
                return rationalToDomNode(n);
            } else if (baselib.numbers.isComplex(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            }
        } else {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(n.toString()));
            return node;
        }
    };


    // toDomNode: scheme-value -> dom-node
    var toDomNode = function(x, params) {
        var node;
        if (params === 'write') {
            params = new ToDomNodeParameters({'mode' : 'write'});
        } else if (params === 'print') {
            params = new ToDomNodeParameters({'mode' : 'print'});
        } else if (params === 'display') {
            params = new ToDomNodeParameters({'mode' : 'display'});
        } else {
            params = params || new ToDomNodeParameters({'mode' : 'display'});
        } 

        if (baselib.numbers.isSchemeNumber(x)) {
            node = numberToDomNode(x, params);
            $(node).addClass("number");
            return node;
        }
        
        if (x === null) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("null"));
            $(node).addClass("null");
            return node;
        }

        if (x === true) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("true"));
            $(node).addClass("boolean");
            return node;
        }

        if (x === false) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("false"));
            $(node).addClass("boolean");
            return node;
        }

        if (typeof(x) === 'object') {
            if (params.containsKey(x)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode("#" + params.get(x)));
                return node;
            }
        }
        if (x === undefined || x === null) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#<undefined>"));
            return node;
        }

        if (typeof(x) === 'string') {
            var wrapper = document.createElement("span");
            wrapper.style["white-space"] = "pre";
            if (params.getMode() === 'write' || params.getMode() === 'print') {
                node = document.createTextNode(toWrittenString(x));
            } else {
                node = document.createTextNode(toDisplayedString(x));
            }
            wrapper.appendChild(node);
            $(wrapper).addClass("string");
            return wrapper;
        }

        if (baselib.functions.isProcedure(x)) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode('#<procedure: ' + x.displayName + '>'));
            $(node).addClass("procedure");
            return node;
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toString()));
            return node;
        }

        var returnVal;
        if (x.nodeType) {
            returnVal =  x;
        } else if (typeof(x.toDomNode) !== 'undefined') {
            returnVal =  x.toDomNode(params);
        } else if (params.getMode() === 'write' && 
                   typeof(x.toWrittenString) !== 'undefined') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toWrittenString(params)));
            returnVal =  node;
        } else if (params.getMode() === 'display' &&
                   typeof(x.toDisplayedString) !== 'undefined') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toDisplayedString(params)));
            returnVal =  node;
        } else {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toString()));
            returnVal =  node;
        }
        params.remove(x);
        return returnVal;
    };



    //////////////////////////////////////////////////////////////////////


    exports.ToDomNodeParameters = ToDomNodeParameters;

    exports.format = format;
    exports.toWrittenString = toWrittenString;
    exports.toDisplayedString = toDisplayedString;
    exports.toDomNode = toDomNode;

    exports.escapeString = escapeString;
}(this.plt.baselib, $));/*jslint vars: true, maxerr: 50, indent: 4 */


// Other miscellaneous constants
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.constants = exports;


    var VoidValue = function () {};
    VoidValue.prototype.toString = function () {
        return "#<void>";
    };

    var VOID_VALUE = new VoidValue();


    var EofValue = function () {};
    EofValue.prototype.toString = function () {
        return "#<eof>";
    };

    var EOF_VALUE = new EofValue();


    exports.VOID_VALUE = VOID_VALUE;
    exports.EOF_VALUE = EOF_VALUE;
}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Numbers.
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.numbers = exports;



    var isNumber = jsnums.isSchemeNumber;
    var isReal = jsnums.isReal;
    var isRational = jsnums.isRational;
    var isComplex = isNumber;
    var isInteger = jsnums.isInteger;


    var isNatural = function (x) {
        return (jsnums.isExact(x) && isInteger(x) 
                && jsnums.greaterThanOrEqual(x, 0));
    };

    var isNonNegativeReal = function (x) {
        return isReal(x) && jsnums.greaterThanOrEqual(x, 0);
    };

    var isByte = function (x) {
        return (isNatural(x) && 
                jsnums.lessThan(x, 256));
    };


    // sign: number -> number
    var sign = function (x) {
        if (jsnums.isInexact(x)) {
            if (jsnums.greaterThan(x, 0)) {
                return jsnums.makeFloat(1);
            } else if (jsnums.lessThan(x, 0)) {
                return jsnums.makeFloat(-1);
            } else {
                return jsnums.makeFloat(0);
            }
        } else {
            if (jsnums.greaterThan(x, 0)) {
                return 1;
            } else if (jsnums.lessThan(x, 0)) {
                return -1;
            } else {
                return 0;
            }
        }
    };




    //////////////////////////////////////////////////////////////////////
    // Exports


    // We first re-export everything in jsnums.
    var prop;
    for (prop in jsnums) {
        if (jsnums.hasOwnProperty(prop)) {
            exports[prop] = jsnums[prop];
        }
    }

    exports.isNumber = jsnums.isSchemeNumber;
    exports.isReal = isReal;
    exports.isRational = isRational;
    exports.isComplex = isComplex;
    exports.isInteger = isInteger;
    exports.isNatural = isNatural;
    exports.isByte = isByte;
    exports.isNonNegativeReal = isNonNegativeReal;

    exports.sign = sign;


}(this.plt.baselib, jsnums));/*jslint browser: true, unparam: true, vars: true, plusplus: true, maxerr: 50, indent: 4 */


// list structures (pairs, empty)
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.lists = exports;

    


    
    var Empty = function () {
    };
    Empty.EMPTY = new Empty();
    var EMPTY = Empty.EMPTY;



    Empty.prototype.equals = function (other, aUnionFind) {
        return other instanceof Empty;
    };

    Empty.prototype.reverse = function () {
        return this;
    };

    Empty.prototype.toWrittenString = function (cache) { return "empty"; };
    Empty.prototype.toDisplayedString = function (cache) { return "empty"; };
    Empty.prototype.toString = function (cache) { return "()"; };

    
    // Empty.append: (listof X) -> (listof X)
    Empty.prototype.append = function (b) {
        return b;
    };
    



    //////////////////////////////////////////////////////////////////////

    // Cons Pairs

    var Cons = function (first, rest) {
        this.first = first;
        this.rest = rest;
    };

    var makePair = function (first, rest) {
        return new Cons(first, rest);
    };

    Cons.prototype.reverse = function () {
        var lst = this;
        var ret = EMPTY;
        while (lst !== EMPTY) {
            ret = makePair(lst.first, ret);
            lst = lst.rest;
        }
        return ret;
    };
    

    // FIXME: can we reduce the recursion on this?
    Cons.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof Cons)) {
            return false;
        }
        return (baselib.equality.equals(this.first, other.first, aUnionFind) &&
                baselib.equality.equals(this.rest, other.rest, aUnionFind));
    };
    

    

    // Cons.append: (listof X) -> (listof X)
    Cons.prototype.append = function (b) {
        if (b === EMPTY) {
            return this;
        }
        var ret = b;
        var lst = this.reverse();
        while (lst !== EMPTY) {
            ret = makePair(lst.first, ret);
            lst = lst.rest;
        }
        
        return ret;
    };
    

    Cons.prototype.toWrittenString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toWrittenString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toWrittenString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };

    Cons.prototype.toString = Cons.prototype.toWrittenString;

    Cons.prototype.toDisplayedString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toDisplayedString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toDisplayedString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };



    Cons.prototype.toDomNode = function (cache) {
        cache.put(this, true);
        var node = document.createElement("span");
        node.appendChild(document.createTextNode("("));
        var p = this;
        while (p instanceof Cons) {
            node.appendChild(baselib.format.toDomNode(p.first, cache));
            p = p.rest;
            if (p !== EMPTY) {
                node.appendChild(document.createTextNode(" "));
            }
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            node.appendChild(document.createTextNode("."));
            node.appendChild(document.createTextNode(" "));
            node.appendChild(baselib.format.toDomNode(p, cache));
        }

        node.appendChild(document.createTextNode(")"));
        return node;
    };


    var isPair = function (x) { return x instanceof Cons; };
    var isEmpty = function (x) { return x === EMPTY; };



    var makeList = function () {
        var result = EMPTY, i;
        for (i = arguments.length - 1; i >= 0; i--) {
            result = makePair(arguments[i], result);
        }
        return result;
    };


    // Coerse a list back into a JavaScript array.
    var listToArray = function (lst) {
        var result = [];
        while (lst !== EMPTY) {
            result.push(lst.first);
            lst = lst.rest;
        }
        return result;
    };


    // isList: Any -> Boolean
    // Returns true if x is a list (a chain of pairs terminated by EMPTY).
    var isList = function (x) { 
        var tortoise, hare;
        tortoise = hare = x;
        if (hare === EMPTY) { return true; }
        while (true) {
            if (!(hare instanceof Cons)) { return false; }
            if (tortoise instanceof Cons) { tortoise = tortoise.rest; }
            hare = hare.rest;
            if (hare instanceof Cons) { hare = hare.rest; }
            if (hare === EMPTY) { return true; }
            if (tortoise === hare) { return false; }
        }
    };



    var reverse = function (lst) {
        var rev = EMPTY;
        while (lst !== EMPTY) {
            rev = makePair(lst.first, rev);
            lst = lst.rest;
        }
        return rev;
    };


    var length = function (lst) {
        var len = 0;
        while (lst !== EMPTY) {
            len++;
            lst = lst.rest;
        }
        return len;
    };


    var listRef = function (lst, n) {
        var i;
        for (i = 0; i < n; i++) {
            lst = lst.rest;
        }
        return lst.first;
    };



    //////////////////////////////////////////////////////////////////////

    exports.EMPTY = EMPTY;
    exports.Empty = Empty;
    exports.Cons = Cons;
    exports.isPair = isPair;
    exports.isList = isList;
    exports.isEmpty = isEmpty;
    exports.makePair = makePair;
    exports.makeList = makeList;
    exports.reverse = reverse;
    exports.length = length;
    exports.listRef = listRef;
    exports.listToArray = listToArray;

}(this.plt.baselib));// vectors
/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.vectors = exports;



    var Vector = function (n, initialElements) {
        var i;
        this.elts = [];
        this.elts.length = n;
        if (initialElements) {
            for (i = 0; i < n; i++) {
                this.elts[i] = initialElements[i];
            }
        } else {
            for (i = 0; i < n; i++) {
                this.elts[i] = undefined;
            }
        }
        this.mutable = true;
    };

    Vector.makeInstance = function (n, elts) {
        return new Vector(n, elts);
    };

    Vector.prototype.length = function () {
        return this.elts.length;
    };

    Vector.prototype.ref = function (k) {
        return this.elts[k];
    };

    Vector.prototype.set = function (k, v) {
        this.elts[k] = v;
    };

    Vector.prototype.equals = function (other, aUnionFind) {
        var i;
        if (other instanceof Vector) {
            if (other.length() !== this.length()) {
                return false;
            }
            for (i = 0; i <  this.length(); i++) {
                if (!(baselib.equality.equals(this.elts[i], other.elts[i], aUnionFind))) {
                    return false;
                }
            }
            return true;
        } else {
            return false;
        }
    };

    Vector.prototype.toList = function () {
        var ret = baselib.lists.EMPTY, i;
        for (i = this.length() - 1; i >= 0; i--) {
            ret = baselib.lists.makePair(this.elts[i], ret);           
        }       
        return ret;
    };

    Vector.prototype.toWrittenString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toWrittenString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDisplayedString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toDisplayedString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDomNode = function (cache) {
        var node = document.createElement("span"), i;
        cache.put(this, true);
        node.appendChild(document.createTextNode("#("));
        for (i = 0; i < this.length(); i++) {
            node.appendChild(baselib.format.toDomNode(this.ref(i), cache));
            if (i !== this.length() - 1) {
                node.appendChild(document.createTextNode(" "));
            }
        }
        node.appendChild(document.createTextNode(")"));
        return node;
    };


    var isVector = function (x) { return x instanceof Vector; };

    // makeVector: x ... -> vector
    var makeVector = function (n, elts) {
        return Vector.makeInstance(n, elts);
    };

    var makeVectorImmutable = function (n, elts) {
        var v = Vector.makeInstance(n, elts);
        v.mutable = false;
        return v;
    };



    //////////////////////////////////////////////////////////////////////

    exports.Vector = Vector;
    exports.isVector = isVector;
    exports.makeVector = makeVector;
    exports.makeVectorImmutable = makeVectorImmutable;


}(this.plt.baselib));// Single characters
(function(baselib) {
    var exports = {};
    baselib.chars = exports;


    // Chars
    // Char: string -> Char
    var Char = function(val){
        this.val = val;
    };
    // The characters less than 256 must be eq?, according to the
    // documentation:
    // http://docs.racket-lang.org/reference/characters.html
    var _CharCache = {};
    for (var i = 0; i < 256; i++) {
        _CharCache[String.fromCharCode(i)] = new Char(String.fromCharCode(i));
    }
    
    // makeInstance: 1-character string -> Char  
    Char.makeInstance = function(val){
        if (_CharCache[val]) {
	    return _CharCache[val];
        }
        return new Char(val);
    };

    Char.prototype.toString = function(cache) {
	var code = this.val.charCodeAt(0);
	var returnVal;
	switch (code) {
	case 0: returnVal = '#\\nul'; break;
	case 8: returnVal = '#\\backspace'; break;
	case 9: returnVal = '#\\tab'; break;
	case 10: returnVal = '#\\newline'; break;
	case 11: returnVal = '#\\vtab'; break;
	case 12: returnVal = '#\\page'; break;
	case 13: returnVal = '#\\return'; break;
	case 20: returnVal = '#\\space'; break;
	case 127: returnVal = '#\\rubout'; break;
	default: if (code >= 32 && code <= 126) {
	    returnVal = ("#\\" + this.val);
	}
	    else {
		var numStr = code.toString(16).toUpperCase();
		while (numStr.length < 4) {
		    numStr = '0' + numStr;
		}
		returnVal = ('#\\u' + numStr);
	    }
	    break;
	}
	return returnVal;
    };

    Char.prototype.toWrittenString = Char.prototype.toString;

    Char.prototype.toDisplayedString = function (cache) {
        return this.val;
    };

    Char.prototype.getValue = function() {
        return this.val;
    };

    Char.prototype.equals = function(other, aUnionFind){
        return other instanceof Char && this.val == other.val;
    };




    exports.Char = Char;
    exports.makeChar = Char.makeInstance;
    exports.isChar = plt.baselib.makeClassPredicate(Char);


})(this['plt'].baselib);/*jslint devel: false, browser: true, unparam: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
// Structure types
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.symbols = exports;


    //////////////////////////////////////////////////////////////////////
    
    // Symbols

    //////////////////////////////////////////////////////////////////////
    var Symbol = function (val) {
        this.val = val;
    };

    var symbolCache = {};
    
    // makeInstance: string -> Symbol.
    Symbol.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(symbolCache.hasOwnProperty(val))) {
            symbolCache[val] = new Symbol(val);
        }
        return symbolCache[val];
    };
    
    Symbol.prototype.equals = function (other, aUnionFind) {
        return other instanceof Symbol &&
            this.val === other.val;
    };
    

    Symbol.prototype.toString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toDisplayedString = function (cache) {
        return this.val;
    };


    var isSymbol = function (x) { return x instanceof Symbol; };

    var makeSymbol = function (s) { return Symbol.makeInstance(s); };



    //////////////////////////////////////////////////////////////////////

    exports.Symbol = Symbol;
    exports.makeSymbol = makeSymbol;
    exports.isSymbol = isSymbol;

}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */


// Strings

// Strings are either mutable or immutable.  immutable strings are represented
// as regular JavaScript strings.  Mutable ones are represented as instances
// of the Str class.

(function (baselib) {
    'use strict';
    var exports = {};

    baselib.strings = exports;


    // chars: arrayof string
    // Precondition: each string must only be 1 character long or bad things
    // happen.
    var Str = function (chars) {
	this.chars = chars;
	this.length = chars.length;
	this.mutable = true;
    };

    Str.makeInstance = function (chars) {
	return new Str(chars);
    };

    Str.fromString = function (s) {
	return Str.makeInstance(s.split(""));
    };

    Str.prototype.toString = function () {
	return this.chars.join("");
    };

    var replaceUnprintableStringChars = function (s) {
	var ret = [], i;
	for (i = 0; i < s.length; i++) {
	    var val = s.charCodeAt(i);
	    switch(val) {
	    case 7: ret.push('\\a'); break;
	    case 8: ret.push('\\b'); break;
	    case 9: ret.push('\\t'); break;
	    case 10: ret.push('\\n'); break;
	    case 11: ret.push('\\v'); break;
	    case 12: ret.push('\\f'); break;
	    case 13: ret.push('\\r'); break;
	    case 34: ret.push('\\"'); break;
	    case 92: ret.push('\\\\'); break;
	    default: 
                if (val >= 32 && val <= 126) {
		    ret.push( s.charAt(i) );
	        }
		else {
		    var numStr = val.toString(16).toUpperCase();
		    while (numStr.length < 4) {
			numStr = '0' + numStr;
		    }
		    ret.push('\\u' + numStr);
		}
		break;
	    }
	}
	return ret.join('');
    };

    var escapeString = function (s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };

    Str.prototype.toWrittenString = function (cache) {
        return escapeString(this.toString());
    };

    Str.prototype.toDisplayedString = Str.prototype.toString;

    Str.prototype.copy = function () {
	return Str.makeInstance(this.chars.slice(0));
    };

    Str.prototype.substring = function (start, end) {
	if (end === null || end === undefined) {
	    end = this.length;
	}
	return Str.makeInstance( this.chars.slice(start, end) );
    };

    Str.prototype.charAt = function (index) {
	return this.chars[index];
    };

    Str.prototype.charCodeAt = function (index) {
	return this.chars[index].charCodeAt(0);
    };

    Str.prototype.replace = function (expr, newStr) {
	return Str.fromString( this.toString().replace(expr, newStr) );
    };


    Str.prototype.equals = function (other, aUnionFind) {
	if ( !(other instanceof Str || typeof(other) === 'string') ) {
	    return false;
	}
	return this.toString() === other.toString();
    };


    Str.prototype.set = function (i, c) {
	this.chars[i] = c;
    };

    Str.prototype.toUpperCase = function () {
	return Str.fromString( this.chars.join("").toUpperCase() );
    };

    Str.prototype.toLowerCase = function () {
	return Str.fromString( this.chars.join("").toLowerCase() );
    };

    Str.prototype.match = function (regexpr) {
	return this.toString().match(regexpr);
    };



    var isString = function (s) {
	return (typeof s === 'string' || 
                s instanceof Str);
    };

    var isMutableString = baselib.makeClassPredicate(Str);



    exports.Str = Str;
    exports.escapeString = escapeString;
    exports.isString = isString;
    exports.isMutableString = isMutableString;
    exports.makeMutableString = Str.makeInstance;

}(this.plt.baselib));/*jslint unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */



(function(baselib) {
    'use strict';
    var exports = {};
    baselib.bytes = exports;

    // Bytes

    var Bytes = function(bts, mutable) {
        // bytes: arrayof [0-255]
        this.bytes = bts;
        this.mutable = (mutable === undefined) ? false : mutable;
    };

    Bytes.prototype.get = function(i) {
	return this.bytes[i];
    };

    Bytes.prototype.set = function(i, b) {
	if (this.mutable) {
	    this.bytes[i] = b;
	}
    };

    Bytes.prototype.length = function() {
	return this.bytes.length;
    };

    Bytes.prototype.copy = function(mutable) {
	return new Bytes(this.bytes.slice(0), mutable);
    };

    Bytes.prototype.subbytes = function(start, end) {
	if (end === null || end === undefined) {
	    end = this.bytes.length;
	}
	return new Bytes( this.bytes.slice(start, end), true );
    };


    Bytes.prototype.equals = function(other) {
        if (! (other instanceof Bytes)) {
	    return false;
        }
        if (this.bytes.length !== other.bytes.length) {
	    return false;
        }
        var A = this.bytes;
        var B = other.bytes;
        var n = this.bytes.length;
        var i;
        for (i = 0; i < n; i++) {
	    if (A[i] !== B[i]) {
	        return false;
            }
        }
        return true;
    };


    Bytes.prototype.toString = function(cache) {
	var ret = [], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(String.fromCharCode(this.bytes[i]));
	}

	return ret.join('');
    };

    Bytes.prototype.toDisplayedString = Bytes.prototype.toString;

    var escapeByte = function(aByte) {
	var ret = [];
	var returnVal;
	switch(aByte) {
	case 7: returnVal = '\\a'; break;
	case 8: returnVal = '\\b'; break;
	case 9: returnVal = '\\t'; break;
	case 10: returnVal = '\\n'; break;
	case 11: returnVal = '\\v'; break;
	case 12: returnVal = '\\f'; break;
	case 13: returnVal = '\\r'; break;
	case 34: returnVal = '\\"'; break;
	case 92: returnVal = '\\\\'; break;
	default: if (aByte >= 32 && aByte <= 126) {
	    returnVal = String.fromCharCode(aByte);
	}
	    else {
		ret.push( '\\' + aByte.toString(8) );
	    }
	    break;
	}
	return returnVal;
    };

    Bytes.prototype.toWrittenString = function() {
	var ret = ['#"'], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(escapeByte(this.bytes[i]));
	}
	ret.push('"');
	return ret.join('');
    };

    var makeBytes = function(chars) {
        return new Bytes(chars);
    };

    var isBytes = baselib.makeClassPredicate(Bytes);


    exports.Bytes = Bytes;
    exports.makeBytes = makeBytes;
    exports.isBytes = isBytes;


}(this.plt.baselib));/*jslint unparam: true, vars: true, white: true, newcap: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

/*global Hashtable*/


(function (baselib, Hashtable) {
    'use strict';
    var exports = {};

    baselib.hashes = exports;


    
    var _eqHashCodeCounter = 0;
    var makeEqHashCode = function () {
        _eqHashCodeCounter++;
        return _eqHashCodeCounter;
    };


    // getHashCode: any -> (or fixnum string)
    // Given a value, produces a hashcode appropriate for eq.
    var getEqHashCode = function (x) {
        if (typeof (x) === 'string') {
            return x;
        }
        if (typeof (x) === 'number') {
            return String(x);
        }
        if (x && !x._eqHashCode) {
            x._eqHashCode = makeEqHashCode();
        }
        if (x && x._eqHashCode) {
            return x._eqHashCode;
        }
        return 0;
    };


    // Creates a low-level hashtable, following the interface of 
    // http://www.timdown.co.uk/jshashtable/
    //
    // Defined to use the getEqHashCode defined in baselib_hash.js.
    var makeLowLevelEqHash = function () {
        return new Hashtable(function (x) { return getEqHashCode(x); },
                             function (x, y) { return x === y; });
    };










    //////////////////////////////////////////////////////////////////////
    // Eq Hashtables
    var EqHashTable = function (inputHash) {
        this.hash = makeLowLevelEqHash();
        this.mutable = true;

    };

    EqHashTable.prototype.toWrittenString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toWrittenString(keys[i], cache);
            var valStr = baselib.format.toWrittenString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hasheq(' + ret.join(' ') + ')');
    };
    
    EqHashTable.prototype.toDisplayedString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toDisplayedString(keys[i], cache);
            var valStr = baselib.format.toDisplayedString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hasheq(' + ret.join(' ') + ')');
    };

    EqHashTable.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof EqHashTable)) {
            return false; 
        }

        if (this.hash.keys().length !== other.hash.keys().length) { 
            return false;
        }

        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++) {
            if (!(other.hash.containsKey(keys[i]) &&
                  baselib.equality.equals(this.hash.get(keys[i]),
                                          other.hash.get(keys[i]),
                                          aUnionFind))) {
                return false;
            }
        }
        return true;
    };



    //////////////////////////////////////////////////////////////////////
    // Equal hash tables
    var EqualHashTable = function (inputHash) {
        this.hash = new Hashtable(
            function (x) {
                return baselib.format.toWrittenString(x); 
            },
            function (x, y) {
                return baselib.equality.equals(x, y, new baselib.UnionFind()); 
            });
        this.mutable = true;
    };

    EqualHashTable.prototype.toWrittenString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toWrittenString(keys[i], cache);
            var valStr = baselib.format.toWrittenString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hash(' + ret.join(' ') + ')');
    };
    EqualHashTable.prototype.toDisplayedString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toDisplayedString(keys[i], cache);
            var valStr = baselib.format.toDisplayedString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#hash(' + ret.join(' ') + ')');
    };

    EqualHashTable.prototype.equals = function (other, aUnionFind) {
        if ( !(other instanceof EqualHashTable) ) {
            return false; 
        }

        if (this.hash.keys().length !== other.hash.keys().length) { 
            return false;
        }

        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++){
            if (! (other.hash.containsKey(keys[i]) &&
                   baselib.equality.equals(this.hash.get(keys[i]),
                                               other.hash.get(keys[i]),
                                               aUnionFind))) {
                return false;
            }
        }
        return true;
    };




    var isHash = function (x) { 
        return (x instanceof EqHashTable ||
                x instanceof EqualHashTable); 
    };


    //////////////////////////////////////////////////////////////////////

    exports.getEqHashCode = getEqHashCode;
    exports.makeEqHashCode = makeEqHashCode;
    exports.makeLowLevelEqHash = makeLowLevelEqHash;


    exports.EqualHashTable = EqualHashTable;
    exports.EqHashTable = EqHashTable;
    exports.isHash = isHash;


}(this.plt.baselib, Hashtable));/*jslint vars: true, maxerr: 50, indent: 4 */

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.regexps = exports;


    // Regular expressions.

    var RegularExpression = function (pattern) {
        this.pattern = pattern;
    };


    var ByteRegularExpression = function (pattern) {
        this.pattern = pattern;
    };

    //////////////////////////////////////////////////////////////////////

    exports.RegularExpression = RegularExpression;
    exports.ByteRegularExpression = ByteRegularExpression;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */


(function (baselib) {
    'use strict';
    var exports = {};
    baselib.paths = exports;

    // Paths

    var Path = function (p) {
        this.path = p;
    };

    Path.prototype.toString = function () {
        return "#<path:" + String(this.path) + ">";
    };

    //////////////////////////////////////////////////////////////////////

    var makePath = function (p) {
        return new Path(p);
    };

    var isPath = baselib.makeClassPredicate(Path);



    exports.Path = Path;
    exports.makePath = makePath;
    exports.isPath = isPath;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Exceptions

(function(baselib) {
    'use strict';
    var exports = {};
    baselib.boxes = exports;


    //////////////////////////////////////////////////////////////////////
    // Boxes
    
    var Box = function(x, mutable) {
	this.val = x;
	this.mutable = mutable;
    };

    Box.prototype.ref = function() {
        return this.val;
    };

    Box.prototype.set = function(newVal) {
        if (this.mutable) {
	    this.val = newVal;
        }
    };

    Box.prototype.toString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toWrittenString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toDisplayedString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toDisplayedString(this.val, cache);
    };

    Box.prototype.toDomNode = function(cache) {
        cache.put(this, true);
        var parent = document.createElement("span");
        parent.appendChild(document.createTextNode('#&'));
        parent.appendChild(baselib.format.toDomNode(this.val, cache));
        return parent;
    };

    Box.prototype.equals = function(other, aUnionFind) {
        return ((other instanceof Box) &&
	        baselib.equality.equals(this.val, other.val, aUnionFind));
    };
    
    var makeBox = function(x) { 
        return new Box(x, true); 
    };

    var makeImmutableBox = function(x) {
        return new Box(x, false); 
    };

    var isBox = function(x) {
        return x instanceof Box;
    };

    var isMutableBox = function(x) { 
        return (x instanceof Box && x.mutable); 
    };

    var isImmutableBox = function(x) { 
        return (x instanceof Box && (!x.mutable));
    };




    //////////////////////////////////////////////////////////////////////
    exports.Box = Box;
    exports.isBox = isBox;
    exports.isMutableBox = isMutableBox;
    exports.isImmutableBox = isImmutableBox;
    exports.makeBox = makeBox;
    exports.makeImmutableBox = makeImmutableBox;


}(this.plt.baselib));// Placeholders
/*jslint browser: true, unparam: true, vars: true, maxerr: 50, indent: 4 */
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.placeholders = exports;


    // Placeholders: same thing as boxes.  Distinct type just to support make-reader-graph.

    var Placeholder = function (x, mutable) {
        this.val = x;
    };

    Placeholder.prototype.ref = function () {
        return this.val;
    };

    Placeholder.prototype.set = function (newVal) {
        this.val = newVal;
    };

    Placeholder.prototype.toString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toWrittenString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDisplayedString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDomNode = function (cache) {
        var parent = document.createElement("span");
        parent.appendChild(document.createTextNode('#<placeholder>'));
        return parent;
    };

    Placeholder.prototype.equals = function (other, aUnionFind) {
        return ((other instanceof Placeholder) &&
                baselib.equality.equals(this.val, other.val, aUnionFind));
    };


    var makePlaceholder = function(v) {
        return new Placeholder(v);
    };

    var isPlaceholder = function (x) { 
        return x instanceof Placeholder; 
    };
    


    //////////////////////////////////////////////////////////////////////
    exports.Placeholder = Placeholder;
    exports.makePlaceholder = makePlaceholder;
    exports.isPlaceholder = isPlaceholder;



}(this.plt.baselib));/*jslint unparam: true, vars: true, maxerr: 50, indent: 4 */

// Keywords

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.keywords = exports;


    var Keyword = function (val) {
        this.val = val;
    };

    var keywordCache = {};
    
    // makeInstance: string -> Keyword.
    Keyword.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(keywordCache.hasOwnProperty(val))) {
            keywordCache[val] = new Keyword(val);
        }
        return keywordCache[val];
    };
    
    Keyword.prototype.equals = function (other, aUnionFind) {
        return other instanceof Keyword &&
            this.val === other.val;
    };
    

    Keyword.prototype.toString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toDisplayedString = function (cache) {
        return this.val;
    };


    exports.Keyword = Keyword;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    "use strict";
    var exports = {};
    baselib.structs = exports;



    //////////////////////////////////////////////////////////////////////

    var Struct = function (constructorName, fields) {
        this._constructorName = constructorName; 
        this._fields = [];
    };

    Struct.prototype.toWrittenString = function (cache) { 
        var buffer = [], i;
        cache.put(this, true);
        buffer.push("(");
        buffer.push(this._constructorName);
        for(i = 0; i < this._fields.length; i++) {
            buffer.push(" ");
            buffer.push(baselib.format.toWrittenString(this._fields[i], cache));
        }
        buffer.push(")");
        return buffer.join("");
    };

    Struct.prototype.toDisplayedString = function (cache) {
        return baselib.format.toWrittenString(this, cache); 
    };

    Struct.prototype.toDomNode = function (params) {
        var node = document.createElement("span"), i;
        params.put(this, true);
        $(node).append(document.createTextNode("("));
        $(node).append(document.createTextNode(this._constructorName));
        for(i = 0; i < this._fields.length; i++) {
            $(node).append(document.createTextNode(" "));
            $(node).append(baselib.format.toDomNode(this._fields[i], params));
        }
        $(node).append(document.createTextNode(")"));
        return node;
    };


    Struct.prototype.equals = function (other, aUnionFind) {
        var i;
        if (!(other instanceof this.type)) {
            return false;
        }
        for (i = 0; i < this._fields.length; i++) {
            if (! baselib.equality.equals(this._fields[i],
                         other._fields[i],
                         aUnionFind)) {
                return false;
            }
        }
        return true;
    };

    Struct.prototype.type = Struct;


    //////////////////////////////////////////////////////////////////////


    var StructType = function (name,             // string
                               type,             // StructType
                               numberOfArgs,     // number
                               numberOfFields,   // number
                               firstField,
                               applyGuard,
                               constructor,
                               predicate, 
                               accessor,
                               mutator) {
        this.name = name;
        this.type = type;
        this.numberOfArgs = numberOfArgs;
        this.numberOfFields = numberOfFields;
        this.firstField = firstField;

        this.applyGuard = applyGuard;
        this.constructor = constructor;
        this.predicate = predicate;
        this.accessor = accessor;
        this.mutator = mutator;
    };


    StructType.prototype.toString = function (cache) {
        return '#<struct-type:' + this.name + '>';
    };


    StructType.prototype.equals = function (other, aUnionFind) {
        return this === other;
    };





    // guard-function: array string (array -> value)





    // Default structure guard just calls the continuation argument.
    var DEFAULT_GUARD = function (args, name, k) { 
        return k(args); 
    };


    // The default parent type refers to the toplevel Struct.
    var DEFAULT_PARENT_TYPE = { type: Struct,
                                numberOfArgs: 0,
                                numberOfFields: 0,
                                firstField: 0,
                                applyGuard: DEFAULT_GUARD };



    // makeStructureType: string StructType number number boolean
    //                    guard-function -> StructType
    //
    // Creates a new structure type.

    var makeStructureType = function (theName,
                                      parentType, 
                                      initFieldCnt, 
                                      autoFieldCnt, 
                                      autoV, 
                                      guard) {


        // Defaults
        autoFieldCnt = autoFieldCnt || 0;
        parentType = parentType || DEFAULT_PARENT_TYPE;
        guard = guard || DEFAULT_GUARD;



        // RawConstructor creates a new struct type inheriting from
        // the parent, with no guard checks.
        var RawConstructor = function (name, args) {
            var i;
            parentType.type.call(this, name, args);
            for (i = 0; i < initFieldCnt; i++) {
                this._fields.push(args[i+parentType.numberOfArgs]);
            }
            for (i = 0; i < autoFieldCnt; i++) {
                this._fields.push(autoV);
            }
        };
        RawConstructor.prototype = baselib.heir(parentType.type.prototype);



        // Set type, necessary for equality checking
        RawConstructor.prototype.type = RawConstructor;

        // The structure type consists of the name, its constructor, a
        // record of how many argument it and its parent type contains,
        // the list of autofields, the guard, and functions corresponding
        // to the constructor, the predicate, the accessor, and mutators.
        var newType = new StructType(
            theName,
            RawConstructor,
            initFieldCnt + parentType.numberOfArgs,
            initFieldCnt + autoFieldCnt,
            parentType.firstField + parentType.numberOfFields,
            function (args, name, k) {
                return guard(args, name,
                             function (result) {
                                 var parentArgs = result.slice(0, parentType.numberOfArgs);
                                 var restArgs = result.slice(parentType.numberOfArgs);
                                 return parentType.applyGuard(
                                     parentArgs, name,
                                     function (parentRes) {
                                         return k( parentRes.concat(restArgs) ); });
                             });
            },
            // constructor
            function () {
                var args = [].slice.call(arguments);
                return newType.applyGuard(
                    args,
                    baselib.symbols.Symbol.makeInstance(theName),
                    function (res) { 
                        return new RawConstructor(theName, res); });
            },

            // predicate
            function (x) { 
                return x instanceof RawConstructor; 
            },

            // accessor
            function (x, i) { return x._fields[i + this.firstField]; },

            // mutator
            function (x, i, v) { x._fields[i + this.firstField] = v; });
        return newType;
    };








    var isStruct = function (x) { return x instanceof Struct; };
    var isStructType = function (x) { return x instanceof StructType; };


    //////////////////////////////////////////////////////////////////////


    exports.StructType = StructType;
    exports.Struct = Struct;
    exports.makeStructureType = makeStructureType;
    exports.isStruct = isStruct;
    exports.isStructType = isStructType;

}(this.plt.baselib, $));/*jslint vars: true, white: true, plusplus: false, maxerr: 50, indent: 4 */
(function(baselib) {
    'use strict';

    var exports = {};
    baselib.srclocs = exports;

    // (define-struct srcloc (source line column position span))
    var srcloc = baselib.structs.makeStructureType(
        'srcloc', false, 5, 0, false, false);
    
    var makeSrcloc = srcloc.constructor;

    var isSrcloc = srcloc.predicate;
    var srclocSource = function(x) { return srcloc.accessor(x, 0); };
    var srclocLine = function(x) { return srcloc.accessor(x, 1); };
    var srclocColumn = function(x) { return srcloc.accessor(x, 2); };
    var srclocPosition = function(x) { return srcloc.accessor(x, 3); };
    var srclocSpan = function(x) { return srcloc.accessor(x, 4); };

    //////////////////////////////////////////////////////////////////////
    exports.makeSrcloc = makeSrcloc;
    exports.isSrcloc = isSrcloc;
    exports.srclocSource = srclocSource;
    exports.srclocLine = srclocLine;
    exports.srclocColumn = srclocColumn;
    exports.srclocPosition = srclocPosition;
    exports.srclocSpan = srclocSpan;

}(this.plt.baselib));// Arity structure
/*jslint unparam: true, sub: true, vars: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    'use strict';
    var exports = {};
    baselib.ports = exports;


    // Output Ports

    var OutputPort = function () {};
    var isOutputPort = baselib.makeClassPredicate(OutputPort);


    var StandardOutputPort = function () {
        OutputPort.call(this);
    };
    StandardOutputPort.prototype = baselib.heir(OutputPort.prototype);
    StandardOutputPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };

    var StandardErrorPort = function () {
        OutputPort.call(this);
    };
    StandardErrorPort.prototype = baselib.heir(OutputPort.prototype);
    StandardErrorPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentErrorDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };





    var OutputStringPort = function () {
        this.buf = [];
    };
    OutputStringPort.prototype = baselib.heir(OutputPort.prototype);
    OutputStringPort.prototype.writeDomNode = function (MACHINE, v) {
        this.buf.push($(v).text());
    };
    OutputStringPort.prototype.getOutputString = function () {
        return this.buf.join('');
    };
    var isOutputStringPort = baselib.makeClassPredicate(OutputStringPort);




    exports.OutputPort = OutputPort;
    exports.isOutputPort = isOutputPort;
    exports.StandardOutputPort = StandardOutputPort;
    exports.StandardErrorPort = StandardErrorPort;
    exports.OutputStringPort = OutputStringPort;
    exports.isOutputStringPort = isOutputStringPort;


}(this.plt.baselib, $));/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Procedures

// For historical reasons, this module is called 'functions' instead of 'procedures'.
// This may change soon.

/*global plt*/

(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.functions = exports;
    
    // Procedure types: a procedure is either a Primitive or a Closure.

    // A Primitive is a function that's expected to return.  It is not
    // allowed to call into Closures.  Its caller is expected to pop off
    // its argument stack space.
    //



    var isPrimitiveProcedure = function (x) {
        return typeof (x) === 'function';
    };







    // A Closure is a function that takes on more responsibilities: it is
    // responsible for popping off stack space before it finishes, and it
    // is also explicitly responsible for continuing the computation by 
    // popping off the control stack and doing the jump.  Because of this,
    // closures can do pretty much anything to the machine.

    // A closure consists of its free variables as well as a label
    // into its text segment.
    var Closure = function (label, arity, closedVals, displayName) {
        this.label = label;              // (MACHINE -> void)
        this.racketArity = arity;              // number
        this.closedVals = closedVals;    // arrayof number
        this.displayName = displayName;  // string
    };


    // Finalize the return from a closure.  This is a helper function
    // for those who implement Closures by hand.
    //
    // If used in the body of a Closure, it must be in tail
    // position.  This finishes the closure call, and does the following:
    //
    //     * Clears out the existing arguments off the stack frame
    //     * Sets up the return value
    //     * Jumps either to the single-value return point, or the multiple-value
    //       return point.
    //
    // I'd personally love for this to be a macro and avoid the
    // extra function call here.
    var finalizeClosureCall = function (MACHINE) {
        MACHINE.cbt--;
        var returnArgs = [].slice.call(arguments, 1);

        // clear out stack space
        MACHINE.e.length -= MACHINE.a;

        if (returnArgs.length === 1) {
            MACHINE.v = returnArgs[0];
            return MACHINE.c.pop().label(MACHINE);
        } else if (returnArgs.length === 0) {
            MACHINE.a = 0;
            return (MACHINE.c.pop().label.mvr || plt.runtime.si_context_expected_1)(MACHINE);
        } else {
            MACHINE.a = returnArgs.length;
            MACHINE.v = returnArgs.shift();
            MACHINE.e.push.apply(MACHINE.e, returnArgs.reverse());
            return (MACHINE.c.pop().label.mvr || plt.runtime.si_context_expected_1)(MACHINE);
        }
    };


    var isClosure = function (x) {
        return x instanceof Closure;
    };


    var isProcedure = function (x) {
        return (typeof (x) === 'function' ||
                x instanceof Closure);
    };








  
    var coersePrimitiveToJavaScript = function (v, MACHINE) {
        return function (succ, fail) {
            try {
                succ = succ || function () {};
                fail = fail || function () {};

                var oldArgcount = MACHINE.a, i;
                MACHINE.a = arguments.length - 2;
                for (i = 0; i < arguments.length - 2; i++) {
                    MACHINE.e.push(arguments[arguments.length - 1 - i]);
                }

                if (!(baselib.arity.isArityMatching(v.racketArity, MACHINE.a))) {
                    var msg = baselib.format.format("arity mismatch: ~s expected ~s arguments, but received ~s",
                                                    [v.displayName, v.racketArity, MACHINE.a]);
                    return fail(new baselib.exceptions.RacketError(
                        msg,
                        baselib.exceptions.makeExnFailContractArity(msg,
                                                                    MACHINE.captureContinuationMarks())));
                }

                var result = v(MACHINE);
                MACHINE.a = oldArgcount;
                for (i = 0; i < arguments.length - 2; i++) { 
                    MACHINE.e.pop();
                }
                succ(result);
            } catch (e) {
                fail(e);
            }
        };
    };

    var coerseClosureToJavaScript = function (v, MACHINE) {
        var f = function (succ, fail) {
            succ = succ || function () {};
            fail = fail || function () {};

            if (!(baselib.arity.isArityMatching(v.racketArity, arguments.length - 2))) {
                var msg = baselib.format.format(
                    "arity mismatch: ~s expected ~s argument(s) but received ~s",
                    [v.displayName, v.racketArity, arguments.length - 2]);
                return fail(new baselib.exceptions.RacketError(
                    msg,
                    baselib.exceptions.makeExnFailContractArity(msg,
                                                                MACHINE.captureContinuationMarks())));
            }

            var oldVal = MACHINE.v;
            var oldArgcount = MACHINE.a;
            var oldProc = MACHINE.p;

            var oldErrorHandler = MACHINE.params['currentErrorHandler'];
            var afterGoodInvoke = function (MACHINE) { 
                plt.runtime.PAUSE(
                    function (restart) {
                        MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                        var returnValue = MACHINE.v;
                        MACHINE.v = oldVal;
                        MACHINE.a = oldArgcount;
                        MACHINE.p = oldProc;
                        succ(returnValue);
                    });
            };
            afterGoodInvoke.mvr = function (MACHINE) {
                plt.runtime.PAUSE(
                    function (restart) {
                        MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                        var returnValues = [MACHINE.v], i;
                        for (i = 0; i < MACHINE.a - 1; i++) {
                            returnValues.push(MACHINE.e.pop());
                        }
                        MACHINE.v = oldVal;
                        MACHINE.a = oldArgcount;
                        MACHINE.p = oldProc;
                        succ.apply(null, returnValues);
                    });
            };

            MACHINE.c.push(
                new baselib.frames.CallFrame(afterGoodInvoke, v));
            MACHINE.a = arguments.length - 2;
            var i;
            for (i = 0; i < arguments.length - 2; i++) {
                MACHINE.e.push(arguments[arguments.length - 1 - i]);
            }
            MACHINE.p = v;
            MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                MACHINE.v = oldVal;
                MACHINE.a = oldArgcount;
                MACHINE.p = oldProc;
                fail(e);
            };
            MACHINE.trampoline(v.label);
        };
        return f;
    };

    // coerseToJavaScript: racket function -> JavaScript function
    // Given a closure or primitive, produces an
    // asynchronous JavaScript function.
    // The function will run on the provided MACHINE.
    //
    // It assumes that it must begin its own trampoline.
    var asJavaScriptFunction = function (v, MACHINE) {
        MACHINE = MACHINE || plt.runtime.currentMachine;
        if (isPrimitiveProcedure(v)) {
            return coersePrimitiveToJavaScript(v, MACHINE);
        } else if (isClosure(v)) {
            return coerseClosureToJavaScript(v, MACHINE);
        } else {
            baselib.exceptions.raise(MACHINE,
                                     baselib.exceptions.makeExnFailContract(
                                         baselib.format.format(
                                             "Not a procedure: ~e",
                                             v),
                                         MACHINE.captureContinuationMarks()));
        }
    };


    // internallCallDuringPause: call a Racket procedure and get its results.
    // The use assumes the machine is in a running-but-paused state.
    var internalCallDuringPause = function (MACHINE, proc, success, fail) {
        var i;
        var oldArgcount, oldVal, oldProc, oldErrorHandler;
        if (! baselib.arity.isArityMatching(proc.racketArity, arguments.length - 4)) {
            var msg = baselib.format.format("arity mismatch: ~s expected ~s arguments, but received ~s",
                                            [proc.displayName, proc.racketArity, arguments.length - 4]);
            return fail(baselib.exceptions.makeExnFailContractArity(msg,
                                                                    MACHINE.captureContinuationMarks()));
        }

        if (isPrimitiveProcedure(proc)) {
            oldArgcount = MACHINE.a;
            MACHINE.a = arguments.length - 4;
            for (i = 0; i < arguments.length - 4; i++) {
                MACHINE.e.push(arguments[arguments.length - 1 - i]);
            }
            var result = proc(MACHINE);
            for (i = 0; i < arguments.length - 4; i++) {
                MACHINE.e.pop();
            }
            success(result);
        } else if (isClosure(proc)) {
            oldVal = MACHINE.v;
            oldArgcount = MACHINE.a;
            oldProc = MACHINE.p;

            oldErrorHandler = MACHINE.params['currentErrorHandler'];
            var afterGoodInvoke = function (MACHINE) { 
                plt.runtime.PAUSE(function (restart) {
                    MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                    var returnValue = MACHINE.v;
                    MACHINE.v = oldVal;
                    MACHINE.a = oldArgcount;
                    MACHINE.p = oldProc;
                    success(returnValue);
                });
            };
            afterGoodInvoke.mvr = function (MACHINE) {
                plt.runtime.PAUSE(function (restart) {
                    MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                    var returnValues = [MACHINE.v];
                    var i;
                    for (i = 0; i < MACHINE.a - 1; i++) {
                        returnValues.push(MACHINE.e.pop());
                    }
                    MACHINE.v = oldVal;
                    MACHINE.a = oldArgcount;
                    MACHINE.p = oldProc;
                    success.apply(null, returnValues);
                });
            };

            MACHINE.c.push(
                new baselib.frames.CallFrame(afterGoodInvoke, proc));
            MACHINE.a = arguments.length - 4;
            for (i = 0; i < arguments.length - 4; i++) {
                MACHINE.e.push(arguments[arguments.length - 1 - i]);
            }
            MACHINE.p = proc;
            MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                MACHINE.v = oldVal;
                MACHINE.a = oldArgcount;
                MACHINE.p = oldProc;
                fail(e);
            };
            MACHINE.trampoline(proc.label);
        } else {
            fail(baselib.exceptions.makeExnFail(
                baselib.format.format(
                    "Not a procedure: ~e",
                    proc),
                MACHINE.captureContinuationMarks()));
        }
    };








    var makeClosure = function (name, arity, f, closureArgs) {
        if (! closureArgs) { closureArgs = []; }
        return new Closure(f,
                           arity,
                           closureArgs,
                           name);
    };


    var makePrimitiveProcedure = function (name, arity, f) {
        // f.racketArity = arity;
        // f.displayName = name;
        // return f;
        return makeClosure(name,
                           arity,
                           function(M) {
                               --M.cbt;
                               M.v = f(M);
                               M.e.length -= M.a;
                               return M.c.pop().label(M);
                           },
                           []);
    };








    var renameProcedure = function (f, name) {
        if (isPrimitiveProcedure(f)) {
            return makePrimitiveProcedure(
                name,
                f.racketArity,
                function (MACHINE) {
                    return f(MACHINE);
                });
        } else {
            return makeClosure(name, f.racketArity, f.label, f.closedVals);
        }
    };





    //////////////////////////////////////////////////////////////////////
    exports.Closure = Closure;
    exports.internalCallDuringPause = internalCallDuringPause;
    exports.finalizeClosureCall = finalizeClosureCall;

    exports.makePrimitiveProcedure = makePrimitiveProcedure;
    exports.makeClosure = makeClosure;

    exports.isPrimitiveProcedure = isPrimitiveProcedure;
    exports.isClosure = isClosure;

    exports.isProcedure = isProcedure;


    exports.renameProcedure = renameProcedure;


    exports.asJavaScriptFunction = asJavaScriptFunction;

}(this.plt.baselib, this.plt));/*jslint sub: true, vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*global plt*/

// Modules
(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.modules = exports;


    var ModuleRecord = function (name, label) {
        this.name = name;
        this.label = label;
        this.isInvoked = false;
        this.prefix = false;
        this.namespace = {};

        // JavaScript-implemented code will assign privateExports
        // with all of the exported identifiers.
        this.privateExports = {};
    };

    // Returns access to the names defined in the module.
    ModuleRecord.prototype.getNamespace = function () {
        return this.namespace;
    };

    ModuleRecord.prototype.finalizeModuleInvokation = function () {
        var i, len = this.prefix.names.length;
        for (i = 0; i < len; i++) {
            this.namespace[this.prefix.names[i]] = this.prefix[i];
        }
    };
    

    // External invokation of a module.
    ModuleRecord.prototype.invoke = function (MACHINE, succ, fail) {
        this._invoke(false, MACHINE, succ, fail);
    };

    // Internal invokation of a module.
    ModuleRecord.prototype.internalInvoke = function (MACHINE, succ, fail) {
        this._invoke(true, MACHINE, succ, fail);
    };

    // Private: general invokation of a module
    ModuleRecord.prototype._invoke = function (isInternal, MACHINE, succ, fail) {
        var that = this;
        MACHINE = MACHINE || plt.runtime.currentMachine;
        succ = succ || function () {};
        fail = fail || function () {};

        var oldErrorHandler = MACHINE.params['currentErrorHandler'];
        var afterGoodInvoke = function (MACHINE) { 
            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
            if (isInternal) { succ(); }
            else {
                throw new plt.runtime.HaltError(succ)
            }
        };

        if (this.isInvoked) {
            succ();
        } else {
            MACHINE.params['currentErrorHandler'] = function (MACHINE, anError) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                fail(MACHINE, anError);
            };
            MACHINE.c.push(new plt.baselib.frames.CallFrame(afterGoodInvoke, null));
            if (isInternal) {
                throw that.label;
            } else {
                MACHINE.trampoline(that.label);
            }
        }
    };



    exports.ModuleRecord = ModuleRecord;


}(this.plt.baselib, this.plt));/*global plt*/
/*jslint browser: true, unparam: true, vars: true, white: true, maxerr: 50, indent: 4 */

// Continuation marks
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.contmarks = exports;


    var ContinuationMarkSet = function(kvlists) {
        this.kvlists = kvlists;
    };

    ContinuationMarkSet.prototype.toDomNode = function(cache) {
        var dom = document.createElement("span");
        dom.appendChild(document.createTextNode('#<continuation-mark-set>'));
        return dom;
    };

    ContinuationMarkSet.prototype.toWrittenString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.toDisplayedString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.ref = function(key) {
        var i, j;
        var result = [];
        var kvlist;
        for (i = 0; i < this.kvlists.length; i++) {
            kvlist = this.kvlists[i];
            for (j = 0; j < kvlist.length; j++) {
                if (baselib.equality.equals(kvlist[j][0], key)) {
                    result.push(kvlist[j][1]);
                }
            }
        }
        return baselib.lists.makeList.apply(null, result);
    };



    // Returns an approximate stack trace.
    // getContext: MACHINE -> (arrayof (U Procedure (Vector source line column position span)))
    ContinuationMarkSet.prototype.getContext = function(MACHINE) {
        var i, j;
        var result = [];
        var kvlist;

        var tracedAppKey = plt.runtime.getTracedAppKey(MACHINE);
        var tracedCalleeKey = plt.runtime.getTracedCalleeKey(MACHINE);
        var proc, locationVector;

        for (i = 0; i < this.kvlists.length; i++) {
            kvlist = this.kvlists[i];
            for (j = 0; j < kvlist.length; j++) {
                if (kvlist[j][0] === tracedAppKey) {
                    locationVector = kvlist[j][1];
                    result.push(locationVector);
                } else if (kvlist[j][0] === tracedCalleeKey) {
                    proc = kvlist[j][1];
                    if (proc !== null) {
                        result.push(proc);
                    }
                }
            }
        }
        return result;
    };





    // A continuation prompt tag labels a prompt frame.
    var ContinuationPromptTag = function(name) {
	this.name = name;
    };






    exports.ContinuationMarkSet = ContinuationMarkSet;
    exports.ContinuationPromptTag = ContinuationPromptTag;

}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.arity = exports;



    var ArityAtLeast = baselib.structs.makeStructureType(
        'arity-at-least', false, 1, 0, false, false);


    // An arity is either a primitive number, an ArityAtLeast instance,
    // or a list of either primitive numbers or ArityAtLeast instances.



    var isArityAtLeast = ArityAtLeast.predicate;
    var arityAtLeastValue = function(x) { 
        var val = ArityAtLeast.accessor(x, 0);
        return val;
    };


    ArityAtLeast.type.prototype.toString = function() {
        return '#<arity-at-least ' + arityAtLeastValue(this) + '>';
    };



    // isArityMatching: arity natural -> boolean
    // Produces true if n satisfies the arity.
    var isArityMatching = function(arity, n) {
	if (typeof(arity) === 'number') {
	    return arity === n;
	} else if (isArityAtLeast(arity)) {
	    return n >= arityAtLeastValue(arity);
	} else {
	    while (arity !== baselib.lists.EMPTY) {
		if (typeof(arity.first) === 'number') {
		    if (arity.first === n) { return true; }
		} else if (isArityAtLeast(arity.first)) {
		    if (n >= arityAtLeastValue(arity.first)) { return true; }
		}
		arity = arity.rest;
	    }
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////

    exports.ArityAtLeast = ArityAtLeast;
    exports.makeArityAtLeast = ArityAtLeast.constructor;
    exports.isArityAtLeast = isArityAtLeast;
    exports.isArityMatching = isArityMatching;
    exports.arityAtLeastValue = arityAtLeastValue;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Structure types

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.inspectors = exports;


    var Inspector = function () {
    };
    var DEFAULT_INSPECTOR = new Inspector();

    Inspector.prototype.toString = function () {
        return "#<inspector>";
    };

    var isInspector = baselib.makeClassPredicate(Inspector);



    exports.Inspector = Inspector;
    exports.DEFAULT_INSPECTOR = DEFAULT_INSPECTOR;

    exports.isInspector = isInspector;


}(this.plt.baselib));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Exceptions

(function(baselib) {
    'use strict';
    var exceptions = {};
    baselib.exceptions = exceptions;



    var RacketError = function(message, racketError) {
        Error.call(this, message);
        this.message = message;
        this.racketError = racketError;
    };
    RacketError.prototype = baselib.heir(Error.prototype);
    var isRacketError = baselib.makeClassPredicate(RacketError);



    // (define-struct exn (message continuation-mark-set))
    var Exn = baselib.structs.makeStructureType(
        'exn', false, 2, 0, false, false);


    // (define-struct (exn:break exn) (continuation))
    var ExnBreak = baselib.structs.makeStructureType(
        'exn:break', Exn, 1, 0, false, false);


    var ExnFail = baselib.structs.makeStructureType(
        'exn:fail', Exn, 0, 0, false, false);

    var ExnFailContract = baselib.structs.makeStructureType(
        'exn:fail:contract', ExnFail, 0, 0, false, false);

    var ExnFailContractArity = baselib.structs.makeStructureType(
        'exn:fail:contract:arity', ExnFailContract, 0, 0, false, false);

    // exn:fail:contract (id)
    var ExnFailContractVariable = baselib.structs.makeStructureType(
        'exn:fail:contract:variable', ExnFailContract, 1, 0, false, false);

    var ExnFailContractDivisionByZero = baselib.structs.makeStructureType(
        'exn:fail:contract:divide-by-zero', ExnFailContract, 0, 0, false, false);





    var exceptionHandlerKey = new baselib.symbols.Symbol("exnh");





    //////////////////////////////////////////////////////////////////////

    // Raise error to the toplevel.

    // If the error is of an exception type, make sure e.message holds the string
    // value to allow integration with systems that don't recognize Racket error 
    // structures.
    var raise = function(MACHINE, e) { 
        if (isRacketError(e) && Exn.predicate(e.racketError)) {
            e.message = Exn.accessor(e.racketError, 0);
        } else if (Exn.predicate(e)) {
            e = new RacketError(Exn.accessor(e, 0), e);
        }

        if (typeof(window.console) !== 'undefined' &&
            typeof(window.console['log']) === 'function') {
            window.console.log(MACHINE);
            if (e['stack']) { window.console.log(e['stack']); }
            else { window.console.log(e); }
        } 
        throw e; 
    };




    var raiseUnboundToplevelError = function(MACHINE, name) {
        var message = baselib.format.format("Not bound: ~a", [name]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, 
              ExnFailContractVariable.constructor(message, 
                                                  contMarks, 
                                                  baselib.symbols.makeSymbol(name))); 
    };


    var raiseArgumentTypeError = function(MACHINE, 
                                          callerName,
                                          expectedTypeName,
                                          argumentOffset,
                                          actualValue) {
        var message;
        var contMarks = MACHINE.captureContinuationMarks();
        if (argumentOffset !== undefined) {
            message = baselib.format.format(
                          "~a: expected ~a as argument ~e but received ~e",
                          [callerName,
                           expectedTypeName,
                           (argumentOffset + 1),
                           actualValue]);
            raise(MACHINE, ExnFailContract.constructor(message, contMarks));
        } else {
            message = baselib.format.format(
                          "~a: expected ~a but received ~e",
                          [callerName,
                           expectedTypeName,
                           actualValue]);
            raise(MACHINE, ExnFailContract.constructor(message, contMarks));
        }
    };

    var raiseContextExpectedValuesError = function(MACHINE, expected) {
        var message = baselib.format.format("expected ~e values, received ~e values",
                                            [expected, MACHINE.a]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContract.constructor(message, contMarks));
    };

    var raiseArityMismatchError = function(MACHINE, proc, received) {
        var message = baselib.format.format("~a: expected ~e value(s), received ~e value(s)",
                                            [proc.displayName,
                                             proc.racketArity,
                                             received]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContractArity.constructor(message, contMarks));
    };

    var raiseOperatorApplicationError = function(MACHINE, operator) {
        var message = baselib.format.format("not a procedure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, 
              ExnFailContract.constructor(message, contMarks));
    };

    var raiseOperatorIsNotClosure = function(MACHINE, operator) {
        var message = baselib.format.format("not a closure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor(message, contMarks));
    };

    var raiseOperatorIsNotPrimitiveProcedure = function(MACHINE, operator) {
        var message = baselib.format.format("not a primitive procedure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor(message, contMarks));
    };


    var raiseUnimplementedPrimitiveError = function(MACHINE, name) {
        var message = "unimplemented kernel procedure: " + name;
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor(message, contMarks));
    };









    //////////////////////////////////////////////////////////////////////
    // Exports



    exceptions.RacketError = RacketError;
    exceptions.isRacketError = isRacketError;


    // exceptions.InternalError = InternalError;
    // exceptions.internalError = function(v, contMarks) { return new InternalError(v, contMarks); };
    // exceptions.isInternalError = function(x) { return x instanceof InternalError; };

    // exceptions.IncompleteExn = IncompleteExn;
    // exceptions.makeIncompleteExn = function(constructor, msg, args) { return new IncompleteExn(constructor, msg, args); };
    // exceptions.isIncompleteExn = function(x) { return x instanceof IncompleteExn; };


    exceptions.Exn = Exn;
    exceptions.makeExn = Exn.constructor;
    exceptions.isExn = Exn.predicate;
    exceptions.exnMessage = function(exn) { return Exn.accessor(exn, 0); };
    exceptions.exnContMarks = function(exn) { return Exn.accessor(exn, 1); };
    exceptions.exnSetContMarks = function(exn, v) { Exn.mutator(exn, 1, v); };

    exceptions.ExnBreak = ExnBreak;
    exceptions.makeExnBreak = ExnBreak.constructor;
    exceptions.isExnBreak = ExnBreak.predicate;
    exceptions.exnBreakContinuation = 
        function(exn) { return ExnBreak.accessor(exn, 0); };

    exceptions.ExnFail = ExnFail;
    exceptions.makeExnFail = ExnFail.constructor;
    exceptions.isExnFail = ExnFail.predicate;

    exceptions.ExnFailContract = ExnFailContract;
    exceptions.makeExnFailContract = ExnFailContract.constructor;
    exceptions.isExnFailContract = ExnFailContract.predicate;

    exceptions.ExnFailContractArity = ExnFailContractArity;
    exceptions.makeExnFailContractArity = ExnFailContractArity.constructor;
    exceptions.isExnFailContractArity = ExnFailContractArity.predicate;

    exceptions.ExnFailContractVariable = ExnFailContractVariable;
    exceptions.makeExnFailContractVariable = ExnFailContractVariable.constructor;
    exceptions.isExnFailContractVariable = ExnFailContractVariable.predicate;
    exceptions.exnFailContractVariableId = 
        function(exn) { return ExnFailContractVariable.accessor(exn, 0); };


    exceptions.ExnFailContractDivisionByZero = ExnFailContractDivisionByZero;
    exceptions.makeExnFailContractDivisionByZero = 
        ExnFailContractDivisionByZero.constructor;
    exceptions.isExnFailContractDivisionByZero = ExnFailContractDivisionByZero.predicate;


    exceptions.exceptionHandlerKey = exceptionHandlerKey;




    exceptions.raise = raise;
    exceptions.raiseUnboundToplevelError = raiseUnboundToplevelError;
    exceptions.raiseArgumentTypeError = raiseArgumentTypeError;
    exceptions.raiseContextExpectedValuesError = raiseContextExpectedValuesError;
    exceptions.raiseArityMismatchError = raiseArityMismatchError;
    exceptions.raiseOperatorApplicationError = raiseOperatorApplicationError;
    exceptions.raiseOperatorIsNotClosure = raiseOperatorIsNotClosure;
    exceptions.raiseOperatorIsNotPrimitiveProcedure = raiseOperatorIsNotPrimitiveProcedure;
    exceptions.raiseUnimplementedPrimitiveError = raiseUnimplementedPrimitiveError;


}(this.plt.baselib));/*jslint vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.readergraph = exports;


    var readerGraph = function (x, objectHash, n) {
        var i;
        if (typeof (x) === 'object' && objectHash.containsKey(x)) {
            return objectHash.get(x);
        }

        if (baselib.lists.isPair(x)) {
            var consPair = baselib.lists.makePair(x.first, x.rest);
            objectHash.put(x, consPair);
            consPair.first = readerGraph(x.first, objectHash, n + 1);
            consPair.rest = readerGraph(x.rest, objectHash, n + 1);
            return consPair;
        }

        if (baselib.vectors.isVector(x)) {
            var len = x.length();
            var aVector = baselib.vectors.makeVector(len, x.elts);
            objectHash.put(x, aVector); 
            for (i = 0; i < len; i++) {
                aVector.elts[i] = readerGraph(aVector.elts[i], objectHash, n + 1);
            }
            return aVector;
        }

        if (baselib.boxes.isBox(x)) {
            var aBox = baselib.boxes.makeBox(x.ref());
            objectHash.put(x, aBox);
            aBox.val = readerGraph(x.ref(), objectHash, n + 1);
            return aBox;
        }

        if (baselib.hashes.isHash(x)) {
            throw new Error("make-reader-graph of hash not implemented yet");
        }

        if (baselib.structs.isStruct(x)) {
            var aStruct = baselib.clone(x);
            objectHash.put(x, aStruct);
            for (i = 0; i < x._fields.length; i++) {
                x._fields[i] = readerGraph(x._fields[i], objectHash, n + 1);
            }
            return aStruct;
        }

        if (baselib.placeholders.isPlaceholder(x)) {
            return readerGraph(x.ref(), objectHash, n + 1);
        }

        return x;
    };

    exports.readerGraph = readerGraph;

}(this.plt.baselib));/*jslint vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Helper functions for argument checking.

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.check = exports;

    var EMPTY = baselib.lists.EMPTY;
    var isPair = baselib.lists.isPair;
    var makeLowLevelEqHash = baselib.hashes.makeLowLevelEqHash;


    //////////////////////////////////////////////////////////////////////

    // testArgument: (X -> boolean) X number string string -> boolean
    // Produces the argument value the predicate is true, and otherwise raises an error.
    var testArgument = function (MACHINE,
                                 expectedTypeName,
                                 predicate,                          
                                 val, 
                                 index, 
                                 callerName) {
        if (predicate(val)) {
            return val;
        } else {
            if (typeof(expectedTypeName) === 'function') { 
                expectedTypeName = expectedTypeName(); 
            }
            baselib.exceptions.raiseArgumentTypeError(MACHINE, 
                                                      callerName,
                                                      expectedTypeName,
                                                      index,
                                                      val);
        }
    };


    var makeCheckArgumentType = function (predicate, predicateName) {
        return function (MACHINE, callerName, position) {
            return testArgument(
                MACHINE,
                predicateName,
                predicate,
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };

    var makeCheckParameterizedArgumentType = function (parameterizedPredicate, 
                                                       parameterizedPredicateName) {
        return function (MACHINE, callerName, position) {
            var args = [], i;
            for (i = 3; i < arguments.length; i++) {
                args.push(arguments[i]);
            }
            return testArgument(
                MACHINE,
                function () { return parameterizedPredicateName.apply(null, args); },
                function (x) {
                    return parameterizedPredicate.apply(null, [x].concat(args));
                },
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };





    var makeCheckListofArgumentType = function (predicate, predicateName) {
        var listPredicate = function (x) {
            var seen = makeLowLevelEqHash();
            while (true) {
                if (x === EMPTY){
                    return true;
                }

                if (!isPair(x)) {
                    return false;
                }

                if(seen.containsKey(x)) {
                    // raise an error? we've got a cycle!
                    return false;
                }

                if (! predicate(x.first)) {
                    return false;
                }
                
                seen.put(x, true);
                x = x.rest;
            }
        };
        return function (MACHINE, callerName, position) {
            return testArgument(
                MACHINE,
                'list of ' + predicateName,
                listPredicate,
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };







    var testArity = function (MACHINE, callerName, observed, minimum, maximum) {
        if (observed < minimum || observed > maximum) {
            baselib.exceptions.raise(
                MACHINE, 
                baselib.exceptions.ExnFailContractArity.constructor(
                    callerName + ": expected at least " + minimum
                        + " arguments "
                        + " but received " + observed,
                    MACHINE.captureContinuationMarks()));
        }
    };




    var checkOutputPort = makeCheckArgumentType(
        baselib.ports.isOutputPort,
        'output port');

    var checkSymbol = makeCheckArgumentType(
        baselib.symbols.isSymbol,
        'symbol');

    var checkString = makeCheckArgumentType(
        baselib.strings.isString,
        'string');

    var checkSymbolOrString = makeCheckArgumentType(
        function(x) { return (baselib.symbols.isSymbol(x) || 
                              baselib.strings.isString(x)); },
        'symbol or string');

    var checkMutableString = makeCheckArgumentType(
        baselib.strings.isMutableString,
        'mutable string');

    var checkChar = makeCheckArgumentType(
        baselib.chars.isChar,
        'character');

    var checkProcedure = makeCheckArgumentType(
        baselib.functions.isProcedure,
        'procedure');

    var checkNumber = makeCheckArgumentType(
        baselib.numbers.isNumber,
        'number');

    var checkReal = makeCheckArgumentType(
        baselib.numbers.isReal,
        'real');

    var checkNatural = makeCheckArgumentType(
        baselib.numbers.isNatural,
        'natural');

    var checkByte = makeCheckArgumentType(
        baselib.numbers.isByte,
        'byte');

    var checkBytes = makeCheckArgumentType(
        baselib.bytes.isBytes,
        'bytes');

    var checkNaturalInRange = makeCheckParameterizedArgumentType(
        function (x, a, b) {
            if (! baselib.numbers.isNatural(x)) { return false; }
            return (baselib.numbers.lessThanOrEqual(a, x) &&
                    baselib.numbers.lessThan(x, b));
        },
        function (a, b) {
            return baselib.format.format('natural between ~a and ~a', [a, b]);
        });

    var checkInteger = makeCheckArgumentType(
        baselib.numbers.isInteger,
        'integer');

    var checkRational = makeCheckArgumentType(
        baselib.numbers.isRational,
        'rational');

    var checkNonNegativeReal = makeCheckArgumentType(
        baselib.numbers.isNonNegativeReal,
        'non-negative real');

    var checkPair = makeCheckArgumentType(
        baselib.lists.isPair,
        'pair');

    var checkList = makeCheckArgumentType(
        baselib.lists.isList,
        'list');

    var checkVector = makeCheckArgumentType(
        baselib.vectors.isVector,
        'vector');

    var checkBoolean = makeCheckArgumentType(
        function (x) { return x === true || x === false; },
        'boolean');

    var checkBox = makeCheckArgumentType(
        baselib.boxes.isBox,
        'box');

    var checkMutableBox = makeCheckArgumentType(
        baselib.boxes.isMutableBox,
        'mutable box');

    var checkInspector = makeCheckArgumentType(
        baselib.inspectors.isInspector,
        'inspector');


    var checkPlaceholder = makeCheckArgumentType(
        baselib.placeholders.isPlaceholder,
        'placeholder');


    var checkSrcloc = makeCheckArgumentType(
        baselib.srclocs.isSrcloc,
        'srcloc');


    //////////////////////////////////////////////////////////////////////


    exports.testArgument = testArgument;
    exports.testArity = testArity;
    exports.makeCheckArgumentType = makeCheckArgumentType;
    exports.makeCheckParameterizedArgumentType = makeCheckParameterizedArgumentType;
    exports.makeCheckListofArgumentType = makeCheckListofArgumentType;

    exports.checkOutputPort = checkOutputPort;
    exports.checkSymbol = checkSymbol;
    exports.checkString = checkString;
    exports.checkSymbolOrString = checkSymbolOrString;
    exports.checkMutableString = checkMutableString;
    exports.checkChar = checkChar;
    exports.checkProcedure = checkProcedure;
    exports.checkNumber = checkNumber;
    exports.checkReal = checkReal;
    exports.checkNonNegativeReal = checkNonNegativeReal;
    exports.checkNatural = checkNatural;
    exports.checkNaturalInRange = checkNaturalInRange;
    exports.checkByte = checkByte;
    exports.checkBytes = checkBytes;
    exports.checkInteger = checkInteger;
    exports.checkRational = checkRational;
    exports.checkPair = checkPair;
    exports.checkList = checkList;
    exports.checkVector = checkVector;
    exports.checkBox = checkBox;
    exports.checkMutableBox = checkMutableBox;
    exports.checkInspector = checkInspector;
    exports.checkByte = checkByte;
    exports.checkBoolean = checkBoolean;
    exports.checkPlaceholder = checkPlaceholder;
    exports.checkSrcloc = checkSrcloc;

}(this.plt.baselib));
/*jslint unparam: true, sub: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.primitives = exports;


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;

    var isReal = baselib.numbers.isReal;
    var isComplex = baselib.numbers.isComplex;
    var isRational = baselib.numbers.isRational;


    var isNatural = baselib.numbers.isNatural;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var makeFloat = baselib.numbers.makeFloat;
    var makeComplex = baselib.numbers.makeComplex;
    var makeComplexPolar = baselib.numbers.makeComplexPolar;

    var makeSymbol = baselib.symbols.makeSymbol;

    var makeBox = baselib.boxes.makeBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;

    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;


    // Other helpers
    var withArguments = baselib.withArguments;
    var toDomNode = baselib.format.toDomNode;



    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;

    var testArgument = baselib.check.testArgument;

    var checkOutputPort = baselib.check.checkOutputPort;
    var checkString = baselib.check.checkString;
    var checkSymbolOrString = baselib.check.checkSymbolOrString;
    var checkMutableString = baselib.check.checkMutableString;
    var checkSymbol = baselib.check.checkSymbol;
    var checkByte = baselib.check.checkByte;
    var checkChar = baselib.check.checkChar;
    var checkProcedure = baselib.check.checkProcedure;
    var checkNumber = baselib.check.checkNumber;
    var checkReal = baselib.check.checkReal;
    var checkNonNegativeReal = baselib.check.checkNonNegativeReal;
    var checkNatural = baselib.check.checkNatural;
    var checkNaturalInRange = baselib.check.checkNaturalInRange;
    var checkInteger = baselib.check.checkInteger;
    var checkRational = baselib.check.checkRational;
    var checkPair = baselib.check.checkPair;
    var checkList = baselib.check.checkList;
    var checkListofChars = baselib.check.makeCheckListofArgumentType(baselib.chars.isChar,
                                                                     'character');
    var checkVector = baselib.check.checkVector;
    var checkBox = baselib.check.checkBox;
    var checkMutableBox = baselib.check.checkMutableBox;
    var checkInspector = baselib.check.checkInspector;
    var checkPlaceholder = baselib.check.checkPlaceholder;
    var checkSrcloc = baselib.check.checkSrcloc;
    //////////////////////////////////////////////////////////////////////











    // Primitives are the set of primitive values.  Not all primitives
    // are coded here; several of them (including call/cc) are injected by
    // the bootstrapping code in compiler/boostrapped-primitives.rkt
    var Primitives = {};

    var installPrimitiveProcedure = function (name, arity, f) {
        Primitives[name] = makePrimitiveProcedure(name, arity, f);
    };

    var installPrimitiveClosure = function (name, arity, f) {
        Primitives[name] = makeClosure(name, arity, f, []);
    };


    var installPrimitiveConstant = function (name, v) {
        Primitives[name] = v;
    };



    installPrimitiveConstant('pi', baselib.numbers.pi);
    installPrimitiveConstant('e', baselib.numbers.e);
    installPrimitiveConstant('null', NULL);
    installPrimitiveConstant('true', true);
    installPrimitiveConstant('false', false);


    // The parameter keys here must be uninterned symbols, so we explicitly
    // call the symbol constructor here.
    installPrimitiveConstant('exception-handler-key',
                             new baselib.symbols.Symbol("exnh"));
    installPrimitiveConstant('parameterization-key',
                             new baselib.symbols.Symbol("paramz"));
    installPrimitiveConstant('break-enabled-key',
                             new baselib.symbols.Symbol("break-on?"));


    var gensymCounter = 0;
    installPrimitiveProcedure(
        'gensym',
        makeList(0, 1),
        function(M) {
            var baseName = "g";
            if (M.a === 1) {
                baseName = checkSymbolOrString(M, 'gensym', 0).toString();
            }
            gensymCounter++;
            return new baselib.symbols.Symbol(baseName + gensymCounter);
        });


    installPrimitiveProcedure(
        'display',
        makeList(1, 2),
        function (M) {
            var firstArg = M.e[M.e.length - 1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'display', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'write-byte', 
        makeList(1, 2),
        function (M) {
            var firstArg = checkByte(M, 'write-byte', 0);
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'display', 1);
            }
            outputPort.writeDomNode(M, toDomNode(String.fromCharCode(firstArg), 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'newline', makeList(0, 1),
        function (M) {
            var outputPort = M.params.currentOutputPort;
            if (M.a === 1) { 
                outputPort = checkOutputPort(M, 'newline', 1);
            }
            outputPort.writeDomNode(M, toDomNode("\n", 'display'));
            return VOID;
        });

    installPrimitiveProcedure(
        'displayln',
        makeList(1, 2),
        function (M){
            var firstArg = M.e[M.e.length-1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'displayln', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'display'));
            outputPort.writeDomNode(M, toDomNode("\n", 'display'));
            return VOID;
        });



    installPrimitiveProcedure(
        'format',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, formatString;
            formatString = checkString(M, 'format', 0).toString();
            for(i = 1; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            return baselib.format.format(formatString, args, 'format');
        });


    installPrimitiveProcedure(
        'printf',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, formatString, result, outputPort;
            formatString = checkString(M, 'printf', 0).toString();
            for(i = 1; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort = M.params.currentOutputPort;            
            outputPort.writeDomNode(M, toDomNode(result, 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'fprintf',
        baselib.arity.makeArityAtLeast(2),
        function (M) {
            var args = [], i, formatString, outputPort, result;
            outputPort = checkOutputPort(M, 'fprintf', 0);
            formatString = checkString(M, 'fprintf', 1).toString();
            for(i = 2; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort.writeDomNode(M, toDomNode(result, 'display'));
            return VOID;
        });






    installPrimitiveProcedure(
        'current-print',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentPrint'] =                 
                    checkProcedure(M, 'current-print', 0);
                return VOID;
            } else {
                return M.params['currentPrint'];
            }
        });


    installPrimitiveProcedure(
        'current-output-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentOutputPort'] = 
                    checkOutputPort(M, 'current-output-port', 0);
                return VOID;
            } else {
                return M.params['currentOutputPort'];
            }
        });



    installPrimitiveProcedure(
        'current-error-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentErrorPort'] = 
                    checkOutputPort(M, 'current-output-port', 0);
                return VOID;
            } else {
                return M.params['currentOutputPort'];
            }
        });







    installPrimitiveProcedure(
        '=',
        baselib.arity.makeArityAtLeast(2),
        function (M) {
	    var i;
            var firstArg = checkNumber(M, '=', 0), secondArg;
            for (i = 1; i < M.a; i++) {
                secondArg = checkNumber(M, '=', i);
                if (! (baselib.numbers.equals(firstArg, secondArg))) {
                    return false; 
                }
            }
            return true;
        });


    
    installPrimitiveProcedure(
        '=~',
        3,
        function (M) {
            var x = checkReal(M, '=~', 0);
            var y = checkReal(M, '=~', 1);
            var range = checkNonNegativeReal(M, '=~', 2);
            return baselib.numbers.lessThanOrEqual(
                baselib.numbers.abs(baselib.numbers.subtract(x, y)), 
                range);
        });



    var makeChainingBinop = function (predicate, name) {
        return function (M) {
            var firstArg = checkNumber(M, name, 0), secondArg, i;
            for (i = 1; i < M.a; i++) {
                secondArg = checkNumber(M, name, i);
                if (! (predicate(firstArg, secondArg))) {
                    return false; 
                }
                firstArg = secondArg;
            }
            return true;
        };
    };

    installPrimitiveProcedure(
        '<',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThan, '<'));


    installPrimitiveProcedure(
        '>',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThan, '>'));


    installPrimitiveProcedure(
        '<=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThanOrEqual, '<='));


    installPrimitiveProcedure(
        '>=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThanOrEqual, '>='));
    

    installPrimitiveProcedure(
        '+',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = 0;
            var i = 0;
            for (i = 0; i < M.a; i++) {
                result = baselib.numbers.add(
                    result, 
                    checkNumber(M, '+', i));
            }
            return result;
        });
    

    installPrimitiveProcedure(
        '*',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = 1;
            var i = 0;
            for (i=0; i < M.a; i++) {
                result = baselib.numbers.multiply(
                    result, 
                    checkNumber(M, '*', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        '-',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            if (M.a === 1) { 
                return baselib.numbers.subtract(
                    0, 
                    checkNumber(M, '-', 0));
            }
            var result = checkNumber(M, '-', 0), i;
            for (i = 1; i < M.a; i++) {
                result = baselib.numbers.subtract(
                    result, 
                    checkNumber(M, '-', i));
            }
            return result;
        });
    
    installPrimitiveProcedure(
        '/',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var result = checkNumber(M, '/', 0), i;
            for (i = 1; i < M.a; i++) {
                result = baselib.numbers.divide(
                    result,
                    checkNumber(M, '/', i));
            }
            return result;
        });
    

    installPrimitiveProcedure(
        'add1',
        1,
        function (M) {
            var firstArg = checkNumber(M, 'add1', 0);
            return baselib.numbers.add(firstArg, 1);
        });


    installPrimitiveProcedure(
        'sub1',
        1,
        function (M) {
            var firstArg = checkNumber(M, 'sub1', 0);
            return baselib.numbers.subtract(firstArg, 1);
        });


    installPrimitiveProcedure(
        'zero?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return baselib.numbers.equals(firstArg, 0);
        });


    installPrimitiveProcedure(
        'cons',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return makePair(firstArg, secondArg);
        });


    installPrimitiveProcedure(
        'list',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = NULL, i;
            for (i = 0; i < M.a; i++) {
                result = makePair(M.e[M.e.length - (M.a - i)],
                                  result);
            }
            return result;
        });

    installPrimitiveProcedure(
        'list*',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var result = checkList(M, 'list*', M.a - 1), i;
            for (i = M.a - 2; i >= 0; i--) {
                result = makePair(M.e[M.e.length - 1 - i],
                                  result);
            }
            return result;
        });


    installPrimitiveProcedure(
        'list-ref',
        2,
        function (M) {
            var lst = checkList(M, 'list-ref', 0);
            var index = checkNaturalInRange(M, 'list-ref', 1,
                                            0, baselib.lists.length(lst));
            return baselib.lists.listRef(lst, baselib.numbers.toFixnum(index));
        });




    installPrimitiveProcedure(
        'car',
        1,
        function (M) {
            var firstArg = checkPair(M, 'car', 0);
            return firstArg.first;
        });

    installPrimitiveProcedure(
        'cdr',
        1,
        function (M) {
            var firstArg = checkPair(M, 'cdr', 0);
            return firstArg.rest;
        });

    installPrimitiveProcedure(
        'pair?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isPair(firstArg);
        });


    installPrimitiveProcedure(
        'list?',
        1,
        function (M) {
            return isList(M.e[M.e.length -1]);
        });


    installPrimitiveProcedure(
        'set-car!',
        2,
        function (M) {
            var firstArg = checkPair(M, 'set-car!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.first = secondArg;
            return VOID;
        });


    installPrimitiveProcedure(
        'set-cdr!',
        2,
        function (M) {
            var firstArg = checkPair(M, 'set-car!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.rest = secondArg;
            return VOID;
        });

    
    installPrimitiveProcedure(
        'not',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return (firstArg === false);
        });


    installPrimitiveProcedure(
        'null?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return firstArg === NULL;
        });


    installPrimitiveProcedure(
        'vector',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var i;
            var result = [];
            for (i = 0; i < M.a; i++) {
                result.push(M.e[M.e.length-1-i]);
            }
            var newVector = makeVector(result.length, result);
            return newVector;
        });


    installPrimitiveProcedure(
        'make-vector',
        makeList(1, 2),
        function (M) {
            var value = 0;
            var length = baselib.numbers.toFixnum(
                checkNatural(M, 'make-vector', 0));
            if (M.a === 2) {
                value = M.e[M.e.length - 2];
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return makeVector(arr.length, arr);
        });
    

    installPrimitiveProcedure(
        'vector->list',
        1,
        function (M) {
            var elts = checkVector(M, 'vector->list', 0).elts;
            var i;
            var result = NULL;
            for (i = 0; i < elts.length; i++) {
                result = makePair(elts[elts.length - 1 - i], result);
            }
            return result;
        });

    
    installPrimitiveProcedure(
        'list->vector',
        1,
        function (M) {
            var firstArg = checkList(M, 'list->vector', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first);
                firstArg = firstArg.rest;
            }
            return makeVector(result.length, result);
        });


    installPrimitiveProcedure(
        'vector-ref',
        2,
        function (M) {
            var elts = checkVector(M, 'vector-ref', 0).elts;
            var index = M.e[M.e.length-2];
            return elts[index];
        });


    installPrimitiveProcedure(
        'vector-set!',
        3,
        function (M) {
            var elts = checkVector(M, 'vector-set!', 0).elts;
            // FIXME: check out-of-bounds vector
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'vector-set!', 1,
                                    0, elts.length));
            var val = M.e[M.e.length - 1 - 2];
            elts[index] = val;
            return VOID;
        });


    installPrimitiveProcedure(
        'vector-length',
        1,
        function (M) {
            return checkVector(M, 'vector-length', 0).elts.length;
        });



    installPrimitiveProcedure(
        'make-string',
        makeList(1, 2),
        function (M) {
            var value = String.fromCharCode(0);
            var length = baselib.numbers.toFixnum(
                checkNatural(M, 'make-string', 0));
            if (M.a === 2) {
                value = checkChar(M, 'make-string', 1).val;
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return baselib.strings.makeMutableString(arr);
        });

    installPrimitiveProcedure(
        'substring',
        makeList(2, 3),
        function(M) {
            var str = checkString(M, 'substring', 0).toString();
            var start = baselib.numbers.toFixnum(checkNatural(M, 'substring', 1));
            var end = str.length;
            if (M.a === 3) {
                end = baselib.numbers.toFixnum(checkNatural(M, 'substring', 2));
            }
            return str.substring(start, end);
        });


    installPrimitiveProcedure(
        'list->string',
        1,
        function (M) {
            var firstArg = checkListofChars(M, 'list->string', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first.val);
                firstArg = firstArg.rest;
            }
            return result.join('');
        });


    installPrimitiveProcedure(
        'string',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var i;
            var chars = [];
            for (i = 0; i < M.a; i++) {
                chars.push(checkChar(M, 'string', i).val);
            }
            return chars.join('');
        });


    installPrimitiveProcedure(
        'string->list',
        1,
        function (M) {
            var str = checkString(M, 'string->list', 0).toString();
            var i;
            var result = NULL;
            for (i = str.length - 1; i >= 0; i--) {
                result = makePair(baselib.chars.makeChar(str[i]), result);
            }
            return result;
        });



    installPrimitiveProcedure(
        'string-set!',
        3,
        function (M) {
            var str = checkMutableString(M, 'string-set!', 0);
            var k = checkNatural(M, 'string-set!', 1);
            var ch = checkChar(M, 'string-set!', 2);
	    str.set(baselib.numbers.toFixnum(k), ch.val);
            return VOID;
        });





    installPrimitiveProcedure(
        'symbol?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isSymbol(firstArg);
        });

    installPrimitiveProcedure(
        'symbol->string',
        1,
        function (M) {
            var firstArg = checkSymbol(M, 'symbol->string', 0);
            return firstArg.toString();
        });


    installPrimitiveProcedure(
        'string=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if (s !== checkString(M, 'string=?', i).toString()) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string<=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string<=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s <= checkString(M, 'string<=?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string<?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string<?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s < checkString(M, 'string<?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string>=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string>=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s >= checkString(M, 'string>=?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string>?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string>?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s > checkString(M, 'string>?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });


















    installPrimitiveProcedure(
        'string-ci=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if (s !== checkString(M, 'string-ci=?', i).toString().toUpperCase()) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-ci<=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci<=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s <= checkString(M, 'string-ci<=?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci<?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci<?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s < checkString(M, 'string-ci<?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci>=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci>=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s >= checkString(M, 'string-ci>=?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci>?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci>?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s > checkString(M, 'string-ci>?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });





    installPrimitiveProcedure(
        'string-append',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var buffer = [];
            var i;
            for (i = 0; i < M.a; i++) {
                buffer.push(checkString(M, 'string-append', i).toString());
            }
            return buffer.join('');
        });

    installPrimitiveProcedure(
        'string-length',
        1,
        function (M) {
            var firstArg = checkString(M, 'string-length', 0).toString();
            return firstArg.length;
        });


    installPrimitiveProcedure(
        'string-ref',
        2,
        function (M) {
            var firstArg = checkString(M, 'string-ref', 0).toString();
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'string-ref', 1,
                                    0, firstArg.length));
            return baselib.chars.makeChar(firstArg[index]);
        });



    installPrimitiveProcedure(
        'string?',
        1,
        function (M) {
            return isString(M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'number->string',
        1,
        function (M) {
            return checkNumber(M, 'number->string', 0).toString();
        });


    installPrimitiveProcedure(
        'string->symbol',
        1,
        function (M) {
            return makeSymbol(checkString(M, 'string->symbol', 0).toString());
        });


    installPrimitiveProcedure(
        'string->number',
        1,
        function (M) {
            return baselib.numbers.fromString(
                checkString(M, 'string->number', 0).toString());
        });


    installPrimitiveProcedure(
        'boolean?',
        1,
        function(M) {
            var v = M.e[M.e.length - 1];
            return (v === true || v === false);
        });


    installPrimitiveProcedure(
        'char?',
        1,
        function(M) {
            return baselib.chars.isChar(M.e[M.e.length -1 ]);
        });


    installPrimitiveProcedure(
        'char=?',
        baselib.arity.makeArityAtLeast(2),
        function(M) {
            var s = checkChar(M, 'char=?', 0).val;
	    var i;
            for (i = 1; i < M.a; i++) {
                if (checkChar(M, 'char=?', i).val !== s) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'char-upcase',
        1,
        function(M) {
            var ch = checkChar(M, 'char=?', 0).val;
            return baselib.chars.makeChar(ch.toUpperCase());
        });

    installPrimitiveProcedure(
        'char-downcase',
        1,
        function(M) {
            var ch = checkChar(M, 'char=?', 0).val;
            return baselib.chars.makeChar(ch.toLowerCase());
        });




    
    installPrimitiveProcedure(
        'box',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return makeBox(firstArg);
        });

    installPrimitiveProcedure(
        'unbox',
        1,
        function (M) {
            var firstArg = checkBox(M, 'unbox', 0);
            return firstArg.ref();
        });

    installPrimitiveProcedure(
        'set-box!',
        2,
        function (M) {
            var firstArg = checkMutableBox(M, 'set-box!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.set(secondArg);
            return VOID;
        });

    installPrimitiveProcedure(
        'void',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            return VOID;
        });


    installPrimitiveProcedure(
        'random',
        baselib.lists.makeList(0, 1),
        function (M) {
            if (M.a === 0) {
                return makeFloat(Math.random());
            } else {
                var n = checkNatural(M, 'random', 0);
                return Math.floor(Math.random() * baselib.numbers.toFixnum(n));
            }
        });


    installPrimitiveProcedure(
        'eq?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return firstArg === secondArg;
        });

    installPrimitiveProcedure(
        'eqv?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return baselib.equality.eqv(firstArg, secondArg);
        });



    installPrimitiveProcedure(
        'equal?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return equals(firstArg, secondArg);
        });


    // This definition of apply will take precedence over the
    // implementation of apply in the boostrapped-primitives.rkt,
    // since it provides nicer error handling.
    var applyImplementation = function (M) {
        if(--M.callsBeforeTrampoline < 0) { 
            throw applyImplementation;
        }
        var proc = checkProcedure(M, 'apply', 0);
        M.e.pop();
        M.a--;
        checkList(M, 'apply', M.a - 1);
        M.spliceListIntoStack(M.a - 1);
        if (baselib.arity.isArityMatching(proc.racketArity, M.a)) {
            M.p = proc;
            if (baselib.functions.isPrimitiveProcedure(proc)) {
                return finalizeClosureCall(M, proc(M));
            } else {
                return proc.label(M);
            }
        } else {
            raiseArityMismatchError(M, proc, M.a);
        }
    };
    installPrimitiveClosure(
        'apply',
        baselib.arity.makeArityAtLeast(2),
        applyImplementation);


    // FIXME: The definition of call-with-values is in
    // bootstrapped-primitives.rkt.  We may want to replace it with an
    // explicitly defined one here.





    installPrimitiveProcedure(
        'procedure?',
        1,
        function (M) {
            return baselib.functions.isProcedure(M.e[M.e.length - 1]);
        });
    
    installPrimitiveProcedure(
        'procedure-arity-includes?',
        2,
        function (M) {
            var proc = checkProcedure(M, 'procedure-arity-includes?', 0);
            var a = checkNatural(M, 'procedure-arity-includes?', 1);
            return baselib.arity.isArityMatching(proc.racketArity, a);
        });

    installPrimitiveProcedure(
        'procedure-arity',
        1,
        function (M) {
            var proc = checkProcedure(M, 'procedure-arity-includes?', 0);
            return proc.racketArity;
        });


    installPrimitiveProcedure(
        'procedure-rename',
        2,
        function (M) {
            var proc = checkProcedure(M, 'procedure-rename', 0);
            var name = checkSymbol(M, 'procedure-rename', 1);
            return baselib.functions.renameProcedure(proc, name);
        });



    installPrimitiveProcedure(
        'member',
        2,
        function (M) {
            var x = M.e[M.e.length-1];
            var lst = M.e[M.e.length-2];
            while (true) {
                if (lst === NULL) {
                    return false;
                }
                if (! isPair(lst)) {
                    raiseArgumentTypeError(M,
                                           'member',
                                           'list',
                                           1,
                                           M.e[M.e.length - 1 - 1]);
                }
                if (equals(x, (lst.first))) {
                    return lst;
                }
                lst = lst.rest;
            }   
        });
    


    installPrimitiveProcedure(
        'reverse',
        1,
        function (M) {
            var rev = NULL;
            var lst = M.e[M.e.length-1];
            while(lst !== NULL) {
                rev = makePair(testArgument(M, 'pair', isPair, lst, 0, 'reverse').first,
                               rev);
                lst = lst.rest;
            }
            return rev;
        });




    installPrimitiveProcedure(
	'number?',
	1,
	function(M) {
	    return isNumber(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'real?',
	1,
	function(M) {
	    return isReal(M.e[M.e.length - 1]);
	});
    installPrimitiveProcedure(
	'complex?',
	1,
	function(M) {
	    return isComplex(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'rational?',
	1,
	function(M) {
	    return isRational(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
        'even?',
        1,
        function(M) {
            var n = checkInteger(M, 'even?', 0);
            return baselib.numbers.equals(0, baselib.numbers.modulo(n, 2));
        });

    installPrimitiveProcedure(
        'odd?',
        1,
        function(M) {
            var n = checkInteger(M, 'odd?', 0);
            return baselib.numbers.equals(1, baselib.numbers.modulo(n, 2));
        });


    installPrimitiveProcedure(
        'positive?',
        1,
        function(M) {
            var n = checkReal(M, 'positive?', 0);
            return baselib.numbers.greaterThan(n, 0);
        });

    installPrimitiveProcedure(
        'negative?',
        1,
        function(M) {
            var n = checkReal(M, 'negative?', 0);
            return baselib.numbers.lessThan(n, 0);
        });






    installPrimitiveProcedure(
        'abs',
        1,
        function (M) {
            return baselib.numbers.abs(
                checkNumber(M, 'abs', 0));
        });

    installPrimitiveProcedure(
        'acos',
        1,
        function (M) {
            return baselib.numbers.acos(
                checkNumber(M, 'acos', 0));
        });


    installPrimitiveProcedure(
        'asin',
        1,
        function (M) {
            return baselib.numbers.asin(
                checkNumber(M, 'asin', 0));
        });

    installPrimitiveProcedure(
        'sin',
        1,
        function (M) {
            return baselib.numbers.sin(
                checkNumber(M, 'sin', 0));
        });



    installPrimitiveProcedure(
        'sinh',
        1,
        function (M) {
            return baselib.numbers.sinh(
                checkNumber(M, 'sinh', 0));
        });


    installPrimitiveProcedure(
        'tan',
        1,
        function (M) {
            return baselib.numbers.tan(
                checkNumber(M, 'tan', 0));
        });

    

    installPrimitiveProcedure(
        'atan',
        makeList(1, 2),
        function (M) {
            if (M.a === 1) {
                return baselib.numbers.atan(
                    checkNumber(M, 'atan', 0));
            } else {
                return makeFloat(
                    Math.atan2(
                        baselib.numbers.toFixnum(checkNumber(M, 'atan', 0)),
                        baselib.numbers.toFixnum(checkNumber(M, 'atan', 1))));
            }
        });


    installPrimitiveProcedure(
        'angle',
        1,
        function (M) {
            return baselib.numbers.angle(
                checkNumber(M, 'angle', 0));
        });

    installPrimitiveProcedure(
        'magnitude',
        1,
        function (M) {
            return baselib.numbers.magnitude(
                checkNumber(M, 'magnitude', 0));
        });

    installPrimitiveProcedure(
        'conjugate',
        1,
        function (M) {
            return baselib.numbers.conjugate(
                checkNumber(M, 'conjugate', 0));
        });




    installPrimitiveProcedure(
        'cos',
        1,
        function (M) {
            return baselib.numbers.cos(
                checkNumber(M, 'cos', 0));
        });


    installPrimitiveProcedure(
        'cosh',
        1,
        function (M) {
            return baselib.numbers.cosh(
                checkNumber(M, 'cosh', 0));
        });

    installPrimitiveProcedure(
        'gcd',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, x;
            for (i = 0; i < M.a; i++) {
                args.push(checkNumber(M, 'gcd', i));
            }
            x = args.shift();
            return baselib.numbers.gcd(x, args);
        });

    installPrimitiveProcedure(
        'lcm',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, x;
            for (i = 0; i < M.a; i++) {
                args.push(checkNumber(M, 'lcm', i));
            }
            x = args.shift();
            return baselib.numbers.lcm(x, args);
        });




    installPrimitiveProcedure(
        'exp',
        1,
        function (M) {
            return baselib.numbers.exp(
                checkNumber(M, 'exp', 0));
        });


    installPrimitiveProcedure(
        'expt',
        2,
        function (M) {
            return baselib.numbers.expt(
                checkNumber(M, 'expt', 0),
                checkNumber(M, 'expt', 1));
        });

    installPrimitiveProcedure(
        'exact?',
        1,
        function (M) {
            return baselib.numbers.isExact(
                checkNumber(M, 'exact?', 0));
        });


    installPrimitiveProcedure(
        'integer?',
        1,
        function (M) {
            return baselib.numbers.isInteger(M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'exact-nonnegative-integer?',
        1,
        function (M) {
            return isNatural(M.e[M.e.length - 1]);
        });



    installPrimitiveProcedure(
        'imag-part',
        1,
        function (M) {
            return baselib.numbers.imaginaryPart(
                checkNumber(M, 'imag-part', 0));
        });


    installPrimitiveProcedure(
        'real-part',
        1,
        function (M) {
            return baselib.numbers.realPart(
                checkNumber(M, 'real-part', 0));
        });


    installPrimitiveProcedure(
        'make-polar',
        2,
        function (M) {
            return makeComplexPolar(
                checkReal(M, 'make-polar', 0),
                checkReal(M, 'make-polar', 1));
        });


    installPrimitiveProcedure(
        'make-rectangular',
        2,
        function (M) {
            return makeComplex(
                checkReal(M, 'make-rectangular', 0),
                checkReal(M, 'make-rectangular', 1));
        });

    installPrimitiveProcedure(
        'modulo',
        2,
        function (M) {
            return baselib.numbers.modulo(
                checkInteger(M, 'modulo', 0),
                checkInteger(M, 'modulo', 1));
        });


    installPrimitiveProcedure(
        'remainder',
        2,
        function (M) {
            return baselib.numbers.remainder(
                checkInteger(M, 'remainder', 0),
                checkInteger(M, 'remainder', 1));
        });


    installPrimitiveProcedure(
        'quotient',
        2,
        function (M) {
            return baselib.numbers.quotient(
                checkInteger(M, 'quotient', 0),
                checkInteger(M, 'quotient', 1));
        });



    installPrimitiveProcedure(
        'floor',
        1,
        function (M) {
            return baselib.numbers.floor(
                checkReal(M, 'floor', 0));
        });
    

    installPrimitiveProcedure(
        'ceiling',
        1,
        function (M) {
            return baselib.numbers.ceiling(
                checkReal(M, 'ceiling', 0));
        });
    

    installPrimitiveProcedure(
        'round',
        1,
        function (M) {
            return baselib.numbers.round(
                checkReal(M, 'round', 0));
        });
    

    installPrimitiveProcedure(
        'truncate',
        1,
        function (M) {
            var n = checkReal(M, 'truncate', 0);
            if (baselib.numbers.lessThan(n, 0)) {
                return baselib.numbers.ceiling(n);
            } else {
                return baselib.numbers.floor(n);
            }
        });
    

    installPrimitiveProcedure(
        'numerator',
        1,
        function (M) {
            return baselib.numbers.numerator(
                checkRational(M, 'numerator', 0));
        });


    installPrimitiveProcedure(
        'denominator',
        1,
        function (M) {
            return baselib.numbers.denominator(
                checkRational(M, 'denominator', 0));
        });


    installPrimitiveProcedure(
        'log',
        1,
        function (M) {
            return baselib.numbers.log(
                checkNumber(M, 'log', 0));
        });


    installPrimitiveProcedure(
        'sqr',
        1,
        function (M) {
            return baselib.numbers.sqr(
                checkNumber(M, 'sqr', 0));
        });




    installPrimitiveProcedure(
        'sqrt',
        1,
        function (M) {
            return baselib.numbers.sqrt(
                checkNumber(M, 'sqrt', 0));
        });



    installPrimitiveProcedure(
        'integer-sqrt',
        1,
        function (M) {
            return baselib.numbers.integerSqrt(
                checkInteger(M, 'integer-sqrt', 0));
        });



    installPrimitiveProcedure(
        'sgn',
        1,
        function (M) {
            return baselib.numbers.sign(
                checkInteger(M, 'sgn', 0));
        });


    installPrimitiveProcedure(
        'min',
        baselib.arity.makeArityAtLeast(1),
        function(M) {
            var i;
            var next;
            var currentMin = checkReal(M, 'min', 0);
            for (i = 1; i < M.a; i++) {
                next = checkReal(M, 'min', i);
                if (baselib.numbers.lessThan(next, currentMin)) {
                    currentMin = next;
                }
            }
            return currentMin;
        });

    installPrimitiveProcedure(
        'max',
        baselib.arity.makeArityAtLeast(1),
        function(M) {
            var i;
            var next;
            var currentMax = checkReal(M, 'min', 0);
            for (i = 1; i < M.a; i++) {
                next = checkReal(M, 'min', i);
                if (baselib.numbers.greaterThan(next, currentMax)) {
                    currentMax = next;
                }
            }
            return currentMax;
        });






    installPrimitiveProcedure(
        'error',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
	    var i;
            if (M.a === 1) {
                var sym = checkSymbol(M, 'error', 1);
                raise(M, baselib.exceptions.makeExnFail(sym.toString(), 
                                                        M.captureContinuationMarks()));
            } 
            
            if (isString(M.e[M.e.length - 1])) {
                var vs = [];
                for (i = 1; i < M.a; i++) {
                    vs.push(baselib.format.format("~e", [M.e[M.e.length - 1 - i]]));
                }
                raise(M, baselib.exceptions.makeExnFail(M.e[M.e.length - 1].toString() +
                                                              ": " +
                                                              vs.join(' '),
                                                              M.captureContinuationMarks()));
            }

            if (isSymbol(M.e[M.e.length - 1])) {
                var fmtString = checkString(M, 'error', 1);
                var args = [M.e[M.e.length - 1]];
                for (i = 2; i < M.a; i++) {
                    args.push(M.e[M.e.length - 1 - i]);
                }
                raise(M, baselib.exceptions.makeExnFail(
                    baselib.format.format('~s: ' + fmtString.toString(),
                                          args),
                    M.captureContinuationMarks()));
            }

            // Fall-through
            raiseArgumentTypeError(M, 'error', 'symbol or string', 0, M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'raise-mismatch-error',
        3,
        function (M) {
            var name = checkSymbol(M, 'raise-mismatch-error', 0);
            var message = checkString(M, 'raise-mismatch-error', 0);
            var val = M.e[M.e.length - 1 - 2];
            raise(M, baselib.exceptions.makeExnFail(
		baselib.format.format("~a: ~a~e",
                                      [name,
                                       message,
                                       val]),
                M.captureContinuationMarks()));
        });


    installPrimitiveProcedure(
        'raise-type-error',
        baselib.arity.makeArityAtLeast(3),
        function (M) {
            var name = checkSymbol(M, 'raise-type-error', 0);
            var expected = checkString(M, 'raise-type-error', 1);
            if (M.a === 3) {
                raiseArgumentTypeError(M, 
                                       name,
                                       expected,
                                       undefined,
                                       M.e[M.e.length - 1 - 2]);
            } else {
                raiseArgumentTypeError(M, 
                                       name,
                                       expected,
                                       checkNatural(M, 'raise-type-error', 2),
                                       M.e[M.e.length - 1 - 2]);
            }
        });
    



    installPrimitiveClosure(
        'make-struct-type',
        makeList(4, 5, 6, 7, 8, 9, 10, 11),
        function (M) {
            withArguments(
                M,
                4,
                [false, 
                 NULL,
                 false,
                 false,
                 NULL,
                 false,
                 false],
                function (name, 
                          superType,
                          initFieldCount,
                          autoFieldCount,
                          autoV,
                          props,  // FIXME: currently ignored
                          inspector,  // FIXME: currently ignored
                          procSpec,       // FIXME: currently ignored
                          immutables, // FIXME: currently ignored
                          guard,      // FIXME: currently ignored
                          constructorName
                         ) {

                    // FIXME: typechecks.

                    var structType = baselib.structs.makeStructureType(
                        name,
                        superType,
                        initFieldCount,
                        autoFieldCount,
                        autoV,
                        //props,
                        //inspector,
                        //procSpec,
                        //immutables,
                        guard);

                    var constructorValue = 
                        makePrimitiveProcedure(
                            constructorName,
                            baselib.numbers.toFixnum(initFieldCount),
                            function (M) {
                                var args = [];
				var i;
                                for(i = 0; i < initFieldCount; i++) {
                                    args.push(M.e[M.e.length - 1 - i]);
                                }
                                return structType.constructor.apply(null, args);
                            });

                    var predicateValue = 
                        makePrimitiveProcedure(
                            name.toString() + "?",
                            1,
                            function (M) {
                                return structType.predicate(M.e[M.e.length - 1]);
                            });

                    var accessorValue = 
                        makePrimitiveProcedure(
                            name.toString() + "-accessor",
                            2,
                            function (M) {
                                return structType.accessor(
                                    M.e[M.e.length - 1],
                                    baselib.numbers.toFixnum(M.e[M.e.length - 2]));
                            });
                    accessorValue.structType = structType;

                    var mutatorValue = 
                        makePrimitiveProcedure(
                            name.toString() + "-mutator",
                            3,
                            function (M) {
                                return structType.mutator(
                                    M.e[M.e.length - 1],
                                    baselib.numbers.toFixnum(M.e[M.e.length - 2]),
                                    M.e[M.e.length - 3]);
                            });
                    mutatorValue.structType = structType;


                    finalizeClosureCall(M,
                                        structType,
                                        constructorValue,
                                        predicateValue,
                                        accessorValue,
                                        mutatorValue);
                });
        });
    

    installPrimitiveProcedure(
        'current-inspector',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentInspector'] = 
                    checkInspector(M, 'current-inspector', 0);
                return VOID;
            } else {
                return M.params['currentInspector'];
            }
        }
    ); 


    installPrimitiveProcedure(
        'make-struct-field-accessor',
        makeList(2, 3),
        function (M){
            var structType = M.e[M.e.length - 1].structType;
            var index = M.e[M.e.length - 2];
            var name;
            if (M.a === 3) {
                name = M.e[M.e.length - 3].toString();
            } else {
                name = 'field' + index;
            }
            var checkStruct = baselib.check.makeCheckArgumentType(structType.predicate,
                                                                  structType.name);
            return makePrimitiveProcedure(
                name,
                1,
                function (M) {
                    var aStruct = checkStruct(M, name, 0);
                    return structType.accessor(
                        aStruct,
                        baselib.numbers.toFixnum(index));
                });
            
        });


    installPrimitiveProcedure(
        'make-struct-field-mutator',
        makeList(2, 3),
        function (M){
            var structType = M.e[M.e.length - 1].structType;
            var index = M.e[M.e.length - 2];
            var name;
            if (M.a === 3) {
                name = M.e[M.e.length - 3].toString();
            } else {
                name = 'field' + index;
            }
            var checkStruct = baselib.check.makeCheckArgumentType(structType.predicate,
                                                                  structType.name);
            return makePrimitiveProcedure(
                name,
                2,
                function (M) {
                    var aStruct = checkStruct(M, name, 0);
                    return structType.mutator(
                        aStruct,
                        baselib.numbers.toFixnum(index),
                        M.e[M.e.length - 2]);
                });            
        });


    installPrimitiveProcedure(
        'make-placeholder',
        1,
        function(M) {
            var v = M.e[M.e.length - 1];
            return baselib.placeholders.makePlaceholder(v);
        });


    installPrimitiveProcedure(
        'placeholder-set!',
        2,
        function(M) {
            var placeholder = checkPlaceholder(M, 'placeholder-set!', 0);
            var val = M.e[M.e.length - 2];
            placeholder.set(val);
            return VOID;
        });

        

    installPrimitiveProcedure(
        'make-reader-graph',
        1,
        function(M) {
            var x = M.e[M.e.length - 1];
            return baselib.readergraph.readerGraph(x,
                                                   baselib.hashes.makeLowLevelEqHash(),
                                                   0);
        });




    installPrimitiveProcedure(
        'srcloc',
            5,
        function(M) {
            var source = M.e[M.e.length - 1];
            var line = checkNatural(M, 'srcloc', 1);
            var column = checkNatural(M, 'srcloc', 2);
            var position = checkNatural(M, 'srcloc', 3);
            var span = checkNatural(M, 'srcloc', 4);
            return baselib.srclocs.makeSrcloc(source, line, column, position, span);
        });

    installPrimitiveProcedure(
        'make-srcloc',
        5,
        function(M) {
            var source = M.e[M.e.length - 1];
            var line = checkNatural(M, 'make-srcloc', 1);
            var column = checkNatural(M, 'make-srcloc', 2);
            var position = checkNatural(M, 'make-srcloc', 3);
            var span = checkNatural(M, 'make-srcloc', 4);
            return baselib.srclocs.makeSrcloc(source, line, column, position, span);
        });

    installPrimitiveProcedure(
        'srcloc?',
        1,
        function(M) {
            return baselib.srclocs.isSrcloc(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'srcloc-source',
        1,
        function(M) {
            return baselib.srclocs.srclocSource(checkSrcloc(M, 'srcloc-source', 0));
        });

    installPrimitiveProcedure(
        'srcloc-line',
        1,
        function(M) {
            return baselib.srclocs.srclocLine(checkSrcloc(M, 'srcloc-line', 0));
        });

    installPrimitiveProcedure(
        'srcloc-column',
        1,
        function(M) {
            return baselib.srclocs.srclocColumn(checkSrcloc(M, 'srcloc-column', 0));
        });

    installPrimitiveProcedure(
        'srcloc-position',
        1,
        function(M) {
            return baselib.srclocs.srclocPosition(checkSrcloc(M, 'srcloc-position', 0));
        });

    installPrimitiveProcedure(
        'srcloc-span',
        1,
        function(M) {
            return baselib.srclocs.srclocSpan(checkSrcloc(M, 'srcloc-span', 0));
        });

    exports['Primitives'] = Primitives;
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure; 
    exports['installPrimitiveClosure'] = installPrimitiveClosure; 
    exports['installPrimitiveConstant'] = installPrimitiveConstant; 

}(this.plt.baselib));
/*jslint browser: true, undef: true, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// runtime.js: the main runtime library for whalesong.
//

// All of the values here are namespaced under "plt.runtime".
/*global $*/
(function(plt, baselib) {
    'use strict';
    var runtime = {};
    plt.runtime = runtime;



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;
    var isNatural = baselib.numbers.isNatural;
    var isReal = baselib.numbers.isReal;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var isVector = baselib.vectors.isVector;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var isPath = baselib.paths.isPath;

    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var NEGATIVE_ZERO = baselib.numbers.negative_zero;
    var INF = baselib.numbers.inf;
    var NEGATIVE_INF = baselib.numbers.negative_inf;
    var NAN = baselib.numbers.nan;

    var makeFloat = baselib.numbers.makeFloat;
    var makeRational = baselib.numbers.makeRational;
    var makeBignum = baselib.numbers.makeBignum;
    var makeComplex = baselib.numbers.makeComplex;


    var makeSymbol = baselib.symbols.makeSymbol;
    var makePath = baselib.paths.makePath;
    var makeBytes = baselib.bytes.makeBytes;

    var makeBox = baselib.boxes.makeBox;
    var isBox = baselib.boxes.isBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;
    var makeChar = baselib.chars.makeChar;

    var makeStructureType = baselib.structs.makeStructureType;


    var Struct = baselib.structs.Struct;
    var StructType = baselib.structs.StructType;

    var Closure = baselib.functions.Closure;
    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;

    var ContinuationPromptTag = baselib.contmarks.ContinuationPromptTag;


    // Other helpers
    var heir = baselib.heir;
    var makeClassPredicate = baselib.makeClassPredicate;
    var toDomNode = baselib.format.toDomNode;
    var toWrittenString = baselib.format.toWrittenString;
    var toDisplayedString = baselib.format.toDisplayedString;



    // Frame structures.
    var Frame = baselib.frames.Frame;
    var CallFrame = baselib.frames.CallFrame;
    var PromptFrame = baselib.frames.PromptFrame;

    // Module structure
    var ModuleRecord = baselib.modules.ModuleRecord;



    // Ports
    var isOutputPort = baselib.ports.isOutputPort;
    var StandardOutputPort = baselib.ports.StandardOutputPort;
    var StandardErrorPort = baselib.ports.StandardErrorPort;
    var isOutputStringPort = baselib.ports.isOutputStringPort;




    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseUnboundToplevelError = baselib.exceptions.raiseUnboundToplevelError;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseContextExpectedValuesError = baselib.exceptions.raiseContextExpectedValuesError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;
    var raiseOperatorApplicationError = baselib.exceptions.raiseOperatorApplicationError;
    var raiseOperatorIsNotPrimitiveProcedure = baselib.exceptions.raiseOperatorIsNotPrimitiveProcedure;
    var raiseOperatorIsNotClosure = baselib.exceptions.raiseOperatorIsNotClosure;
    var raiseUnimplementedPrimitiveError = baselib.exceptions.raiseUnimplementedPrimitiveError;


    var ArityAtLeast = baselib.arity.ArityAtLeast;
    var makeArityAtLeast = baselib.arity.makeArityAtLeast;
    var isArityMatching = baselib.arity.isArityMatching;
    

    var testArgument = baselib.check.testArgument;
    var testArity = baselib.check.testArity;
    var makeCheckArgumentType = baselib.check.makeCheckArgumentType;


    var Primitives = baselib.primitives.Primitives;
    var installPrimitiveProcedure = baselib.primitives.installPrimitiveProcedure;



    // This value will be dynamically determined.
    // See findStackLimit later in this file.
    var STACK_LIMIT_ESTIMATE = 100;

    // Approximately find the stack limit.
    // This function assumes, on average, five variables or
    // temporaries per stack frame.
    // This will never report a number greater than MAXIMUM_CAP.
    var findStackLimit = function(after) {
	var MAXIMUM_CAP = 32768;
	var n = 1;
	var limitDiscovered = false;
	setTimeout(
	    function() {
		if(! limitDiscovered) {
		    limitDiscovered = true;
		    after(n);
		}
	    },
	    0);
        var loop1, loop2;
	loop1 = function loop1(x, y, z, w, k) {
	    // Ensure termination, just in case JavaScript ever
	    // does eliminate stack limits.
	    if (n >= MAXIMUM_CAP) { return; }
	    n++;
	    return 1 + loop2(y, z, w, k, x);
	};
	loop2 = function loop2(x, y, z, w, k) {
	    n++;
	    return 1 + loop1(y, z, w, k, x);
	};
	try {
	    findStackLimit.dontCare = 1 + loop1(2, "seven", [1], {number: 8}, 2);
	} catch (e) {
	    // ignore exceptions.
	}
	if (! limitDiscovered) { 
	    limitDiscovered = true;
	    after(n);
	}
    };


    // Schedule a stack limit estimation.  If it fails, no harm, no
    // foul (hopefully!)
    setTimeout(function() {
	findStackLimit(function(v) {
	    // Trying to be a little conservative.
	    STACK_LIMIT_ESTIMATE = Math.floor(v / 10);
	});
    },
	       0);



    //////////////////////////////////////////////////////////////////////



    var defaultCurrentPrintImplementation = function defaultCurrentPrintImplementation(MACHINE) {
        if(--MACHINE.cbt < 0) { 
            throw defaultCurrentPrintImplementation; 
        }
        var oldArgcount = MACHINE.a;

	var elt = MACHINE.e[MACHINE.e.length - 1];
	var outputPort = 
	    MACHINE.params.currentOutputPort;
	if (elt !== VOID) {
	    outputPort.writeDomNode(MACHINE, toDomNode(elt, 'print'));
	    outputPort.writeDomNode(MACHINE, toDomNode("\n", 'display'));
	}
        MACHINE.a = oldArgcount;
        return finalizeClosureCall(MACHINE, VOID);
    };
    var defaultCurrentPrint = makeClosure(
	"default-printer",
	1,
	defaultCurrentPrintImplementation);


    //////////////////////////////////////////////////////////////////////]
    // The MACHINE

    var Machine = function() {
	this.cbt = STACK_LIMIT_ESTIMATE;  // calls before trampoline
	this.v = undefined;         // value register
	this.p = undefined;        // procedure register
	this.a = undefined;           // argument count
	this.e = [];                // environment
	this.c = [];            // control: Arrayof (U Frame CallFrame PromptFrame)
	this.running = false;
	this.modules = {};     // String -> ModuleRecord
        this.mainModules = []; // Arrayof String
	this.params = {

            // print-as-expression: boolean
            'print-as-expression' : true,

	    // currentDisplayer: DomNode -> Void
	    // currentDisplayer is responsible for displaying to the browser.
	    'currentDisplayer': function(MACHINE, domNode) {
		$(domNode).appendTo(document.body);
	    },
	    
	    // currentErrorDisplayer: DomNode -> Void
	    // currentErrorDisplayer is responsible for displaying errors to the browser.
	    'currentErrorDisplayer': function(MACHINE, domNode) {
                $(domNode).appendTo(document.body);
	    },

            'currentInspector': baselib.inspectors.DEFAULT_INSPECTOR,
	    
	    'currentOutputPort': new StandardOutputPort(),
	    'currentErrorPort': new StandardErrorPort(),
	    'currentSuccessHandler': function(MACHINE) {},
	    'currentErrorHandler': function(MACHINE, exn) {
                MACHINE.params.currentErrorDisplayer(
                    MACHINE,
                    toDomNode(exn));
            },
	    
	    'currentNamespace': {},
	    
	    // These parameters control how often
	    // control yields back to the browser
	    // for response.  The implementation is a
	    // simple PID controller.
	    //
	    // To tune this, adjust desiredYieldsPerSecond.
	    // Do no touch numBouncesBeforeYield or
	    // maxNumBouncesBeforeYield, because those
	    // are adjusted automatically by the
	    // recomputeMaxNumBouncesBeforeYield
	    // procedure.
	    'desiredYieldsPerSecond': 5,
	    'numBouncesBeforeYield': 2000,   // self-adjusting
	    'maxNumBouncesBeforeYield': 2000, // self-adjusting

	    'currentPrint': defaultCurrentPrint


	};
	this.primitives = Primitives;
    };
    

    // Try to get the continuation mark key used for procedure application tracing.
    var getTracedAppKey = function(MACHINE) {
        if (MACHINE.modules['whalesong/lang/private/traced-app.rkt']) {
            return MACHINE.modules['whalesong/lang/private/traced-app.rkt'].namespace['traced-app-key'];
        }
        return undefined;
    };

    var getTracedCalleeKey = function(MACHINE) {
        if (MACHINE.modules['whalesong/lang/private/traced-app.rkt']) {
            return MACHINE.modules['whalesong/lang/private/traced-app.rkt'].namespace['traced-callee-key'];
        }
        return undefined;
    };



    // captureControl implements the continuation-capturing part of
    // call/cc.  It grabs the control frames up to (but not including) the
    // prompt tagged by the given tag.
    Machine.prototype.captureControl = function(skip, tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.c.length - 1 - skip; i >= 0; i--) {
	    if (MACHINE.c[i].tag === tag) {
		return MACHINE.c.slice(i + 1,
					     MACHINE.c.length - skip);
	    }
	} 
	raise(MACHINE, new Error("captureControl: unable to find tag " + tag));
    };



    // restoreControl clears the control stack (up to, but not including the
    // prompt tagged by tag), and then appends the rest of the control frames.
    // At the moment, the rest of the control frames is assumed to be in the 
    // top of the environment.
    Machine.prototype.restoreControl = function(tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.c.length - 1; i >= 0; i--) {
	    if (MACHINE.c[i].tag === tag) {
		MACHINE.c = 
		    MACHINE.c.slice(0, i+1).concat(
			MACHINE.e[MACHINE.e.length - 1]);
		return;
	    }
	}
	raise(MACHINE, new Error("restoreControl: unable to find tag " + tag));     

    };


    // Splices the list argument in the environment.  Adjusts MACHINE.a
    // appropriately.
    Machine.prototype.spliceListIntoStack = function(depth) {
	var MACHINE = this;
	var lst = MACHINE.e[MACHINE.e.length - 1 - depth];
	var vals = [];
	while(lst !== NULL) {
	    vals.push(lst.first);
	    lst = lst.rest;
	}
	vals.reverse();
	MACHINE.e.splice.apply(MACHINE.e,
				 [MACHINE.e.length - 1 - depth, 1].concat(vals));
	MACHINE.a = MACHINE.a + vals.length - 1;
    };


    // Unsplices a list from the MACHINE stack.
    Machine.prototype.unspliceRestFromStack = function(depth, length) {
	var MACHINE = this;
	var lst = NULL;
	var i;
	for (i = 0; i < length; i++) {
	    lst = makePair(MACHINE.e[MACHINE.e.length - depth - length + i], 
                           lst);
	}
	MACHINE.e.splice(MACHINE.e.length - depth - length,
			   length, 
			   lst);
	MACHINE.a = MACHINE.a - length + 1;
    };


    // Save the continuation mark on the top control frame.
    Machine.prototype.installContinuationMarkEntry = function(key, value) {
        var frame = this.c[this.c.length - 1];
        var marks = frame.marks;
        var i;
        for (i = 0; i < marks.length; i++) {
            if (key === marks[i][0]) {
                marks[i][1] = value;
                return;
            }
        }
        marks.push([key, value]);
    };


    Machine.prototype.captureContinuationMarks = function() {
        var kvLists = [];
        var i;
        var control = this.c;
        var tracedCalleeKey = getTracedCalleeKey(this);
        for (i = control.length-1; i >= 0; i--) {
            if (control[i].marks.length !== 0) {
                kvLists.push(control[i].marks);
            }
            
            if (tracedCalleeKey !== null && 
                control[i] instanceof CallFrame &&
                control[i].p !== null) {
                kvLists.push([[tracedCalleeKey, control[i].p]]);
            }
        }     
        return new baselib.contmarks.ContinuationMarkSet(kvLists);
    };
    





    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // The toplevel trampoline.
    //
    //
    // trampoline: MACHINE (MACHINE -> void) -> void
    //
    // All evaluation in Racketland happens in the context of this
    // trampoline.
    //
    var recomputeMaxNumBouncesBeforeYield;

    var scheduleTrampoline = function(MACHINE, f) {
        setTimeout(
	    function() { 
                return MACHINE.trampoline(f); 
            },
	    0);
    };
    var makeRestartFunction = function(MACHINE) {
        return function(f) { 
            return scheduleTrampoline(MACHINE, f);
        };
    };


    // These are exception values that are treated specially in the context
    // of the trampoline.

    var HaltError = function(onHalt) {
        // onHalt: MACHINE -> void
        this.onHalt = onHalt || function(MACHINE) {};
    };


    var Pause = function(onPause) {
        // onPause: MACHINE -> void
        this.onPause = onPause || function(MACHINE) {};
    };

    var PAUSE = function(onPause) {
        throw(new Pause(onPause));
    };


    Machine.prototype.trampoline = function(initialJump, noJumpingOff) {
	var thunk = initialJump;
	var startTime = (new Date()).valueOf();
	this.cbt = STACK_LIMIT_ESTIMATE;
	this.params.numBouncesBeforeYield = 
	    this.params.maxNumBouncesBeforeYield;
	this.running = true;

	while(true) {
            try {
		thunk(this);
		break;
            } catch (e) {
                // There are a few kinds of things that can get thrown
                // during racket evaluation:
                //
                // functions: this gets thrown if the Racket code
                // realizes that the number of bounces has grown too
                // large.  The thrown function represents a restarter
                // function.  The running flag remains true.
                //
                // Pause: causes the machine evaluation to pause, with
                // the expectation that it will restart momentarily.
                // The running flag on the machine will remain true.
                //
                // HaltError: causes evaluation to immediately halt.
                // We schedule the onHalt function of the HaltError to
                // call afterwards.  The running flag on the machine
                // is set to false.
                //
                // Everything else: otherwise, we send the exception value
                // to the current error handler and exit.
                // The running flag is set to false.
		if (typeof(e) === 'function') {
                    thunk = e;
                    this.cbt = STACK_LIMIT_ESTIMATE;


                    // If we're running an a model that prohibits
                    // jumping off the trampoline, continue.
                    if (noJumpingOff) {
                        continue;
                    }

		    if (this.params.numBouncesBeforeYield-- < 0) {
			recomputeMaxNumBouncesBeforeYield(
			    this,
			    (new Date()).valueOf() - startTime);
			scheduleTrampoline(this, thunk);
			return;
		    }
		} else if (e instanceof Pause) {
                    var restart = makeRestartFunction(this);
                    e.onPause(restart);
                    return;
                } else if (e instanceof HaltError) {
		    this.running = false;
                    e.onHalt(this);
                    return;
                } else {
		    // General error condition: just exit out
		    // of the trampoline and call the current error handler.
		    this.running = false;
                    this.params.currentErrorHandler(this, e);
	            return;
		}
            }
	}
	this.running = false;
        var that = this;
        this.params.currentSuccessHandler(this);
	return;
    };

    // recomputeGas: state number -> number
    recomputeMaxNumBouncesBeforeYield = function(MACHINE, observedDelay) {
	// We'd like to see a delay of DESIRED_DELAY_BETWEEN_BOUNCES so
	// that we get MACHINE.params.desiredYieldsPerSecond bounces per
	// second.
	var DESIRED_DELAY_BETWEEN_BOUNCES = 
	    (1000 / MACHINE.params.desiredYieldsPerSecond);
	var ALPHA = 50;
	var delta = (ALPHA * ((DESIRED_DELAY_BETWEEN_BOUNCES -
			       observedDelay) / 
			      DESIRED_DELAY_BETWEEN_BOUNCES));
	MACHINE.params.maxNumBouncesBeforeYield = 
            Math.max(MACHINE.params.maxNumBouncesBeforeYield + delta,
                     1);
    };










    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////









    // There is a single, distinguished default continuation prompt tag
    // that's used to wrap around toplevel prompts.
    var DEFAULT_CONTINUATION_PROMPT_TAG = 
	new ContinuationPromptTag("default-continuation-prompt-tag");




    



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    var VariableReference = function(prefix, pos) {
        this.prefix = prefix;
        this.pos = pos;
    };








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Implementation of the ready function.  This will fire off when
    // setReadyTrue is called.
    var ready, setReadyTrue, setReadyFalse;
    (function() {
        var runtimeIsReady = true;
        var readyWaiters = [];
        var notifyWaiter = function(w) {
            w();
        };

        ready = function(f) {
            if (runtimeIsReady) {
                notifyWaiter(f);
            } else {
                readyWaiters.push(f);
            }
        };

        setReadyTrue = function() {
            runtimeIsReady = true;
            while(runtimeIsReady && readyWaiters.length > 0) {
                notifyWaiter(readyWaiters.shift());
            }
        };

        setReadyFalse = function() {
            runtimeIsReady = false;
        };

    }());


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Executes all programs that have been labeled as a main module
    var invokeMains = function(machine, succ, fail) {
        runtime.ready(function () {
            if (window.console && window.console.log) {
                window.console.log("invoking main modules");
            }
            setReadyFalse();
            machine = machine || runtime.currentMachine;
            succ = succ || function() {};
            fail = fail || function() {};
            var mainModules = machine.mainModules.slice();
            var loop = function() {
                if (mainModules.length > 0) {
                    var nextModule = mainModules.shift();
                    nextModule.invoke(machine, loop, fail);
                } else {
                    setReadyTrue();
                    succ();
                }
            };
            setTimeout(loop, 0);
        });
    };

    // Looks up a name in any of the machine's main modules.
    var lookupInMains = function(name, machine) {
        var i;
        machine = machine || runtime.currentMachine;
        for (i = 0; i < machine.mainModules.length; i++) {
            var ns = machine.mainModules[i].getNamespace();
            if(ns.hasOwnProperty(name)) {
                return ns[name];
            }
        }
    };



    var checkClosureAndArity = function(M) {
        if(!(M.p instanceof Closure)){
            raiseOperatorIsNotClosure(M,M.p);
        }
        if(!isArityMatching(M.p.racketArity,M.a)) {
            raiseArityMismatchError(M,M.p,M.a);
        }
    };



    //////////////////////////////////////////////////////////////////////
    // Superinstructions to try to reduce code size.
    var si_context_expected = function(n) {
        if (n === 1) { return si_context_expected_1; }
        var f = function(M) { raiseContextExpectedValuesError(M, n); };
        return f;
    };
    var si_context_expected_1 = function(M) { raiseContextExpectedValuesError(M, 1); }








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Exports
    var exports = runtime;
    exports['currentMachine'] = new Machine();
    exports['invokeMains'] = invokeMains;
    exports['lookupInMains'] = lookupInMains;


    // installing new primitives
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure;
    exports['makePrimitiveProcedure'] = makePrimitiveProcedure;
    exports['Primitives'] = Primitives;
    
    exports['ready'] = ready;
    // Private: the runtime library will set this flag to true when
    // the library has finished loading.
    exports['setReadyTrue'] = setReadyTrue;
    exports['setReadyFalse'] = setReadyFalse;

    exports['Machine'] = Machine;
    exports['Frame'] = Frame;
    exports['CallFrame'] = CallFrame;
    exports['PromptFrame'] = PromptFrame;
    exports['Closure'] = Closure;
    exports['ModuleRecord'] = ModuleRecord;
    exports['VariableReference'] = VariableReference;
    exports['ContinuationPromptTag'] = ContinuationPromptTag;
    exports['DEFAULT_CONTINUATION_PROMPT_TAG'] = 
	DEFAULT_CONTINUATION_PROMPT_TAG;
    exports['NULL'] = NULL;
    exports['VOID'] = VOID;

    exports['NEGATIVE_ZERO'] = NEGATIVE_ZERO;
    exports['INF'] = INF;
    exports['NEGATIVE_INF'] = NEGATIVE_INF;
    exports['NAN'] = NAN;





    exports['testArgument'] = testArgument;
    exports['testArity'] = testArity;
    exports['makeCheckArgumentType'] = makeCheckArgumentType;


    exports['raise'] = raise;
    exports['raiseUnboundToplevelError'] = raiseUnboundToplevelError;
    exports['raiseArgumentTypeError'] = raiseArgumentTypeError;
    exports['raiseContextExpectedValuesError'] = raiseContextExpectedValuesError;
    exports['raiseArityMismatchError'] = raiseArityMismatchError;
    exports['raiseOperatorApplicationError'] = raiseOperatorApplicationError;
    exports['raiseOperatorIsNotPrimitiveProcedure'] = raiseOperatorIsNotPrimitiveProcedure;
    exports['raiseOperatorIsNotClosure'] = raiseOperatorIsNotClosure;
    exports['raiseUnimplementedPrimitiveError'] = raiseUnimplementedPrimitiveError;


    exports['finalizeClosureCall'] = finalizeClosureCall;


    //////////////////////////////////////////////////////////////////////


    // Type constructors

    // numbers
    exports['makeList'] = makeList;
    exports['makePair'] = makePair;
    exports['makeChar'] = makeChar;
    exports['makeVector'] = makeVector;
    exports['makeBox'] = makeBox;
    exports['makeFloat'] = makeFloat;
    exports['makeRational'] = makeRational;
    exports['makeBignum'] = makeBignum;
    exports['makeComplex'] = makeComplex;
    exports['makeSymbol'] = makeSymbol;
    exports['makePath'] = makePath;
    exports['makeBytes'] = makeBytes;


    exports['checkPair'] = baselib.check.checkPair;
    exports['checkNumber'] = baselib.check.checkNumber;
    exports['checkString'] = baselib.check.checkString;



    // Type predicates
    exports['isPair'] = isPair;
    exports['isList'] = isList;
    exports['isVector'] = isVector;
    exports['isOutputPort'] = isOutputPort;
    exports['isOutputStringPort'] = isOutputStringPort;
    exports['isBox'] = isBox;
    exports['isString'] = isString;
    exports['isSymbol'] = isSymbol;
    exports['isPath'] = isPath;
    exports['isNumber'] = isNumber;
    exports['isNatural'] = isNatural;
    exports['isReal'] = isReal;
    exports['isProcedure'] = plt.baselib.functions.isProcedure;
    exports['equals'] = equals;

    exports['toDomNode'] = toDomNode;
    exports['toWrittenString'] = toWrittenString;
    exports['toDisplayedString'] = toDisplayedString;

    exports['ArityAtLeast'] = ArityAtLeast;
    exports['makeArityAtLeast'] = makeArityAtLeast;
    exports['isArityMatching'] = isArityMatching;

    exports['heir'] = heir;
    exports['makeClassPredicate'] = makeClassPredicate;

    exports['PAUSE'] = PAUSE;
    exports['HaltError'] = HaltError;



    exports['makeStructureType'] = makeStructureType;
    exports['Struct'] = Struct;
    exports['StructType'] = StructType;

    exports['getTracedAppKey'] = getTracedAppKey;
    exports['getTracedCalleeKey'] = getTracedCalleeKey;

    exports['si_context_expected'] = si_context_expected;
    exports['si_context_expected_1'] = si_context_expected_1;
    exports['checkClosureAndArity'] = checkClosureAndArity;


}(this.plt, this.plt.baselib));
(function(M, SUCCESS, FAIL, PARAMS) {(function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _480=function(M){if(--M.cbt<0){throw _480;}
return(_464)(M);};

var _470=function(M){if(--M.cbt<0){throw _470;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_433,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_476,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
return(_464)(M);}};

var _184=function(M){if(--M.cbt<0){throw _184;}
RT.Primitives["for-each"]=RT.Primitives["for-each"]||M.v;
M.c.push(new RT.PromptFrame(_439,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([M.primitives["and"],false]);M.e[M.e.length-1].names=["and",false];
M.v=new RT.Closure(_431,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][1]=M.v;
M.v=new RT.Closure(_436,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _346=function(M){if(--M.cbt<0){throw _346;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_177,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_350,M.p));
return((M.p).label)(M);};

var _317=function(M){if(--M.cbt<0){throw _317;}
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_321,M.p));
return((M.p).label)(M);};

var _299=function(M){if(--M.cbt<0){throw _299;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_305,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _276=function(M){if(--M.cbt<0){throw _276;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_284,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _260=function(M){if(--M.cbt<0){throw _260;}
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_263,M.p));
return(_181)(M);};



var _65=function(M){if(--M.cbt<0){throw _65;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_72,M.p));
return((M.p).label)(M);};

var _53=function(M){if(--M.cbt<0){throw _53;}
M.e[M.e.length-3]=M.v;
return(_37)(M);};

var _43=function(M){if(--M.cbt<0){throw _43;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_4,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_49,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_37)(M);}};

var _22=function(M){if(--M.cbt<0){throw _22;}
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_5,1,[],"first-tuple");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_29,M.p));
return(_5)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("map");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};




var _316=function(M){if(--M.cbt<0){throw _316;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_321,M.p));
return((M.p).label)(M);};







var _259=function(M){if(--M.cbt<0){throw _259;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_263,M.p));
return(_181)(M);};


var _944=function(M){if(--M.cbt<0){throw _944;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_944,2,[],"append-2");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-18];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1008,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-14];
return(_1002)(M);}}else{M.e[M.e.length-3]=M.e[M.e.length-11];
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=M.e[M.e.length-8];
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=M.e[M.e.length-5];
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _231=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _177=function(M){if(--M.cbt<0){throw _177;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=1;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
return(_207)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_178,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_214,M.p));
return(_178)(M);}}else{M.v=true;
return(_207)(M);}}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}}else{M.v=true;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _175=function(M){if(--M.cbt<0){throw _175;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_176,2,[],"do-it");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_176)(M);};


var _181=function(M){if(--M.cbt<0){throw _181;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_430,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_424)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _180=function(M){if(--M.cbt<0){throw _180;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_415,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_409)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _1=function(M){if(--M.cbt<0){throw _1;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_2)(M);};

var _179=function(M){if(--M.cbt<0){throw _179;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _168=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _178=function(M){if(--M.cbt<0){throw _178;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_178,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _251=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);};


var _37=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _66=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_37)(M);};

var _207=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_238,M.p));
return(_179)(M);}else{M.v=true;
return(_231)(M);}}else{M.v=false;
return(_231)(M);}}else{M.v=true;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=true;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=false;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_256,M.p));
return(_180)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_251)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_260,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _431=function(M){if(--M.cbt<0){throw _431;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_432,1,[],"all-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_444,M.p));
return(_432)(M);};



var _callCCEntry=function(M){if(--M.cbt<0){throw _callCCEntry;}
M.p=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.captureControl(0,RT.DEFAULT_CONTINUATION_PROMPT_TAG);
M.e[M.e.length-2]=M.e.slice(0, M.e.length-3);
M.e[M.e.length-3]=new RT.Closure(_callCCClosureEntry,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"call/cc");
M.e.length-=2;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+0),0);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _942=function(M){if(--M.cbt<0){throw _942;}
M.unspliceRestFromStack(0,M.a);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_943,1,[],"append-many");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return(_943)(M);};











var _2=function(M){if(--M.cbt<0){throw _2;}
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3,1,[],"all-empty?");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_17,M.p));
return(_3)(M);};

var _6=function(M){if(--M.cbt<0){throw _6;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_6,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_174,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_168)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5=function(M){if(--M.cbt<0){throw _5;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_5,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_159,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_153)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4=function(M){if(--M.cbt<0){throw _4;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_4,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3=function(M){if(--M.cbt<0){throw _3;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};








var _436=function(M){if(--M.cbt<0){throw _436;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _607=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _592=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _840=function(M){if(--M.cbt<0){throw _840;}
M.e.length-=M.a;
return(_841)(M);};





var _838=function(M){--M.cbt<0;
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
RT.raiseUnimplementedPrimitiveError(M,"caar");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_849,M.p));
return((M.p).label)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _984=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _969=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_966)(M);};

var _438=function(M){if(--M.cbt<0){throw _438;}
M.e.length-=M.a;
return(_439)(M);};















var _435=function(M){if(--M.cbt<0){throw _435;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_435,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_613,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_607)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _434=function(M){if(--M.cbt<0){throw _434;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_434,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_598,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_592)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _433=function(M){if(--M.cbt<0){throw _433;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_433,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _807=function(M){if(--M.cbt<0){throw _807;}
M.e.length-=M.a;
return(_808)(M);};

var _1014=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _432=function(M){if(--M.cbt<0){throw _432;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_432,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _464=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _493=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_533,M.p));
return((M.p).label)(M);};

var _946=function(M){if(--M.cbt<0){throw _946;}
M.e.length-=M.a;
return(_947)(M);};


var _943=function(M){if(--M.cbt<0){throw _943;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_943,1,[],"append-many");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_965,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
return(_956)(M);}}else{M.e[M.e.length-2]=RT.NULL;
return(_956)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _858=function(M){if(--M.cbt<0){throw _858;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
RT.raiseUnimplementedPrimitiveError(M,"caar");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_867,M.p));
return((M.p).label)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _800=function(M){if(--M.cbt<0){throw _800;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_794)(M);};

var _716=function(M){if(--M.cbt<0){throw _716;}
return(_680)(M);};

var _956=function(M){--M.cbt<0;
M.e.length-=1;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_944,2,[],"append-2");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_990,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-10];
return(_984)(M);}}else{M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=M.e[M.e.length-4];
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _613=function(M){if(--M.cbt<0){throw _613;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_607)(M);};

var _788=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _794=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_791)(M);};

var _779=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _238=function(M){if(--M.cbt<0){throw _238;}
return(_231)(M);};

var _651=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _680=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_720,M.p));
return((M.p).label)(M);};

var _811=function(M){if(--M.cbt<0){throw _811;}
M.e.length-=M.a;
return(_812)(M);};

var _809=function(M){--M.cbt<0;
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return(_809)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1011=function(M){if(--M.cbt<0){throw _1011;}
M.e.length-=M.a;
return(_1012)(M);};

var _1009=function(M){if(--M.cbt<0){throw _1009;}
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1018,M.p));
return((M.p).label)(M);};

var _1016=function(M){if(--M.cbt<0){throw _1016;}
if(M.a===0){return(_1014)(M);}else{M.e.push(M.v);
return(_1014)(M);}};








var _887=function(M){if(--M.cbt<0){throw _887;}
RT.Primitives["length"]=RT.Primitives["length"]||M.v;
M.c.push(new RT.PromptFrame(_947,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_942,(RT.makeArityAtLeast(0)),[],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _700=function(M){if(--M.cbt<0){throw _700;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_704,M.p));
return((M.p).label)(M);};


var _663=function(M){if(--M.cbt<0){throw _663;}
if(M.v===false){M.e.length+=2;
if (M.e[M.e.length-6][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-6][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_621,1,[],"first-tuple");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_671,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("ormap");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_667,M.p));
return((M.p).label)(M);}};

var _636=function(M){if(--M.cbt<0){throw _636;}
if(M.v===false){M.e.length+=2;
if (M.e[M.e.length-3][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_621,1,[],"first-tuple");
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_643,M.p));
return(_621)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("ormap");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _623=function(M){if(--M.cbt<0){throw _623;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _791=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_788)(M);};

var _509=function(M){if(--M.cbt<0){throw _509;}
return(_493)(M);};

var _463=function(M){if(--M.cbt<0){throw _463;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_432,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_470,M.p));
return((M.p).label)(M);};

var _334=function(M){if(--M.cbt<0){throw _334;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_342,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _263=function(M){if(--M.cbt<0){throw _263;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_178,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_270,M.p));
return((M.p).label)(M);};

var _9=function(M){if(--M.cbt<0){throw _9;}
RT.Primitives["map"]=RT.Primitives["map"]||M.v;
M.c.push(new RT.PromptFrame(_184,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_175,(RT.makeArityAtLeast(1)),[],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _98=function(M){if(--M.cbt<0){throw _98;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_66)(M);};

var _805=function(M){if(--M.cbt<0){throw _805;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _966=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_956)(M);};

var _625=function(M){if(--M.cbt<0){throw _625;}
M.e.length-=M.a;
return(_626)(M);};










var _675=function(M){if(--M.cbt<0){throw _675;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_622,1,[],"rest-lists");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_679,M.p));
return((M.p).label)(M);};



var _618=function(M){if(--M.cbt<0){throw _618;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_619,1,[],"all-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_631,M.p));
return(_619)(M);};

var _525=function(M){if(--M.cbt<0){throw _525;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_529,M.p));
return((M.p).label)(M);};

var _622=function(M){if(--M.cbt<0){throw _622;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_622,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_800,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_794)(M);}}else{M.e[M.e.length-3]=RT.NULL;
return(_791)(M);}}else{M.e[M.e.length-3]=RT.NULL;
return(_788)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _476=function(M){if(--M.cbt<0){throw _476;}
if(M.v===false){M.e.length+=2;
if (M.e[M.e.length-6][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-6][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_434,1,[],"first-tuple");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_484,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("andmap");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_480,M.p));
return((M.p).label)(M);}};

var _621=function(M){if(--M.cbt<0){throw _621;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_621,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_785,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_779)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _430=function(M){if(--M.cbt<0){throw _430;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_424)(M);};

var _350=function(M){if(--M.cbt<0){throw _350;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _620=function(M){if(--M.cbt<0){throw _620;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_620,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _313=function(M){if(--M.cbt<0){throw _313;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_317,M.p));
return((M.p).label)(M);};

var _288=function(M){if(--M.cbt<0){throw _288;}
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_292,M.p));
return((M.p).label)(M);};

var _619=function(M){if(--M.cbt<0){throw _619;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_619,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=true;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _159=function(M){if(--M.cbt<0){throw _159;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_153)(M);};

var _94=function(M){if(--M.cbt<0){throw _94;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_98,M.p));
return((M.p).label)(M);};

var _82=function(M){if(--M.cbt<0){throw _82;}
M.e[M.e.length-3]=M.v;
return(_66)(M);};

var _49=function(M){if(--M.cbt<0){throw _49;}
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_5,1,[],"first-tuple");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_57,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-1];
M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("map");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_53,M.p));
return((M.p).label)(M);}};

var _36=function(M){if(--M.cbt<0){throw _36;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_43,M.p));
return((M.p).label)(M);};


var _884=function(M){if(--M.cbt<0){throw _884;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_884,2,[],"length-iter");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _153=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _947=function(M){if(--M.cbt<0){throw _947;}
RT.Primitives["append"]=RT.Primitives["append"]||M.v;
M.c.push(new RT.PromptFrame(_1012,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_1009,2,[],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _974=function(M){if(--M.cbt<0){throw _974;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_969)(M);};

var _876=function(M){if(--M.cbt<0){throw _876;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return(_838)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _849=function(M){if(--M.cbt<0){throw _849;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
RT.raiseUnimplementedPrimitiveError(M,"caar");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_858,M.p));
return((M.p).label)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _785=function(M){if(--M.cbt<0){throw _785;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_779)(M);};

var _712=function(M){if(--M.cbt<0){throw _712;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_716,M.p));
return((M.p).label)(M);};

var _696=function(M){if(--M.cbt<0){throw _696;}
return(_680)(M);};

var _671=function(M){if(--M.cbt<0){throw _671;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_675,M.p));
return((M.p).label)(M);};

var _657=function(M){if(--M.cbt<0){throw _657;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_620,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_663,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
return(_651)(M);}};

var _631=function(M){if(--M.cbt<0){throw _631;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_620,1,[],"some-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_636,M.p));
return(_620)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _598=function(M){if(--M.cbt<0){throw _598;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_592)(M);};

var _521=function(M){if(--M.cbt<0){throw _521;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_525,M.p));
return((M.p).label)(M);};

var _505=function(M){if(--M.cbt<0){throw _505;}
if(M.v===false){M.e.length+=2;
if (M.e[M.e.length-9][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-9][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_434,1,[],"first-tuple");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_513,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("andmap");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_509,M.p));
return((M.p).label)(M);}};

var _488=function(M){if(--M.cbt<0){throw _488;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_435,1,[],"rest-lists");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_492,M.p));
return((M.p).label)(M);};

var _460=function(M){if(--M.cbt<0){throw _460;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_435,1,[],"rest-lists");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_463,M.p));
return(_435)(M);};

var _449=function(M){if(--M.cbt<0){throw _449;}
if(M.v===false){M.e.length+=2;
if (M.e[M.e.length-3][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_434,1,[],"first-tuple");
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_456,M.p));
return(_434)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("andmap");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _342=function(M){if(--M.cbt<0){throw _342;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_346,M.p));
return((M.p).label)(M);};

var _328=function(M){if(--M.cbt<0){throw _328;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_334,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _292=function(M){if(--M.cbt<0){throw _292;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_178,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_299,M.p));
return((M.p).label)(M);};

var _284=function(M){if(--M.cbt<0){throw _284;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_288,M.p));
return((M.p).label)(M);};

var _256=function(M){if(--M.cbt<0){throw _256;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_251)(M);};

var _214=function(M){if(--M.cbt<0){throw _214;}
return(_207)(M);};

var _90=function(M){if(--M.cbt<0){throw _90;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_6,1,[],"rest-lists");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_94,M.p));
return((M.p).label)(M);};

var _78=function(M){if(--M.cbt<0){throw _78;}
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_5,1,[],"first-tuple");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_86,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-1];
M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("map");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_82,M.p));
return((M.p).label)(M);}};

var _61=function(M){if(--M.cbt<0){throw _61;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_6,1,[],"rest-lists");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_65,M.p));
return((M.p).label)(M);};

var _29=function(M){if(--M.cbt<0){throw _29;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_33,M.p));
return((M.p).label)(M);};

var _8=function(M){if(--M.cbt<0){throw _8;}
M.e.length-=M.a;
return(_9)(M);};

var _886=function(M){if(--M.cbt<0){throw _886;}
M.e.length-=M.a;
return(_887)(M);};

var _1002=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _883=function(M){if(--M.cbt<0){throw _883;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_884,2,[],"length-iter");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return(_884)(M);}else{M.v=9;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=8;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=7;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=6;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=5;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=4;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=3;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=2;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=1;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=0;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _176=function(M){if(--M.cbt<0){throw _176;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_177,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_177)(M);};

var _1034=function(M){if(--M.cbt<0){throw _1034;}
M.p=M.e[M.e.length-1];
M.e.length-=1;
M.a=(M.a-1);
M.spliceListIntoStack((M.a-1));
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+0),0);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1012=function(M){if(--M.cbt<0){throw _1012;}
RT.Primitives["call-with-values"]=RT.Primitives["call-with-values"]||M.v;
RT.Primitives["call/cc"]=RT.Primitives["call/cc"]||new RT.Closure(_callCCEntry,1,[],"call/cc");
RT.Primitives["call-with-current-continuation"]=RT.Primitives["call-with-current-continuation"]||new RT.Closure(_callCCEntry,1,[],"call/cc");
RT.Primitives["values"]=RT.Primitives["values"]||new RT.Closure(_1030,(RT.makeArityAtLeast(0)),[],"values");
RT.Primitives["apply"]=RT.Primitives["apply"]||new RT.Closure(_1034,(RT.makeArityAtLeast(2)),[],"apply");
};

var _965=function(M){if(--M.cbt<0){throw _965;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_944,2,[],"append-2");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_974,M.p));
return(_944)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-4];
return(_969)(M);}}else{M.e[M.e.length-4]=M.e[M.e.length-1];
return(_966)(M);}};

var _867=function(M){if(--M.cbt<0){throw _867;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.length+=1;
RT.raiseUnimplementedPrimitiveError(M,"caar");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_876,M.p));
return((M.p).label)(M);}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _812=function(M){if(--M.cbt<0){throw _812;}
RT.Primitives["memq"]=RT.Primitives["memq"]||M.v;
M.c.push(new RT.PromptFrame(_841,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_838,2,undefined,"assq");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _720=function(M){if(--M.cbt<0){throw _720;}
return(_651)(M);};

var _708=function(M){if(--M.cbt<0){throw _708;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_712,M.p));
return((M.p).label)(M);};

var _692=function(M){if(--M.cbt<0){throw _692;}
if(M.v===false){M.e.length+=2;
if (M.e[M.e.length-9][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-9][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_621,1,[],"first-tuple");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_700,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("ormap");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_696,M.p));
return((M.p).label)(M);}};

var _679=function(M){if(--M.cbt<0){throw _679;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_619,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_686,M.p));
return((M.p).label)(M);};

var _650=function(M){if(--M.cbt<0){throw _650;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_619,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_657,M.p));
return((M.p).label)(M);};

var _643=function(M){if(--M.cbt<0){throw _643;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_647,M.p));
return((M.p).label)(M);};

var _533=function(M){if(--M.cbt<0){throw _533;}
return(_464)(M);};

var _517=function(M){if(--M.cbt<0){throw _517;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][1];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_435,1,[],"rest-lists");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_521,M.p));
return((M.p).label)(M);};

var _499=function(M){if(--M.cbt<0){throw _499;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_433,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_505,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
return(_493)(M);}};

var _484=function(M){if(--M.cbt<0){throw _484;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_488,M.p));
return((M.p).label)(M);};

var _456=function(M){if(--M.cbt<0){throw _456;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_460,M.p));
return((M.p).label)(M);};

var _444=function(M){if(--M.cbt<0){throw _444;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_433,1,[],"some-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_449,M.p));
return(_433)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _415=function(M){if(--M.cbt<0){throw _415;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_409)(M);};

var _321=function(M){if(--M.cbt<0){throw _321;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_178,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_328,M.p));
return((M.p).label)(M);};

var _305=function(M){if(--M.cbt<0){throw _305;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_180,1,[],"first-tuple");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_313,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
RT.raiseUnimplementedPrimitiveError(M,"error");
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.v="all lists must have the same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _270=function(M){if(--M.cbt<0){throw _270;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_179,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_276,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _183=function(M){if(--M.cbt<0){throw _183;}
M.e.length-=M.a;
return(_184)(M);};

var _174=function(M){if(--M.cbt<0){throw _174;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_168)(M);};

var _86=function(M){if(--M.cbt<0){throw _86;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_90,M.p));
return((M.p).label)(M);};

var _72=function(M){if(--M.cbt<0){throw _72;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_4,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_78,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_66)(M);}};

var _57=function(M){if(--M.cbt<0){throw _57;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_61,M.p));
return((M.p).label)(M);};

var _33=function(M){if(--M.cbt<0){throw _33;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_6,1,[],"rest-lists");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_36,M.p));
return(_6)(M);};

var _17=function(M){if(--M.cbt<0){throw _17;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_4,1,[],"some-empty?");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_22,M.p));
return(_4)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _345=function(M){if(--M.cbt<0){throw _345;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_177,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_350,M.p));
return((M.p).label)(M);};




var _287=function(M){if(--M.cbt<0){throw _287;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_181,1,[],"rest-lists");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_292,M.p));
return((M.p).label)(M);};



var _990=function(M){if(--M.cbt<0){throw _990;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_984)(M);};





var _424=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _409=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1039=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_9,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_1,(RT.makeArityAtLeast(1)),[],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1030=function(M){if(--M.cbt<0){throw _1030;}
if(M.a===1){M.p=M.c[M.c.length-1].label;
M.v=M.e[M.e.length-1];
M.e.length-=1;
M.c.pop();
return(M.p)(M);}else{if(M.a===0){M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.c.pop();
return(M.p)(M);}else{M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.v=M.e[M.e.length-1];
M.e.length-=1;
M.c.pop();
return(M.p)(M);}}};

var _callCCClosureEntry=function(M){if(--M.cbt<0){throw _callCCClosureEntry;}
M.v=M.e[M.e.length-1];
M.e.push.apply(M.e,M.p.closedVals);
M.restoreControl(RT.DEFAULT_CONTINUATION_PROMPT_TAG);
M.e=M.e[M.e.length-2].slice(0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1018=function(M){if(--M.cbt<0){throw _1018;}
M.a=1;
return(_1016)(M);};

var _1008=function(M){if(--M.cbt<0){throw _1008;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1002)(M);};

var _841=function(M){if(--M.cbt<0){throw _841;}
RT.Primitives["assq"]=RT.Primitives["assq"]||M.v;
M.c.push(new RT.PromptFrame(_887,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_883,1,[],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _808=function(M){if(--M.cbt<0){throw _808;}
RT.Primitives["caar"]=RT.Primitives["caar"]||M.v;
M.c.push(new RT.PromptFrame(_812,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_809,2,undefined,"memq");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _626=function(M){if(--M.cbt<0){throw _626;}
RT.Primitives["ormap"]=RT.Primitives["ormap"]||M.v;
M.c.push(new RT.PromptFrame(_808,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_805,1,[],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _704=function(M){if(--M.cbt<0){throw _704;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][1];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_622,1,[],"rest-lists");
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_708,M.p));
return((M.p).label)(M);};

var _686=function(M){if(--M.cbt<0){throw _686;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_620,1,[],"some-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_692,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
return(_680)(M);}};

var _667=function(M){if(--M.cbt<0){throw _667;}
return(_651)(M);};

var _647=function(M){if(--M.cbt<0){throw _647;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_622,1,[],"rest-lists");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_650,M.p));
return(_622)(M);};

var _439=function(M){if(--M.cbt<0){throw _439;}
RT.Primitives["andmap"]=RT.Primitives["andmap"]||M.v;
M.c.push(new RT.PromptFrame(_626,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([M.primitives["or"],false]);M.e[M.e.length-1].names=["or",false];
M.v=new RT.Closure(_618,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][1]=M.v;
M.v=new RT.Closure(_623,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"unknown");
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _529=function(M){if(--M.cbt<0){throw _529;}
return(_493)(M);};

var _513=function(M){if(--M.cbt<0){throw _513;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_517,M.p));
return((M.p).label)(M);};

var _492=function(M){if(--M.cbt<0){throw _492;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_432,1,[],"all-empty?");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_499,M.p));
return((M.p).label)(M);};

_9.mvr=_8;
_260.mvr=_259;
_288.mvr=_287;
_317.mvr=_316;
_346.mvr=_345;
_184.mvr=_183;
_439.mvr=_438;
_626.mvr=_625;
_808.mvr=_807;
_812.mvr=_811;
_841.mvr=_840;
_887.mvr=_886;
_947.mvr=_946;
_1018.mvr=_1016;
_1012.mvr=_1011;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_1039, true); })(M, function() { SUCCESS(); }, FAIL, PARAMS);})(plt.runtime.currentMachine,
function(){ plt.runtime.setReadyTrue(); },
function(){},
{});

// ** Visiting <MainModuleSource>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;

var _2718=function(M){if(--M.cbt<0){throw _2718;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23951,628,6,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][43];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2722,M.p));
return((M.p).label)(M);};

var _2700=function(M){if(--M.cbt<0){throw _2700;}
M.c.push(new RT.PromptFrame(_2773,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][116];
M.p=M.e[M.e.length-1][117];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2779,M.p));
return((M.p).label)(M);};

var _1458=function(M){if(--M.cbt<0){throw _1458;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3358,116,2,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3371,116,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3374,116,18,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1463,M.p));
return((M.p).label)(M);};


var _1912=function(M){if(--M.cbt<0){throw _1912;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14934,377,5,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][56];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1475=function(M){if(--M.cbt<0){throw _1475;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1479,M.p));
return((M.p).label)(M);};

var _1892=function(M){if(--M.cbt<0){throw _1892;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14636,366,5,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][56]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2619=function(M){if(--M.cbt<0){throw _2619;}
M.c.push(new RT.PromptFrame(_2621,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1079,0,[M.e[M.e.length-1]],"update-streak-bar");
M.e[M.e.length-1][74]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1397=function(M){if(--M.cbt<0){throw _1397;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2789,97,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2802,97,15,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#scratchpad_toggle";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1401,M.p));
return((M.p).label)(M);};

var _1124=function(M){if(--M.cbt<0){throw _1124;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22476,586,4,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][113];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-5][0],RT.makePair(M.e[M.e.length-4][0],RT.makePair(M.e[M.e.length-3][0],RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1380=function(M){if(--M.cbt<0){throw _1380;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2638,93,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2651,93,15,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#scratchpad_toggle";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1385,M.p));
return((M.p).label)(M);};

var _1321=function(M){if(--M.cbt<0){throw _1321;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="none";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2693=function(M){if(--M.cbt<0){throw _2693;}
M.e.length-=(M.a-1);
return(_2694)(M);};

var _2685=function(M){if(--M.cbt<0){throw _2685;}
M.e.length-=(M.a-1);
return(_2686)(M);};

var _1247=function(M){if(--M.cbt<0){throw _1247;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="appendTo";
M.v=M.e[M.e.length-4][35];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _1167=function(M){if(--M.cbt<0){throw _1167;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1171,M.p));
return((M.p).label)(M);};

var _2645=function(M){if(--M.cbt<0){throw _2645;}
M.e.length-=(M.a-1);
return(_2646)(M);};

var _2196=function(M){if(--M.cbt<0){throw _2196;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21214,550,2,182]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Powers with negative exponents";
M.e[M.e.length-2]="Powers with natural exponents.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2631=function(M){if(--M.cbt<0){throw _2631;}
M.e.length-=(M.a-1);
return(_2632)(M);};


var _2616=function(M){if(--M.cbt<0){throw _2616;}
M.e.length-=(M.a-1);
return(_2617)(M);};

var _2608=function(M){if(--M.cbt<0){throw _2608;}
M.e.length-=(M.a-1);
return(_2609)(M);};

var _2600=function(M){if(--M.cbt<0){throw _2600;}
M.e.length-=(M.a-1);
return(_2601)(M);};

var _2592=function(M){if(--M.cbt<0){throw _2592;}
M.e.length-=(M.a-1);
return(_2593)(M);};

var _2584=function(M){if(--M.cbt<0){throw _2584;}
M.e.length-=(M.a-1);
return(_2585)(M);};

var _2576=function(M){if(--M.cbt<0){throw _2576;}
M.e.length-=(M.a-1);
return(_2577)(M);};



var _2282=function(M){if(--M.cbt<0){throw _2282;}
M.e[M.e.length-6][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21673,565,10,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],0,"="),0)));
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1];
M.v=RT.VOID;
return(_2284)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21681,565,18,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
M.c.push(new RT.CallFrame(_2287,M.p));
return(_1121)(M);}};

var _2118=function(M){if(--M.cbt<0){throw _2118;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20126,522,2,181]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Powers with natural exponents";
M.e[M.e.length-2]="Powers with natural exponents.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1111=function(M){--M.cbt<0;
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19332,500,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][101]);
M.v=5;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2127,M.p));
return((M.p).label)(M);};



var _2166=function(M){if(--M.cbt<0){throw _2166;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-18][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19970,515,90,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-16][0],0,"sub1"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2170,M.p));
return((M.p).label)(M);};

var _2150=function(M){if(--M.cbt<0){throw _2150;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.NULL));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2081=function(M){if(--M.cbt<0){throw _2081;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19077,491,2,156]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Addition";
M.e[M.e.length-2]="Sums of one digit numbers.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2046=function(M){if(--M.cbt<0){throw _2046;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17759,446,14,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4][0]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.c.pop();
M.v=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17783,447,14,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][104]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2051,M.p));
return((M.p).label)(M);};

var _2022=function(M){if(--M.cbt<0){throw _2022;}
M.c.pop();
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18177,464,2,234]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-16][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-16].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-16][1];
M.e[M.e.length-1]="Antideriviative";
M.e[M.e.length-2]="Antiderivatives of powers.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-16][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18344,467,17,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18][100];
M.v=new RT.Closure(_1103,0,[M.e[M.e.length-18],M.e[M.e.length-15]],"...at-exercises.rkt:467:41");
M.a=1;
if(M.a===0){return(_2023)(M);}else{M.e.push(M.v);
return(_2023)(M);}};

var _1994=function(M){if(--M.cbt<0){throw _1994;}
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16182,413,23,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][71];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16213,413,54,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][88];
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1998,M.p));
return((M.p).label)(M);};

var _1974=function(M){if(--M.cbt<0){throw _1974;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1978,M.p));
return((M.p).label)(M);};

var _2432=function(M){if(--M.cbt<0){throw _2432;}
M.e.length-=(M.a-1);
return(_2433)(M);};

var _2428=function(M){if(--M.cbt<0){throw _2428;}
M.e.length-=(M.a-1);
return(_2429)(M);};

var _2420=function(M){if(--M.cbt<0){throw _2420;}
M.e.length-=(M.a-1);
return(_2421)(M);};

var _2412=function(M){if(--M.cbt<0){throw _2412;}
M.e.length-=(M.a-1);
return(_2413)(M);};

var _1103=function(M){if(--M.cbt<0){throw _1103;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18373,467,46,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][126]);
M.v=M.e[M.e.length-2][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1077=function(M){if(--M.cbt<0){throw _1077;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4834,162,2,92]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4847,162,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4850,162,18,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1546,M.p));
return((M.p).label)(M);};

var _1778=function(M){if(--M.cbt<0){throw _1778;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7680,234,6,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][48];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1782,M.p));
return((M.p).label)(M);};

var _1132=function(M){if(--M.cbt<0){throw _1132;}
M.e.length-=M.a;
return(_1133)(M);};


var _1985=function(M){if(--M.cbt<0){throw _1985;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16310,416,11,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-7][83];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=7;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1709=function(M){if(--M.cbt<0){throw _1709;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6858,206,21,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6859,206,22,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][22]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[22]); }
M.e[M.e.length-1]=M.e[M.e.length-4][22];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6872,206,35,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][9]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-5][9];
if (M.e[M.e.length-5][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[45]); }
M.v=M.e[M.e.length-5][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1713,M.p));
return((M.p).label)(M);};

var _1681=function(M){if(--M.cbt<0){throw _1681;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6560,201,21,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6561,201,22,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][5]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-4][5];
if (M.e[M.e.length-4][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[45]); }
M.v=M.e[M.e.length-4][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1685,M.p));
return((M.p).label)(M);};

var _1663=function(M){if(--M.cbt<0){throw _1663;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6186,192,27,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][73]);
M.v=RT.makeSymbol("happy");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1667,M.p));
return((M.p).label)(M);};


var _2714=function(M){if(--M.cbt<0){throw _2714;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23929,627,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][94];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2718,M.p));
return((M.p).label)(M);};

var _2698=function(M){if(--M.cbt<0){throw _2698;}
M.c.pop();
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1446=function(M){if(--M.cbt<0){throw _1446;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1443)(M);};

var _1125=function(M){if(--M.cbt<0){throw _1125;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22874,597,13,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][98];
M.e[M.e.length-1]=M.e[M.e.length-4][127];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2319,M.p));
return((M.p).label)(M);};

var _1091=function(M){if(--M.cbt<0){throw _1091;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14891,376,5,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][54];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1913,M.p));
return((M.p).label)(M);};




var _2617=function(M){if(--M.cbt<0){throw _2617;}
M.c.push(new RT.PromptFrame(_2619,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1078,1,[M.e[M.e.length-1]],"face");
M.e[M.e.length-1][73]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1088=function(M){if(--M.cbt<0){throw _1088;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8848,272,2,5579]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][30]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8938,275,5,5487]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=183;
M.e[M.e.length-183]=M.e[M.e.length-185][44];
M.e[M.e.length-1]="<script>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="function Proxy() {}";
M.e[M.e.length-4]="\n";
M.e[M.e.length-5]="Proxy.prototype.jsEval = function(expr) { return eval(expr); };";
M.e[M.e.length-6]="\n";
M.e[M.e.length-7]="var proxy = new Proxy();";
M.e[M.e.length-8]="\n";
M.e[M.e.length-9]="var storeProxy = function(){";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",9177,280,45,84]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-189][59];
M.e[M.e.length-1]="(~a)(~a,~a,proxy)";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-189][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",9205,280,73,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-189][91]);
M.v="store-js-proxy";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1865,M.p));
return((M.p).label)(M);};



var _2691=function(M){if(--M.cbt<0){throw _2691;}
M.e.length-=(M.a-1);
return(_2692)(M);};

var _2683=function(M){if(--M.cbt<0){throw _2683;}
M.e.length-=(M.a-1);
return(_2684)(M);};

var _2677=function(M){if(--M.cbt<0){throw _2677;}
M.e.length-=(M.a-1);
return(_2678)(M);};


var _1060=function(M){if(--M.cbt<0){throw _1060;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2214,80,2,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2227,80,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1337,M.p));
return((M.p).label)(M);};


var _2643=function(M){if(--M.cbt<0){throw _2643;}
M.e.length-=(M.a-1);
return(_2644)(M);};

var _1777=function(M){if(--M.cbt<0){throw _1777;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7680,234,6,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][48];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1782,M.p));
return((M.p).label)(M);};

var _2629=function(M){if(--M.cbt<0){throw _2629;}
M.e.length-=(M.a-1);
return(_2630)(M);};

var _2622=function(M){if(--M.cbt<0){throw _2622;}
M.e.length-=(M.a-1);
return(_2623)(M);};

var _2614=function(M){if(--M.cbt<0){throw _2614;}
M.e.length-=(M.a-1);
return(_2615)(M);};

var _2606=function(M){if(--M.cbt<0){throw _2606;}
M.e.length-=(M.a-1);
return(_2607)(M);};

var _2598=function(M){if(--M.cbt<0){throw _2598;}
M.e.length-=(M.a-1);
return(_2599)(M);};

var _2590=function(M){if(--M.cbt<0){throw _2590;}
M.e.length-=(M.a-1);
return(_2591)(M);};

var _2582=function(M){if(--M.cbt<0){throw _2582;}
M.e.length-=(M.a-1);
return(_2583)(M);};

var _2574=function(M){if(--M.cbt<0){throw _2574;}
M.e.length-=(M.a-1);
return(_2575)(M);};

var _2568=function(M){if(--M.cbt<0){throw _2568;}
M.e.length-=(M.a-1);
return(_2569)(M);};

var _2560=function(M){if(--M.cbt<0){throw _2560;}
M.e.length-=(M.a-1);
return(_2561)(M);};

var _2274=function(M){if(--M.cbt<0){throw _2274;}
M.c.pop();
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22528,589,2,182]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-17][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-17].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-17][1];
M.e[M.e.length-1]="Square of binomial";
M.e[M.e.length-2]="Square a binomial.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-17][97];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1676=function(M){if(--M.cbt<0){throw _1676;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6526,200,21,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][73]);
M.v=RT.makeSymbol("none");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1681,M.p));
return((M.p).label)(M);};

var _1110=function(M){if(--M.cbt<0){throw _1110;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1111,0,undefined,"new-problem!");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1112,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1113,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.v=new RT.Closure(_1114,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_2114)(M);}else{M.e.push(M.v);
return(_2114)(M);}};



var _2162=function(M){if(--M.cbt<0){throw _2162;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19901,515,21,82]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-16][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-15][0];
M.e[M.e.length-3]="^";
M.e[M.e.length-4]=M.e[M.e.length-14][0];
M.e[M.e.length-5]=" = ";
M.e[M.e.length-6]=M.e[M.e.length-15][0];
M.e[M.e.length-7]=" ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-16][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19930,515,50,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18][108];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-18][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19947,515,67,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-20][44];
M.e[M.e.length-1]="\\cdot ";
M.v=M.e[M.e.length-19][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2166,M.p));
return((M.p).label)(M);};

var _2146=function(M){if(--M.cbt<0){throw _2146;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19672,512,21,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-7][0];
M.v="^0 = 1.$$";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2150,M.p));
return((M.p).label)(M);};



var _1614=function(M){if(--M.cbt<0){throw _1614;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5556,177,4,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5569,177,17,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#streak_bar_current";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1619,M.p));
return((M.p).label)(M);};


var _1986=function(M){if(--M.cbt<0){throw _1986;}
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16310,416,11,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-7][83];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=7;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2430=function(M){if(--M.cbt<0){throw _2430;}
M.e.length-=(M.a-1);
return(_2431)(M);};

var _2426=function(M){if(--M.cbt<0){throw _2426;}
M.e.length-=(M.a-1);
return(_2427)(M);};

var _2419=function(M){if(--M.cbt<0){throw _2419;}
M.e.push([M.params.currentNamespace["struct:exercise"]||M.primitives["struct:exercise"],M.params.currentNamespace["make-exercise"]||M.primitives["make-exercise"],M.params.currentNamespace["exercise?"]||M.primitives["exercise?"],M.params.currentNamespace["exercise-title"]||M.primitives["exercise-title"],M.params.currentNamespace["exercise-summary"]||M.primitives["exercise-summary"],M.params.currentNamespace["exercise-new-problem!"]||M.primitives["exercise-new-problem!"],M.params.currentNamespace["exercise-problem-description"]||M.primitives["exercise-problem-description"],M.params.currentNamespace["exercise-hints"]||M.primitives["exercise-hints"],M.params.currentNamespace["exercise-check-answer"]||M.primitives["exercise-check-answer"],M.params.currentNamespace["exercise-answer-type"]||M.primitives["exercise-answer-type"],M.params.currentNamespace["set-exercise-title!"]||M.primitives["set-exercise-title!"],M.params.currentNamespace["set-exercise-summary!"]||M.primitives["set-exercise-summary!"],M.params.currentNamespace["set-exercise-new-problem!!"]||M.primitives["set-exercise-new-problem!!"],M.params.currentNamespace["set-exercise-problem-description!"]||M.primitives["set-exercise-problem-description!"],M.params.currentNamespace["set-exercise-hints!"]||M.primitives["set-exercise-hints!"],M.params.currentNamespace["set-exercise-check-answer!"]||M.primitives["set-exercise-check-answer!"],M.params.currentNamespace["set-exercise-answer-type!"]||M.primitives["set-exercise-answer-type!"],M.params.currentNamespace["struct:answer"]||M.primitives["struct:answer"],M.params.currentNamespace["make-answer"]||M.primitives["make-answer"],M.params.currentNamespace["answer?"]||M.primitives["answer?"],M.params.currentNamespace["answer-html"]||M.primitives["answer-html"],M.params.currentNamespace["answer-css"]||M.primitives["answer-css"],M.params.currentNamespace["answer-show"]||M.primitives["answer-show"],M.params.currentNamespace["answer-get"]||M.primitives["answer-get"],M.params.currentNamespace["set-answer-html!"]||M.primitives["set-answer-html!"],M.params.currentNamespace["set-answer-css!"]||M.primitives["set-answer-css!"],M.params.currentNamespace["set-answer-show!"]||M.primitives["set-answer-show!"],M.params.currentNamespace["set-answer-get!"]||M.primitives["set-answer-get!"],M.params.currentNamespace["streak-current"]||M.primitives["streak-current"],M.params.currentNamespace["streak-max"]||M.primitives["streak-max"],M.params.currentNamespace["append-to-body"]||M.primitives["append-to-body"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.modules["whalesong/lang/private/map.rkt"].namespace["for-each2"],M.modules["whalesong/js/main.rkt"].namespace["call-method3.3"],M.modules["whalesong/js/main.rkt"].namespace["$4.4"],M.modules["whalesong/js/main.rkt"].namespace["body2.2"],M.params.currentNamespace["js-proxy"]||M.primitives["js-proxy"],M.params.currentNamespace["store-js-proxy"]||M.primitives["store-js-proxy"],M.params.currentNamespace["call-proxy"]||M.primitives["call-proxy"],M.primitives["symbol?"],M.params.currentNamespace["run-mathjax"]||M.primitives["run-mathjax"],M.params.currentNamespace["js-eval"]||M.primitives["js-eval"],M.params.currentNamespace["create-scratchpad"]||M.primitives["create-scratchpad"],M.params.currentNamespace["update-exercise-title"]||M.primitives["update-exercise-title"],M.modules["root/utilities/string.rkt"].namespace["stringify"],M.params.currentNamespace["current-exercise"]||M.primitives["current-exercise"],M.params.currentNamespace["update-problem-area"]||M.primitives["update-problem-area"],M.params.currentNamespace["hide-hint-area"]||M.primitives["hide-hint-area"],M.params.currentNamespace["show-hint-area"]||M.primitives["show-hint-area"],M.params.currentNamespace["clear-hint-area"]||M.primitives["clear-hint-area"],M.params.currentNamespace["append-to-hint-area"]||M.primitives["append-to-hint-area"],M.params.currentNamespace["change-hint-button-text"]||M.primitives["change-hint-button-text"],M.params.currentNamespace["show-scratchpad"]||M.primitives["show-scratchpad"],M.params.currentNamespace["hide-scratchpad"]||M.primitives["hide-scratchpad"],M.params.currentNamespace["show-answer-field"]||M.primitives["show-answer-field"],M.primitives["error"],M.params.currentNamespace["show-answer-label"]||M.primitives["show-answer-label"],M.params.currentNamespace["show-multiple-choice-radio-button"]||M.primitives["show-multiple-choice-radio-button"],M.params.currentNamespace["get-answer-field"]||M.primitives["get-answer-field"],M.primitives["format"],M.primitives["string?"],M.params.currentNamespace["get-multiple-choice"]||M.primitives["get-multiple-choice"],M.primitives["string->number"],M.params.currentNamespace["clear-answer-input"]||M.primitives["clear-answer-input"],M.params.currentNamespace["call-plt-function1"]||M.primitives["call-plt-function1"],M.params.currentNamespace["hide-answer-labels"]||M.primitives["hide-answer-labels"],M.params.currentNamespace["hide-answer-inputs"]||M.primitives["hide-answer-inputs"],M.params.currentNamespace["hide-multiple-choice-radio-buttons"]||M.primitives["hide-multiple-choice-radio-buttons"],M.params.currentNamespace["hide-answer-inputs-and-labels"]||M.primitives["hide-answer-inputs-and-labels"],M.params.currentNamespace["set-focus-to-answer-input"]||M.primitives["set-focus-to-answer-input"],M.params.currentNamespace["change-answer-button-text"]||M.primitives["change-answer-button-text"],M.params.currentNamespace["change-multiple-choice-text"]||M.primitives["change-multiple-choice-text"],M.primitives["string-append"],M.params.currentNamespace["face"]||M.primitives["face"],M.params.currentNamespace["update-streak-bar"]||M.primitives["update-streak-bar"],M.primitives["quotient"],M.modules["root/lang/primitives.rkt"].namespace["max"],M.modules["root/lang/primitives.rkt"].namespace["min"],M.primitives["number->string"],M.params.currentNamespace["on-answer-button"]||M.primitives["on-answer-button"],M.params.currentNamespace["reset-hint-index"]||M.primitives["reset-hint-index"],M.modules["whalesong/js/main.rkt"].namespace["alert1.1"],M.params.currentNamespace["on-keyup/answer-input"]||M.primitives["on-keyup/answer-input"],M.primitives["void"],M.params.currentNamespace["hint-index"]||M.primitives["hint-index"],M.params.currentNamespace["on-hint-button"]||M.primitives["on-hint-button"],M.primitives["zero?"],M.primitives["length"],M.primitives["list-ref"],M.params.currentNamespace["on-toggle-scratchpad"]||M.primitives["on-toggle-scratchpad"],M.params.currentNamespace["js-identity"]||M.primitives["js-identity"],M.params.currentNamespace["plt-function"]||M.primitives["plt-function"],M.params.currentNamespace["call-plt-thunk"]||M.primitives["call-plt-thunk"],M.primitives["symbol->string"],M.params.currentNamespace["generate-body"]||M.primitives["generate-body"],M.params.currentNamespace["number-answer"]||M.primitives["number-answer"],M.modules["root/utilities/string.rkt"].namespace["string-trim-both"],M.params.currentNamespace["three-number-answer"]||M.primitives["three-number-answer"],M.modules["whalesong/lang/private/map.rkt"].namespace["map2"],M.params.currentNamespace["insert-at"]||M.primitives["insert-at"],M.params.currentNamespace["multiple-choice-answer"]||M.primitives["multiple-choice-answer"],M.primitives["random"],M.modules["whalesong/lang/private/list.rkt"].namespace["build-list"],M.params.currentNamespace["antiderivative-of-power-exercise"]||M.primitives["antiderivative-of-power-exercise"],M.modules["root/lang/primitives.rkt"].namespace["cadr"],M.modules["root/lang/primitives.rkt"].namespace["caddr"],M.params.currentNamespace["addition-exercise"]||M.primitives["addition-exercise"],M.params.currentNamespace["power1-exercise"]||M.primitives["power1-exercise"],M.modules["root/utilities/string.rkt"].namespace["string-append-n"],M.primitives["expt"],M.params.currentNamespace["power2-exercise"]||M.primitives["power2-exercise"],M.params.currentNamespace["squaring-binomial-exercise"]||M.primitives["squaring-binomial-exercise"],M.modules["root/utilities/random.rkt"].namespace["random-in-interval"],M.primitives["equal?"],M.params.currentNamespace["combine-exercises"]||M.primitives["combine-exercises"],M.params.currentNamespace["power-all-kinds-exercise"]||M.primitives["power-all-kinds-exercise"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["struct:exercise","make-exercise","exercise?","exercise-title","exercise-summary","exercise-new-problem!","exercise-problem-description","exercise-hints","exercise-check-answer","exercise-answer-type","set-exercise-title!","set-exercise-summary!","set-exercise-new-problem!!","set-exercise-problem-description!","set-exercise-hints!","set-exercise-check-answer!","set-exercise-answer-type!","struct:answer","make-answer","answer?","answer-html","answer-css","answer-show","answer-get","set-answer-html!","set-answer-css!","set-answer-show!","set-answer-get!","streak-current","streak-max","append-to-body","traced-app-key","for-each2","call-method3.3","$4.4","body2.2","js-proxy","store-js-proxy","call-proxy","symbol?","run-mathjax","js-eval","create-scratchpad","update-exercise-title","stringify","current-exercise","update-problem-area","hide-hint-area","show-hint-area","clear-hint-area","append-to-hint-area","change-hint-button-text","show-scratchpad","hide-scratchpad","show-answer-field","error","show-answer-label","show-multiple-choice-radio-button","get-answer-field","format","string?","get-multiple-choice","string->number","clear-answer-input","call-plt-function1","hide-answer-labels","hide-answer-inputs","hide-multiple-choice-radio-buttons","hide-answer-inputs-and-labels","set-focus-to-answer-input","change-answer-button-text","change-multiple-choice-text","string-append","face","update-streak-bar","quotient","max","min","number->string","on-answer-button","reset-hint-index","alert1.1","on-keyup/answer-input","void","hint-index","on-hint-button","zero?","length","list-ref","on-toggle-scratchpad","js-identity","plt-function","call-plt-thunk","symbol->string","generate-body","number-answer","string-trim-both","three-number-answer","map2","insert-at","multiple-choice-answer","random","build-list","antiderivative-of-power-exercise","cadr","caddr","addition-exercise","power1-exercise","string-append-n","expt","power2-exercise","squaring-binomial-exercise","random-in-interval","equal?","combine-exercises","power-all-kinds-exercise","print-values","run-tests",false,false,false,false,false,false,false,false,false,false];
M.modules["root/stxmat-exercises.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2421,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1040,1,[M.e[M.e.length-1]],"...at-exercises.rkt:597:18");
M.e[M.e.length-1][127]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1869=function(M){if(--M.cbt<0){throw _1869;}
M.e[M.e.length-10]=M.v;
M.c.pop();
M.e[M.e.length-11]=";};";
M.e[M.e.length-12]="\n";
M.e[M.e.length-13]="</script>";
M.e[M.e.length-14]="\n";
M.e[M.e.length-15]="<style>";
M.e[M.e.length-16]="\n";
M.e[M.e.length-17]="#scratchpad { padding-left: 30px; overflow: hidden; display: inline; }";
M.e[M.e.length-18]="\n";
M.e[M.e.length-19]="#scratchpad svg { position: absolute; z-index: 1; min-height: 350px; width: 50%; height: 85%;}";
M.e[M.e.length-20]="\n";
M.e[M.e.length-21]="\n";
M.e[M.e.length-22]="#exercise_title{font-size: xx-large; display: inline; height:";
M.e[M.e.length-23]=35;
M.e[M.e.length-24]="}";
M.e[M.e.length-25]="\n";
M.e[M.e.length-26]="#streak_bar_area{float:right; position: relative;}";
M.e[M.e.length-27]="\n";
M.e[M.e.length-28]="#streak_bar{float:left; position:relative; border:1px; border-color: black; border-style: solid;}";
M.e[M.e.length-29]="\n";
M.e[M.e.length-30]="#streak_bar_left {float:left; height: ";
M.e[M.e.length-31]=30;
M.e[M.e.length-32]="px; position:relative; width:50px; background-color: green;";
M.e[M.e.length-33]="\n";
M.e[M.e.length-34]="                                      ";
M.e[M.e.length-35]="border-right: solid; border-width: 1px;}";
M.e[M.e.length-36]="\n";
M.e[M.e.length-37]="#streak_bar_right{float:left; height: ";
M.e[M.e.length-38]=30;
M.e[M.e.length-39]="px; position:relative; width:50px; background-color: red;}";
M.e[M.e.length-40]="\n";
M.e[M.e.length-41]="#streak_bar_current{position:absolute; left: 5px; bottom: 5px; color: white; display: inline; z-index: 1;}";
M.e[M.e.length-42]="\n";
M.e[M.e.length-43]="#title_spacer{height: 20px; clear:both;}";
M.e[M.e.length-44]="\n";
M.e[M.e.length-45]="#problem_and_answer_area{}";
M.e[M.e.length-46]="\n";
M.e[M.e.length-47]="#problem_and_hint_area{float: left;}";
M.e[M.e.length-48]="\n";
M.e[M.e.length-49]="#problem_area{padding-left: 50px;}";
M.e[M.e.length-50]="\n";
M.e[M.e.length-51]="#hint_area{padding-left: 50px; margin-top: 10px; border: 1px;}";
M.e[M.e.length-52]="\n";
M.e[M.e.length-53]="#answer_and_help_area{float: right; width: 300px;}";
M.e[M.e.length-54]="\n";
M.e[M.e.length-55]="#scratchpad_toggle{ text-decoration: underline; color: dodgerblue;}";
M.e[M.e.length-56]="\n";
M.e[M.e.length-57]="#answer_area{border: 1px; border-style: solid; border-color: black; background-color: lightblue; padding: 10px;}";
M.e[M.e.length-58]="\n";
M.e[M.e.length-59]="#answer_area_title{position:relative; font-size:large; margin-bottom: 10px; }";
M.e[M.e.length-60]="\n";
M.e[M.e.length-61]="#answer_input_1{margin-bottom: 10px}";
M.e[M.e.length-62]="\n";
M.e[M.e.length-63]="#answer_input_2{margin-bottom: 10px; display: inline;}";
M.e[M.e.length-64]="\n";
M.e[M.e.length-65]="#answer_input_3{margin-bottom: 10px; display: inline;}";
M.e[M.e.length-66]="\n";
M.e[M.e.length-67]="#answer_input_label_1{display: inline; margin-right: 5px;}";
M.e[M.e.length-68]="\n";
M.e[M.e.length-69]="#answer_input_label_2{display: inline; margin-right: 5px;}";
M.e[M.e.length-70]="\n";
M.e[M.e.length-71]="#answer_input_label_3{display: inline; margin-right: 5px;}";
M.e[M.e.length-72]="\n";
M.e[M.e.length-73]="#help_area{border: 1px; border-style: solid; border-color: black; background-color: lightblue; padding: 10px; margin-top: 15px;}";
M.e[M.e.length-74]="\n";
M.e[M.e.length-75]="#help_area_title{position:relative; font-size:large; margin-bottom: 10px;}";
M.e[M.e.length-76]="\n";
M.e[M.e.length-77]="</style>";
M.e[M.e.length-78]="\n";
M.e[M.e.length-79]="<div id='title_area'>";
M.e[M.e.length-80]="\n";
M.e[M.e.length-81]="<div id='exercise_title'>Addition</div>";
M.e[M.e.length-82]="\n";
M.e[M.e.length-83]="<div id='streak_bar_area'>";
M.e[M.e.length-84]="\n";
M.e[M.e.length-85]="<div id='streak_bar'>";
M.e[M.e.length-86]="\n";
M.e[M.e.length-87]="<div id='streak_bar_current'>0</div>";
M.e[M.e.length-88]="\n";
M.e[M.e.length-89]="<div id='streak_bar_left'>  </div>";
M.e[M.e.length-90]="\n";
M.e[M.e.length-91]="<div id='streak_bar_right'> </div>";
M.e[M.e.length-92]="\n";
M.e[M.e.length-93]="</div>";
M.e[M.e.length-94]="\n";
M.e[M.e.length-95]="<div>Streak...</div>";
M.e[M.e.length-96]="\n";
M.e[M.e.length-97]="</div>";
M.e[M.e.length-98]="\n";
M.e[M.e.length-99]="</div>";
M.e[M.e.length-100]="\n";
M.e[M.e.length-101]="<div id='title_spacer'></div>";
M.e[M.e.length-102]="\n";
M.e[M.e.length-103]="<div id='problem_and_answer_area'>";
M.e[M.e.length-104]="\n";
M.e[M.e.length-105]="<div id='problem_and_hint_area'>";
M.e[M.e.length-106]="\n";
M.e[M.e.length-107]="<div id='scratchpad'><div></div></div>";
M.e[M.e.length-108]="\n";
M.e[M.e.length-109]="<div id='problem_area'>1+2=?</div>";
M.e[M.e.length-110]="\n";
M.e[M.e.length-111]="<div id='hint_area'>Hints are displayed here</div>";
M.e[M.e.length-112]="\n";
M.e[M.e.length-113]="</div>";
M.e[M.e.length-114]="\n";
M.e[M.e.length-115]="<div id='answer_and_help_area'>";
M.e[M.e.length-116]="\n";
M.e[M.e.length-117]="<a id='scratchpad_toggle' onclick='";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",12501,330,52,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-185][92]);
M.v=RT.makeSymbol("on-toggle-scratchpad");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1873,M.p));
return((M.p).label)(M);};

var _2413=function(M){if(--M.cbt<0){throw _2413;}
if((M.modules["root/utilities/random.rkt"]!==undefined)!==false){if(M.modules["root/utilities/random.rkt"].isInvoked!==false){return(_2416)(M);}else{M.c.push(new RT.CallFrame(_2416,M.p));
return(M.modules["root/utilities/random.rkt"].label)(M);}}else{return(_2416)(M);}};

var _1100=function(M){if(--M.cbt<0){throw _1100;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17866,451,4,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="<div>What is the antiderivative of the function.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-6][0];
M.v="  ?$$ </div>";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1130=function(M){if(--M.cbt<0){throw _1130;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23583,613,2,113]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][114];
M.e[M.e.length-1]="Powers";
M.e[M.e.length-2]="Combines all power exercises";
M.e[M.e.length-3]=M.e[M.e.length-5][107];
M.v=M.e[M.e.length-5][110];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1713=function(M){if(--M.cbt<0){throw _1713;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1717,M.p));
return((M.p).label)(M);};

var _1096=function(M){if(--M.cbt<0){throw _1096;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16121,412,23,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][57]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1994,M.p));
return((M.p).label)(M);};

var _1693=function(M){if(--M.cbt<0){throw _1693;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1697,M.p));
return((M.p).label)(M);};

var _1677=function(M){if(--M.cbt<0){throw _1677;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6526,200,21,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][73]);
M.v=RT.makeSymbol("none");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1681,M.p));
return((M.p).label)(M);};



var _1603=function(M){if(--M.cbt<0){throw _1603;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="width";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5487,176,55,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][76];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5492,176,60,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][77];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5497,176,65,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(297, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],1,"-"));
M.c.pop();
M.v=297;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1607,M.p));
return((M.p).label)(M);};

var _1599=function(M){if(--M.cbt<0){throw _1599;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5436,176,4,115]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5449,176,17,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][34]);
M.v="#streak_bar_right";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1603,M.p));
return((M.p).label)(M);};

var _1562=function(M){if(--M.cbt<0){throw _1562;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5014,167,19,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===RT.makeSymbol("happy"));
M.c.pop();
if(M.v===false){M.v="none";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1568,M.p));
return((M.p).label)(M);}else{M.v="inline";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1568,M.p));
return((M.p).label)(M);}};

var _1092=function(M){if(--M.cbt<0){throw _1092;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14993,379,5,133]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][98];
M.e[M.e.length-1]=M.e[M.e.length-3][123];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1090=function(M){if(--M.cbt<0){throw _1090;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14673,367,14,87]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][62]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14704,368,15,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][96]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14738,369,16,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][58]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1901,M.p));
return((M.p).label)(M);};

var _1089=function(M){if(--M.cbt<0){throw _1089;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14609,365,5,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][54]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1893,M.p));
return((M.p).label)(M);};

var _1410=function(M){if(--M.cbt<0){throw _1410;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1407)(M);};

var _1411=function(M){if(--M.cbt<0){throw _1411;}
M.c.pop();
return(_1407)(M);};


var _1064=function(M){if(--M.cbt<0){throw _1064;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2732,96,2,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2745,96,15,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#scratchpad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1393,M.p));
return((M.p).label)(M);};


var _2699=function(M){if(--M.cbt<0){throw _2699;}
M.e.length-=(M.a-1);
return(_2700)(M);};

var _2689=function(M){if(--M.cbt<0){throw _2689;}
M.e.length-=(M.a-1);
return(_2690)(M);};

var _2681=function(M){if(--M.cbt<0){throw _2681;}
M.e.length-=(M.a-1);
return(_2682)(M);};

var _2675=function(M){if(--M.cbt<0){throw _2675;}
M.e.length-=(M.a-1);
return(_2676)(M);};


var _2661=function(M){if(--M.cbt<0){throw _2661;}
M.e.length-=(M.a-1);
return(_2662)(M);};


var _2641=function(M){if(--M.cbt<0){throw _2641;}
M.e.length-=(M.a-1);
return(_2642)(M);};

var _2637=function(M){if(--M.cbt<0){throw _2637;}
M.e.length-=(M.a-1);
return(_2638)(M);};

var _2627=function(M){if(--M.cbt<0){throw _2627;}
M.e.length-=(M.a-1);
return(_2628)(M);};

var _2620=function(M){if(--M.cbt<0){throw _2620;}
M.e.length-=(M.a-1);
return(_2621)(M);};

var _2612=function(M){if(--M.cbt<0){throw _2612;}
M.e.length-=(M.a-1);
return(_2613)(M);};

var _2604=function(M){if(--M.cbt<0){throw _2604;}
M.e.length-=(M.a-1);
return(_2605)(M);};

var _2596=function(M){if(--M.cbt<0){throw _2596;}
M.e.length-=(M.a-1);
return(_2597)(M);};

var _2588=function(M){if(--M.cbt<0){throw _2588;}
M.e.length-=(M.a-1);
return(_2589)(M);};

var _2580=function(M){if(--M.cbt<0){throw _2580;}
M.e.length-=(M.a-1);
return(_2581)(M);};

var _2572=function(M){if(--M.cbt<0){throw _2572;}
M.e.length-=(M.a-1);
return(_2573)(M);};

var _2566=function(M){if(--M.cbt<0){throw _2566;}
M.e.length-=(M.a-1);
return(_2567)(M);};

var _2558=function(M){if(--M.cbt<0){throw _2558;}
M.e.length-=(M.a-1);
return(_2559)(M);};





var _2516=function(M){if(--M.cbt<0){throw _2516;}
if((M.a-5)===0){return(_2515)(M);}else{RT.si_context_expected(5)(M);
}};








var _2446=function(M){if(--M.cbt<0){throw _2446;}
if((M.a-5)===0){return(_2445)(M);}else{RT.si_context_expected(5)(M);
}};

var _1957=function(M){if(--M.cbt<0){throw _1957;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15928,409,31,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7][101]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15936,409,39,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][87]);
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1962,M.p));
return((M.p).label)(M);};

var _2424=function(M){if(--M.cbt<0){throw _2424;}
M.e.length-=(M.a-1);
return(_2425)(M);};

var _2418=function(M){if(--M.cbt<0){throw _2418;}
M.e.length-=(M.a-1);
return(_2419)(M);};


var _2410=function(M){if(--M.cbt<0){throw _2410;}
if((M.modules["root/lang/do.rkt"]!==undefined)!==false){if(M.modules["root/lang/do.rkt"].isInvoked!==false){return(_2413)(M);}else{M.c.push(new RT.CallFrame(_2413,M.p));
return(M.modules["root/lang/do.rkt"].label)(M);}}else{return(_2413)(M);}};

var _2407=function(M){if(--M.cbt<0){throw _2407;}
if((M.modules["root/lang/primitives.rkt"]!==undefined)!==false){if(M.modules["root/lang/primitives.rkt"].isInvoked!==false){return(_2410)(M);}else{M.c.push(new RT.CallFrame(_2410,M.p));
return(M.modules["root/lang/primitives.rkt"].label)(M);}}else{return(_2410)(M);}};

var _1099=function(M){if(--M.cbt<0){throw _1099;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17694,445,14,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][88];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17714,445,34,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][101]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17722,445,42,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][87]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2038,M.p));
return((M.p).label)(M);};


var _1993=function(M){if(--M.cbt<0){throw _1993;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16182,413,23,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][71];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16213,413,54,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][88];
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1998,M.p));
return((M.p).label)(M);};

var _1725=function(M){if(--M.cbt<0){throw _1725;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7033,209,21,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][47];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1729,M.p));
return((M.p).label)(M);};

var _1071=function(M){if(--M.cbt<0){throw _1071;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4159,137,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][120];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _1619=function(M){if(--M.cbt<0){throw _1619;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5602,177,50,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]="<span>";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5620,177,68,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][78]);
if (M.e[M.e.length-9][28]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[28]); }
M.v=M.e[M.e.length-9][28];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1623,M.p));
return((M.p).label)(M);};


var _1595=function(M){if(--M.cbt<0){throw _1595;}
M.c.pop();
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1599,M.p));
return((M.p).label)(M);};

var _1572=function(M){if(--M.cbt<0){throw _1572;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5113,169,19,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===RT.makeSymbol("sad"));
M.c.pop();
if(M.v===false){M.v="none";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v="inline";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1067=function(M){if(--M.cbt<0){throw _1067;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3251,113,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(0,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<="),4)));
M.c.pop();
if(M.v===false){M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3266,114,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][55]);
M.v="There are only 5 radio buttons.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1447,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_1443)(M);}};

var _1530=function(M){if(--M.cbt<0){throw _1530;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="focus";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1428=function(M){if(--M.cbt<0){throw _1428;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1425)(M);};

var _1066=function(M){if(--M.cbt<0){throw _1066;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3071,108,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<="),3)));
M.c.pop();
if(M.v===false){M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3086,109,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][55]);
M.v="There are only 3 answer labels.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1429,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_1425)(M);}};

var _1451=function(M){if(--M.cbt<0){throw _1451;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1455,M.p));
return((M.p).label)(M);};


var _1396=function(M){if(--M.cbt<0){throw _1396;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2789,97,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2802,97,15,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#scratchpad_toggle";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1401,M.p));
return((M.p).label)(M);};

var _1369=function(M){if(--M.cbt<0){throw _1369;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="val";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1353=function(M){if(--M.cbt<0){throw _1353;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="append";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2413,85,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2416,85,18,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]=" <div> ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=" </div>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1357,M.p));
return((M.p).label)(M);};


var _2687=function(M){if(--M.cbt<0){throw _2687;}
M.e.length-=(M.a-1);
return(_2688)(M);};

var _2679=function(M){if(--M.cbt<0){throw _2679;}
M.e.length-=(M.a-1);
return(_2680)(M);};




var _2647=function(M){if(--M.cbt<0){throw _2647;}
M.e.length-=(M.a-1);
return(_2648)(M);};

var _2639=function(M){if(--M.cbt<0){throw _2639;}
M.e.length-=(M.a-1);
return(_2640)(M);};

var _2633=function(M){if(--M.cbt<0){throw _2633;}
M.e.length-=(M.a-1);
return(_2634)(M);};

var _2625=function(M){if(--M.cbt<0){throw _2625;}
M.e.length-=(M.a-1);
return(_2626)(M);};

var _2618=function(M){if(--M.cbt<0){throw _2618;}
M.e.length-=(M.a-1);
return(_2619)(M);};

var _2610=function(M){if(--M.cbt<0){throw _2610;}
M.e.length-=(M.a-1);
return(_2611)(M);};

var _2602=function(M){if(--M.cbt<0){throw _2602;}
M.e.length-=(M.a-1);
return(_2603)(M);};

var _2594=function(M){if(--M.cbt<0){throw _2594;}
M.e.length-=(M.a-1);
return(_2595)(M);};

var _2586=function(M){if(--M.cbt<0){throw _2586;}
M.e.length-=(M.a-1);
return(_2587)(M);};

var _2578=function(M){if(--M.cbt<0){throw _2578;}
M.e.length-=(M.a-1);
return(_2579)(M);};

var _2570=function(M){if(--M.cbt<0){throw _2570;}
M.e.length-=(M.a-1);
return(_2571)(M);};

var _2564=function(M){if(--M.cbt<0){throw _2564;}
M.e.length-=(M.a-1);
return(_2565)(M);};

var _2556=function(M){if(--M.cbt<0){throw _2556;}
M.e.length-=(M.a-1);
return(_2557)(M);};

var _2553=function(M){if(--M.cbt<0){throw _2553;}
if((M.a-11)===0){return(_2513)(M);}else{RT.si_context_expected(11)(M);
}};




var _2510=function(M){if(--M.cbt<0){throw _2510;}
M.e.length-=(M.a-1);
return(_2511)(M);};

var _2507=function(M){if(--M.cbt<0){throw _2507;}
if((M.a-17)===0){return(_2443)(M);}else{RT.si_context_expected(17)(M);
}};







var _2440=function(M){if(--M.cbt<0){throw _2440;}
M.e.length-=(M.a-1);
return(_2441)(M);};

var _2436=function(M){if(--M.cbt<0){throw _2436;}
M.e.length-=(M.a-1);
return(_2437)(M);};

var _2422=function(M){if(--M.cbt<0){throw _2422;}
M.e.length-=(M.a-1);
return(_2423)(M);};


var _2416=function(M){if(--M.cbt<0){throw _2416;}
if((M.modules["root/utilities/string.rkt"]!==undefined)!==false){if(M.modules["root/utilities/string.rkt"].isInvoked!==false){return(_2419)(M);}else{M.c.push(new RT.CallFrame(_2419,M.p));
return(M.modules["root/utilities/string.rkt"].label)(M);}}else{return(_2419)(M);}};

var _2409=function(M){if(--M.cbt<0){throw _2409;}
M.e.length-=(M.a-1);
return(_2410)(M);};

var _2406=function(M){if(--M.cbt<0){throw _2406;}
M.e.length-=(M.a-1);
return(_2407)(M);};

var _2404=function(M){if(--M.cbt<0){throw _2404;}
if((M.modules["whalesong/js.rkt"]!==undefined)!==false){if(M.modules["whalesong/js.rkt"].isInvoked!==false){return(_2407)(M);}else{M.c.push(new RT.CallFrame(_2407,M.p));
return(M.modules["whalesong/js.rkt"].label)(M);}}else{return(_2407)(M);}};

var _2401=function(M){--M.cbt<0;
M.modules["root/stxmat-exercises.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_2404)(M);}else{M.c.push(new RT.CallFrame(_2404,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}}else{return(_2404)(M);}};

var _1729=function(M){if(--M.cbt<0){throw _1729;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7071,210,21,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][69];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1733,M.p));
return((M.p).label)(M);};





var _1642=function(M){if(--M.cbt<0){throw _1642;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1646,M.p));
return((M.p).label)(M);};




var _1568=function(M){if(--M.cbt<0){throw _1568;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5053,168,2,94]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5066,168,15,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#sad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1572,M.p));
return((M.p).label)(M);};

var _1554=function(M){if(--M.cbt<0){throw _1554;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1522=function(M){if(--M.cbt<0){throw _1522;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4591,152,2,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][66];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=1;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1490=function(M){if(--M.cbt<0){throw _1490;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=(M.e[M.e.length-1]===false);
M.e.length-=1;
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1467=function(M){if(--M.cbt<0){throw _1467;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1447=function(M){if(--M.cbt<0){throw _1447;}
M.c.pop();
return(_1443)(M);};



var _1381=function(M){if(--M.cbt<0){throw _1381;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2638,93,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2651,93,15,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#scratchpad_toggle";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1385,M.p));
return((M.p).label)(M);};

var _1345=function(M){if(--M.cbt<0){throw _1345;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1305=function(M){if(--M.cbt<0){throw _1305;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1309,M.p));
return((M.p).label)(M);};


var _1231=function(M){if(--M.cbt<0){throw _1231;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3843,130,17,165]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-11][44];
M.e[M.e.length-1]="<input id='answer_input_";
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]="' type='text' value=''";
M.e[M.e.length-4]="\n";
M.e[M.e.length-5]="onkeyup='";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-11][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3944,131,38,59]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
if (M.e[M.e.length-13][64]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-13].names[64]); }
M.e[M.e.length-2]=M.e[M.e.length-13][64];
M.e[M.e.length-1]=RT.makeSymbol("on-keyup/answer-input");
M.v="event.keyCode";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1235,M.p));
return((M.p).label)(M);};

var _1207=function(M){if(--M.cbt<0){throw _1207;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1183=function(M){if(--M.cbt<0){throw _1183;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1187,M.p));
return((M.p).label)(M);};

var _1781=function(M){if(--M.cbt<0){throw _1781;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1770)(M);};



var _1057=function(M){if(--M.cbt<0){throw _1057;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1870,68,2,116]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1883,68,15,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#problem_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1301,M.p));
return((M.p).label)(M);};


var _1081=function(M){if(--M.cbt<0){throw _1081;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7265,217,6,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"="),13)));
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7317,219,6,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][83];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7292,218,6,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][79];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1055=function(M){if(--M.cbt<0){throw _1055;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1582,57,2,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]="jsEval";
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1724=function(M){if(--M.cbt<0){throw _1724;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7033,209,21,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][47];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1729,M.p));
return((M.p).label)(M);};

var _1050=function(M){if(--M.cbt<0){throw _1050;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",991,37,2,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][118];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1704=function(M){if(--M.cbt<0){throw _1704;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6805,205,21,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1709,M.p));
return((M.p).label)(M);};

var _1700=function(M){if(--M.cbt<0){throw _1700;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6740,204,21,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][63];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1705,M.p));
return((M.p).label)(M);};

var _1688=function(M){if(--M.cbt<0){throw _1688;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6624,202,21,94]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][46]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6668,203,22,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6669,203,23,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][6]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[6]); }
M.e[M.e.length-1]=M.e[M.e.length-5][6];
if (M.e[M.e.length-5][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[45]); }
M.v=M.e[M.e.length-5][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1693,M.p));
return((M.p).label)(M);};

var _1680=function(M){if(--M.cbt<0){throw _1680;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6560,201,21,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6561,201,22,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][5]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-4][5];
if (M.e[M.e.length-4][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[45]); }
M.v=M.e[M.e.length-4][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1685,M.p));
return((M.p).label)(M);};


var _1666=function(M){if(--M.cbt<0){throw _1666;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1647)(M);};

var _1662=function(M){if(--M.cbt<0){throw _1662;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6186,192,27,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][73]);
M.v=RT.makeSymbol("happy");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1667,M.p));
return((M.p).label)(M);};




var _1109=function(M){if(--M.cbt<0){throw _1109;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19038,488,4,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19041,488,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],0,"+"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],1,"+"));
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2063=function(M){if(--M.cbt<0){throw _2063;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1598=function(M){if(--M.cbt<0){throw _1598;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5436,176,4,115]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5449,176,17,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][34]);
M.v="#streak_bar_right";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1603,M.p));
return((M.p).label)(M);};



var _1913=function(M){if(--M.cbt<0){throw _1913;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14934,377,5,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][56];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1885=function(M){if(--M.cbt<0){throw _1885;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1104=function(M){if(--M.cbt<0){throw _1104;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18390,467,63,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][98];
M.e[M.e.length-1]=M.e[M.e.length-4][126];
M.v=M.e[M.e.length-3][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1102=function(M){if(--M.cbt<0){throw _1102;}
M.v=M.e[M.e.length-1];
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1114=function(M){if(--M.cbt<0){throw _1114;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20084,519,4,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20087,519,7,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][109];
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.v=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2186,M.p));
return((M.p).label)(M);};

var _1098=function(M){if(--M.cbt<0){throw _1098;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(RT.makePair(RT.makePair("1",RT.makePair("x",RT.makePair(RT.makePair("0",RT.makePair("2x",RT.makePair("\\frac{1}{2}x",RT.makePair("\\frac{1}{2}x^2",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x",RT.makePair("\\frac{1}{2}x^2",RT.makePair(RT.makePair("1",RT.makePair("x^2",RT.makePair("\\frac{1}{2}x",RT.makePair("\\frac{1}{2}x^1",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^2",RT.makePair("\\frac{1}{3}x^3",RT.makePair(RT.makePair("2x",RT.makePair("x^3",RT.makePair("\\frac{1}{2}x^2",RT.makePair("\\frac{1}{3}x^2",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^3",RT.makePair("\\frac{1}{4}x^4",RT.makePair(RT.makePair("3x^2",RT.makePair("x^4",RT.makePair("\\frac{1}{3}x^3",RT.makePair("\\frac{1}{4}x^3",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^4",RT.makePair("\\frac{1}{5}x^5",RT.makePair(RT.makePair("4x^3",RT.makePair("x^5",RT.makePair("\\frac{1}{4}x^4",RT.makePair("\\frac{1}{5}x^4",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^5",RT.makePair("\\frac{1}{6}x^6",RT.makePair(RT.makePair("5x^4",RT.makePair("x^6",RT.makePair("\\frac{1}{5}x^5",RT.makePair("\\frac{1}{6}x^5",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^6",RT.makePair("\\frac{1}{7}x^7",RT.makePair(RT.makePair("6x^5",RT.makePair("x^7",RT.makePair("\\frac{1}{6}x^6",RT.makePair("\\frac{1}{7}x^6",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^{-2}",RT.makePair("-x^{-1}=\\frac{-1}{x}",RT.makePair(RT.makePair("x^{-1}=\\frac{1}{x}",RT.makePair("\\frac{1}{-3}x^{-3}",RT.makePair("x^{-1}",RT.makePair("-2x",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^{-3}",RT.makePair("\\frac{-1}{2}x^{-2}",RT.makePair(RT.makePair("\\frac{1}{-4}x^{-4}=\\frac{-4}{x^4}",RT.makePair("\\frac{1}{-3}x^{-3}=\\frac{-1}{3x^{-3}}",RT.makePair("-3x^{-2}",RT.makePair("-3x^{-4}",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^{-1} = \\frac{1}{x}",RT.makePair("\\ln(x)",RT.makePair(RT.makePair("\\log(x)",RT.makePair("\\frac{1}{-2}x^{-2}",RT.makePair("x^{-2}",RT.makePair("1",RT.NULL)))),RT.NULL))),RT.NULL)))))))))));
M.e.push("uninitialized");
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push("uninitialized");
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push("uninitialized");
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.v=new RT.Closure(_1099,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.a=1;
if(M.a===0){return(_2011)(M);}else{M.e.push(M.v);
return(_2011)(M);}};


var _1521=function(M){if(--M.cbt<0){throw _1521;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4591,152,2,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][66];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=1;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1072=function(M){if(--M.cbt<0){throw _1072;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4298,142,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][121];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1981=function(M){if(--M.cbt<0){throw _1981;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16285,415,11,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-7][40];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1986,M.p));
return((M.p).label)(M);};




var _1097=function(M){if(--M.cbt<0){throw _1097;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16346,418,9,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16363,418,26,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][61];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2006,M.p));
return((M.p).label)(M);};

var _1095=function(M){if(--M.cbt<0){throw _1095;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15796,407,29,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-5];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1949,M.p));
return((M.p).label)(M);};

var _2694=function(M){if(--M.cbt<0){throw _2694;}
M.c.push(new RT.PromptFrame(_2700,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][116];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23842,625,0,412]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=12;
M.e[M.e.length-12]=M.e[M.e.length-13][83];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23848,625,6,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-13][41]);
M.v="storeProxy();";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2706,M.p));
return((M.p).label)(M);};

var _2686=function(M){if(--M.cbt<0){throw _2686;}
M.c.push(new RT.PromptFrame(_2688,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1120,0,[M.e[M.e.length-1]],"squaring-binomial-exercise");
M.e[M.e.length-1][111]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1550=function(M){if(--M.cbt<0){throw _1550;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4898,163,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][72];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v="<br/>";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1554,M.p));
return((M.p).label)(M);};

var _2666=function(M){if(--M.cbt<0){throw _2666;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14845,374,3,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" {foo: bar;} ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2670,M.p));
return((M.p).label)(M);};

var _1483=function(M){if(--M.cbt<0){throw _1483;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3516,120,11,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3521,120,16,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][60]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1490,M.p));
return((M.p).label)(M);};

var _1463=function(M){if(--M.cbt<0){throw _1463;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1467,M.p));
return((M.p).label)(M);};

var _2632=function(M){if(--M.cbt<0){throw _2632;}
M.c.push(new RT.PromptFrame(_2634,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("hidden");
M.e[M.e.length-2]=false;
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.v=new RT.Closure(_1084,0,[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"on-toggle-scratchpad");
M.e.length-=2;
M.e[M.e.length-1][89]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1065=function(M){if(--M.cbt<0){throw _1065;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2913,103,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<="),3)));
M.c.pop();
if(M.v===false){M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2928,104,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][55]);
M.v="There are only 3 answer fields.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1411,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_1407)(M);}};

var _1401=function(M){if(--M.cbt<0){throw _1401;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.v="Show ScratchPad";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2607=function(M){if(--M.cbt<0){throw _2607;}
M.c.push(new RT.PromptFrame(_2609,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1073,0,[M.e[M.e.length-1]],"hide-multiple-choice-radio-buttons");
M.e[M.e.length-1][67]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2599=function(M){if(--M.cbt<0){throw _2599;}
M.c.push(new RT.PromptFrame(_2601,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1069,0,[M.e[M.e.length-1]],"get-multiple-choice");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2591=function(M){if(--M.cbt<0){throw _2591;}
M.c.push(new RT.PromptFrame(_2593,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1065,1,[M.e[M.e.length-1]],"show-answer-field");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2583=function(M){if(--M.cbt<0){throw _2583;}
M.c.push(new RT.PromptFrame(_2585,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1061,1,[M.e[M.e.length-1]],"append-to-hint-area");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1285=function(M){if(--M.cbt<0){throw _1285;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=" </div>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1289,M.p));
return((M.p).label)(M);};

var _2567=function(M){if(--M.cbt<0){throw _2567;}
M.c.push(new RT.PromptFrame(_2569,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1053,0,[M.e[M.e.length-1]],"run-mathjax");
M.e[M.e.length-1][40]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1227=function(M){if(--M.cbt<0){throw _1227;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1231,M.p));
return((M.p).label)(M);};

var _1187=function(M){if(--M.cbt<0){throw _1187;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4442,147,4,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4455,147,17,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4458,147,20,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1191,M.p));
return((M.p).label)(M);};

var _2530=function(M){if(--M.cbt<0){throw _2530;}
M.e[M.e.length-6]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=3;
M.v=RT.makeSymbol("get");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2534,M.p));
return((M.p).label)(M);};


var _1312=function(M){if(--M.cbt<0){throw _1312;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1989,70,2,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][40];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2456=function(M){if(--M.cbt<0){throw _2456;}
M.e[M.e.length-5]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=2;
M.v=RT.makeSymbol("new-problem!");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2460,M.p));
return((M.p).label)(M);};

var _1083=function(M){if(--M.cbt<0){throw _1083;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7443,227,15,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7444,227,16,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-3][7]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[7]); }
M.e[M.e.length-1]=M.e[M.e.length-3][7];
if (M.e[M.e.length-3][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[45]); }
M.v=M.e[M.e.length-3][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1755,M.p));
return((M.p).label)(M);};

var _1056=function(M){if(--M.cbt<0){throw _1056;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1682,64,2,149]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1695,64,15,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#exercise_title";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1281,M.p));
return((M.p).label)(M);};

var _1054=function(M){if(--M.cbt<0){throw _1054;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1516,54,2,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][41]);
M.v="Scratchpad('#scratchpad');";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1720=function(M){if(--M.cbt<0){throw _1720;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6935,207,21,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-3][84]=-1;
M.v=RT.VOID;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6975,208,21,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][51]);
M.v="Get Hint";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1725,M.p));
return((M.p).label)(M);};

var _2363=function(M){if(--M.cbt<0){throw _2363;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2367,M.p));
return((M.p).label)(M);};









var _1186=function(M){if(--M.cbt<0){throw _1186;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4442,147,4,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4455,147,17,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4458,147,20,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1191,M.p));
return((M.p).label)(M);};

var _1080=function(M){if(--M.cbt<0){throw _1080;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][0]);
M.v=(M.e[M.e.length-1]===RT.makeSymbol("check"));
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.makeSymbol("next"));
if(M.v===false){M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7129,212,9,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][81]);
M.v="Error: Unknown state in 'on-answer-button'";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1737,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-2][0]=RT.makeSymbol("check");
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6462,199,21,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][70]);
M.v="Check Answer";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1677,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5789,186,30,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5790,186,31,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][23]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[23]); }
M.e[M.e.length-1]=M.e[M.e.length-5][23];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5802,186,43,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-6][9]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-6][9];
if (M.e[M.e.length-6][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[45]); }
M.v=M.e[M.e.length-6][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1638,M.p));
return((M.p).label)(M);}};




var _1042=function(M){if(--M.cbt<0){throw _1042;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15522,398,4,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][124];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _1079=function(M){if(--M.cbt<0){throw _1079;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5281,174,26,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][75];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5291,174,36,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.multiply(297, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][28],1,"*"));
M.c.pop();
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1582,M.p));
return((M.p).label)(M);};


var _1567=function(M){if(--M.cbt<0){throw _1567;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5053,168,2,94]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5066,168,15,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#sad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1572,M.p));
return((M.p).label)(M);};

var _1078=function(M){if(--M.cbt<0){throw _1078;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4952,166,2,98]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4965,166,15,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#happy";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1562,M.p));
return((M.p).label)(M);};


var _1112=function(M){if(--M.cbt<0){throw _1112;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19458,506,4,89]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Calculate the power.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]="^";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v=" = \\ ?$$ </div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1076=function(M){if(--M.cbt<0){throw _1076;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4741,159,2,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4754,159,15,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#answer_button";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1538,M.p));
return((M.p).label)(M);};

var _1075=function(M){if(--M.cbt<0){throw _1075;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4653,156,2,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4666,156,15,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.v="#answer_input_1";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1530,M.p));
return((M.p).label)(M);};

var _1074=function(M){if(--M.cbt<0){throw _1074;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4568,151,2,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][65];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1522,M.p));
return((M.p).label)(M);};

var _1073=function(M){if(--M.cbt<0){throw _1073;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4495,148,2,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][122];
M.v=RT.makePair(0,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.NULL)))));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1070=function(M){if(--M.cbt<0){throw _1070;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4013,132,2,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][119];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1069=function(M){if(--M.cbt<0){throw _1069;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3656,125,2,51]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][62]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3672,125,18,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3685,125,31,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v=":checked";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1494,M.p));
return((M.p).label)(M);};


var _1068=function(M){if(--M.cbt<0){throw _1068;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3449,119,11,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3462,119,24,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3465,119,27,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][59];
M.e[M.e.length-1]="#answer_input_~a";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1475,M.p));
return((M.p).label)(M);};


var _2692=function(M){if(--M.cbt<0){throw _2692;}
M.c.push(new RT.PromptFrame(_2694,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23790,619,2,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][103];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2698,M.p));
return((M.p).label)(M);};

var _2684=function(M){if(--M.cbt<0){throw _2684;}
M.c.push(new RT.PromptFrame(_2686,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1115,0,[M.e[M.e.length-1]],"power2-exercise");
M.e[M.e.length-1][110]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2678=function(M){if(--M.cbt<0){throw _2678;}
M.c.push(new RT.PromptFrame(_2680,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1098,0,[M.e[M.e.length-1]],"antiderivative-of-power-exercise");
M.e[M.e.length-1][103]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2662=function(M){if(--M.cbt<0){throw _2662;}
M.c.push(new RT.PromptFrame(_2676,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1093,3,[M.e[M.e.length-1]],"insert-at");
M.e[M.e.length-1][99]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2652=function(M){if(--M.cbt<0){throw _2652;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14563,363,3,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" {foo: bar;} ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2656,M.p));
return((M.p).label)(M);};

var _2642=function(M){if(--M.cbt<0){throw _2642;}
M.c.push(new RT.PromptFrame(_2644,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1087,2,[M.e[M.e.length-1]],"call-plt-function1");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2630=function(M){if(--M.cbt<0){throw _2630;}
M.c.push(new RT.PromptFrame(_2632,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1083,0,[M.e[M.e.length-1]],"on-hint-button");
M.e[M.e.length-1][85]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1429=function(M){if(--M.cbt<0){throw _1429;}
M.c.pop();
return(_1425)(M);};

var _1393=function(M){if(--M.cbt<0){throw _1393;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="none";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1397,M.p));
return((M.p).label)(M);};

var _2605=function(M){if(--M.cbt<0){throw _2605;}
M.c.push(new RT.PromptFrame(_2607,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1072,0,[M.e[M.e.length-1]],"hide-answer-inputs");
M.e[M.e.length-1][66]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2597=function(M){if(--M.cbt<0){throw _2597;}
M.c.push(new RT.PromptFrame(_2599,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1068,1,[M.e[M.e.length-1]],"get-answer-field");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2589=function(M){if(--M.cbt<0){throw _2589;}
M.c.push(new RT.PromptFrame(_2591,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1064,0,[M.e[M.e.length-1]],"hide-scratchpad");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2581=function(M){if(--M.cbt<0){throw _2581;}
M.c.push(new RT.PromptFrame(_2583,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1060,0,[M.e[M.e.length-1]],"clear-hint-area");
M.e[M.e.length-1][49]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1281=function(M){if(--M.cbt<0){throw _1281;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1746,65,15,84]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1749,65,18,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]=" <div id='exercise_title'> ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1788,65,57,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-9][3]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[3]); }
M.e[M.e.length-1]=M.e[M.e.length-9][3];
if (M.e[M.e.length-9][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[45]); }
M.v=M.e[M.e.length-9][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1285,M.p));
return((M.p).label)(M);};

var _2565=function(M){if(--M.cbt<0){throw _2565;}
M.c.push(new RT.PromptFrame(_2567,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1052,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"call-proxy");
M.e[M.e.length-1][38]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2559=function(M){if(--M.cbt<0){throw _2559;}
M.c.push(new RT.PromptFrame(_2561,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1050,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"append-to-body");
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1203=function(M){if(--M.cbt<0){throw _1203;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1207,M.p));
return((M.p).label)(M);};

var _2526=function(M){if(--M.cbt<0){throw _2526;}
M.e[M.e.length-5]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=2;
M.v=RT.makeSymbol("show");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2530,M.p));
return((M.p).label)(M);};

var _1058=function(M){if(--M.cbt<0){throw _1058;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2046,74,2,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2059,74,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1321,M.p));
return((M.p).label)(M);};


var _2472=function(M){if(--M.cbt<0){throw _2472;}
M.e[M.e.length-9]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=6;
M.v=RT.makeSymbol("answer-type");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2476,M.p));
return((M.p).label)(M);};

var _2452=function(M){if(--M.cbt<0){throw _2452;}
M.e[M.e.length-4]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=1;
M.v=RT.makeSymbol("summary");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2456,M.p));
return((M.p).label)(M);};


var _2431=function(M){if(--M.cbt<0){throw _2431;}
M.c.push(new RT.PromptFrame(_2433,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1046,1,[M.e[M.e.length-1]],"hide");
M.e[M.e.length-1][121]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2423=function(M){if(--M.cbt<0){throw _2423;}
M.c.push(new RT.PromptFrame(_2425,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1042,1,[M.e[M.e.length-1]],"shuffle");
M.e[M.e.length-1][125]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2355=function(M){if(--M.cbt<0){throw _2355;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1049=function(M){if(--M.cbt<0){throw _1049;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1015,37,26,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1028,37,39,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1247,M.p));
return((M.p).label)(M);};



var _1048=function(M){if(--M.cbt<0){throw _1048;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3763,129,4,246]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3776,129,17,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3779,129,20,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#answer_input_";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1227,M.p));
return((M.p).label)(M);};

var _1047=function(M){if(--M.cbt<0){throw _1047;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4093,136,4,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4106,136,17,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4109,136,20,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_label_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1215,M.p));
return((M.p).label)(M);};

var _2221=function(M){if(--M.cbt<0){throw _2221;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20763,541,10,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-17][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-16][0];
M.e[M.e.length-3]="^{";
M.e[M.e.length-4]=M.e[M.e.length-15][0];
M.e[M.e.length-5]="} = \\frac{1}{";
M.e[M.e.length-6]=M.e[M.e.length-16][0];
M.e[M.e.length-7]="^{";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-17][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20804,541,51,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-8]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-15][0],0,"-"));
M.c.pop();
M.v="}}.$$";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2225,M.p));
return((M.p).label)(M);};

var _1046=function(M){if(--M.cbt<0){throw _1046;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4238,141,4,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4251,141,17,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4254,141,20,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1203,M.p));
return((M.p).label)(M);};

var _2174=function(M){if(--M.cbt<0){throw _2174;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20005,516,21,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-14][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-13][0];
M.e[M.e.length-3]="^";
M.e[M.e.length-4]=M.e[M.e.length-12][0];
M.e[M.e.length-5]=" = ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20031,516,47,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16][109];
M.e[M.e.length-1]=M.e[M.e.length-15][0];
M.v=M.e[M.e.length-14][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2178,M.p));
return((M.p).label)(M);};


var _1045=function(M){if(--M.cbt<0){throw _1045;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4393,146,4,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4406,146,17,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4409,146,20,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#mc";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1179,M.p));
return((M.p).label)(M);};


var _2055=function(M){if(--M.cbt<0){throw _2055;}
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1043=function(M){if(--M.cbt<0){throw _1043;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15399,394,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===RT.NULL);
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15433,396,10,82]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][124];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15439,396,16,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15464,397,16,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][99];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15475,397,27,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][101]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15483,397,35,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15486,397,38,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][87]);
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1151,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1041=function(M){if(--M.cbt<0){throw _1041;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18126,461,4,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][72];
M.e[M.e.length-1]="$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v="$";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1040=function(M){if(--M.cbt<0){throw _1040;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22898,597,37,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1970=function(M){if(--M.cbt<0){throw _1970;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16037,410,76,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-10][125]);
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1974,M.p));
return((M.p).label)(M);};

var _1953=function(M){if(--M.cbt<0){throw _1953;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.c.pop();
M.v=M.primitives["values"];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1957,M.p));
return((M.p).label)(M);};

var _1937=function(M){if(--M.cbt<0){throw _1937;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15723,405,7,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][44]);
M.v=" {foo: bar;} ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1941,M.p));
return((M.p).label)(M);};

var _1905=function(M){if(--M.cbt<0){throw _1905;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1881=function(M){if(--M.cbt<0){throw _1881;}
M.e[M.e.length-172]=M.v;
M.c.pop();
M.e[M.e.length-173]="' value='Get Hint'/>";
M.e[M.e.length-174]="\n";
M.e[M.e.length-175]="<p></p>";
M.e[M.e.length-176]="\n";
M.e[M.e.length-177]="<div>Beware: Getting a hint will reset your streak</div>";
M.e[M.e.length-178]="\n";
M.e[M.e.length-179]="</div>";
M.e[M.e.length-180]="\n";
M.e[M.e.length-181]="</div>";
M.e[M.e.length-182]="\n";
M.v="</div>";
M.p=M.e[M.e.length-183];
M.e[M.e.length-183]=M.v;
M.a=183;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1885,M.p));
return((M.p).label)(M);};

var _1865=function(M){if(--M.cbt<0){throw _1865;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]="function(v){return v;}";
M.v="function(v){return v;}";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1869,M.p));
return((M.p).label)(M);};

var _1810=function(M){if(--M.cbt<0){throw _1810;}
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7945,241,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][40];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1794=function(M){if(--M.cbt<0){throw _1794;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7852,238,12,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][83];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7791,237,12,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][50]);
M.v="There are no more hints.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1094=function(M){if(--M.cbt<0){throw _1094;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-1]="uninialized";
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]="uninialized";
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.e[M.e.length-3]="uninialized";
M.e[M.e.length-3]=[M.e[M.e.length-3]];
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15667,403,6,720]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
if (M.e[M.e.length-8][18]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-8].names[18]); }
M.e[M.e.length-4]=M.e[M.e.length-8][18];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15687,404,7,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][44]);
M.v=" <foo>...</foo> ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1937,M.p));
return((M.p).label)(M);};

var _1755=function(M){if(--M.cbt<0){throw _1755;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1759,M.p));
return((M.p).label)(M);};

var _1082=function(M){if(--M.cbt<0){throw _1082;}
M.e.push.apply(M.e,M.p.closedVals);
M.e[M.e.length-1][84]=-1;
M.v=RT.VOID;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1705=function(M){if(--M.cbt<0){throw _1705;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6805,205,21,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1709,M.p));
return((M.p).label)(M);};

var _1053=function(M){if(--M.cbt<0){throw _1053;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1428,51,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][41]);
M.v="MathJax.Hub.Queue(['Typeset',MathJax.Hub]);";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1044=function(M){if(--M.cbt<0){throw _1044;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15022,380,12,83]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][62]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15051,381,13,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][96]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15083,382,14,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][58]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1167,M.p));
return((M.p).label)(M);};

var _1659=function(M){if(--M.cbt<0){throw _1659;}
M.c.pop();
return(_1651)(M);};

var _1638=function(M){if(--M.cbt<0){throw _1638;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1642,M.p));
return((M.p).label)(M);};

var _1615=function(M){if(--M.cbt<0){throw _1615;}
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5556,177,4,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5569,177,17,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#streak_bar_current";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1619,M.p));
return((M.p).label)(M);};

var _2690=function(M){if(--M.cbt<0){throw _2690;}
M.c.push(new RT.PromptFrame(_2692,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1130,0,[M.e[M.e.length-1]],"power-all-kinds-exercise");
M.e[M.e.length-1][115]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2682=function(M){if(--M.cbt<0){throw _2682;}
M.c.push(new RT.PromptFrame(_2684,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1110,0,[M.e[M.e.length-1]],"power1-exercise");
M.e[M.e.length-1][107]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2676=function(M){if(--M.cbt<0){throw _2676;}
M.c.push(new RT.PromptFrame(_2678,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1094,2,[M.e[M.e.length-1]],"multiple-choice-answer");
M.e[M.e.length-1][100]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2660=function(M){if(--M.cbt<0){throw _2660;}
M.c.pop();
M.e[M.e.length-1][95]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2648=function(M){if(--M.cbt<0){throw _2648;}
M.c.push(new RT.PromptFrame(_2662,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14796,372,2,332]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
if (M.e[M.e.length-5][18]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[18]); }
M.e[M.e.length-4]=M.e[M.e.length-5][18];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14813,373,3,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" <foo>...</foo> ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2666,M.p));
return((M.p).label)(M);};

var _2640=function(M){if(--M.cbt<0){throw _2640;}
M.c.push(new RT.PromptFrame(_2642,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1086,1,[M.e[M.e.length-1]],"call-plt-thunk");
M.e[M.e.length-1][92]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2628=function(M){if(--M.cbt<0){throw _2628;}
M.c.push(new RT.PromptFrame(_2630,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1082,0,[M.e[M.e.length-1]],"reset-hint-index");
M.e[M.e.length-1][80]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1419=function(M){if(--M.cbt<0){throw _1419;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2615=function(M){if(--M.cbt<0){throw _2615;}
M.c.push(new RT.PromptFrame(_2617,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1077,2,[M.e[M.e.length-1]],"change-multiple-choice-text");
M.e[M.e.length-1][71]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2603=function(M){if(--M.cbt<0){throw _2603;}
M.c.push(new RT.PromptFrame(_2605,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1071,0,[M.e[M.e.length-1]],"hide-answer-labels");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2595=function(M){if(--M.cbt<0){throw _2595;}
M.c.push(new RT.PromptFrame(_2597,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1067,1,[M.e[M.e.length-1]],"show-multiple-choice-radio-button");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2587=function(M){if(--M.cbt<0){throw _2587;}
M.c.push(new RT.PromptFrame(_2589,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1063,0,[M.e[M.e.length-1]],"show-scratchpad");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2579=function(M){if(--M.cbt<0){throw _2579;}
M.c.push(new RT.PromptFrame(_2581,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1059,0,[M.e[M.e.length-1]],"show-hint-area");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2575=function(M){if(--M.cbt<0){throw _2575;}
M.c.push(new RT.PromptFrame(_2577,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1057,1,[M.e[M.e.length-1]],"update-problem-area");
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2563=function(M){if(--M.cbt<0){throw _2563;}
M.c.push(new RT.PromptFrame(_2565,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1051,1,[M.e[M.e.length-1]],"store-js-proxy");
M.e[M.e.length-1][37]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2557=function(M){if(--M.cbt<0){throw _2557;}
M.c.push(new RT.PromptFrame(_2559,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=0;
M.e[M.e.length-1][29]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2546=function(M){if(--M.cbt<0){throw _2546;}
M.e[M.e.length-10]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=3;
M.v=RT.makeSymbol("get");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2550,M.p));
return((M.p).label)(M);};

var _2522=function(M){if(--M.cbt<0){throw _2522;}
M.e[M.e.length-4]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=1;
M.v=RT.makeSymbol("css");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2526,M.p));
return((M.p).label)(M);};

var _1151=function(M){if(--M.cbt<0){throw _1151;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=1;
M.v=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"+"), M.e[M.e.length-2]);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1155,M.p));
return((M.p).label)(M);};

var _2488=function(M){if(--M.cbt<0){throw _2488;}
M.e[M.e.length-13]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=3;
M.v=RT.makeSymbol("problem-description");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2492,M.p));
return((M.p).label)(M);};

var _2468=function(M){if(--M.cbt<0){throw _2468;}
M.e[M.e.length-8]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=5;
M.v=RT.makeSymbol("check-answer");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2472,M.p));
return((M.p).label)(M);};

var _2464=function(M){if(--M.cbt<0){throw _2464;}
M.e[M.e.length-7]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=4;
M.v=RT.makeSymbol("hints");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2468,M.p));
return((M.p).label)(M);};

var _2439=function(M){if(--M.cbt<0){throw _2439;}
M.c.push(new RT.PromptFrame(_2441,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("exercise");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=7;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("exercise");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2447,M.p));
return((M.p).label)(M);};

var _2429=function(M){if(--M.cbt<0){throw _2429;}
M.c.push(new RT.PromptFrame(_2431,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1045,1,[M.e[M.e.length-1]],"hide");
M.e[M.e.length-1][122]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2421=function(M){if(--M.cbt<0){throw _2421;}
M.c.push(new RT.PromptFrame(_2423,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1041,1,[M.e[M.e.length-1]],"$wrap");
M.e[M.e.length-1][126]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2379=function(M){if(--M.cbt<0){throw _2379;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2375=function(M){if(--M.cbt<0){throw _2375;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2379,M.p));
return((M.p).label)(M);};

var _2343=function(M){if(--M.cbt<0){throw _2343;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2347,M.p));
return((M.p).label)(M);};

var _2311=function(M){if(--M.cbt<0){throw _2311;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL))));
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2291=function(M){if(--M.cbt<0){throw _2291;}
M.e[M.e.length-5][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21748,567,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4][0]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],1,"*"));
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21770,568,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-3][0]=plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],1,"*")), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5][0],2,"*"));
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21794,569,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2][0]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5][0],1,"*"));
M.c.pop();
M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2253=function(M){if(--M.cbt<0){throw _2253;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2237=function(M){if(--M.cbt<0){throw _2237;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21038,544,10,95]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-17][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-16][0];
M.e[M.e.length-3]="^{";
M.e[M.e.length-4]=M.e[M.e.length-15][0];
M.e[M.e.length-5]="} = \\frac{1}{";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-17][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21073,544,45,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-19][109];
M.e[M.e.length-1]=M.e[M.e.length-18][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-19][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21081,544,53,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-17][0],0,"-"));
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2241,M.p));
return((M.p).label)(M);};

var _2217=function(M){if(--M.cbt<0){throw _2217;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20706,540,10,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-13][44];
M.e[M.e.length-1]="$$a^{";
M.e[M.e.length-2]=M.e[M.e.length-11][0];
M.e[M.e.length-3]="} = \\frac{1}{a^";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20742,540,46,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-11][0],0,"-"));
M.c.pop();
M.v="}.$$";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2221,M.p));
return((M.p).label)(M);};

var _2197=function(M){if(--M.cbt<0){throw _2197;}
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21214,550,2,182]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Powers with negative exponents";
M.e[M.e.length-2]="Powers with natural exponents.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2170=function(M){if(--M.cbt<0){throw _2170;}
M.e[M.e.length-8]=M.v;
M.c.pop();
M.v=".$$";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2174,M.p));
return((M.p).label)(M);};

var _2158=function(M){if(--M.cbt<0){throw _2158;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.v=".$$";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2162,M.p));
return((M.p).label)(M);};

var _2131=function(M){if(--M.cbt<0){throw _2131;}
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19386,502,10,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][0],1,"=")))&&(plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][0],1,"="),0)));
M.c.pop();
if(M.v===false){M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19402,503,6,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return(_1111)(M);}};

var _2102=function(M){if(--M.cbt<0){throw _2102;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18950,485,10,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-12][44];
M.e[M.e.length-1]="The sum ";
M.e[M.e.length-2]=M.e[M.e.length-11][0];
M.e[M.e.length-3]=" + ";
M.e[M.e.length-4]=M.e[M.e.length-10][0];
M.e[M.e.length-5]=" is equal to ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-12][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18990,485,50,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-6]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-11][0],0,"+"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10][0],1,"+"));
M.c.pop();
M.v=".";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2106,M.p));
return((M.p).label)(M);};

var _2090=function(M){if(--M.cbt<0){throw _2090;}
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18683,477,12,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][101]);
M.v=10;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2094,M.p));
return((M.p).label)(M);};

var _2042=function(M){if(--M.cbt<0){throw _2042;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2046,M.p));
return((M.p).label)(M);};

var _2006=function(M){if(--M.cbt<0){throw _2006;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1982=function(M){if(--M.cbt<0){throw _1982;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16285,415,11,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-7][40];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1986,M.p));
return((M.p).label)(M);};

var _1966=function(M){if(--M.cbt<0){throw _1966;}
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15986,410,25,75]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][99];
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16011,410,50,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-8];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1970,M.p));
return((M.p).label)(M);};

var _1949=function(M){if(--M.cbt<0){throw _1949;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15846,408,24,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][102];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15858,408,36,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15863,408,41,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-10][87]);
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1953,M.p));
return((M.p).label)(M);};

var _1931=function(M){if(--M.cbt<0){throw _1931;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1901=function(M){if(--M.cbt<0){throw _1901;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1905,M.p));
return((M.p).label)(M);};

var _1877=function(M){if(--M.cbt<0){throw _1877;}
M.e[M.e.length-156]=M.v;
M.c.pop();
M.e[M.e.length-157]="' value='Check Answer'/>";
M.e[M.e.length-158]="\n";
M.e[M.e.length-159]="    ";
M.e[M.e.length-160]="<div><img id='sad' style='display: none;' src='../pics/face-sad.gif'/></div>";
M.e[M.e.length-161]="\n";
M.e[M.e.length-162]="    ";
M.e[M.e.length-163]="<div><img id='happy' style='display: none;' src='../pics/face-happy.gif'/></div>";
M.e[M.e.length-164]="\n";
M.e[M.e.length-165]="</div>";
M.e[M.e.length-166]="\n";
M.e[M.e.length-167]="<div id='help_area'>";
M.e[M.e.length-168]="\n";
M.e[M.e.length-169]="<div id='help_area_title'>Need help?</div>";
M.e[M.e.length-170]="\n";
M.e[M.e.length-171]="<input id='hint_button' type='button' onclick='storeProxy();";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14206,349,77,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-185][92]);
M.v=RT.makeSymbol("on-hint-button");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1881,M.p));
return((M.p).label)(M);};

var _1857=function(M){if(--M.cbt<0){throw _1857;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]="function(v){return v;}";
M.e[M.e.length-4]="function(v){return v;}";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1841=function(M){if(--M.cbt<0){throw _1841;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1845,M.p));
return((M.p).label)(M);};

var _1788=function(M){if(--M.cbt<0){throw _1788;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,">="))));
M.e.length-=2;
M.c.pop();
if(M.v===false){M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7885,240,10,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][50]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7906,240,31,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][88];
M.e[M.e.length-1]=M.e[M.e.length-4];
if (M.e[M.e.length-5][84]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[84]); }
M.v=M.e[M.e.length-5][84];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1806,M.p));
return((M.p).label)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7749,236,12,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
if (M.e[M.e.length-4][84]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[84]); }
M.e[M.e.length-1]=M.e[M.e.length-4][84];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7763,236,26,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][87]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1794,M.p));
return((M.p).label)(M);}};

var _1768=function(M){if(--M.cbt<0){throw _1768;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7603,231,21,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2][84]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][84],0,"+"), 1);
M.c.pop();
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7631,232,10,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][86]);
if (M.e[M.e.length-3][84]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[84]); }
M.v=M.e[M.e.length-3][84];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1774,M.p));
return((M.p).label)(M);};

var _1737=function(M){if(--M.cbt<0){throw _1737;}
M.c.pop();
return(_1632)(M);};

var _1721=function(M){if(--M.cbt<0){throw _1721;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6935,207,21,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-3][84]=-1;
M.v=RT.VOID;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6975,208,21,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][51]);
M.v="Get Hint";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1725,M.p));
return((M.p).label)(M);};

var _2785=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_1133,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/stxmat-exercises.rkt"]=new RT.ModuleRecord("stxmat-exercises",_2401);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1689=function(M){if(--M.cbt<0){throw _1689;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6624,202,21,94]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][46]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6668,203,22,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6669,203,23,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][6]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[6]); }
M.e[M.e.length-1]=M.e[M.e.length-5][6];
if (M.e[M.e.length-5][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[45]); }
M.v=M.e[M.e.length-5][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1693,M.p));
return((M.p).label)(M);};

var _1671=function(M){if(--M.cbt<0){throw _1671;}
M.c.pop();
return(_1647)(M);};

var _1655=function(M){if(--M.cbt<0){throw _1655;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1659,M.p));
return((M.p).label)(M);};

var _1627=function(M){if(--M.cbt<0){throw _1627;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1611=function(M){if(--M.cbt<0){throw _1611;}
M.c.pop();
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1615,M.p));
return((M.p).label)(M);};

var _2688=function(M){if(--M.cbt<0){throw _2688;}
M.c.push(new RT.PromptFrame(_2690,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1125,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"combine-exercises");
M.e[M.e.length-1][114]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2680=function(M){if(--M.cbt<0){throw _2680;}
M.c.push(new RT.PromptFrame(_2682,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1105,0,[M.e[M.e.length-1]],"addition-exercise");
M.e[M.e.length-1][106]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2674=function(M){if(--M.cbt<0){throw _2674;}
M.c.pop();
M.e[M.e.length-1][97]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2656=function(M){if(--M.cbt<0){throw _2656;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]=new RT.Closure(_1089,0,[M.e[M.e.length-5]],"...at-exercises.rkt:364:3");
M.v=new RT.Closure(_1090,0,[M.e[M.e.length-5]],"...at-exercises.rkt:367:3");
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2660,M.p));
return((M.p).label)(M);};

var _2646=function(M){if(--M.cbt<0){throw _2646;}
M.c.push(new RT.PromptFrame(_2648,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14514,361,2,248]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
if (M.e[M.e.length-5][18]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[18]); }
M.e[M.e.length-4]=M.e[M.e.length-5][18];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14531,362,3,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" <foo>...</foo> ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2652,M.p));
return((M.p).label)(M);};

var _2638=function(M){if(--M.cbt<0){throw _2638;}
M.c.push(new RT.PromptFrame(_2640,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1085,1,[M.e[M.e.length-1]],"plt-function");
M.e[M.e.length-1][91]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2626=function(M){if(--M.cbt<0){throw _2626;}
M.c.push(new RT.PromptFrame(_2628,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=-1;
M.e[M.e.length-1][84]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2623=function(M){if(--M.cbt<0){throw _2623;}
M.c.push(new RT.PromptFrame(_2626,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1081,1,[M.e[M.e.length-1]],"on-keyup/answer-input");
M.e[M.e.length-1][82]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2613=function(M){if(--M.cbt<0){throw _2613;}
M.c.push(new RT.PromptFrame(_2615,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1076,1,[M.e[M.e.length-1]],"change-answer-button-text");
M.e[M.e.length-1][70]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2601=function(M){if(--M.cbt<0){throw _2601;}
M.c.push(new RT.PromptFrame(_2603,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1070,0,[M.e[M.e.length-1]],"clear-answer-input");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2593=function(M){if(--M.cbt<0){throw _2593;}
M.c.push(new RT.PromptFrame(_2595,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1066,1,[M.e[M.e.length-1]],"show-answer-label");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2585=function(M){if(--M.cbt<0){throw _2585;}
M.c.push(new RT.PromptFrame(_2587,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1062,1,[M.e[M.e.length-1]],"change-hint-button-text");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2577=function(M){if(--M.cbt<0){throw _2577;}
M.c.push(new RT.PromptFrame(_2579,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1058,0,[M.e[M.e.length-1]],"hide-hint-area");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2573=function(M){if(--M.cbt<0){throw _2573;}
M.c.push(new RT.PromptFrame(_2575,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1056,0,[M.e[M.e.length-1]],"update-exercise-title");
M.e[M.e.length-1][43]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2561=function(M){if(--M.cbt<0){throw _2561;}
M.c.push(new RT.PromptFrame(_2563,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=RT.makeSymbol("uninitialized");
M.e[M.e.length-1][36]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_2554=RT.si_context_expected(11);

var _2542=function(M){if(--M.cbt<0){throw _2542;}
M.e[M.e.length-9]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=2;
M.v=RT.makeSymbol("show");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2546,M.p));
return((M.p).label)(M);};

_2517=RT.si_context_expected(5);

var _1159=function(M){if(--M.cbt<0){throw _1159;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2484=function(M){if(--M.cbt<0){throw _2484;}
M.e[M.e.length-12]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=2;
M.v=RT.makeSymbol("new-problem!");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2488,M.p));
return((M.p).label)(M);};

var _2480=function(M){if(--M.cbt<0){throw _2480;}
M.e[M.e.length-11]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=1;
M.v=RT.makeSymbol("summary");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2484,M.p));
return((M.p).label)(M);};

var _2460=function(M){if(--M.cbt<0){throw _2460;}
M.e[M.e.length-6]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=3;
M.v=RT.makeSymbol("problem-description");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2464,M.p));
return((M.p).label)(M);};

var _2437=function(M){if(--M.cbt<0){throw _2437;}
M.c.push(new RT.PromptFrame(_2439,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1049,1,[M.e[M.e.length-1]],"...at-exercises.rkt:37:12");
M.e[M.e.length-1][118]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2435=function(M){if(--M.cbt<0){throw _2435;}
M.c.push(new RT.PromptFrame(_2437,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1048,1,[M.e[M.e.length-1]],"clear");
M.e[M.e.length-1][119]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2427=function(M){if(--M.cbt<0){throw _2427;}
M.c.push(new RT.PromptFrame(_2429,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1044,1,[M.e[M.e.length-1]],"...at-exercises.rkt:379:10");
M.e[M.e.length-1][123]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1133=function(M){if(--M.cbt<0){throw _1133;}
M.mainModules.push(M.modules["root/stxmat-exercises.rkt"]);
};

var _2367=function(M){if(--M.cbt<0){throw _2367;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2335=function(M){if(--M.cbt<0){throw _2335;}
M.e[M.e.length-1][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23426,609,6,115]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-15][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-15].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-15][1];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2307=function(M){if(--M.cbt<0){throw _2307;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22381,582,10,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-17][44];
M.e[M.e.length-1]=" $$ = ";
M.e[M.e.length-2]=M.e[M.e.length-14][0];
M.e[M.e.length-3]="x^2 + ";
M.e[M.e.length-4]=M.e[M.e.length-13][0];
M.e[M.e.length-5]="x + ";
M.e[M.e.length-6]=M.e[M.e.length-12][0];
M.v="$$";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2311,M.p));
return((M.p).label)(M);};

var _2287=function(M){if(--M.cbt<0){throw _2287;}
M.c.pop();
return(_2284)(M);};

var _2249=function(M){if(--M.cbt<0){throw _2249;}
M.e[M.e.length-5]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.makePair(M.e[M.e.length-5],RT.NULL)))));
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2233=function(M){if(--M.cbt<0){throw _2233;}
M.e[M.e.length-11]=M.v;
M.c.pop();
M.v="}. $$";
M.p=M.e[M.e.length-12];
M.e[M.e.length-12]=M.v;
M.a=12;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2237,M.p));
return((M.p).label)(M);};

var _2229=function(M){if(--M.cbt<0){throw _2229;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-22][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21008,543,99,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-23][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21014,543,105,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-21][0],0,"-"));
M.c.pop();
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"sub1"), 1);
M.e.length-=1;
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2233,M.p));
return((M.p).label)(M);};

var _2186=function(M){if(--M.cbt<0){throw _2186;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2182=function(M){if(--M.cbt<0){throw _2182;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL))));
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2154=function(M){if(--M.cbt<0){throw _2154;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19813,514,21,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][44];
M.e[M.e.length-1]="$$a^";
M.e[M.e.length-2]=M.e[M.e.length-10][0];
M.e[M.e.length-3]=" = a ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-12][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19838,514,46,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14][108];
M.e[M.e.length-1]="\\cdot a";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19866,514,74,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12][0],0,"sub1"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2158,M.p));
return((M.p).label)(M);};

var _2127=function(M){if(--M.cbt<0){throw _2127;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19356,501,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][101]);
M.v=5;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2131,M.p));
return((M.p).label)(M);};

var _2094=function(M){if(--M.cbt<0){throw _2094;}
M.e[M.e.length-1][0]=M.v;
M.c.pop();
M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2082=function(M){if(--M.cbt<0){throw _2082;}
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19077,491,2,156]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Addition";
M.e[M.e.length-2]="Sums of one digit numbers.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2038=function(M){if(--M.cbt<0){throw _2038;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2042,M.p));
return((M.p).label)(M);};

var _1998=function(M){if(--M.cbt<0){throw _1998;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1978=function(M){if(--M.cbt<0){throw _1978;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16074,411,11,199]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][32];
M.e[M.e.length-1]=new RT.Closure(_1096,2,[M.e[M.e.length-10],M.e[M.e.length-6]],"...at-exercises.rkt:411:21");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1982,M.p));
return((M.p).label)(M);};

var _1962=function(M){if(--M.cbt<0){throw _1962;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1966,M.p));
return((M.p).label)(M);};

var _1941=function(M){if(--M.cbt<0){throw _1941;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]=new RT.Closure(_1095,0,[M.e[M.e.length-8],M.e[M.e.length-10],M.e[M.e.length-9],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"...at-exercises.rkt:406:7");
M.v=new RT.Closure(_1097,0,[M.e[M.e.length-8],M.e[M.e.length-5]],"...at-exercises.rkt:417:7");
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1927=function(M){if(--M.cbt<0){throw _1927;}
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15199,388,6,58]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15205,388,12,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15226,389,12,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][99];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15237,389,23,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"-"), 1);
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15247,389,33,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1931,M.p));
return((M.p).label)(M);}else{M.v=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1893=function(M){if(--M.cbt<0){throw _1893;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14636,366,5,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][56]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1873=function(M){if(--M.cbt<0){throw _1873;}
M.e[M.e.length-118]=M.v;
M.c.pop();
M.e[M.e.length-119]="'>Show ScratchPad</a>";
M.e[M.e.length-120]="\n";
M.e[M.e.length-121]="\n";
M.e[M.e.length-122]="<div id='answer_area'>";
M.e[M.e.length-123]="\n";
M.e[M.e.length-124]="    ";
M.e[M.e.length-125]="<div id='answer_area_title'>Answer</div>";
M.e[M.e.length-126]="\n";
M.e[M.e.length-127]="    ";
M.e[M.e.length-128]="<div><div id='answer_input_label_1'>a</div><input id='answer_input_1' type='text' value='7' /></div>";
M.e[M.e.length-129]="\n";
M.e[M.e.length-130]="    ";
M.e[M.e.length-131]="<div><div id='answer_input_label_2'>b</div><input id='answer_input_2' type='text' value='8' /></div>";
M.e[M.e.length-132]="\n";
M.e[M.e.length-133]="    ";
M.e[M.e.length-134]="<div><div id='answer_input_label_3'>c</div><input id='answer_input_3' type='text' value='9' /></div>";
M.e[M.e.length-135]="\n";
M.e[M.e.length-136]="    ";
M.e[M.e.length-137]="<div><input id=\"mc0\" type=\"radio\" name=\"mc\" value=\"0\" checked=\"\"/> <span id=\"mc0_val\">Foo0<br/></span>";
M.e[M.e.length-138]="\n";
M.e[M.e.length-139]="         ";
M.e[M.e.length-140]="<input id=\"mc1\" type=\"radio\" name=\"mc\" value=\"1\"/>            <span id=\"mc1_val\">Foo1<br/></span>";
M.e[M.e.length-141]="\n";
M.e[M.e.length-142]="         ";
M.e[M.e.length-143]="<input id=\"mc2\" type=\"radio\" name=\"mc\" value=\"2\"/>            <span id=\"mc2_val\">Foo2<br/></span>";
M.e[M.e.length-144]="\n";
M.e[M.e.length-145]="         ";
M.e[M.e.length-146]="<input id=\"mc3\" type=\"radio\" name=\"mc\" value=\"3\"/>            <span id=\"mc3_val\">Foo3<br/></span>";
M.e[M.e.length-147]="\n";
M.e[M.e.length-148]="         ";
M.e[M.e.length-149]="<input id=\"mc4\" type=\"radio\" name=\"mc\" value=\"4\"/>            <span id=\"mc4_val\">Foo4<br/></span>";
M.e[M.e.length-150]="\n";
M.e[M.e.length-151]="    ";
M.e[M.e.length-152]="</div>";
M.e[M.e.length-153]="\n";
M.e[M.e.length-154]="    ";
M.e[M.e.length-155]="<input id='answer_button' type='button' onclick='";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",13753,343,70,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-185][92]);
M.v=RT.makeSymbol("on-answer-button");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1877,M.p));
return((M.p).label)(M);};

var _1853=function(M){if(--M.cbt<0){throw _1853;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1857,M.p));
return((M.p).label)(M);};

var _1806=function(M){if(--M.cbt<0){throw _1806;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1810,M.p));
return((M.p).label)(M);};

var _1782=function(M){if(--M.cbt<0){throw _1782;}
M.c.pop();
return(_1770)(M);};

var _1764=function(M){if(--M.cbt<0){throw _1764;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7537,230,4,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][51]);
M.v="Get another hint";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1768,M.p));
return((M.p).label)(M);};

var _1733=function(M){if(--M.cbt<0){throw _1733;}
M.c.pop();
return(_1632)(M);};

var _1717=function(M){if(--M.cbt<0){throw _1717;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1721,M.p));
return((M.p).label)(M);};

var _1701=function(M){if(--M.cbt<0){throw _1701;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6740,204,21,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][63];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1705,M.p));
return((M.p).label)(M);};

var _1685=function(M){if(--M.cbt<0){throw _1685;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1689,M.p));
return((M.p).label)(M);};

var _1667=function(M){if(--M.cbt<0){throw _1667;}
M.c.pop();
return(_1647)(M);};

var _1646=function(M){if(--M.cbt<0){throw _1646;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.v=false;
return(_1651)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5880,187,34,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5881,187,35,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-6][8]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[8]); }
M.e[M.e.length-1]=M.e[M.e.length-6][8];
if (M.e[M.e.length-6][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[45]); }
M.v=M.e[M.e.length-6][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1655,M.p));
return((M.p).label)(M);}};

var _1623=function(M){if(--M.cbt<0){throw _1623;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v="</span>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1627,M.p));
return((M.p).label)(M);};

var _1607=function(M){if(--M.cbt<0){throw _1607;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1611,M.p));
return((M.p).label)(M);};

var _1591=function(M){if(--M.cbt<0){throw _1591;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1595,M.p));
return((M.p).label)(M);};

var _1582=function(M){if(--M.cbt<0){throw _1582;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5336,175,4,95]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5349,175,17,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][34]);
M.v="#streak_bar_left";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1587,M.p));
return((M.p).label)(M);};

var _1546=function(M){if(--M.cbt<0){throw _1546;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1550,M.p));
return((M.p).label)(M);};

var _1498=function(M){if(--M.cbt<0){throw _1498;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1479=function(M){if(--M.cbt<0){throw _1479;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="val";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1483,M.p));
return((M.p).label)(M);};

var _1459=function(M){if(--M.cbt<0){throw _1459;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3358,116,2,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3371,116,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3374,116,18,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1463,M.p));
return((M.p).label)(M);};

var _1437=function(M){if(--M.cbt<0){throw _1437;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1415=function(M){if(--M.cbt<0){throw _1415;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1419,M.p));
return((M.p).label)(M);};

var _1385=function(M){if(--M.cbt<0){throw _1385;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.v="Hide ScratchPad";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1361=function(M){if(--M.cbt<0){throw _1361;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1341=function(M){if(--M.cbt<0){throw _1341;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1345,M.p));
return((M.p).label)(M);};

var _1337=function(M){if(--M.cbt<0){throw _1337;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2274,81,15,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2277,81,18,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" <div id='hint_area'> </div>";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1341,M.p));
return((M.p).label)(M);};

var _1309=function(M){if(--M.cbt<0){throw _1309;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1313,M.p));
return((M.p).label)(M);};

var _1261=function(M){if(--M.cbt<0){throw _1261;}
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1362,48,4,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5][33];
if (M.e[M.e.length-5][36]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[36]); }
M.e[M.e.length-2]=M.e[M.e.length-5][36];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1239=function(M){if(--M.cbt<0){throw _1239;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1219=function(M){if(--M.cbt<0){throw _1219;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1195=function(M){if(--M.cbt<0){throw _1195;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1179=function(M){if(--M.cbt<0){throw _1179;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1183,M.p));
return((M.p).label)(M);};

var _1155=function(M){if(--M.cbt<0){throw _1155;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15502,397,54,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.c.pop();
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1159,M.p));
return((M.p).label)(M);};

var _2269=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2270)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2270)(M);}};

var _2266=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2267)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2267)(M);}};

var _1329=function(M){if(--M.cbt<0){throw _1329;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="block";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1816=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][0]);
M.v=(M.e[M.e.length-1]===RT.makeSymbol("hidden"));
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.makeSymbol("shown"));
if(M.v===false){M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e[M.e.length-2][0]=RT.makeSymbol("hidden");
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8295,256,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][53];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e[M.e.length-2][0]=RT.makeSymbol("shown");
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8218,253,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][52];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2775=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2784,M.p));
return((M.p).label)(M);};

var _2270=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22511,588,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_2274,M.p));
return(_1121)(M);};

var _2267=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.v=new RT.Closure(_1124,1,[M.e[M.e.length-10],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_2269)(M);}else{M.e.push(M.v);
return(_2269)(M);}};





var _2192=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2193)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2193)(M);}};

var _1443=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3311,115,2,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3324,115,15,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3327,115,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#mc";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1451,M.p));
return((M.p).label)(M);};

var _2702=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2771,M.p));
return((M.p).label)(M);};

var _1425=function(M){--M.cbt<0;
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3131,110,2,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3144,110,15,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3147,110,18,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_label_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1433,M.p));
return((M.p).label)(M);};

var _2284=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21709,566,12,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][112];
M.e[M.e.length-1]=2;
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2291,M.p));
return((M.p).label)(M);};





var _1301=function(M){if(--M.cbt<0){throw _1301;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1933,69,15,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1936,69,18,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]=" <div id='problem_area'> ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=" </div>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1305,M.p));
return((M.p).label)(M);};

var _2571=function(M){if(--M.cbt<0){throw _2571;}
M.c.push(new RT.PromptFrame(_2573,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1055,1,[M.e[M.e.length-1]],"js-eval");
M.e[M.e.length-1][41]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _2193=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21197,549,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_2197,M.p));
return(_1116)(M);};


var _1647=function(M){--M.cbt<0;
M.e.length-=1;
return(_1632)(M);};

var _2773=function(M){if(--M.cbt<0){throw _2773;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/stxmat-exercises.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2758=function(M){if(--M.cbt<0){throw _2758;}
M.e[M.e.length-11]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24240,636,6,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][40];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2762,M.p));
return((M.p).label)(M);};



var _2783=function(M){if(--M.cbt<0){throw _2783;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2770=function(M){if(--M.cbt<0){throw _2770;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};






var _1121=function(M){--M.cbt<0;
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21637,564,12,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][112];
M.e[M.e.length-1]=2;
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2282,M.p));
return((M.p).label)(M);};

var _1086=function(M){if(--M.cbt<0){throw _1086;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8544,265,2,96]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][59];
M.e[M.e.length-1]="storeProxy();(~a)(~a,~a)";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8579,265,37,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][91]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8593,265,51,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][93]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1841,M.p));
return((M.p).label)(M);};

var _2569=function(M){if(--M.cbt<0){throw _2569;}
M.c.push(new RT.PromptFrame(_2571,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1054,0,[M.e[M.e.length-1]],"create-scratchpad");
M.e[M.e.length-1][42]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1235=function(M){if(--M.cbt<0){throw _1235;}
M.e[M.e.length-6]=M.v;
M.c.pop();
M.v="' />";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1239,M.p));
return((M.p).label)(M);};

var _2550=function(M){if(--M.cbt<0){throw _2550;}
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2554,M.p));
return((M.p).label)(M);};

var _1171=function(M){if(--M.cbt<0){throw _1171;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1770=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7706,235,8,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
if (M.e[M.e.length-4][84]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[84]); }
M.e[M.e.length-1]=M.e[M.e.length-4][84];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7721,235,23,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][87]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1788,M.p));
return((M.p).label)(M);};

var _2476=function(M){if(--M.cbt<0){throw _2476;}
M.e[M.e.length-10]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=0;
M.v=RT.makeSymbol("title");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2480,M.p));
return((M.p).label)(M);};


var _2433=function(M){if(--M.cbt<0){throw _2433;}
M.c.push(new RT.PromptFrame(_2435,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1047,1,[M.e[M.e.length-1]],"hide");
M.e[M.e.length-1][120]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2425=function(M){if(--M.cbt<0){throw _2425;}
M.c.push(new RT.PromptFrame(_2427,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1043,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][124]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1106=function(M){if(--M.cbt<0){throw _1106;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18658,476,12,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][101]);
M.v=10;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2090,M.p));
return((M.p).label)(M);};

var _2015=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2016)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2016)(M);}};

var _1632=function(M){--M.cbt<0;
M.e.length-=1;
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7197,214,6,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][74];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2771=function(M){if(--M.cbt<0){throw _2771;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2754=function(M){if(--M.cbt<0){throw _2754;}
M.e[M.e.length-10]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24214,635,6,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][74];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2758,M.p));
return((M.p).label)(M);};

var _2742=function(M){if(--M.cbt<0){throw _2742;}
M.e[M.e.length-9]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24152,634,6,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24153,634,7,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-14][22]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[22]); }
M.e[M.e.length-1]=M.e[M.e.length-14][22];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24166,634,20,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-15][9]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-15].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-15][9];
M.v=M.e[M.e.length-15][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2746,M.p));
return((M.p).label)(M);};

var _1587=function(M){if(--M.cbt<0){throw _1587;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="width";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5387,175,55,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][76];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5392,175,60,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][77];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.v=297;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1591,M.p));
return((M.p).label)(M);};

var _1126=function(M){if(--M.cbt<0){throw _1126;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22997,600,22,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][101]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23005,600,30,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][87]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2343,M.p));
return((M.p).label)(M);};

var _2772=function(M){if(--M.cbt<0){throw _2772;}
M.e.length-=(M.a-1);
return(_2773)(M);};




var _2286=function(M){if(--M.cbt<0){throw _2286;}
M.e.length-=(M.a-1);
M.c.pop();
return(_2284)(M);};

var _1407=function(M){--M.cbt<0;
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2973,105,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2986,105,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2989,105,18,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1415,M.p));
return((M.p).label)(M);};


var _2273=function(M){if(--M.cbt<0){throw _2273;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22528,589,2,182]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-17][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-17].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-17][1];
M.e[M.e.length-1]="Square of binomial";
M.e[M.e.length-2]="Square a binomial.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-17][97];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1357=function(M){if(--M.cbt<0){throw _1357;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1361,M.p));
return((M.p).label)(M);};

var _1120=function(M){if(--M.cbt<0){throw _1120;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(1);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(2);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push([undefined]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21542,559,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1][0]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],1,"*"));
M.c.pop();
M.e.push([undefined]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21564,560,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1][0]=plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],1,"*")), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],2,"*"));
M.c.pop();
M.e.push([undefined]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21588,561,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1][0]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],1,"*"));
M.c.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1121,0,undefined,"new-problem!");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1122,0,[M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6]],"problem-description");
M.e.length+=1;
M.v=new RT.Closure(_1123,0,[M.e[M.e.length-9],M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.a=1;
if(M.a===0){return(_2266)(M);}else{M.e.push(M.v);
return(_2266)(M);}};



var _1819=function(M){if(--M.cbt<0){throw _1819;}
M.e.length-=(M.a-1);
M.c.pop();
M.e[M.e.length-2][0]=true;
M.v=RT.VOID;
return(_1816)(M);};


var _2538=function(M){if(--M.cbt<0){throw _2538;}
M.e[M.e.length-8]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=1;
M.v=RT.makeSymbol("css");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2542,M.p));
return((M.p).label)(M);};


var _2511=function(M){if(--M.cbt<0){throw _2511;}
M.c.push(new RT.PromptFrame(_2557,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=0;
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1767=function(M){if(--M.cbt<0){throw _1767;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7603,231,21,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2][84]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][84],0,"+"), 1);
M.c.pop();
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7631,232,10,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][86]);
if (M.e[M.e.length-3][84]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[84]); }
M.v=M.e[M.e.length-3][84];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1774,M.p));
return((M.p).label)(M);};


_2447=RT.si_context_expected(5);



var _2391=function(M){if(--M.cbt<0){throw _2391;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2351=function(M){if(--M.cbt<0){throw _2351;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2355,M.p));
return((M.p).label)(M);};

var _2114=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2115)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2115)(M);}};

var _2178=function(M){if(--M.cbt<0){throw _2178;}
M.e[M.e.length-6]=M.v;
M.c.pop();
M.v=".$$";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2182,M.p));
return((M.p).label)(M);};

var _2077=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2078)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2078)(M);}};

var _1108=function(M){if(--M.cbt<0){throw _1108;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18850,484,4,150]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18856,484,10,83]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-14][44];
M.e[M.e.length-1]="The sum of ";
M.e[M.e.length-2]=M.e[M.e.length-13][0];
M.e[M.e.length-3]=" and ";
M.e[M.e.length-4]=M.e[M.e.length-12][0];
M.e[M.e.length-5]=" is the same as the sum of ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18915,484,69,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-6]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-13][0],0,"sub1"), 1);
M.c.pop();
M.e[M.e.length-7]=" and ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18929,484,83,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-8]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12][0],0,"add1"));
M.c.pop();
M.v=".";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2102,M.p));
return((M.p).label)(M);};

var _2764=function(M){if(--M.cbt<0){throw _2764;}
M.c.pop();
if(M.a===0){return(_2702)(M);}else{M.e.push(M.v);
return(_2702)(M);}};

var _2023=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-15];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2024)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2024)(M);}};

var _2016=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1102,1,[],"check-answer");
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18160,463,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2022,M.p));
return((M.p).label)(M);};

var _2784=function(M){if(--M.cbt<0){throw _2784;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2766=function(M){if(--M.cbt<0){throw _2766;}
M.a=1;
return(_2764)(M);};

var _2750=function(M){if(--M.cbt<0){throw _2750;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2754,M.p));
return((M.p).label)(M);};

var _2738=function(M){if(--M.cbt<0){throw _2738;}
M.e[M.e.length-8]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24114,633,6,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2742,M.p));
return((M.p).label)(M);};


var _1127=function(M){if(--M.cbt<0){throw _1127;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23122,603,8,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23123,603,9,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][6]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[6]); }
M.e[M.e.length-1]=M.e[M.e.length-4][6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23153,603,39,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][88];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2363,M.p));
return((M.p).label)(M);};

var _2670=function(M){if(--M.cbt<0){throw _2670;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]=new RT.Closure(_1091,0,[M.e[M.e.length-5]],"...at-exercises.rkt:375:3");
M.v=new RT.Closure(_1092,0,[M.e[M.e.length-5]],"...at-exercises.rkt:378:3");
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2674,M.p));
return((M.p).label)(M);};


var _2644=function(M){if(--M.cbt<0){throw _2644;}
M.c.push(new RT.PromptFrame(_2646,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1088,0,[M.e[M.e.length-1]],"generate-body");
M.e[M.e.length-1][94]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2634=function(M){if(--M.cbt<0){throw _2634;}
M.c.push(new RT.PromptFrame(_2638,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v="function(v){return v;}";
M.e[M.e.length-1][90]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _1377=function(M){if(--M.cbt<0){throw _1377;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="inline";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1381,M.p));
return((M.p).label)(M);};

var _1087=function(M){if(--M.cbt<0){throw _1087;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8683,267,2,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][59];
M.e[M.e.length-1]="storeProxy();(~a)(~a,~a,~a)";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8721,267,40,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][91]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8735,267,54,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7][93]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1853,M.p));
return((M.p).label)(M);};

var _1063=function(M){if(--M.cbt<0){throw _1063;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2579,92,2,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2592,92,15,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#scratchpad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1377,M.p));
return((M.p).label)(M);};

var _1085=function(M){if(--M.cbt<0){throw _1085;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8405,262,2,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][59];
M.e[M.e.length-1]="plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1084=function(M){if(--M.cbt<0){throw _1084;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][0];
if(M.v===false){M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8092,248,8,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][42];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1820,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_1816)(M);}};


var _2534=function(M){if(--M.cbt<0){throw _2534;}
M.e[M.e.length-7]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=0;
M.v=RT.makeSymbol("html");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2538,M.p));
return((M.p).label)(M);};


_2508=RT.si_context_expected(17);

var _1763=function(M){if(--M.cbt<0){throw _1763;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7537,230,4,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][51]);
M.v="Get another hint";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1768,M.p));
return((M.p).label)(M);};

var _1116=function(M){if(--M.cbt<0){throw _1116;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20406,531,12,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20411,531,17,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][101]);
M.v=3;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2205,M.p));
return((M.p).label)(M);};

var _2441=function(M){if(--M.cbt<0){throw _2441;}
M.c.push(new RT.PromptFrame(_2511,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("answer");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=4;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("answer");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2517,M.p));
return((M.p).label)(M);};



var _2387=function(M){if(--M.cbt<0){throw _2387;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2391,M.p));
return((M.p).label)(M);};


var _2347=function(M){if(--M.cbt<0){throw _2347;}
M.e[M.e.length-1][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23028,601,8,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23029,601,9,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][5]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-4][5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23052,601,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][88];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2351,M.p));
return((M.p).label)(M);};

var _2562=function(M){if(--M.cbt<0){throw _2562;}
M.e.length-=(M.a-1);
return(_2563)(M);};

var _2303=function(M){if(--M.cbt<0){throw _2303;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22300,581,10,70]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-19][44];
M.e[M.e.length-1]=" $$ = ";
M.e[M.e.length-2]=M.e[M.e.length-18][0];
M.e[M.e.length-3]="^2\\cdot x^2 + 2\\cdot(";
M.e[M.e.length-4]=M.e[M.e.length-18][0];
M.e[M.e.length-5]="x)\\cdot ";
M.e[M.e.length-6]=M.e[M.e.length-17][0];
M.e[M.e.length-7]=" + ";
M.e[M.e.length-8]=M.e[M.e.length-17][0];
M.v="^2$$";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2307,M.p));
return((M.p).label)(M);};

var _2115=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20109,521,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_2119,M.p));
return(_1111)(M);};

var _2225=function(M){if(--M.cbt<0){throw _2225;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20826,542,10,201]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=12;
M.e[M.e.length-12]=M.e[M.e.length-20][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-19][0];
M.e[M.e.length-3]="^{";
M.e[M.e.length-4]=M.e[M.e.length-18][0];
M.e[M.e.length-5]="} = \\frac{1}{";
M.e[M.e.length-6]=M.e[M.e.length-19][0];
M.e[M.e.length-7]="^{";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-20][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20867,542,51,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-8]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-18][0],0,"-"));
M.c.pop();
M.e[M.e.length-9]="}} = \\frac{1}{";
M.e[M.e.length-10]=M.e[M.e.length-19][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-20][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20891,542,75,130]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-22][108];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-22][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20985,543,76,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-24][44];
M.e[M.e.length-1]="\\cdot ";
M.v=M.e[M.e.length-23][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2229,M.p));
return((M.p).label)(M);};

var _1651=function(M){--M.cbt<0;
if(M.v===false){M.e[M.e.length-3][0]=RT.makeSymbol("check");
M.v=M.e[M.e.length-3];
M.e[M.e.length-4][28]=0;
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6358,196,27,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][73]);
M.v=RT.makeSymbol("sad");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1671,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3][0]=RT.makeSymbol("next");
M.v=M.e[M.e.length-3];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6054,190,48,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4][28]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][28],0,"+"), 1);
M.c.pop();
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6103,191,27,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][70]);
M.v="Correct! Next Question...";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1663,M.p));
return((M.p).label)(M);}};


var _2078=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19060,490,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_2082,M.p));
return(_1106)(M);};

var _1105=function(M){if(--M.cbt<0){throw _1105;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1106,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1107,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1108,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.v=new RT.Closure(_1109,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_2077)(M);}else{M.e.push(M.v);
return(_2077)(M);}};

var _2777=function(M){if(--M.cbt<0){throw _2777;}
if(M.a===0){return(_2775)(M);}else{M.e.push(M.v);
return(_2775)(M);}};

var _2438=function(M){if(--M.cbt<0){throw _2438;}
M.e.length-=(M.a-1);
return(_2439)(M);};

var _2024=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.v=new RT.Closure(_1104,0,[M.e[M.e.length-18],M.e[M.e.length-14]],"...at-exercises.rkt:467:57");
M.a=1;
if(M.a===0){return(_2025)(M);}else{M.e.push(M.v);
return(_2025)(M);}};

var _2021=function(M){if(--M.cbt<0){throw _2021;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18177,464,2,234]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-16][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-16].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-16][1];
M.e[M.e.length-1]="Antideriviative";
M.e[M.e.length-2]="Antiderivatives of powers.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-16][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18344,467,17,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18][100];
M.v=new RT.Closure(_1103,0,[M.e[M.e.length-18],M.e[M.e.length-15]],"...at-exercises.rkt:467:41");
M.a=1;
if(M.a===0){return(_2023)(M);}else{M.e.push(M.v);
return(_2023)(M);}};

var _1820=function(M){if(--M.cbt<0){throw _1820;}
M.c.pop();
M.e[M.e.length-2][0]=true;
M.v=RT.VOID;
return(_1816)(M);};

var _2011=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2012)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2012)(M);}};

var _2779=function(M){if(--M.cbt<0){throw _2779;}
M.a=1;
return(_2777)(M);};

var _2762=function(M){if(--M.cbt<0){throw _2762;}
M.c.pop();
M.p=M.e[M.e.length-12];
M.e[M.e.length-12]=M.v;
M.a=12;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2766,M.p));
return((M.p).label)(M);};

var _2746=function(M){if(--M.cbt<0){throw _2746;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2750,M.p));
return((M.p).label)(M);};

var _2734=function(M){if(--M.cbt<0){throw _2734;}
M.e[M.e.length-7]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24087,632,6,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][63];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2738,M.p));
return((M.p).label)(M);};

var _2726=function(M){if(--M.cbt<0){throw _2726;}
M.e[M.e.length-5]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24019,630,6,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][67];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2730,M.p));
return((M.p).label)(M);};

var _2710=function(M){if(--M.cbt<0){throw _2710;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2714,M.p));
return((M.p).label)(M);};


var _1128=function(M){if(--M.cbt<0){throw _1128;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23209,605,8,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23210,605,9,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][7]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[7]); }
M.e[M.e.length-1]=M.e[M.e.length-4][7];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23226,605,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][88];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2375,M.p));
return((M.p).label)(M);};


var _1494=function(M){if(--M.cbt<0){throw _1494;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="val";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1498,M.p));
return((M.p).label)(M);};



var _1433=function(M){if(--M.cbt<0){throw _1433;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1437,M.p));
return((M.p).label)(M);};


var _2611=function(M){if(--M.cbt<0){throw _2611;}
M.c.push(new RT.PromptFrame(_2613,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1075,0,[M.e[M.e.length-1]],"set-focus-to-answer-input");
M.e[M.e.length-1][69]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1123=function(M){if(--M.cbt<0){throw _1123;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22015,577,4,423]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22021,577,10,164]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][44];
M.e[M.e.length-1]="First use the rule:  $(s+t)^2=s^2+2\\cdot s\\cdot t+t^2$ <br/>";
M.e[M.e.length-2]="\n";
M.v="Second use the rule: $(a\\cdot s)^2=a^2\\cdot s^2$";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2299,M.p));
return((M.p).label)(M);};


var _1062=function(M){if(--M.cbt<0){throw _1062;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2491,88,2,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2504,88,15,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#hint_button";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1369,M.p));
return((M.p).label)(M);};

var _1289=function(M){if(--M.cbt<0){throw _1289;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1293,M.p));
return((M.p).label)(M);};

var _1061=function(M){if(--M.cbt<0){throw _1061;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2358,84,2,90]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2371,84,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1353,M.p));
return((M.p).label)(M);};

var _1215=function(M){if(--M.cbt<0){throw _1215;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1219,M.p));
return((M.p).label)(M);};



var _2504=function(M){if(--M.cbt<0){throw _2504;}
M.p=M.e[M.e.length-17];
M.e[M.e.length-17]=M.v;
M.a=17;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2508,M.p));
return((M.p).label)(M);};

var _2496=function(M){if(--M.cbt<0){throw _2496;}
M.e[M.e.length-15]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=5;
M.v=RT.makeSymbol("check-answer");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2500,M.p));
return((M.p).label)(M);};

var _1118=function(M){if(--M.cbt<0){throw _1118;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20634,539,4,500]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20640,539,10,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][44]);
M.v="Use the formula: $$a^{-n} = \\frac{1}{a^n}$$";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2217,M.p));
return((M.p).label)(M);};

var _1117=function(M){if(--M.cbt<0){throw _1117;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20516,535,4,91]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Calculate the power.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]="^{";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v="} = \\ ?$$ </div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1736=function(M){if(--M.cbt<0){throw _1736;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1632)(M);};

var _1732=function(M){if(--M.cbt<0){throw _1732;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1632)(M);};


var _1052=function(M){if(--M.cbt<0){throw _1052;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1339,47,10,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][39]);
if (M.e[M.e.length-2][36]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-2].names[36]); }
M.v=M.e[M.e.length-2][36];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1261,M.p));
return((M.p).label)(M);};


var _2331=function(M){if(--M.cbt<0){throw _2331;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2335,M.p));
return((M.p).label)(M);};

var _2299=function(M){if(--M.cbt<0){throw _2299;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22196,580,10,93]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=13;
M.e[M.e.length-13]=M.e[M.e.length-23][44];
M.e[M.e.length-1]=" $$(";
M.e[M.e.length-2]=M.e[M.e.length-22][0];
M.e[M.e.length-3]="\\cdot x + ";
M.e[M.e.length-4]=M.e[M.e.length-21][0];
M.e[M.e.length-5]=")^2 = (";
M.e[M.e.length-6]=M.e[M.e.length-22][0];
M.e[M.e.length-7]="\\cdot x)^2 + 2\\cdot(";
M.e[M.e.length-8]=M.e[M.e.length-22][0];
M.e[M.e.length-9]="x)\\cdot ";
M.e[M.e.length-10]=M.e[M.e.length-21][0];
M.e[M.e.length-11]=" + ";
M.e[M.e.length-12]=M.e[M.e.length-21][0];
M.v="^2 $$";
M.p=M.e[M.e.length-13];
M.e[M.e.length-13]=M.v;
M.a=13;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2303,M.p));
return((M.p).label)(M);};

var _2245=function(M){if(--M.cbt<0){throw _2245;}
M.e[M.e.length-8]=M.v;
M.c.pop();
M.v="$.";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2249,M.p));
return((M.p).label)(M);};

var _1670=function(M){if(--M.cbt<0){throw _1670;}
M.e.length-=(M.a-1);
M.c.pop();
return(_1647)(M);};

var _2209=function(M){if(--M.cbt<0){throw _2209;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2][0]=plt.baselib.numbers.subtract(-1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"-"));
M.e.length-=1;
M.c.pop();
M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2119=function(M){if(--M.cbt<0){throw _2119;}
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20126,522,2,181]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Powers with natural exponents";
M.e[M.e.length-2]="Powers with natural exponents.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1107=function(M){if(--M.cbt<0){throw _1107;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18736,480,4,87]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Calculate the sum.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]=" + ";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v=" = \\ ?$$ </div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};





var _2513=function(M){--M.cbt<0;
M.e.splice(M.e.length-(10+5),5);
M.e[M.e.length-11][17]=M.v;
M.e[M.e.length-11][18]=M.e[M.e.length-1];
M.e[M.e.length-11][19]=M.e[M.e.length-2];
M.e[M.e.length-11][20]=M.e[M.e.length-3];
M.e[M.e.length-11][21]=M.e[M.e.length-4];
M.e[M.e.length-11][22]=M.e[M.e.length-5];
M.e[M.e.length-11][23]=M.e[M.e.length-6];
M.e[M.e.length-11][24]=M.e[M.e.length-7];
M.e[M.e.length-11][25]=M.e[M.e.length-8];
M.e[M.e.length-11][26]=M.e[M.e.length-9];
M.e[M.e.length-11][27]=M.e[M.e.length-10];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2443=function(M){--M.cbt<0;
M.e.splice(M.e.length-(16+5),5);
M.e[M.e.length-17][0]=M.v;
M.e[M.e.length-17][1]=M.e[M.e.length-1];
M.e[M.e.length-17][2]=M.e[M.e.length-2];
M.e[M.e.length-17][3]=M.e[M.e.length-3];
M.e[M.e.length-17][4]=M.e[M.e.length-4];
M.e[M.e.length-17][5]=M.e[M.e.length-5];
M.e[M.e.length-17][6]=M.e[M.e.length-6];
M.e[M.e.length-17][7]=M.e[M.e.length-7];
M.e[M.e.length-17][8]=M.e[M.e.length-8];
M.e[M.e.length-17][9]=M.e[M.e.length-9];
M.e[M.e.length-17][10]=M.e[M.e.length-10];
M.e[M.e.length-17][11]=M.e[M.e.length-11];
M.e[M.e.length-17][12]=M.e[M.e.length-12];
M.e[M.e.length-17][13]=M.e[M.e.length-13];
M.e[M.e.length-17][14]=M.e[M.e.length-14];
M.e[M.e.length-17][15]=M.e[M.e.length-15];
M.e[M.e.length-17][16]=M.e[M.e.length-16];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2445=function(M){--M.cbt<0;
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.length+=17;
M.e[M.e.length-17]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=M.e[M.e.length-19];
M.e[M.e.length-3]=M.e[M.e.length-20];
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=0;
M.v=RT.makeSymbol("title");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2452,M.p));
return((M.p).label)(M);};

var _2025=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-14];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2026)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_2026)(M);}};

var _1845=function(M){if(--M.cbt<0){throw _1845;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]="function(v){return v;}";
M.v="function(v){return v;}";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2012=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1100,0,[M.e[M.e.length-7],M.e[M.e.length-5]],"problem-description");
M.e.length+=1;
M.v=new RT.Closure(_1101,0,[M.e[M.e.length-8],M.e[M.e.length-6],M.e[M.e.length-5]],"hints");
M.a=1;
if(M.a===0){return(_2015)(M);}else{M.e.push(M.v);
return(_2015)(M);}};

var _1759=function(M){if(--M.cbt<0){throw _1759;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2][28]=0;
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7513,229,4,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][74];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1764,M.p));
return((M.p).label)(M);};




var _2730=function(M){if(--M.cbt<0){throw _2730;}
M.e[M.e.length-6]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24062,631,6,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][79];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2734,M.p));
return((M.p).label)(M);};

var _2722=function(M){if(--M.cbt<0){throw _2722;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23981,629,6,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2726,M.p));
return((M.p).label)(M);};

var _2706=function(M){if(--M.cbt<0){throw _2706;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23880,626,6,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23881,626,7,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-14][5]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-14].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-14][5];
M.v=M.e[M.e.length-14][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2710,M.p));
return((M.p).label)(M);};

var _1129=function(M){if(--M.cbt<0){throw _1129;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23293,607,8,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23294,607,9,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][8]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[8]); }
M.e[M.e.length-1]=M.e[M.e.length-5][8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23317,607,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][88];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2387,M.p));
return((M.p).label)(M);};

var _1093=function(M){if(--M.cbt<0){throw _1093;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15164,386,6,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][86]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1927,M.p));
return((M.p).label)(M);};

var _1538=function(M){if(--M.cbt<0){throw _1538;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="val";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _1455=function(M){if(--M.cbt<0){throw _1455;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1459,M.p));
return((M.p).label)(M);};


var _2621=function(M){if(--M.cbt<0){throw _2621;}
M.c.push(new RT.PromptFrame(_2623,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push(RT.makeSymbol("next"));
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.v=new RT.Closure(_1080,0,[M.e[M.e.length-2],M.e[M.e.length-1]],"on-answer-button");
M.e.length-=1;
M.e[M.e.length-1][79]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2609=function(M){if(--M.cbt<0){throw _2609;}
M.c.push(new RT.PromptFrame(_2611,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1074,0,[M.e[M.e.length-1]],"hide-answer-inputs-and-labels");
M.e[M.e.length-1][68]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1122=function(M){if(--M.cbt<0){throw _1122;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21843,572,4,145]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Rewrite to the form $a\\cdot x^2 + b\\cdot x + c$.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div>$$( ";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]="\\cdot x + ";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v=")^2 = ?$$</div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1313=function(M){if(--M.cbt<0){throw _1313;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1989,70,2,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][40];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1293=function(M){if(--M.cbt<0){throw _1293;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _1809=function(M){if(--M.cbt<0){throw _1809;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7945,241,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][40];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1191=function(M){if(--M.cbt<0){throw _1191;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1195,M.p));
return((M.p).label)(M);};

var _1059=function(M){if(--M.cbt<0){throw _1059;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2129,77,2,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2142,77,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1329,M.p));
return((M.p).label)(M);};

var _2500=function(M){if(--M.cbt<0){throw _2500;}
M.e[M.e.length-16]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=6;
M.v=RT.makeSymbol("answer-type");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2504,M.p));
return((M.p).label)(M);};

var _2492=function(M){if(--M.cbt<0){throw _2492;}
M.e[M.e.length-14]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-mutator"];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=4;
M.v=RT.makeSymbol("hints");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2496,M.p));
return((M.p).label)(M);};

var _1119=function(M){if(--M.cbt<0){throw _1119;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21172,547,4,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21175,547,7,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][109];
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.v=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2253,M.p));
return((M.p).label)(M);};

var _1115=function(M){if(--M.cbt<0){throw _1115;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1116,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1117,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1118,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.v=new RT.Closure(_1119,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_2192)(M);}else{M.e.push(M.v);
return(_2192)(M);}};



var _1728=function(M){if(--M.cbt<0){throw _1728;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7071,210,21,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][69];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1733,M.p));
return((M.p).label)(M);};


var _1051=function(M){if(--M.cbt<0){throw _1051;}
M.e.push.apply(M.e,M.p.closedVals);
M.e[M.e.length-1][36]=M.e[M.e.length-2];
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1708=function(M){if(--M.cbt<0){throw _1708;}
M.e.length-=(M.a-1);
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6858,206,21,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6859,206,22,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][22]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[22]); }
M.e[M.e.length-1]=M.e[M.e.length-4][22];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6872,206,35,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][9]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-5][9];
if (M.e[M.e.length-5][45]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[45]); }
M.v=M.e[M.e.length-5][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1713,M.p));
return((M.p).label)(M);};

var _2319=function(M){if(--M.cbt<0){throw _2319;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1126,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1127,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1128,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1129,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.e.push([undefined]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23373,608,26,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-9][9]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-9][9];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23395,608,48,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][88];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.v=M.e[M.e.length-9][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2331,M.p));
return((M.p).label)(M);};



var _2241=function(M){if(--M.cbt<0){throw _2241;}
M.e[M.e.length-6]=M.v;
M.c.pop();
M.e[M.e.length-7]="}.$$ Enter the result as $1/";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-17][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21116,544,88,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-19][109];
M.e[M.e.length-1]=M.e[M.e.length-18][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-19][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21124,544,96,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-17][0],0,"-"));
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2245,M.p));
return((M.p).label)(M);};

var _1113=function(M){if(--M.cbt<0){throw _1113;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19587,511,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1][0],0,"="),0)));
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19717,513,15,329]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19723,513,21,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7][44]);
M.v="The power $a^n$ is $a$ multiplied with itself $n$ times.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2154,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19595,511,15,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19601,511,21,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v="The power $a^0$ is defined to be $1$.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2146,M.p));
return((M.p).label)(M);}};

var _2205=function(M){if(--M.cbt<0){throw _2205;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-3][0]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.c.pop();
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20447,532,12,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20453,532,18,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][101]);
M.v=4;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2209,M.p));
return((M.p).label)(M);};




var _2106=function(M){if(--M.cbt<0){throw _2106;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.NULL));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2051=function(M){if(--M.cbt<0){throw _2051;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-3];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17813,448,19,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][105]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2055,M.p));
return((M.p).label)(M);};

var _2030=function(M){if(--M.cbt<0){throw _2030;}
M.c.pop();
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2434=function(M){if(--M.cbt<0){throw _2434;}
M.e.length-=(M.a-1);
return(_2435)(M);};

var _2515=function(M){--M.cbt<0;
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=0;
M.v=RT.makeSymbol("html");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2522,M.p));
return((M.p).label)(M);};

var _2026=function(M){--M.cbt<0;
M.v=M.v;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2030,M.p));
return((M.p).label)(M);};

var _2415=function(M){if(--M.cbt<0){throw _2415;}
M.e.length-=(M.a-1);
return(_2416)(M);};


var _1101=function(M){if(--M.cbt<0){throw _1101;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17997,455,4,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18003,455,10,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][44];
M.e[M.e.length-1]="The antiderivative of $";
M.e[M.e.length-2]=M.e[M.e.length-8][0];
M.e[M.e.length-3]="$ is $";
M.e[M.e.length-4]=M.e[M.e.length-7][0];
M.v="$";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2063,M.p));
return((M.p).label)(M);};

var _2403=function(M){if(--M.cbt<0){throw _2403;}
M.e.length-=(M.a-1);
return(_2404)(M);};

var _1774=function(M){if(--M.cbt<0){throw _1774;}
M.c.pop();
if(M.v===false){M.v=RT.VOID;
return(_1770)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7656,233,6,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][49];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1778,M.p));
return((M.p).label)(M);}};


var _1697=function(M){if(--M.cbt<0){throw _1697;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1701,M.p));
return((M.p).label)(M);};



_1187.mvr=_1186;
_1313.mvr=_1312;
_1381.mvr=_1380;
_1397.mvr=_1396;
_1411.mvr=_1410;
_1429.mvr=_1428;
_1447.mvr=_1446;
_1459.mvr=_1458;
_1522.mvr=_1521;
_1568.mvr=_1567;
_1599.mvr=_1598;
_1615.mvr=_1614;
_1663.mvr=_1662;
_1667.mvr=_1666;
_1671.mvr=_1670;
_1677.mvr=_1676;
_1681.mvr=_1680;
_1689.mvr=_1688;
_1701.mvr=_1700;
_1705.mvr=_1704;
_1709.mvr=_1708;
_1721.mvr=_1720;
_1725.mvr=_1724;
_1729.mvr=_1728;
_1733.mvr=_1732;
_1737.mvr=_1736;
_1764.mvr=_1763;
_1768.mvr=_1767;
_1778.mvr=_1777;
_1782.mvr=_1781;
_1810.mvr=_1809;
_1820.mvr=_1819;
_1893.mvr=_1892;
_1913.mvr=_1912;
_1982.mvr=_1981;
_1986.mvr=_1985;
_1994.mvr=_1993;
_2022.mvr=_2021;
_2082.mvr=_2081;
_2119.mvr=_2118;
_2197.mvr=_2196;
_2274.mvr=_2273;
_2287.mvr=_2286;
_2404.mvr=_2403;
_2407.mvr=_2406;
_2410.mvr=_2409;
_2413.mvr=_2412;
_2416.mvr=_2415;
_2419.mvr=_2418;
_2421.mvr=_2420;
_2423.mvr=_2422;
_2425.mvr=_2424;
_2427.mvr=_2426;
_2429.mvr=_2428;
_2431.mvr=_2430;
_2433.mvr=_2432;
_2435.mvr=_2434;
_2437.mvr=_2436;
_2439.mvr=_2438;
_2447.mvr=_2446;
_2508.mvr=_2507;
_2441.mvr=_2440;
_2517.mvr=_2516;
_2554.mvr=_2553;
_2511.mvr=_2510;
_2557.mvr=_2556;
_2559.mvr=_2558;
_2561.mvr=_2560;
_2563.mvr=_2562;
_2565.mvr=_2564;
_2567.mvr=_2566;
_2569.mvr=_2568;
_2571.mvr=_2570;
_2573.mvr=_2572;
_2575.mvr=_2574;
_2577.mvr=_2576;
_2579.mvr=_2578;
_2581.mvr=_2580;
_2583.mvr=_2582;
_2585.mvr=_2584;
_2587.mvr=_2586;
_2589.mvr=_2588;
_2591.mvr=_2590;
_2593.mvr=_2592;
_2595.mvr=_2594;
_2597.mvr=_2596;
_2599.mvr=_2598;
_2601.mvr=_2600;
_2603.mvr=_2602;
_2605.mvr=_2604;
_2607.mvr=_2606;
_2609.mvr=_2608;
_2611.mvr=_2610;
_2613.mvr=_2612;
_2615.mvr=_2614;
_2617.mvr=_2616;
_2619.mvr=_2618;
_2621.mvr=_2620;
_2623.mvr=_2622;
_2626.mvr=_2625;
_2628.mvr=_2627;
_2630.mvr=_2629;
_2632.mvr=_2631;
_2634.mvr=_2633;
_2638.mvr=_2637;
_2640.mvr=_2639;
_2642.mvr=_2641;
_2644.mvr=_2643;
_2646.mvr=_2645;
_2648.mvr=_2647;
_2662.mvr=_2661;
_2676.mvr=_2675;
_2678.mvr=_2677;
_2680.mvr=_2679;
_2682.mvr=_2681;
_2684.mvr=_2683;
_2686.mvr=_2685;
_2688.mvr=_2687;
_2690.mvr=_2689;
_2692.mvr=_2691;
_2694.mvr=_2693;
_2766.mvr=_2764;
_2771.mvr=_2770;
_2700.mvr=_2699;
_2779.mvr=_2777;
_2784.mvr=_2783;
_2773.mvr=_2772;
_1133.mvr=_1132;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2785, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<MainModuleSource>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<MainModuleSource>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2805=function(M){if(--M.cbt<0){throw _2805;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2794=function(M){if(--M.cbt<0){throw _2794;}
M.e.length-=(M.a-1);
return(_2795)(M);};

var _2787=function(M){if(--M.cbt<0){throw _2787;}
M.e.length-=M.a;
return(_2788)(M);};

var _2799=function(M){if(--M.cbt<0){throw _2799;}
if(M.a===0){return(_2797)(M);}else{M.e.push(M.v);
return(_2797)(M);}};

var _2806=function(M){if(--M.cbt<0){throw _2806;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2788=function(M){if(--M.cbt<0){throw _2788;}
};

var _2792=function(M){if(--M.cbt<0){throw _2792;}
M.e.length-=(M.a-1);
return(_2793)(M);};

var _2790=function(M){--M.cbt<0;
M.modules["root/lang/do.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_2793)(M);}else{M.c.push(new RT.CallFrame(_2793,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}}else{return(_2793)(M);}};

var _2801=function(M){if(--M.cbt<0){throw _2801;}
M.a=1;
return(_2799)(M);};

var _2797=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2806,M.p));
return((M.p).label)(M);};

var _2793=function(M){if(--M.cbt<0){throw _2793;}
M.e.push([M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["run-tests","print-values"];
M.modules["root/lang/do.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2795,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][1];
M.p=M.e[M.e.length-1][0];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2801,M.p));
return((M.p).label)(M);};

var _2795=function(M){if(--M.cbt<0){throw _2795;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/lang/do.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2807=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_2788,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/lang/do.rkt"]=new RT.ModuleRecord("do",_2790);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_2793.mvr=_2792;
_2801.mvr=_2799;
_2806.mvr=_2805;
_2795.mvr=_2794;
_2788.mvr=_2787;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2807, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/whalesong.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2815=function(M){if(--M.cbt<0){throw _2815;}
if((M.modules["whalesong/lang/private/traced-app.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_2818)(M);}else{M.c.push(new RT.CallFrame(_2818,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}}else{return(_2818)(M);}};

var _2810=function(M){if(--M.cbt<0){throw _2810;}
};

var _2827=function(M){if(--M.cbt<0){throw _2827;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/whalesong.rkt"].prefix=M.e[M.e.length-1];
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/whalesong.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2824=function(M){if(--M.cbt<0){throw _2824;}
if((M.modules["whalesong/lang/bool.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/bool.rkt"].isInvoked!==false){return(_2827)(M);}else{M.c.push(new RT.CallFrame(_2827,M.p));
return(M.modules["whalesong/lang/bool.rkt"].label)(M);}}else{return(_2827)(M);}};

var _2809=function(M){if(--M.cbt<0){throw _2809;}
M.e.length-=M.a;
return(_2810)(M);};

var _2828=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_2810,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/whalesong.rkt"]=new RT.ModuleRecord("whalesong",_2812);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2823=function(M){if(--M.cbt<0){throw _2823;}
M.e.length-=(M.a-1);
return(_2824)(M);};

var _2821=function(M){if(--M.cbt<0){throw _2821;}
if((M.modules["whalesong/lang/check-expect/check-expect.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked!==false){return(_2824)(M);}else{M.c.push(new RT.CallFrame(_2824,M.p));
return(M.modules["whalesong/lang/check-expect/check-expect.rkt"].label)(M);}}else{return(_2824)(M);}};

var _2818=function(M){if(--M.cbt<0){throw _2818;}
if((M.modules["whalesong/lang/private/shared.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/private/shared.rkt"].isInvoked!==false){return(_2821)(M);}else{M.c.push(new RT.CallFrame(_2821,M.p));
return(M.modules["whalesong/lang/private/shared.rkt"].label)(M);}}else{return(_2821)(M);}};

var _2814=function(M){if(--M.cbt<0){throw _2814;}
M.e.length-=(M.a-1);
return(_2815)(M);};

var _2812=function(M){--M.cbt<0;
M.modules["whalesong/lang/whalesong.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_2815)(M);}else{M.c.push(new RT.CallFrame(_2815,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}}else{return(_2815)(M);}};

var _2826=function(M){if(--M.cbt<0){throw _2826;}
M.e.length-=(M.a-1);
return(_2827)(M);};

var _2820=function(M){if(--M.cbt<0){throw _2820;}
M.e.length-=(M.a-1);
return(_2821)(M);};

var _2817=function(M){if(--M.cbt<0){throw _2817;}
M.e.length-=(M.a-1);
return(_2818)(M);};

_2815.mvr=_2814;
_2818.mvr=_2817;
_2821.mvr=_2820;
_2824.mvr=_2823;
_2827.mvr=_2826;
_2810.mvr=_2809;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2828, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/whalesong.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/whalesong.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/bool.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2891=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_2834,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/bool.rkt"]=new RT.ModuleRecord("bool",_2880);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2878=function(M){if(--M.cbt<0){throw _2878;}
return(_2858)(M);};

var _2874=function(M){if(--M.cbt<0){throw _2874;}
if(M.v===false){M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2878,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2878,M.p));
return((M.p).label)(M);}};

var _2852=function(M){if(--M.cbt<0){throw _2852;}
if(M.v===false){M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2856,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2856,M.p));
return((M.p).label)(M);}};

var _2881=function(M){if(--M.cbt<0){throw _2881;}
M.e.length-=(M.a-1);
return(_2882)(M);};

var _2880=function(M){--M.cbt<0;
M.modules["whalesong/lang/bool.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["true"]||M.primitives["true"],M.params.currentNamespace["false"]||M.primitives["false"],M.params.currentNamespace["false?"]||M.primitives["false?"],M.params.currentNamespace["boolean=?"]||M.primitives["boolean=?"],M.primitives["boolean?"],M.primitives["raise-type-error"],M.params.currentNamespace["symbol=?"]||M.primitives["symbol=?"],M.primitives["symbol?"]]);M.e[M.e.length-1].names=["true","false","false?","boolean=?","boolean?","raise-type-error","symbol=?","symbol?"];
M.modules["whalesong/lang/bool.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2882,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=true;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2868=function(M){if(--M.cbt<0){throw _2868;}
return(_2860)(M);};



var _2877=function(M){if(--M.cbt<0){throw _2877;}
M.e.length-=(M.a-1);
return(_2858)(M);};

var _2829=function(M){if(--M.cbt<0){throw _2829;}
M.v=(M.e[M.e.length-1]===false);
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2855=function(M){if(--M.cbt<0){throw _2855;}
M.e.length-=(M.a-1);
return(_2836)(M);};

var _2883=function(M){if(--M.cbt<0){throw _2883;}
M.e.length-=(M.a-1);
return(_2884)(M);};


var _2830=function(M){if(--M.cbt<0){throw _2830;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2842,M.p));
return((M.p).label)(M);};

var _2864=function(M){if(--M.cbt<0){throw _2864;}
if(M.v===false){M.v=false;
return(_2860)(M);}else{M.e.push(M.e[M.e.length-1][7]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2868,M.p));
return((M.p).label)(M);}};

var _2842=function(M){if(--M.cbt<0){throw _2842;}
if(M.v===false){M.v=false;
return(_2838)(M);}else{M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2846,M.p));
return((M.p).label)(M);}};

var _2885=function(M){if(--M.cbt<0){throw _2885;}
M.e.length-=(M.a-1);
return(_2886)(M);};


var _2834=function(M){if(--M.cbt<0){throw _2834;}
};

var _2856=function(M){if(--M.cbt<0){throw _2856;}
return(_2836)(M);};

var _2831=function(M){if(--M.cbt<0){throw _2831;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2864,M.p));
return((M.p).label)(M);};

var _2887=function(M){if(--M.cbt<0){throw _2887;}
M.e.length-=(M.a-1);
return(_2888)(M);};

var _2833=function(M){if(--M.cbt<0){throw _2833;}
M.e.length-=M.a;
return(_2834)(M);};

var _2882=function(M){if(--M.cbt<0){throw _2882;}
M.c.push(new RT.PromptFrame(_2884,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=false;
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2860=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][5];
M.e[M.e.length-1]=RT.makeSymbol("symbol=?");
M.e[M.e.length-2]="symbol";
M.e.push(M.e[M.e.length-6][7]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2874,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_2858)(M);}};

var _2846=function(M){if(--M.cbt<0){throw _2846;}
return(_2838)(M);};

var _2886=function(M){if(--M.cbt<0){throw _2886;}
M.c.push(new RT.PromptFrame(_2888,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2830,2,[M.e[M.e.length-1]],"boolean=?");
M.e[M.e.length-1][3]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2884=function(M){if(--M.cbt<0){throw _2884;}
M.c.push(new RT.PromptFrame(_2886,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2829,1,[],"false?");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2836=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2889=function(M){if(--M.cbt<0){throw _2889;}
M.e.length-=(M.a-1);
return(_2890)(M);};

var _2888=function(M){if(--M.cbt<0){throw _2888;}
M.c.push(new RT.PromptFrame(_2890,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2831,2,[M.e[M.e.length-1]],"symbol=?");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2858=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2838=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][5];
M.e[M.e.length-1]=RT.makeSymbol("boolean=?");
M.e[M.e.length-2]="boolean";
M.e.push(M.e[M.e.length-6][4]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2852,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_2836)(M);}};

var _2890=function(M){if(--M.cbt<0){throw _2890;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/bool.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

_2856.mvr=_2855;
_2878.mvr=_2877;
_2882.mvr=_2881;
_2884.mvr=_2883;
_2886.mvr=_2885;
_2888.mvr=_2887;
_2890.mvr=_2889;
_2834.mvr=_2833;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2891, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/bool.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/bool.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/traced-app.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2909=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_2894,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/traced-app.rkt"]=new RT.ModuleRecord("traced-app",_2896);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2894=function(M){if(--M.cbt<0){throw _2894;}
};

var _2903=function(M){if(--M.cbt<0){throw _2903;}
M.e.length-=(M.a-1);
return(_2904)(M);};

var _2897=function(M){if(--M.cbt<0){throw _2897;}
M.e.length-=(M.a-1);
return(_2898)(M);};

var _2893=function(M){if(--M.cbt<0){throw _2893;}
M.e.length-=M.a;
return(_2894)(M);};

var _2904=function(M){if(--M.cbt<0){throw _2904;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/traced-app.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2898=function(M){if(--M.cbt<0){throw _2898;}
M.c.push(new RT.PromptFrame(_2904,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push(M.primitives["gensym"]);
M.v=RT.makeSymbol("traced-callee-key");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2908,M.p));
return((M.p).label)(M);};


var _2896=function(M){--M.cbt<0;
M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["traced-app-key"]||M.primitives["traced-app-key"],M.params.currentNamespace["traced-callee-key"]||M.primitives["traced-callee-key"]]);M.e[M.e.length-1].names=["traced-app-key","traced-callee-key"];
M.modules["whalesong/lang/private/traced-app.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2898,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push(M.primitives["gensym"]);
M.v=RT.makeSymbol("traced-app-key");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2902,M.p));
return((M.p).label)(M);};

var _2908=function(M){if(--M.cbt<0){throw _2908;}
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2902=function(M){if(--M.cbt<0){throw _2902;}
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


_2898.mvr=_2897;
_2904.mvr=_2903;
_2894.mvr=_2893;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2909, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/traced-app.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/traced-app.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/base.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2930=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_2912,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/base.rkt"]=new RT.ModuleRecord("base",_2914);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2926=function(M){if(--M.cbt<0){throw _2926;}
if((M.modules["collects/racket/private/modbeg.rkt"]!==undefined)!==false){if(M.modules["collects/racket/private/modbeg.rkt"].isInvoked!==false){return(_2929)(M);}else{M.c.push(new RT.CallFrame(_2929,M.p));
return(M.modules["collects/racket/private/modbeg.rkt"].label)(M);}}else{return(_2929)(M);}};

var _2923=function(M){if(--M.cbt<0){throw _2923;}
if((M.modules["whalesong/lang/private/qq-and-or.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked!==false){return(_2926)(M);}else{M.c.push(new RT.CallFrame(_2926,M.p));
return(M.modules["whalesong/lang/private/qq-and-or.rkt"].label)(M);}}else{return(_2926)(M);}};

var _2920=function(M){if(--M.cbt<0){throw _2920;}
if((M.modules["whalesong/lang/list.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/list.rkt"].isInvoked!==false){return(_2923)(M);}else{M.c.push(new RT.CallFrame(_2923,M.p));
return(M.modules["whalesong/lang/list.rkt"].label)(M);}}else{return(_2923)(M);}};

var _2914=function(M){--M.cbt<0;
M.modules["whalesong/lang/base.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/private/list.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/private/list.rkt"].isInvoked!==false){return(_2917)(M);}else{M.c.push(new RT.CallFrame(_2917,M.p));
return(M.modules["whalesong/lang/private/list.rkt"].label)(M);}}else{return(_2917)(M);}};

var _2912=function(M){if(--M.cbt<0){throw _2912;}
};

var _2925=function(M){if(--M.cbt<0){throw _2925;}
M.e.length-=(M.a-1);
return(_2926)(M);};

var _2922=function(M){if(--M.cbt<0){throw _2922;}
M.e.length-=(M.a-1);
return(_2923)(M);};

var _2917=function(M){if(--M.cbt<0){throw _2917;}
if((M.modules["whalesong/lang/private/map.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/private/map.rkt"].isInvoked!==false){return(_2920)(M);}else{M.c.push(new RT.CallFrame(_2920,M.p));
return(M.modules["whalesong/lang/private/map.rkt"].label)(M);}}else{return(_2920)(M);}};

var _2911=function(M){if(--M.cbt<0){throw _2911;}
M.e.length-=M.a;
return(_2912)(M);};

var _2928=function(M){if(--M.cbt<0){throw _2928;}
M.e.length-=(M.a-1);
return(_2929)(M);};

var _2919=function(M){if(--M.cbt<0){throw _2919;}
M.e.length-=(M.a-1);
return(_2920)(M);};

var _2916=function(M){if(--M.cbt<0){throw _2916;}
M.e.length-=(M.a-1);
return(_2917)(M);};

var _2929=function(M){if(--M.cbt<0){throw _2929;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/base.rkt"].prefix=M.e[M.e.length-1];
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/base.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

_2917.mvr=_2916;
_2920.mvr=_2919;
_2923.mvr=_2922;
_2926.mvr=_2925;
_2929.mvr=_2928;
_2912.mvr=_2911;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2930, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/base.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/base.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Applications/Racket v5.1.3/collects/racket/private/modbeg.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2942=function(M){if(--M.cbt<0){throw _2942;}
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2949=function(M){if(--M.cbt<0){throw _2949;}
M.e.length-=(M.a-1);
return(_2950)(M);};

var _2950=function(M){if(--M.cbt<0){throw _2950;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["collects/racket/private/modbeg.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2951=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_2934,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["collects/racket/private/modbeg.rkt"]=new RT.ModuleRecord("modbeg",_2948);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2938=function(M){if(--M.cbt<0){throw _2938;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2942,M.p));
return((M.p).label)(M);};

var _2933=function(M){if(--M.cbt<0){throw _2933;}
M.e.length-=M.a;
return(_2934)(M);};


var _2934=function(M){if(--M.cbt<0){throw _2934;}
};

var _2948=function(M){--M.cbt<0;
M.modules["collects/racket/private/modbeg.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["print-values"]||M.primitives["print-values"]]);M.e[M.e.length-1].names=["print-values"];
M.modules["collects/racket/private/modbeg.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2950,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2931,(RT.makeArityAtLeast(0)),[],"print-values");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2941=function(M){if(--M.cbt<0){throw _2941;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2931=function(M){if(--M.cbt<0){throw _2931;}
M.unspliceRestFromStack(0,M.a);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["for-each"];
M.p=M.primitives["current-print"];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2938,M.p));
return((M.p).label)(M);};

_2942.mvr=_2941;
_2950.mvr=_2949;
_2934.mvr=_2933;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2951, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Applications/Racket v5.1.3/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Applications/Racket v5.1.3/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/list.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6246=function(M){if(--M.cbt<0){throw _6246;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6250,M.p));
return((M.p).label)(M);};


var _6652=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6668,M.p));
return((M.p).label)(M);};


var _6587=function(M){--M.cbt<0;
M.e.length+=1;
M.e.push(M.e[M.e.length-2][35]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6605,M.p));
return((M.p).label)(M);};

var _6116=function(M){if(--M.cbt<0){throw _6116;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6120,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6112)(M);}};

var _3039=function(M){if(--M.cbt<0){throw _3039;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][34]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6581,M.p));
return((M.p).label)(M);};

var _6065=function(M){if(--M.cbt<0){throw _6065;}
M.e[M.e.length-1]=M.v;
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-9][49];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.v=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6070,M.p));
return((M.p).label)(M);};

var _6513=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6530,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-1][32]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6584=function(M){if(--M.cbt<0){throw _6584;}
M.e.length-=(M.a-1);
return(_6577)(M);};


var _6434=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=RT.makeSymbol("foldr");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=2;
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-11];
M.e[M.e.length-7]=M.e[M.e.length-12];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6448,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6444)(M);}};

var _3037=function(M){if(--M.cbt<0){throw _3037;}
M.unspliceRestFromStack(3,(M.a-3));
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6438,M.p));
return((M.p).label)(M);};

var _6400=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6428,M.p));
return((M.p).label)(M);};

var _2971=function(M){if(--M.cbt<0){throw _2971;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2972)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2974)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2972)(M);}};

var _3036=function(M){if(--M.cbt<0){throw _3036;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3036,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=M.e[M.e.length-19];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6412,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-14];
return(_6406)(M);}}else{M.v=M.e[M.e.length-11];
return(_6403)(M);}}else{M.v=M.e[M.e.length-8];
return(_6400)(M);}}else{M.v=M.e[M.e.length-5];
return(_6397)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6360=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _6349=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3036,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_6374,M.p));
return(_3036)(M);}else{M.v=M.e[M.e.length-15];
return(_6369)(M);}}else{M.v=M.e[M.e.length-12];
return(_6366)(M);}}else{M.v=M.e[M.e.length-9];
return(_6363)(M);}}else{M.v=M.e[M.e.length-6];
return(_6360)(M);}}else{M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5523=function(M){if(--M.cbt<0){throw _5523;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3004,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _6468=function(M){if(--M.cbt<0){throw _6468;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6475,M.p));
return((M.p).label)(M);};

var _6236=function(M){--M.cbt<0;
M.e.length-=1;
return(_6221)(M);};


var _6215=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-2][26]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6235,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6227,M.p));
return((M.p).label)(M);}};

var _2968=function(M){if(--M.cbt<0){throw _2968;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4431,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3032=function(M){if(--M.cbt<0){throw _3032;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6167,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _6839=function(M){if(--M.cbt<0){throw _6839;}
M.c.push(new RT.PromptFrame(_6841,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2976,2,[M.e[M.e.length-1]],"remq");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3031=function(M){if(--M.cbt<0){throw _3031;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6100,M.p));
return((M.p).label)(M);};

var _3030=function(M){if(--M.cbt<0){throw _3030;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3031)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3033)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3031)(M);}};

var _6817=function(M){if(--M.cbt<0){throw _6817;}
M.c.push(new RT.PromptFrame(_6819,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2960,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3029=function(M){if(--M.cbt<0){throw _3029;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6039,M.p));
return((M.p).label)(M);};

var _6790=function(M){if(--M.cbt<0){throw _6790;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-14]);
M.v=3;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6794,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_6784)(M);}};

var _3028=function(M){if(--M.cbt<0){throw _3028;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6008,M.p));
return((M.p).label)(M);}else{M.v=RT.makePair(M.e[M.e.length-2],RT.NULL);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6836=function(M){if(--M.cbt<0){throw _6836;}
M.e.length-=(M.a-1);
return(_6837)(M);};

var _6828=function(M){if(--M.cbt<0){throw _6828;}
M.e.length-=(M.a-1);
return(_6829)(M);};

var _6701=function(M){if(--M.cbt<0){throw _6701;}
M.v=((plt.baselib.numbers.equals(2,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.e.push(M.e[M.e.length-7]);
M.v=2;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6707,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3024=function(M){if(--M.cbt<0){throw _3024;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][46];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3019=function(M){if(--M.cbt<0){throw _3019;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6803=function(M){if(--M.cbt<0){throw _6803;}
M.e.push([M.params.currentNamespace["do-remove"]||M.primitives["do-remove"],M.primitives["raise-type-error"],M.params.currentNamespace["remove"]||M.primitives["remove"],M.primitives["equal?"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.params.currentNamespace["remq"]||M.primitives["remq"],M.params.currentNamespace["remv"]||M.primitives["remv"],M.primitives["eqv?"],M.params.currentNamespace["do-remove*"]||M.primitives["do-remove*"],M.params.currentNamespace["remove*"]||M.primitives["remove*"],M.params.currentNamespace["remq*"]||M.primitives["remq*"],M.params.currentNamespace["remv*"]||M.primitives["remv*"],M.params.currentNamespace["memf"]||M.primitives["memf"],M.primitives["raise-mismatch-error"],M.params.currentNamespace["findf"]||M.primitives["findf"],M.params.currentNamespace["bad-list"]||M.primitives["bad-list"],M.params.currentNamespace["bad-item"]||M.primitives["bad-item"],M.params.currentNamespace["assq"]||M.primitives["assq"],M.params.currentNamespace["assv"]||M.primitives["assv"],M.params.currentNamespace["assoc"]||M.primitives["assoc"],M.params.currentNamespace["assf"]||M.primitives["assf"],M.modules["whalesong/lang/unsafe/ops.rkt"].namespace["unsafe-car1.1"],M.modules["whalesong/lang/unsafe/ops.rkt"].namespace["unsafe-cdr2.2"],M.params.currentNamespace["mapadd"]||M.primitives["mapadd"],M.params.currentNamespace["check-fold"]||M.primitives["check-fold"],M.primitives["length"],M.primitives["format"],M.params.currentNamespace["foldl"]||M.primitives["foldl"],M.primitives["map"],M.params.currentNamespace["foldr"]||M.primitives["foldr"],M.params.currentNamespace["filter"]||M.primitives["filter"],M.primitives["reverse"],M.params.currentNamespace["build-vector"]||M.primitives["build-vector"],M.primitives["exact-nonnegative-integer?"],M.primitives["make-vector"],M.primitives["vector-set!"],M.params.currentNamespace["build-string"]||M.primitives["build-string"],M.primitives["make-string"],M.primitives["string-set!"],M.params.currentNamespace["build-list"]||M.primitives["build-list"],M.primitives["zero?"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["do-remove","raise-type-error","remove","equal?","procedure?","procedure-arity-includes?","remq","remv","eqv?","do-remove*","remove*","remq*","remv*","memf","raise-mismatch-error","findf","bad-list","bad-item","assq","assv","assoc","assf","unsafe-car1.1","unsafe-cdr2.2","mapadd","check-fold","length","format","foldl","map","foldr","filter","reverse","build-vector","exact-nonnegative-integer?","make-vector","vector-set!","build-string","make-string","string-set!","build-list","zero?",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/private/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6805,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2952,3,[M.e[M.e.length-1]],"recr");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6626=function(M){if(--M.cbt<0){throw _6626;}
M.v=((plt.baselib.numbers.equals(2,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.e.push(M.e[M.e.length-7]);
M.v=2;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6632,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6601=function(M){if(--M.cbt<0){throw _6601;}
return(_6587)(M);};

var _3018=function(M){if(--M.cbt<0){throw _3018;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5851,M.p));
return((M.p).label)(M);};


var _4875=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4866)(M);};

var _4819=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6750=function(M){if(--M.cbt<0){throw _6750;}
M.e.length-=(M.a-1);
return(_6737)(M);};

var _5766=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5790,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3017=function(M){if(--M.cbt<0){throw _3017;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5772,M.p));
return((M.p).label)(M);};

var _3016=function(M){if(--M.cbt<0){throw _3016;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5756,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5750,M.p));
return((M.p).label)(M);}};

var _3015=function(M){if(--M.cbt<0){throw _3015;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5736,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5730,M.p));
return((M.p).label)(M);}};

var _6700=function(M){if(--M.cbt<0){throw _6700;}
M.e.length-=(M.a-1);
M.v=((plt.baselib.numbers.equals(2,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.e.push(M.e[M.e.length-7]);
M.v=2;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6707,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5684=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3014=function(M){if(--M.cbt<0){throw _3014;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5696,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3015,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-13];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5690,M.p));
return(_3015)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5684)(M);}}};

var _3012=function(M){if(--M.cbt<0){throw _3012;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][8]);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("remv*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5666,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5662)(M);}};

var _3011=function(M){if(--M.cbt<0){throw _3011;}
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=new RT.Closure(_3011,4,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5649,M.p));
return((M.p).label)(M);}};

var _3010=function(M){if(--M.cbt<0){throw _3010;}
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=new RT.Closure(_3010,4,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5633,M.p));
return((M.p).label)(M);}};

var _4740=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4731)(M);};

var _6175=function(M){if(--M.cbt<0){throw _6175;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6183,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3009=function(M){if(--M.cbt<0){throw _3009;}
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=new RT.Closure(_3009,4,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5617,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=4;
M.e[M.e.length-4]=new RT.Closure(_3011,4,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
M.e.splice(M.e.length-(4+6),6);
M.c[M.c.length-1].p=M.p;
return(_3011)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=4;
M.e[M.e.length-4]=new RT.Closure(_3010,4,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
M.c.push(new RT.CallFrame(_5601,M.p));
return(_3010)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5595)(M);}}};

var _3007=function(M){if(--M.cbt<0){throw _3007;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remq*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5577,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5573)(M);}};

var _3006=function(M){if(--M.cbt<0){throw _3006;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5563,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5557,M.p));
return((M.p).label)(M);}};

var _3005=function(M){if(--M.cbt<0){throw _3005;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5543,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5537,M.p));
return((M.p).label)(M);}};

var _4623=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3004=function(M){if(--M.cbt<0){throw _3004;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5503,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3005,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5497,M.p));
return(_3005)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5491)(M);}}};


var _3002=function(M){if(--M.cbt<0){throw _3002;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5459,M.p));
return((M.p).label)(M);};

var _3001=function(M){if(--M.cbt<0){throw _3001;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5443,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5437,M.p));
return((M.p).label)(M);}};

var _3000=function(M){if(--M.cbt<0){throw _3000;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5423,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5417,M.p));
return((M.p).label)(M);}};



var _2999=function(M){if(--M.cbt<0){throw _2999;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5383,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3000,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-13];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5377,M.p));
return(_3000)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5371)(M);}}};

var _2997=function(M){if(--M.cbt<0){throw _2997;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][3]);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5353,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5349)(M);}};

var _2996=function(M){if(--M.cbt<0){throw _2996;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2997)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3002)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2997)(M);}};

var _2994=function(M){if(--M.cbt<0){throw _2994;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5316,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5310,M.p));
return((M.p).label)(M);}};

var _2993=function(M){if(--M.cbt<0){throw _2993;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5296,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5290,M.p));
return((M.p).label)(M);}};

var _2992=function(M){if(--M.cbt<0){throw _2992;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5276,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5270,M.p));
return((M.p).label)(M);}};

var _2991=function(M){if(--M.cbt<0){throw _2991;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5256,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5250,M.p));
return((M.p).label)(M);}};

var _6447=function(M){if(--M.cbt<0){throw _6447;}
M.e.length-=(M.a-1);
return(_6444)(M);};

var _5204=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2990=function(M){if(--M.cbt<0){throw _2990;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5216,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2991,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5210,M.p));
return(_2991)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5204)(M);}}};

var _2988=function(M){if(--M.cbt<0){throw _2988;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5173,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5167,M.p));
return((M.p).label)(M);}};

var _6859=function(M){if(--M.cbt<0){throw _6859;}
M.c.push(new RT.PromptFrame(_6861,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3021,2,[M.e[M.e.length-2]],"assq");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3022,2,[M.e[M.e.length-3]],"assv");
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_3024,2,[M.e[M.e.length-6]],"...private/list.rkt:186:13");
M.e[M.e.length-2]=new RT.Closure(_3025,3,[M.e[M.e.length-6]],"...private/list.rkt:187:13");
M.e[M.e.length-3]=new RT.Closure(_3023,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"assoc");
M.e.length-=2;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_3026,2,[M.e[M.e.length-5]],"assf");
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6869,M.p));
return((M.p).label)(M);};


var _2987=function(M){if(--M.cbt<0){throw _2987;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5133,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2988,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5127,M.p));
return(_2988)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5121)(M);}}};

var _6837=function(M){if(--M.cbt<0){throw _6837;}
M.c.push(new RT.PromptFrame(_6839,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_2972,2,[M.e[M.e.length-3]],"...private/list.rkt:68:4");
M.e[M.e.length-2]=new RT.Closure(_2974,3,[M.e[M.e.length-3]],"...private/list.rkt:69:4");
M.v=new RT.Closure(_2971,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove");
M.e.length-=2;
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6827=function(M){if(--M.cbt<0){throw _6827;}
M.c.push(new RT.PromptFrame(_6829,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2965,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6825=function(M){if(--M.cbt<0){throw _6825;}
M.c.push(new RT.PromptFrame(_6827,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2964,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6815=function(M){if(--M.cbt<0){throw _6815;}
M.c.push(new RT.PromptFrame(_6817,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2959,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2986=function(M){if(--M.cbt<0){throw _2986;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5067,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2987,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-13];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5061,M.p));
return(_2987)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5055)(M);}}};

var _2985=function(M){if(--M.cbt<0){throw _2985;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5044,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5038,M.p));
return((M.p).label)(M);}};

var _2984=function(M){if(--M.cbt<0){throw _2984;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5024,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5018,M.p));
return((M.p).label)(M);}};

var _6757=function(M){if(--M.cbt<0){throw _6757;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-5]);
M.v=0;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6761,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6735=function(M){if(--M.cbt<0){throw _6735;}
return(_6727)(M);};

var _2983=function(M){if(--M.cbt<0){throw _2983;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4985,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2984,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_4979,M.p));
return(_2984)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4973)(M);}}}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2982=function(M){if(--M.cbt<0){throw _2982;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4959,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_4953,M.p));
return(_2983)(M);}};

var _6668=function(M){if(--M.cbt<0){throw _6668;}
if(M.v===false){M.v=false;
return(_6664)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6672,M.p));
return((M.p).label)(M);}};

var _6802=function(M){if(--M.cbt<0){throw _6802;}
M.e.length-=(M.a-1);
return(_6803)(M);};

var _2981=function(M){if(--M.cbt<0){throw _2981;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4920,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2982,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_4914,M.p));
return(_2982)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4908)(M);}}};

var _6597=function(M){if(--M.cbt<0){throw _6597;}
return(_6589)(M);};

var _2980=function(M){if(--M.cbt<0){throw _2980;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4893,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4889)(M);}};






var _2978=function(M){if(--M.cbt<0){throw _2978;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][8]);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("remv");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4810,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4806)(M);}};

var _6382=function(M){if(--M.cbt<0){throw _6382;}
return(_6366)(M);};

var _4795=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2977=function(M){if(--M.cbt<0){throw _2977;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2977,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4803,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4795)(M);}}else{M.e[M.e.length-3]=RT.NULL;
return(_4795)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6289=function(M){if(--M.cbt<0){throw _6289;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6294,M.p));
return((M.p).label)(M);};


var _2976=function(M){if(--M.cbt<0){throw _2976;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remq");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4758,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4754)(M);}};

var _6231=function(M){if(--M.cbt<0){throw _6231;}
return(_6221)(M);};

var _6645=function(M){if(--M.cbt<0){throw _6645;}
M.e.length-=(M.a-1);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=4;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2975=function(M){if(--M.cbt<0){throw _2975;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4721,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6635=function(M){if(--M.cbt<0){throw _6635;}
M.e.length-=(M.a-1);
M.v=((plt.baselib.numbers.equals(3,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=3;
M.e.push(M.e[M.e.length-7]);
M.v=3;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6642,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6110=function(M){if(--M.cbt<0){throw _6110;}
return(_6106)(M);};

var _6615=function(M){if(--M.cbt<0){throw _6615;}
M.e.length-=(M.a-1);
M.v=((plt.baselib.numbers.equals(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.e.push(M.e[M.e.length-7]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6622,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2974=function(M){if(--M.cbt<0){throw _2974;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4661,M.p));
return((M.p).label)(M);};

var _6600=function(M){if(--M.cbt<0){throw _6600;}
M.e.length-=(M.a-1);
return(_6587)(M);};



var _5968=function(M){if(--M.cbt<0){throw _5968;}
return(_5954)(M);};



var _2972=function(M){if(--M.cbt<0){throw _2972;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][3]);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("remove");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4576,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4572)(M);}};

var _5780=function(M){if(--M.cbt<0){throw _5780;}
return(_5766)(M);};

var _5750=function(M){if(--M.cbt<0){throw _5750;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2970=function(M){if(--M.cbt<0){throw _2970;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4536,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5666=function(M){if(--M.cbt<0){throw _5666;}
return(_5662)(M);};



var _2969=function(M){if(--M.cbt<0){throw _2969;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4490,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.v=RT.VOID;
return(_4486)(M);}};

var _5473=function(M){if(--M.cbt<0){throw _5473;}
return(_5469)(M);};


var _5403=function(M){if(--M.cbt<0){throw _5403;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2999,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6441=function(M){if(--M.cbt<0){throw _6441;}
M.e.length-=(M.a-1);
return(_6434)(M);};

var _5310=function(M){if(--M.cbt<0){throw _5310;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5236=function(M){if(--M.cbt<0){throw _5236;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2990,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2967=function(M){if(--M.cbt<0){throw _2967;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4381,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6835=function(M){if(--M.cbt<0){throw _6835;}
M.c.push(new RT.PromptFrame(_6837,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2969,4,[M.e[M.e.length-1]],"do-remove");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6356=function(M){if(--M.cbt<0){throw _6356;}
M.e.length-=(M.a-1);
return(_6349)(M);};

var _6823=function(M){if(--M.cbt<0){throw _6823;}
M.c.push(new RT.PromptFrame(_6825,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2963,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6813=function(M){if(--M.cbt<0){throw _6813;}
M.c.push(new RT.PromptFrame(_6815,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2957,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6807=function(M){if(--M.cbt<0){throw _6807;}
M.c.push(new RT.PromptFrame(_6809,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2954,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6783=function(M){if(--M.cbt<0){throw _6783;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.push(M.e[M.e.length-10][41]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6790,M.p));
return((M.p).label)(M);};

var _2966=function(M){if(--M.cbt<0){throw _2966;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4230,M.p));
return((M.p).label)(M);}};

var _6751=function(M){if(--M.cbt<0){throw _6751;}
return(_6737)(M);};

var _6731=function(M){if(--M.cbt<0){throw _6731;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("build-list");
M.e[M.e.length-2]="exact-nonnegative-integer";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6735,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6727)(M);}};

var _6697=function(M){if(--M.cbt<0){throw _6697;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6701,M.p));
return((M.p).label)(M);};

var _6691=function(M){if(--M.cbt<0){throw _6691;}
M.v=((plt.baselib.numbers.equals(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.e.push(M.e[M.e.length-7]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6697,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6660=function(M){if(--M.cbt<0){throw _6660;}
return(_6652)(M);};

var _6646=function(M){if(--M.cbt<0){throw _6646;}
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=4;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6622=function(M){if(--M.cbt<0){throw _6622;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6626,M.p));
return((M.p).label)(M);};

var _2965=function(M){if(--M.cbt<0){throw _2965;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4068,M.p));
return((M.p).label)(M);}};

var _6585=function(M){if(--M.cbt<0){throw _6585;}
return(_6577)(M);};

var _6544=function(M){if(--M.cbt<0){throw _6544;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6558,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6558,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _6507=function(M){if(--M.cbt<0){throw _6507;}
return(_6499)(M);};

var _6483=function(M){if(--M.cbt<0){throw _6483;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6487,M.p));
return((M.p).label)(M);};

var _6464=function(M){if(--M.cbt<0){throw _6464;}
M.e[M.e.length-1]=M.v;
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-8][53];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.v=3;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6469,M.p));
return((M.p).label)(M);};

var _6442=function(M){if(--M.cbt<0){throw _6442;}
return(_6434)(M);};

var _6416=function(M){if(--M.cbt<0){throw _6416;}
return(_6406)(M);};

var _2964=function(M){if(--M.cbt<0){throw _2964;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3906,M.p));
return((M.p).label)(M);}};

var _6357=function(M){if(--M.cbt<0){throw _6357;}
return(_6349)(M);};

var _6337=function(M){if(--M.cbt<0){throw _6337;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6341,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6333)(M);}};

var _6310=function(M){if(--M.cbt<0){throw _6310;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][50];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-16][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6317,M.p));
return((M.p).label)(M);}};

var _6285=function(M){if(--M.cbt<0){throw _6285;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6289,M.p));
return((M.p).label)(M);};

var _6269=function(M){if(--M.cbt<0){throw _6269;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6273,M.p));
return((M.p).label)(M);};

var _6240=function(M){if(--M.cbt<0){throw _6240;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6246,M.p));
return((M.p).label)(M);};

var _2963=function(M){if(--M.cbt<0){throw _2963;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3744,M.p));
return((M.p).label)(M);}};

var _6209=function(M){if(--M.cbt<0){throw _6209;}
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=RT.makeSymbol("foldl");
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-11];
M.e[M.e.length-7]=M.e[M.e.length-12];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6213,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6205)(M);}};

var _6167=function(M){if(--M.cbt<0){throw _6167;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6175,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6142=function(M){if(--M.cbt<0){throw _6142;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6150,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6104=function(M){if(--M.cbt<0){throw _6104;}
return(_6096)(M);};

var _6088=function(M){if(--M.cbt<0){throw _6088;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6057=function(M){if(--M.cbt<0){throw _6057;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6043=function(M){if(--M.cbt<0){throw _6043;}
return(_6035)(M);};

var _6022=function(M){if(--M.cbt<0){throw _6022;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6029,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-11],RT.NULL);
return(_6023)(M);}};

var _5999=function(M){if(--M.cbt<0){throw _5999;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3028,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_6002,M.p));
return(_3028)(M);};

var _2962=function(M){if(--M.cbt<0){throw _2962;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3578,M.p));
return((M.p).label)(M);}};

var _5944=function(M){if(--M.cbt<0){throw _5944;}
return(_5936)(M);};

var _5870=function(M){if(--M.cbt<0){throw _5870;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.push(M.e[M.e.length-5]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5882,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5812=function(M){if(--M.cbt<0){throw _5812;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5823,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5776=function(M){if(--M.cbt<0){throw _5776;}
return(_5768)(M);};

var _2961=function(M){if(--M.cbt<0){throw _2961;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]=M.e[M.e.length-14];
M.v=M.e[M.e.length-15];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3518,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3514)(M);}}else{M.v=RT.VOID;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5710=function(M){if(--M.cbt<0){throw _5710;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2960=function(M){if(--M.cbt<0){throw _2960;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3450,M.p));
return((M.p).label)(M);}};

var _5601=function(M){if(--M.cbt<0){throw _5601;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5595)(M);};

var _4757=function(M){if(--M.cbt<0){throw _4757;}
M.e.length-=(M.a-1);
return(_4754)(M);};

var _5517=function(M){if(--M.cbt<0){throw _5517;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2959=function(M){if(--M.cbt<0){throw _2959;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-6]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=RT.makeSymbol("foldl");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-15];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3390,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3386)(M);}}else{M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5443=function(M){if(--M.cbt<0){throw _5443;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3001,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2958=function(M){if(--M.cbt<0){throw _2958;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2958,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3382,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-10],RT.NULL);
return(_3376)(M);}}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-7],RT.NULL);
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-4],RT.NULL);
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5359=function(M){if(--M.cbt<0){throw _5359;}
return(_5355)(M);};

var _5296=function(M){if(--M.cbt<0){throw _5296;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2993,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5276=function(M){if(--M.cbt<0){throw _5276;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2992,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2957=function(M){if(--M.cbt<0){throw _2957;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3314,M.p));
return((M.p).label)(M);}};

var _5193=function(M){if(--M.cbt<0){throw _5193;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2989,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5153=function(M){if(--M.cbt<0){throw _5153;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2987,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5110=function(M){if(--M.cbt<0){throw _5110;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2986,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _2956=function(M){if(--M.cbt<0){throw _2956;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-6]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=RT.makeSymbol("foldr");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-15];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3254,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3250)(M);}}else{M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6811=function(M){if(--M.cbt<0){throw _6811;}
M.c.push(new RT.PromptFrame(_6813,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2956,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2955=function(M){if(--M.cbt<0){throw _2955;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3201,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-1][32]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _2954=function(M){if(--M.cbt<0){throw _2954;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][36];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3147,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6747=function(M){if(--M.cbt<0){throw _6747;}
return(_6739)(M);};

var _2953=function(M){if(--M.cbt<0){throw _2953;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][39];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3100,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6687=function(M){if(--M.cbt<0){throw _6687;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6691,M.p));
return((M.p).label)(M);};

var _6656=function(M){if(--M.cbt<0){throw _6656;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("build-string");
M.e[M.e.length-2]="exact-nonnegative-integer";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6660,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6652)(M);}};

var _6642=function(M){if(--M.cbt<0){throw _6642;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6646,M.p));
return((M.p).label)(M);};

var _6616=function(M){if(--M.cbt<0){throw _6616;}
M.v=((plt.baselib.numbers.equals(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.e.push(M.e[M.e.length-7]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6622,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6593=function(M){if(--M.cbt<0){throw _6593;}
if(M.v===false){M.v=false;
return(_6589)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6597,M.p));
return((M.p).label)(M);}};

var _6581=function(M){if(--M.cbt<0){throw _6581;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("build-vector");
M.e[M.e.length-2]="exact-nonnegative-integer";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6585,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6577)(M);}};

var _6530=function(M){if(--M.cbt<0){throw _6530;}
if(M.v===false){M.v=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.NULL;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6544,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=RT.NULL;
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6544,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _6503=function(M){if(--M.cbt<0){throw _6503;}
if(M.v===false){M.v=false;
return(_6499)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6507,M.p));
return((M.p).label)(M);}};

var _6479=function(M){if(--M.cbt<0){throw _6479;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][14];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][27];
M.e[M.e.length-1]="given procedure does not accept ~a arguments: ";
M.e.length+=1;
M.e.push(M.e[M.e.length-8][26]);
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6483,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6465)(M);}};

var _6460=function(M){if(--M.cbt<0){throw _6460;}
return(_6450)(M);};

var _6438=function(M){if(--M.cbt<0){throw _6438;}
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=RT.makeSymbol("foldr");
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-11];
M.e[M.e.length-7]=M.e[M.e.length-12];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6442,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6434)(M);}};

var _6412=function(M){if(--M.cbt<0){throw _6412;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6416,M.p));
return((M.p).label)(M);};

var _6378=function(M){if(--M.cbt<0){throw _6378;}
return(_6369)(M);};

var _6353=function(M){if(--M.cbt<0){throw _6353;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6357,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6349)(M);}};

var _6325=function(M){if(--M.cbt<0){throw _6325;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6305=function(M){if(--M.cbt<0){throw _6305;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6310,M.p));
return((M.p).label)(M);};

var _6278=function(M){if(--M.cbt<0){throw _6278;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6285,M.p));
return((M.p).label)(M);}};

var _6262=function(M){if(--M.cbt<0){throw _6262;}
return(_6236)(M);};

var _6235=function(M){if(--M.cbt<0){throw _6235;}
M.e[M.e.length-1]=M.v;
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-8][51];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.v=3;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6240,M.p));
return((M.p).label)(M);};

var _6227=function(M){if(--M.cbt<0){throw _6227;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6231,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6221)(M);}};

var _6199=function(M){if(--M.cbt<0){throw _6199;}
M.e[M.e.length-2]=M.v;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6158=function(M){if(--M.cbt<0){throw _6158;}
M.e[M.e.length-2]=M.v;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return(_3032)(M);};

var _6134=function(M){if(--M.cbt<0){throw _6134;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6142,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6100=function(M){if(--M.cbt<0){throw _6100;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6104,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6096)(M);}};

var _6084=function(M){if(--M.cbt<0){throw _6084;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6088,M.p));
return((M.p).label)(M);};


var _6039=function(M){if(--M.cbt<0){throw _6039;}
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6043,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6035)(M);}};

var _6015=function(M){if(--M.cbt<0){throw _6015;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6022,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-8],RT.NULL);
return(_6016)(M);}};

var _5992=function(M){if(--M.cbt<0){throw _5992;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5999,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-12],RT.NULL);
return(_5993)(M);}};

var _5964=function(M){if(--M.cbt<0){throw _5964;}
return(_5956)(M);};

var _5940=function(M){if(--M.cbt<0){throw _5940;}
if(M.v===false){M.v=false;
return(_5936)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5944,M.p));
return((M.p).label)(M);}};

var _5859=function(M){if(--M.cbt<0){throw _5859;}
return(_5845)(M);};

var _5801=function(M){if(--M.cbt<0){throw _5801;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5812,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5772=function(M){if(--M.cbt<0){throw _5772;}
if(M.v===false){M.v=false;
return(_5768)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5776,M.p));
return((M.p).label)(M);}};

var _5736=function(M){if(--M.cbt<0){throw _5736;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3015,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5696=function(M){if(--M.cbt<0){throw _5696;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5716,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5710,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3016,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_3016)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5649=function(M){if(--M.cbt<0){throw _5649;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5583=function(M){if(--M.cbt<0){throw _5583;}
return(_5579)(M);};


var _5503=function(M){if(--M.cbt<0){throw _5503;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5523,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5517,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3006,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_3006)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5467=function(M){if(--M.cbt<0){throw _5467;}
return(_5453)(M);};

var _5437=function(M){if(--M.cbt<0){throw _5437;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5397=function(M){if(--M.cbt<0){throw _5397;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5353=function(M){if(--M.cbt<0){throw _5353;}
return(_5349)(M);};

var _5290=function(M){if(--M.cbt<0){throw _5290;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5270=function(M){if(--M.cbt<0){throw _5270;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5230=function(M){if(--M.cbt<0){throw _5230;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5187=function(M){if(--M.cbt<0){throw _5187;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5147=function(M){if(--M.cbt<0){throw _5147;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5104=function(M){if(--M.cbt<0){throw _5104;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5067=function(M){if(--M.cbt<0){throw _5067;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5090,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2993,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=M.e[M.e.length-13];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.c.push(new RT.CallFrame(_5084,M.p));
return(_2993)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_5078)(M);}}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2990,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_2990)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _6821=function(M){if(--M.cbt<0){throw _6821;}
M.c.push(new RT.PromptFrame(_6823,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2962,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _6805=function(M){if(--M.cbt<0){throw _6805;}
M.c.push(new RT.PromptFrame(_6807,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2953,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _6768=function(M){if(--M.cbt<0){throw _6768;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-8]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6772,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_6762)(M);}};

var _6743=function(M){if(--M.cbt<0){throw _6743;}
if(M.v===false){M.v=false;
return(_6739)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6747,M.p));
return((M.p).label)(M);}};

var _6721=function(M){if(--M.cbt<0){throw _6721;}
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=4;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _6680=function(M){if(--M.cbt<0){throw _6680;}
M.e[M.e.length-1]=M.v;
M.v=((plt.baselib.numbers.equals(0,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=0;
M.e.push(M.e[M.e.length-7]);
M.v=0;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6687,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6636=function(M){if(--M.cbt<0){throw _6636;}
M.v=((plt.baselib.numbers.equals(3,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=3;
M.e.push(M.e[M.e.length-7]);
M.v=3;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6642,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6612=function(M){if(--M.cbt<0){throw _6612;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6616,M.p));
return((M.p).label)(M);};


var _6571=function(M){if(--M.cbt<0){throw _6571;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6517=function(M){if(--M.cbt<0){throw _6517;}
return(_6513)(M);};

var _6491=function(M){if(--M.cbt<0){throw _6491;}
return(_6465)(M);};

var _6475=function(M){if(--M.cbt<0){throw _6475;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6479,M.p));
return((M.p).label)(M);};

var _6456=function(M){if(--M.cbt<0){throw _6456;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6460,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6450)(M);}};

var _6428=function(M){if(--M.cbt<0){throw _6428;}
return(_6397)(M);};

var _6390=function(M){if(--M.cbt<0){throw _6390;}
return(_6360)(M);};

var _6374=function(M){if(--M.cbt<0){throw _6374;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6378,M.p));
return((M.p).label)(M);};

var _6347=function(M){if(--M.cbt<0){throw _6347;}
return(_6343)(M);};

var _6321=function(M){if(--M.cbt<0){throw _6321;}
M.e[M.e.length-2]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6325,M.p));
return((M.p).label)(M);};

var _6301=function(M){if(--M.cbt<0){throw _6301;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6305,M.p));
return((M.p).label)(M);};

var _6273=function(M){if(--M.cbt<0){throw _6273;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6278,M.p));
return((M.p).label)(M);};

var _6258=function(M){if(--M.cbt<0){throw _6258;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6262,M.p));
return((M.p).label)(M);};

var _6119=function(M){if(--M.cbt<0){throw _6119;}
M.e.length-=(M.a-1);
return(_6112)(M);};

var _6219=function(M){if(--M.cbt<0){throw _6219;}
return(_6215)(M);};

var _6191=function(M){if(--M.cbt<0){throw _6191;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3032,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6199,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6150=function(M){if(--M.cbt<0){throw _6150;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3032,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6158,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6126=function(M){if(--M.cbt<0){throw _6126;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6134,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6080=function(M){if(--M.cbt<0){throw _6080;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][14];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][27];
M.e[M.e.length-1]="given procedure does not accept ~a arguments: ";
M.e.length+=1;
M.e.push(M.e[M.e.length-8][26]);
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6084,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6049=function(M){if(--M.cbt<0){throw _6049;}
return(_6045)(M);};

var _6033=function(M){if(--M.cbt<0){throw _6033;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_6023)(M);};

var _6008=function(M){if(--M.cbt<0){throw _6008;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6015,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-5],RT.NULL);
return(_6009)(M);}};

var _5985=function(M){if(--M.cbt<0){throw _5985;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5992,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-9],RT.NULL);
return(_5986)(M);}};

var _5960=function(M){if(--M.cbt<0){throw _5960;}
if(M.v===false){M.v=false;
return(_5956)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5964,M.p));
return((M.p).label)(M);}};

var _5894=function(M){if(--M.cbt<0){throw _5894;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][43];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5855=function(M){if(--M.cbt<0){throw _5855;}
return(_5847)(M);};

var _5790=function(M){if(--M.cbt<0){throw _5790;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5801,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5756=function(M){if(--M.cbt<0){throw _5756;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3016,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5730=function(M){if(--M.cbt<0){throw _5730;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5690=function(M){if(--M.cbt<0){throw _5690;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5684)(M);};

var _5633=function(M){if(--M.cbt<0){throw _5633;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5577=function(M){if(--M.cbt<0){throw _5577;}
return(_5573)(M);};

var _3382=function(M){if(--M.cbt<0){throw _3382;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3376)(M);};

var _5497=function(M){if(--M.cbt<0){throw _5497;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5491)(M);};

var _5463=function(M){if(--M.cbt<0){throw _5463;}
return(_5455)(M);};

var _5423=function(M){if(--M.cbt<0){throw _5423;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3000,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5383=function(M){if(--M.cbt<0){throw _5383;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5403,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5397,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3001,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_3001)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5336=function(M){if(--M.cbt<0){throw _5336;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2995,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3215=function(M){if(--M.cbt<0){throw _3215;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3229,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3229,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _5256=function(M){if(--M.cbt<0){throw _5256;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2991,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5216=function(M){if(--M.cbt<0){throw _5216;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5236,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5230,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2992,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_2992)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5173=function(M){if(--M.cbt<0){throw _5173;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2988,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5133=function(M){if(--M.cbt<0){throw _5133;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5153,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5147,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2989,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_2989)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5090=function(M){if(--M.cbt<0){throw _5090;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5110,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5104,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2994,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+8),8);
M.c[M.c.length-1].p=M.p;
return(_2994)(M);}else{M.v=RT.NULL;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5061=function(M){if(--M.cbt<0){throw _5061;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5055)(M);};

var _6819=function(M){if(--M.cbt<0){throw _6819;}
M.c.push(new RT.PromptFrame(_6821,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2961,7,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][49]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5779=function(M){if(--M.cbt<0){throw _5779;}
M.e.length-=(M.a-1);
return(_5766)(M);};

var _4940=function(M){if(--M.cbt<0){throw _4940;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2981,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _6761=function(M){if(--M.cbt<0){throw _6761;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.push(M.e[M.e.length-4][41]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6768,M.p));
return((M.p).label)(M);};


var _6717=function(M){if(--M.cbt<0){throw _6717;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6721,M.p));
return((M.p).label)(M);};


var _6676=function(M){if(--M.cbt<0){throw _6676;}
return(_6662)(M);};


var _6632=function(M){if(--M.cbt<0){throw _6632;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6636,M.p));
return((M.p).label)(M);};


var _6239=function(M){if(--M.cbt<0){throw _6239;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6246,M.p));
return((M.p).label)(M);};

var _6558=function(M){if(--M.cbt<0){throw _6558;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][54];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6571,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][54];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6571,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _6511=function(M){if(--M.cbt<0){throw _6511;}
return(_6497)(M);};

var _6487=function(M){if(--M.cbt<0){throw _6487;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6491,M.p));
return((M.p).label)(M);};

var _6469=function(M){if(--M.cbt<0){throw _6469;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6475,M.p));
return((M.p).label)(M);};

var _6448=function(M){if(--M.cbt<0){throw _6448;}
return(_6444)(M);};

var _6424=function(M){if(--M.cbt<0){throw _6424;}
return(_6400)(M);};



var _6341=function(M){if(--M.cbt<0){throw _6341;}
return(_6333)(M);};

var _6317=function(M){if(--M.cbt<0){throw _6317;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6321,M.p));
return((M.p).label)(M);};

var _6294=function(M){if(--M.cbt<0){throw _6294;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-12][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6301,M.p));
return((M.p).label)(M);}};


var _6254=function(M){if(--M.cbt<0){throw _6254;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6258,M.p));
return((M.p).label)(M);};


var _6213=function(M){if(--M.cbt<0){throw _6213;}
return(_6205)(M);};

var _6183=function(M){if(--M.cbt<0){throw _6183;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6191,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6120=function(M){if(--M.cbt<0){throw _6120;}
return(_6112)(M);};

var _6069=function(M){if(--M.cbt<0){throw _6069;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6076,M.p));
return((M.p).label)(M);};

var _6076=function(M){if(--M.cbt<0){throw _6076;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6080,M.p));
return((M.p).label)(M);};

var _6048=function(M){if(--M.cbt<0){throw _6048;}
M.e.length-=(M.a-1);
return(_6045)(M);};

var _6029=function(M){if(--M.cbt<0){throw _6029;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3028,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6033,M.p));
return((M.p).label)(M);};

var _6002=function(M){if(--M.cbt<0){throw _6002;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5993)(M);};

var _5978=function(M){if(--M.cbt<0){throw _5978;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5985,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],RT.NULL);
return(_5979)(M);}};

var _5948=function(M){if(--M.cbt<0){throw _5948;}
return(_5934)(M);};

var _5882=function(M){if(--M.cbt<0){throw _5882;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5894,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5851=function(M){if(--M.cbt<0){throw _5851;}
if(M.v===false){M.v=false;
return(_5847)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5855,M.p));
return((M.p).label)(M);}};

var _3528=function(M){if(--M.cbt<0){throw _3528;}
return(_3520)(M);};


var _5716=function(M){if(--M.cbt<0){throw _5716;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3014,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5672=function(M){if(--M.cbt<0){throw _5672;}
return(_5668)(M);};

var _5617=function(M){if(--M.cbt<0){throw _5617;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5563=function(M){if(--M.cbt<0){throw _5563;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3006,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3400=function(M){if(--M.cbt<0){throw _3400;}
return(_3392)(M);};

var _5479=function(M){if(--M.cbt<0){throw _5479;}
return(_5475)(M);};

var _5459=function(M){if(--M.cbt<0){throw _5459;}
if(M.v===false){M.v=false;
return(_5455)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5463,M.p));
return((M.p).label)(M);}};

var _5417=function(M){if(--M.cbt<0){throw _5417;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5377=function(M){if(--M.cbt<0){throw _5377;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5371)(M);};

var _5330=function(M){if(--M.cbt<0){throw _5330;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3201=function(M){if(--M.cbt<0){throw _3201;}
if(M.v===false){M.v=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3215,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3215,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _5250=function(M){if(--M.cbt<0){throw _5250;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5210=function(M){if(--M.cbt<0){throw _5210;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5204)(M);};

var _5167=function(M){if(--M.cbt<0){throw _5167;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5127=function(M){if(--M.cbt<0){throw _5127;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5121)(M);};

var _5084=function(M){if(--M.cbt<0){throw _5084;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_5078)(M);};

var _5044=function(M){if(--M.cbt<0){throw _5044;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2985,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5024=function(M){if(--M.cbt<0){throw _5024;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2984,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4985=function(M){if(--M.cbt<0){throw _4985;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5005,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4999,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2985,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return(_2985)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4934=function(M){if(--M.cbt<0){throw _4934;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4899=function(M){if(--M.cbt<0){throw _4899;}
return(_4895)(M);};

var _4874=function(M){if(--M.cbt<0){throw _4874;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4883,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4875)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4866)(M);}};

var _4845=function(M){if(--M.cbt<0){throw _4845;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2979,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_4848,M.p));
return(_2979)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4837)(M);}};

var _4810=function(M){if(--M.cbt<0){throw _4810;}
return(_4806)(M);};

var _4752=function(M){if(--M.cbt<0){throw _4752;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4740)(M);};

var _4721=function(M){if(--M.cbt<0){throw _4721;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4730,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4722)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4692=function(M){if(--M.cbt<0){throw _4692;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4701,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4693)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4684)(M);}};

var _4665=function(M){if(--M.cbt<0){throw _4665;}
return(_4657)(M);};

var _4640=function(M){if(--M.cbt<0){throw _4640;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4649,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4641)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4632)(M);}};

var _4611=function(M){if(--M.cbt<0){throw _4611;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2973,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_4614,M.p));
return(_2973)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4603)(M);}};

var _4576=function(M){if(--M.cbt<0){throw _4576;}
return(_4572)(M);};

var _4545=function(M){if(--M.cbt<0){throw _4545;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4554,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4546)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4537)(M);}};

var _4516=function(M){if(--M.cbt<0){throw _4516;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4525,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4517)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4508)(M);}};

var _4464=function(M){if(--M.cbt<0){throw _4464;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4405=function(M){if(--M.cbt<0){throw _4405;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][43];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4314=function(M){if(--M.cbt<0){throw _4314;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-11][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4319,M.p));
return((M.p).label)(M);};

var _4290=function(M){if(--M.cbt<0){throw _4290;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-8][23]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4294,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4259=function(M){if(--M.cbt<0){throw _4259;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4263,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4230=function(M){if(--M.cbt<0){throw _4230;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4239,M.p));
return((M.p).label)(M);}};

var _4160=function(M){if(--M.cbt<0){throw _4160;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4164,M.p));
return((M.p).label)(M);};

var _4136=function(M){if(--M.cbt<0){throw _4136;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4140,M.p));
return((M.p).label)(M);};

var _4105=function(M){if(--M.cbt<0){throw _4105;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4109,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4011=function(M){if(--M.cbt<0){throw _4011;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-15][46];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3989=function(M){if(--M.cbt<0){throw _3989;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][3];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.push(M.e[M.e.length-11][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3998,M.p));
return((M.p).label)(M);}};

var _3982=function(M){if(--M.cbt<0){throw _3982;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3989,M.p));
return((M.p).label)(M);}};

var _3952=function(M){if(--M.cbt<0){throw _3952;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-7][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3965,M.p));
return((M.p).label)(M);}}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3930=function(M){if(--M.cbt<0){throw _3930;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3939,M.p));
return((M.p).label)(M);}};

var _3840=function(M){if(--M.cbt<0){throw _3840;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-10][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3844,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3820=function(M){if(--M.cbt<0){throw _3820;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3827,M.p));
return((M.p).label)(M);}};

var _3790=function(M){if(--M.cbt<0){throw _3790;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-7][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3803,M.p));
return((M.p).label)(M);}}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3781=function(M){if(--M.cbt<0){throw _3781;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3785,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3687=function(M){if(--M.cbt<0){throw _3687;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-15][48];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3664=function(M){if(--M.cbt<0){throw _3664;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-10][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3673,M.p));
return((M.p).label)(M);}};

var _3648=function(M){if(--M.cbt<0){throw _3648;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3653,M.p));
return((M.p).label)(M);};

var _3612=function(M){if(--M.cbt<0){throw _3612;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3617,M.p));
return((M.p).label)(M);};

var _3592=function(M){if(--M.cbt<0){throw _3592;}
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3596,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3558=function(M){if(--M.cbt<0){throw _3558;}
return(_3554)(M);};

var _3548=function(M){if(--M.cbt<0){throw _3548;}
return(_3540)(M);};

var _3506=function(M){if(--M.cbt<0){throw _3506;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3498=function(M){if(--M.cbt<0){throw _3498;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3502,M.p));
return((M.p).label)(M);};

var _3459=function(M){if(--M.cbt<0){throw _3459;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3466,M.p));
return((M.p).label)(M);}};

var _3454=function(M){if(--M.cbt<0){throw _3454;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3459,M.p));
return((M.p).label)(M);};

var _3416=function(M){if(--M.cbt<0){throw _3416;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3420,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3412)(M);}};

var _3396=function(M){if(--M.cbt<0){throw _3396;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3400,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3392)(M);}};

var _3344=function(M){if(--M.cbt<0){throw _3344;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3348,M.p));
return((M.p).label)(M);};

var _3321=function(M){if(--M.cbt<0){throw _3321;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-13];
return(_3322)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-16][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-19][52];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-21][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3328,M.p));
return((M.p).label)(M);}};

var _3294=function(M){if(--M.cbt<0){throw _3294;}
return(_3290)(M);};

var _3284=function(M){if(--M.cbt<0){throw _3284;}
return(_3276)(M);};

var _3260=function(M){if(--M.cbt<0){throw _3260;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3264,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3256)(M);}};

var _6887=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_3044,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/list.rkt"]=new RT.ModuleRecord("list",_6800);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3158=function(M){if(--M.cbt<0){throw _3158;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3162,M.p));
return((M.p).label)(M);};

var _3133=function(M){if(--M.cbt<0){throw _3133;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3137,M.p));
return((M.p).label)(M);};

var _3126=function(M){if(--M.cbt<0){throw _3126;}
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][39];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3133,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3104=function(M){if(--M.cbt<0){throw _3104;}
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-8]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3111,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3086=function(M){if(--M.cbt<0){throw _3086;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-16]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3090,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_3080)(M);}};

var _5038=function(M){if(--M.cbt<0){throw _5038;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5018=function(M){if(--M.cbt<0){throw _5018;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4979=function(M){if(--M.cbt<0){throw _4979;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_4973)(M);};

var _4920=function(M){if(--M.cbt<0){throw _4920;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4940,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4934,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2995,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return(_2995)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4893=function(M){if(--M.cbt<0){throw _4893;}
return(_4889)(M);};

var _4865=function(M){if(--M.cbt<0){throw _4865;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4874,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4866)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4857)(M);}};

var _4836=function(M){if(--M.cbt<0){throw _4836;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4845,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4837)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4828)(M);}};

var _4803=function(M){if(--M.cbt<0){throw _4803;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4795)(M);};

var _4748=function(M){if(--M.cbt<0){throw _4748;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2975,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4752,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4740)(M);}};

var _4713=function(M){if(--M.cbt<0){throw _4713;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4702)(M);};

var _4683=function(M){if(--M.cbt<0){throw _4683;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4692,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4684)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4661=function(M){if(--M.cbt<0){throw _4661;}
if(M.v===false){M.v=false;
return(_4657)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4665,M.p));
return((M.p).label)(M);}};

var _4631=function(M){if(--M.cbt<0){throw _4631;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4640,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4632)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4623)(M);}};

var _4602=function(M){if(--M.cbt<0){throw _4602;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4611,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4603)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4594)(M);}};

var _4567=function(M){if(--M.cbt<0){throw _4567;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4555)(M);};

var _4536=function(M){if(--M.cbt<0){throw _4536;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4545,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4537)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4507=function(M){if(--M.cbt<0){throw _4507;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4516,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4508)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4499)(M);}};

var _4453=function(M){if(--M.cbt<0){throw _4453;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4464,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4393=function(M){if(--M.cbt<0){throw _4393;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4405,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4310=function(M){if(--M.cbt<0){throw _4310;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-10][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4314,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4281=function(M){if(--M.cbt<0){throw _4281;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4290,M.p));
return((M.p).label)(M);}};

var _4250=function(M){if(--M.cbt<0){throw _4250;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4259,M.p));
return((M.p).label)(M);}};

var _4173=function(M){if(--M.cbt<0){throw _4173;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-15][45];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4151=function(M){if(--M.cbt<0){throw _4151;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][8];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.push(M.e[M.e.length-11][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4160,M.p));
return((M.p).label)(M);}};

var _4127=function(M){if(--M.cbt<0){throw _4127;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][8];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4136,M.p));
return((M.p).label)(M);}};

var _4101=function(M){if(--M.cbt<0){throw _4101;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4105,M.p));
return((M.p).label)(M);};

var _4081=function(M){if(--M.cbt<0){throw _4081;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4085,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4006=function(M){if(--M.cbt<0){throw _4006;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-11][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4011,M.p));
return((M.p).label)(M);};

var _3978=function(M){if(--M.cbt<0){throw _3978;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-8][23]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3982,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3947=function(M){if(--M.cbt<0){throw _3947;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3952,M.p));
return((M.p).label)(M);};

var _3923=function(M){if(--M.cbt<0){throw _3923;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3930,M.p));
return((M.p).label)(M);}};

var _3906=function(M){if(--M.cbt<0){throw _3906;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3915,M.p));
return((M.p).label)(M);}};

var _3816=function(M){if(--M.cbt<0){throw _3816;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-8][23]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3820,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3785=function(M){if(--M.cbt<0){throw _3785;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3790,M.p));
return((M.p).label)(M);};

var _3777=function(M){if(--M.cbt<0){throw _3777;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3781,M.p));
return((M.p).label)(M);};

var _3757=function(M){if(--M.cbt<0){throw _3757;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3761,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3682=function(M){if(--M.cbt<0){throw _3682;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-11][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3687,M.p));
return((M.p).label)(M);};

var _3639=function(M){if(--M.cbt<0){throw _3639;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-8][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3648,M.p));
return((M.p).label)(M);}};

var _3626=function(M){if(--M.cbt<0){throw _3626;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-7][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3639,M.p));
return((M.p).label)(M);}}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3587=function(M){if(--M.cbt<0){throw _3587;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3592,M.p));
return((M.p).label)(M);};

var _3578=function(M){if(--M.cbt<0){throw _3578;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-3][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3587,M.p));
return((M.p).label)(M);}};

var _3544=function(M){if(--M.cbt<0){throw _3544;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3548,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3540)(M);}};

var _3502=function(M){if(--M.cbt<0){throw _3502;}
M.e[M.e.length-2]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3506,M.p));
return((M.p).label)(M);};

var _3491=function(M){if(--M.cbt<0){throw _3491;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][50];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3498,M.p));
return((M.p).label)(M);}};

var _3475=function(M){if(--M.cbt<0){throw _3475;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3482,M.p));
return((M.p).label)(M);}};

var _3450=function(M){if(--M.cbt<0){throw _3450;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3454,M.p));
return((M.p).label)(M);};

var _3410=function(M){if(--M.cbt<0){throw _3410;}
return(_3406)(M);};

var _5557=function(M){if(--M.cbt<0){throw _5557;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3363=function(M){if(--M.cbt<0){throw _3363;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3358)(M);};

var _3336=function(M){if(--M.cbt<0){throw _3336;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3340,M.p));
return((M.p).label)(M);};

var _3300=function(M){if(--M.cbt<0){throw _3300;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3304,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3296)(M);}};

var _3280=function(M){if(--M.cbt<0){throw _3280;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3284,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3276)(M);}};

var _3254=function(M){if(--M.cbt<0){throw _3254;}
return(_3250)(M);};

var _3184=function(M){if(--M.cbt<0){throw _3184;}
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][55];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3169=function(M){if(--M.cbt<0){throw _3169;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3173,M.p));
return((M.p).label)(M);};

var _3147=function(M){if(--M.cbt<0){throw _3147;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3151,M.p));
return((M.p).label)(M);};

var _3122=function(M){if(--M.cbt<0){throw _3122;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3126,M.p));
return((M.p).label)(M);};

var _3100=function(M){if(--M.cbt<0){throw _3100;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3104,M.p));
return((M.p).label)(M);};

var _3078=function(M){if(--M.cbt<0){throw _3078;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.push(M.e[M.e.length-13][41]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3086,M.p));
return((M.p).label)(M);};

var _3050=function(M){if(--M.cbt<0){throw _3050;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3054,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5005=function(M){if(--M.cbt<0){throw _5005;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2986,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return(_2986)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4959=function(M){if(--M.cbt<0){throw _4959;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2982,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3044=function(M){if(--M.cbt<0){throw _3044;}
};

var _4887=function(M){if(--M.cbt<0){throw _4887;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4875)(M);};

var _4856=function(M){if(--M.cbt<0){throw _4856;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4865,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4857)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4827=function(M){if(--M.cbt<0){throw _4827;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4836,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4828)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4819)(M);}};

var _4780=function(M){if(--M.cbt<0){throw _4780;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4773)(M);};

var _4739=function(M){if(--M.cbt<0){throw _4739;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4748,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4740)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4731)(M);}};

var _4710=function(M){if(--M.cbt<0){throw _4710;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2975,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-18];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_4713,M.p));
return(_2975)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4702)(M);}};

var _4675=function(M){if(--M.cbt<0){throw _4675;}
return(_4671)(M);};

var _4653=function(M){if(--M.cbt<0){throw _4653;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4641)(M);};

var _4622=function(M){if(--M.cbt<0){throw _4622;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4631,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4623)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4593=function(M){if(--M.cbt<0){throw _4593;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4602,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4594)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4585)(M);}};

var _4563=function(M){if(--M.cbt<0){throw _4563;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2970,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4567,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4555)(M);}};

var _4528=function(M){if(--M.cbt<0){throw _4528;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4517)(M);};

var _4498=function(M){if(--M.cbt<0){throw _4498;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4507,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4499)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4442=function(M){if(--M.cbt<0){throw _4442;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4453,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4381=function(M){if(--M.cbt<0){throw _4381;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.push(M.e[M.e.length-5]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4393,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4301=function(M){if(--M.cbt<0){throw _4301;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.push(M.e[M.e.length-11][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4310,M.p));
return((M.p).label)(M);}};

var _4268=function(M){if(--M.cbt<0){throw _4268;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-7][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4281,M.p));
return((M.p).label)(M);}}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4243=function(M){if(--M.cbt<0){throw _4243;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4250,M.p));
return((M.p).label)(M);}};

var _4168=function(M){if(--M.cbt<0){throw _4168;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-11][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4173,M.p));
return((M.p).label)(M);};

var _4144=function(M){if(--M.cbt<0){throw _4144;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4151,M.p));
return((M.p).label)(M);}};

var _4114=function(M){if(--M.cbt<0){throw _4114;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-7][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4127,M.p));
return((M.p).label)(M);}}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4092=function(M){if(--M.cbt<0){throw _4092;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][8];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4101,M.p));
return((M.p).label)(M);}};

var _4077=function(M){if(--M.cbt<0){throw _4077;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4081,M.p));
return((M.p).label)(M);};

var _4002=function(M){if(--M.cbt<0){throw _4002;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-10][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4006,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3974=function(M){if(--M.cbt<0){throw _3974;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3978,M.p));
return((M.p).label)(M);};

var _3943=function(M){if(--M.cbt<0){throw _3943;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3947,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3919=function(M){if(--M.cbt<0){throw _3919;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3923,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3849=function(M){if(--M.cbt<0){throw _3849;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-16][47];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-18];
M.e[M.e.length-3]=M.e[M.e.length-19];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3836=function(M){if(--M.cbt<0){throw _3836;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3840,M.p));
return((M.p).label)(M);};

var _3812=function(M){if(--M.cbt<0){throw _3812;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3816,M.p));
return((M.p).label)(M);};

var _3768=function(M){if(--M.cbt<0){throw _3768;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3777,M.p));
return((M.p).label)(M);}};

var _3753=function(M){if(--M.cbt<0){throw _3753;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3757,M.p));
return((M.p).label)(M);};

var _3678=function(M){if(--M.cbt<0){throw _3678;}
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-10][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3682,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3657=function(M){if(--M.cbt<0){throw _3657;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3664,M.p));
return((M.p).label)(M);}};

var _3621=function(M){if(--M.cbt<0){throw _3621;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3626,M.p));
return((M.p).label)(M);};

var _3603=function(M){if(--M.cbt<0){throw _3603;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-5][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3612,M.p));
return((M.p).label)(M);}};

var _3568=function(M){if(--M.cbt<0){throw _3568;}
return(_3560)(M);};

var _5823=function(M){if(--M.cbt<0){throw _5823;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3524=function(M){if(--M.cbt<0){throw _3524;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3528,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3520)(M);}};

var _3486=function(M){if(--M.cbt<0){throw _3486;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3491,M.p));
return((M.p).label)(M);};

var _3470=function(M){if(--M.cbt<0){throw _3470;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3475,M.p));
return((M.p).label)(M);};

var _3440=function(M){if(--M.cbt<0){throw _3440;}
return(_3432)(M);};

var _3430=function(M){if(--M.cbt<0){throw _3430;}
return(_3426)(M);};

var _5543=function(M){if(--M.cbt<0){throw _5543;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3005,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3348=function(M){if(--M.cbt<0){throw _3348;}
M.e[M.e.length-2]=M.v;
return(_3315)(M);};

var _3332=function(M){if(--M.cbt<0){throw _3332;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3336,M.p));
return((M.p).label)(M);};

var _3314=function(M){if(--M.cbt<0){throw _3314;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e[M.e.length-2]=M.e[M.e.length-7];
return(_3315)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3321,M.p));
return((M.p).label)(M);}};

var _3274=function(M){if(--M.cbt<0){throw _3274;}
return(_3270)(M);};

var _3242=function(M){if(--M.cbt<0){throw _3242;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5316=function(M){if(--M.cbt<0){throw _5316;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2994,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3162=function(M){if(--M.cbt<0){throw _3162;}
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][36];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-9]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3169,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3137=function(M){if(--M.cbt<0){throw _3137;}
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][56];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3115=function(M){if(--M.cbt<0){throw _3115;}
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][39];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-9]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3122,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3094=function(M){if(--M.cbt<0){throw _3094;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3080)(M);};

var _3074=function(M){if(--M.cbt<0){throw _3074;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-12]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3078,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_3068)(M);}};

var _3062=function(M){if(--M.cbt<0){throw _3062;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-8]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3066,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_3056)(M);}};

var _4999=function(M){if(--M.cbt<0){throw _4999;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4953=function(M){if(--M.cbt<0){throw _4953;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4914=function(M){if(--M.cbt<0){throw _4914;}
M.e[M.e.length-4]=M.v;
M.e.length-=1;
return(_4908)(M);};

var _4883=function(M){if(--M.cbt<0){throw _4883;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2979,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4887,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4875)(M);}};

var _4848=function(M){if(--M.cbt<0){throw _4848;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4837)(M);};

var _4818=function(M){if(--M.cbt<0){throw _4818;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4827,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4819)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4758=function(M){if(--M.cbt<0){throw _4758;}
return(_4754)(M);};

var _4730=function(M){if(--M.cbt<0){throw _4730;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4739,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4731)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4722)(M);}};

var _4701=function(M){if(--M.cbt<0){throw _4701;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4710,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4702)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4693)(M);}};

var _4669=function(M){if(--M.cbt<0){throw _4669;}
return(_4655)(M);};

var _4649=function(M){if(--M.cbt<0){throw _4649;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2973,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4653,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4641)(M);}};

var _4614=function(M){if(--M.cbt<0){throw _4614;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4603)(M);};

var _4584=function(M){if(--M.cbt<0){throw _4584;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4593,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4585)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4554=function(M){if(--M.cbt<0){throw _4554;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4563,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_4555)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4546)(M);}};

var _4525=function(M){if(--M.cbt<0){throw _4525;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2970,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-19];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_4528,M.p));
return(_2970)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4517)(M);}};

var _4490=function(M){if(--M.cbt<0){throw _4490;}
return(_4486)(M);};

var _4431=function(M){if(--M.cbt<0){throw _4431;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][14];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4442,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4319=function(M){if(--M.cbt<0){throw _4319;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-15][44];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4294=function(M){if(--M.cbt<0){throw _4294;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][14];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4301,M.p));
return((M.p).label)(M);}};

var _4263=function(M){if(--M.cbt<0){throw _4263;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4268,M.p));
return((M.p).label)(M);};

var _4239=function(M){if(--M.cbt<0){throw _4239;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4243,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4164=function(M){if(--M.cbt<0){throw _4164;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-10][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4168,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4140=function(M){if(--M.cbt<0){throw _4140;}
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-8][23]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4144,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4109=function(M){if(--M.cbt<0){throw _4109;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4114,M.p));
return((M.p).label)(M);};

var _4085=function(M){if(--M.cbt<0){throw _4085;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4092,M.p));
return((M.p).label)(M);}};

var _4068=function(M){if(--M.cbt<0){throw _4068;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][8];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4077,M.p));
return((M.p).label)(M);}};

var _3998=function(M){if(--M.cbt<0){throw _3998;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4002,M.p));
return((M.p).label)(M);};

var _3965=function(M){if(--M.cbt<0){throw _3965;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3974,M.p));
return((M.p).label)(M);}};

var _3939=function(M){if(--M.cbt<0){throw _3939;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3943,M.p));
return((M.p).label)(M);};

var _3915=function(M){if(--M.cbt<0){throw _3915;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3919,M.p));
return((M.p).label)(M);};

var _3844=function(M){if(--M.cbt<0){throw _3844;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-11][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3849,M.p));
return((M.p).label)(M);};

var _3827=function(M){if(--M.cbt<0){throw _3827;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-14][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e.push(M.e[M.e.length-11][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3836,M.p));
return((M.p).label)(M);}};

var _3803=function(M){if(--M.cbt<0){throw _3803;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e.push(M.e[M.e.length-9][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3812,M.p));
return((M.p).label)(M);}};

var _3761=function(M){if(--M.cbt<0){throw _3761;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3768,M.p));
return((M.p).label)(M);}};

var _3744=function(M){if(--M.cbt<0){throw _3744;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][14];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3753,M.p));
return((M.p).label)(M);}};

var _3673=function(M){if(--M.cbt<0){throw _3673;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-11]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3678,M.p));
return((M.p).label)(M);};

var _3653=function(M){if(--M.cbt<0){throw _3653;}
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-8][23]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3657,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3617=function(M){if(--M.cbt<0){throw _3617;}
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3621,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3596=function(M){if(--M.cbt<0){throw _3596;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3603,M.p));
return((M.p).label)(M);}};

var _3564=function(M){if(--M.cbt<0){throw _3564;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3568,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3560)(M);}};

var _3538=function(M){if(--M.cbt<0){throw _3538;}
return(_3534)(M);};

var _3518=function(M){if(--M.cbt<0){throw _3518;}
return(_3514)(M);};

var _3482=function(M){if(--M.cbt<0){throw _3482;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3486,M.p));
return((M.p).label)(M);};

var _3466=function(M){if(--M.cbt<0){throw _3466;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3470,M.p));
return((M.p).label)(M);};

var _3436=function(M){if(--M.cbt<0){throw _3436;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3440,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3432)(M);}};

var _3420=function(M){if(--M.cbt<0){throw _3420;}
return(_3412)(M);};

var _3390=function(M){if(--M.cbt<0){throw _3390;}
return(_3386)(M);};

var _3340=function(M){if(--M.cbt<0){throw _3340;}
return(_3322)(M);};

var _3328=function(M){if(--M.cbt<0){throw _3328;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3332,M.p));
return((M.p).label)(M);};

var _3304=function(M){if(--M.cbt<0){throw _3304;}
return(_3296)(M);};

var _3264=function(M){if(--M.cbt<0){throw _3264;}
return(_3256)(M);};

var _3229=function(M){if(--M.cbt<0){throw _3229;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][54];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3242,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][54];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3242,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][32]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _3180=function(M){if(--M.cbt<0){throw _3180;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3184,M.p));
return((M.p).label)(M);};

var _3173=function(M){if(--M.cbt<0){throw _3173;}
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][36];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3180,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3151=function(M){if(--M.cbt<0){throw _3151;}
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-8]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3158,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3111=function(M){if(--M.cbt<0){throw _3111;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3115,M.p));
return((M.p).label)(M);};

var _3090=function(M){if(--M.cbt<0){throw _3090;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-18][57];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"add1"));
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3094,M.p));
return((M.p).label)(M);};

var _3066=function(M){if(--M.cbt<0){throw _3066;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.push(M.e[M.e.length-9][41]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3074,M.p));
return((M.p).label)(M);};

var _3054=function(M){if(--M.cbt<0){throw _3054;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"sub1"), 1);
M.e.push(M.e[M.e.length-5][41]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3062,M.p));
return((M.p).label)(M);};

var _6346=function(M){if(--M.cbt<0){throw _6346;}
M.e.length-=(M.a-1);
return(_6343)(M);};


var _6860=function(M){if(--M.cbt<0){throw _6860;}
M.e.length-=(M.a-1);
return(_6861)(M);};


var _6844=function(M){if(--M.cbt<0){throw _6844;}
M.e.length-=(M.a-1);
return(_6845)(M);};




var _6812=function(M){if(--M.cbt<0){throw _6812;}
M.e.length-=(M.a-1);
return(_6813)(M);};


var _6261=function(M){if(--M.cbt<0){throw _6261;}
M.e.length-=(M.a-1);
return(_6236)(M);};

var _3043=function(M){if(--M.cbt<0){throw _3043;}
M.e.length-=M.a;
return(_3044)(M);};

var _5671=function(M){if(--M.cbt<0){throw _5671;}
M.e.length-=(M.a-1);
return(_5668)(M);};



var _6212=function(M){if(--M.cbt<0){throw _6212;}
M.e.length-=(M.a-1);
return(_6205)(M);};



var _6734=function(M){if(--M.cbt<0){throw _6734;}
M.e.length-=(M.a-1);
return(_6727)(M);};

var _3041=function(M){if(--M.cbt<0){throw _3041;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][34]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6731,M.p));
return((M.p).label)(M);};

var _5582=function(M){if(--M.cbt<0){throw _5582;}
M.e.length-=(M.a-1);
return(_5579)(M);};

var _6710=function(M){if(--M.cbt<0){throw _6710;}
M.e.length-=(M.a-1);
M.v=((plt.baselib.numbers.equals(3,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=3;
M.e.push(M.e[M.e.length-7]);
M.v=3;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6717,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _6675=function(M){if(--M.cbt<0){throw _6675;}
M.e.length-=(M.a-1);
return(_6662)(M);};


var _6109=function(M){if(--M.cbt<0){throw _6109;}
M.e.length-=(M.a-1);
return(_6106)(M);};

var _3040=function(M){if(--M.cbt<0){throw _3040;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][34]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6656,M.p));
return((M.p).label)(M);};



var _5478=function(M){if(--M.cbt<0){throw _5478;}
M.e.length-=(M.a-1);
return(_5475)(M);};


var _6042=function(M){if(--M.cbt<0){throw _6042;}
M.e.length-=(M.a-1);
return(_6035)(M);};









var _5967=function(M){if(--M.cbt<0){throw _5967;}
M.e.length-=(M.a-1);
return(_5954)(M);};

var _5358=function(M){if(--M.cbt<0){throw _5358;}
M.e.length-=(M.a-1);
return(_5355)(M);};

var _5947=function(M){if(--M.cbt<0){throw _5947;}
M.e.length-=(M.a-1);
return(_5934)(M);};

var _3038=function(M){if(--M.cbt<0){throw _3038;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6503,M.p));
return((M.p).label)(M);};

var _3023=function(M){if(--M.cbt<0){throw _3023;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3024)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3025)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3024)(M);}};

var _3021=function(M){if(--M.cbt<0){throw _3021;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][44];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _6459=function(M){if(--M.cbt<0){throw _6459;}
M.e.length-=(M.a-1);
return(_6460)(M);};




var _5858=function(M){if(--M.cbt<0){throw _5858;}
M.e.length-=(M.a-1);
return(_5845)(M);};





var _6340=function(M){if(--M.cbt<0){throw _6340;}
M.e.length-=(M.a-1);
return(_6333)(M);};

var _3034=function(M){if(--M.cbt<0){throw _3034;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3035)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3037)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3035)(M);}};










var _5665=function(M){if(--M.cbt<0){throw _5665;}
M.e.length-=(M.a-1);
return(_5662)(M);};

var _6230=function(M){if(--M.cbt<0){throw _6230;}
M.e.length-=(M.a-1);
return(_6231)(M);};

var _6218=function(M){if(--M.cbt<0){throw _6218;}
M.e.length-=(M.a-1);
return(_6215)(M);};











var _6103=function(M){if(--M.cbt<0){throw _6103;}
M.e.length-=(M.a-1);
return(_6096)(M);};




var _5472=function(M){if(--M.cbt<0){throw _5472;}
M.e.length-=(M.a-1);
return(_5469)(M);};

var _5466=function(M){if(--M.cbt<0){throw _5466;}
M.e.length-=(M.a-1);
return(_5453)(M);};








var _4809=function(M){if(--M.cbt<0){throw _4809;}
M.e.length-=(M.a-1);
return(_4806)(M);};

var _3027=function(M){if(--M.cbt<0){throw _3027;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5978,M.p));
return((M.p).label)(M);}else{M.v=RT.makePair(M.e[M.e.length-3],RT.NULL);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3026=function(M){if(--M.cbt<0){throw _3026;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5960,M.p));
return((M.p).label)(M);};



var _3025=function(M){if(--M.cbt<0){throw _3025;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5940,M.p));
return((M.p).label)(M);};

var _3022=function(M){if(--M.cbt<0){throw _3022;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][45];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3020=function(M){if(--M.cbt<0){throw _3020;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][14];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=" in ";
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};







var _4668=function(M){if(--M.cbt<0){throw _4668;}
M.e.length-=(M.a-1);
return(_4655)(M);};















var _3013=function(M){if(--M.cbt<0){throw _3013;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3014,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return(_3014)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};






var _3008=function(M){if(--M.cbt<0){throw _3008;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=4;
M.e[M.e.length-4]=new RT.Closure(_3009,4,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return(_3009)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5576=function(M){if(--M.cbt<0){throw _5576;}
M.e.length-=(M.a-1);
return(_5573)(M);};









var _4898=function(M){if(--M.cbt<0){throw _4898;}
M.e.length-=(M.a-1);
return(_4895)(M);};

var _3003=function(M){if(--M.cbt<0){throw _3003;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_3004,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return(_3004)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};











var _2998=function(M){if(--M.cbt<0){throw _2998;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2999,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return(_2999)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5352=function(M){if(--M.cbt<0){throw _5352;}
M.e.length-=(M.a-1);
return(_5349)(M);};




















var _4575=function(M){if(--M.cbt<0){throw _4575;}
M.e.length-=(M.a-1);
return(_4572)(M);};



















var _4892=function(M){if(--M.cbt<0){throw _4892;}
M.e.length-=(M.a-1);
return(_4889)(M);};






var _2979=function(M){if(--M.cbt<0){throw _2979;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4856,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};
















var _4674=function(M){if(--M.cbt<0){throw _4674;}
M.e.length-=(M.a-1);
return(_4671)(M);};







var _2973=function(M){if(--M.cbt<0){throw _2973;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4622,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};














var _4489=function(M){if(--M.cbt<0){throw _4489;}
M.e.length-=(M.a-1);
return(_4486)(M);};


































































var _3567=function(M){if(--M.cbt<0){throw _3567;}
M.e.length-=(M.a-1);
return(_3560)(M);};

var _3557=function(M){if(--M.cbt<0){throw _3557;}
M.e.length-=(M.a-1);
return(_3554)(M);};

var _3355=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3352)(M);};

var _3068=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3056)(M);};

var _3358=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3355)(M);};

var _3080=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3068)(M);};

var _6886=function(M){if(--M.cbt<0){throw _6886;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/list.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5934=function(M){--M.cbt<0;
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][47];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3412=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-13][1];
M.e[M.e.length-2]=RT.makeSymbol("foldl");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-15];
M.e[M.e.length-6]=M.e[M.e.length-16];
M.e[M.e.length-7]=M.e[M.e.length-17];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3430,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3426)(M);}}else{M.v=RT.VOID;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6884=function(M){if(--M.cbt<0){throw _6884;}
M.c.push(new RT.PromptFrame(_6886,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3041,2,[M.e[M.e.length-1]],"build-list");
M.e[M.e.length-1][40]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3296=function(M){--M.cbt<0;
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-11][53];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=M.e[M.e.length-15];
M.e[M.e.length-5]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"add1"));
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6009=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5956=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5968,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5954)(M);}};

var _4702=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4693)(M);};

var _4641=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4632)(M);};

var _4486=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4498,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6882=function(M){if(--M.cbt<0){throw _6882;}
M.c.push(new RT.PromptFrame(_6884,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3040,2,[M.e[M.e.length-1]],"build-string");
M.e[M.e.length-1][37]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3322=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3344,M.p));
return((M.p).label)(M);};

var _3290=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3300,M.p));
return((M.p).label)(M);};

var _6016=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_6009)(M);};

var _3056=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6826=function(M){if(--M.cbt<0){throw _6826;}
M.e.length-=(M.a-1);
return(_6827)(M);};

var _5573=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remq*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5583,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5579)(M);}};

var _4632=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4623)(M);};

var _3514=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-3][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3524,M.p));
return((M.p).label)(M);};

var _3426=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3436,M.p));
return((M.p).label)(M);};


var _3315=function(M){--M.cbt<0;
M.e.length-=1;
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=1;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2958,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_3363,M.p));
return(_2958)(M);}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-10],RT.NULL);
return(_3358)(M);}}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-7],RT.NULL);
return(_3355)(M);}}else{M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-4],RT.NULL);
return(_3352)(M);}}else{M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
return(_3349)(M);}};

var _6849=function(M){if(--M.cbt<0){throw _6849;}
M.c.push(new RT.PromptFrame(_6851,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3012,2,[M.e[M.e.length-1]],"remv*");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3256=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11][1];
M.e[M.e.length-2]=RT.makeSymbol("foldr");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.e[M.e.length-7]=M.e[M.e.length-15];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3274,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3270)(M);}}else{M.v=RT.VOID;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6858=function(M){if(--M.cbt<0){throw _6858;}
M.e.length-=(M.a-1);
return(_6859)(M);};

var _6023=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_6016)(M);};

var _4973=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6824=function(M){if(--M.cbt<0){throw _6824;}
M.e.length-=(M.a-1);
return(_6825)(M);};

var _4889=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4899,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4895)(M);}};

var _4722=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6577=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6593,M.p));
return((M.p).label)(M);};

var _4657=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remove");
M.e[M.e.length-2]="procedure (arity 2)";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4669,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4655)(M);}};

var _5491=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4594=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4585)(M);};

var _3520=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11][1];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-14];
M.e[M.e.length-6]=M.e[M.e.length-15];
M.e[M.e.length-7]=M.e[M.e.length-16];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3538,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3534)(M);}}else{M.v=RT.VOID;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6333=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6347,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6343)(M);}};

var _3406=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3416,M.p));
return((M.p).label)(M);};


var _6880=function(M){if(--M.cbt<0){throw _6880;}
M.c.push(new RT.PromptFrame(_6882,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3039,2,[M.e[M.e.length-1]],"build-vector");
M.e[M.e.length-1][33]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5121=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6847=function(M){if(--M.cbt<0){throw _6847;}
M.c.push(new RT.PromptFrame(_6849,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3007,2,[M.e[M.e.length-1]],"remq*");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3250=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-3][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3260,M.p));
return((M.p).label)(M);};

var _5078=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5055=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6856=function(M){if(--M.cbt<0){throw _6856;}
M.e.length-=(M.a-1);
return(_6857)(M);};

var _6850=function(M){if(--M.cbt<0){throw _6850;}
M.e.length-=(M.a-1);
return(_6851)(M);};

var _5979=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5993=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5986)(M);};

var _6822=function(M){if(--M.cbt<0){throw _6822;}
M.e.length-=(M.a-1);
return(_6823)(M);};

var _5936=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="procedure (arity 2)";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5948,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5934)(M);}};

var _6810=function(M){if(--M.cbt<0){throw _6810;}
M.e.length-=(M.a-1);
return(_6811)(M);};

var _4895=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_2981,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return(_2981)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4806=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4818,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6773=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_6762)(M);};

var _6727=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6743,M.p));
return((M.p).label)(M);};

var _4731=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4722)(M);};

var _6589=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("build-vector");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6601,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6587)(M);}};


var _6465=function(M){--M.cbt<0;
M.e.length-=1;
return(_6450)(M);};

var _4585=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4603=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4594)(M);};

var _3560=function(M){--M.cbt<0;
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-12][49];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-17];
M.e[M.e.length-6]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"add1"));
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6403=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6424,M.p));
return((M.p).label)(M);};

var _4537=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4555=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4546)(M);};

var _6363=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6390,M.p));
return((M.p).label)(M);};

var _4499=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3432=function(M){--M.cbt<0;
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-11][51];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=M.e[M.e.length-15];
M.e[M.e.length-5]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"add1"));
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6490=function(M){if(--M.cbt<0){throw _6490;}
M.e.length-=(M.a-1);
return(_6465)(M);};

var _3392=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11][1];
M.e[M.e.length-2]=RT.makeSymbol("foldl");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.e[M.e.length-7]=M.e[M.e.length-15];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3410,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3406)(M);}}else{M.v=RT.VOID;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6878=function(M){if(--M.cbt<0){throw _6878;}
M.c.push(new RT.PromptFrame(_6880,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3038,2,[M.e[M.e.length-1]],"filter");
M.e[M.e.length-1][31]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6872=function(M){if(--M.cbt<0){throw _6872;}
M.c.push(new RT.PromptFrame(_6874,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3029,5,[M.e[M.e.length-1]],"check-fold");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6857=function(M){if(--M.cbt<0){throw _6857;}
M.c.push(new RT.PromptFrame(_6859,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3020,3,[M.e[M.e.length-1]],"bad-item");
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6845=function(M){if(--M.cbt<0){throw _6845;}
M.c.push(new RT.PromptFrame(_6847,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_2997,2,[M.e[M.e.length-3]],"...private/list.rkt:98:4");
M.e[M.e.length-2]=new RT.Closure(_3002,3,[M.e[M.e.length-3]],"...private/list.rkt:99:4");
M.v=new RT.Closure(_2996,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove*");
M.e.length-=2;
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3270=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3280,M.p));
return((M.p).label)(M);};

var _6096=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6110,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6106)(M);}};

var _6883=function(M){if(--M.cbt<0){throw _6883;}
M.e.length-=(M.a-1);
return(_6884)(M);};

var _6045=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-6]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-2][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6065,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6057,M.p));
return((M.p).label)(M);}};

var _6854=function(M){if(--M.cbt<0){throw _6854;}
M.e.length-=(M.a-1);
return(_6855)(M);};

var _6848=function(M){if(--M.cbt<0){throw _6848;}
M.e.length-=(M.a-1);
return(_6849)(M);};

var _5986=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5979)(M);};

var _5954=function(M){--M.cbt<0;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6820=function(M){if(--M.cbt<0){throw _6820;}
M.e.length-=(M.a-1);
return(_6821)(M);};

var _6818=function(M){if(--M.cbt<0){throw _6818;}
M.e.length-=(M.a-1);
return(_6819)(M);};

var _6808=function(M){if(--M.cbt<0){throw _6808;}
M.e.length-=(M.a-1);
return(_6809)(M);};

var _5845=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5870,M.p));
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4857=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5768=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5780,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5766)(M);}};

var _6784=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_6773)(M);};


var _6662=function(M){--M.cbt<0;
M.e.length+=1;
M.e.push(M.e[M.e.length-2][38]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6680,M.p));
return((M.p).label)(M);};

var _6625=function(M){if(--M.cbt<0){throw _6625;}
M.e.length-=(M.a-1);
M.v=((plt.baselib.numbers.equals(2,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.e.push(M.e[M.e.length-7]);
M.v=2;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6632,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4655=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remove");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4675,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_4671)(M);}};


var _6499=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("filter");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6511,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6497)(M);}};

var _5475=function(M){--M.cbt<0;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3003,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_3003)(M);};

var _6444=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-2][26]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6464,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6456,M.p));
return((M.p).label)(M);}};

var _5455=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]="procedure (arity 2)";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5467,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5453)(M);}};

var _3554=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3564,M.p));
return((M.p).label)(M);};

var _3534=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3544,M.p));
return((M.p).label)(M);};

var _6406=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6420,M.p));
return((M.p).label)(M);};

var _4546=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4537)(M);};

var _5355=function(M){--M.cbt<0;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2998,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_2998)(M);};

var _5349=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5359,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5355)(M);}};

var _4517=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4508)(M);};



var _3386=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-3][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3396,M.p));
return((M.p).label)(M);};

var _3376=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3033=function(M){if(--M.cbt<0){throw _3033;}
M.unspliceRestFromStack(3,(M.a-3));
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6209,M.p));
return((M.p).label)(M);};

var _6876=function(M){if(--M.cbt<0){throw _6876;}
M.c.push(new RT.PromptFrame(_6878,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_3035,3,[M.e[M.e.length-3]],"...private/list.rkt:252:4");
M.e[M.e.length-2]=new RT.Closure(_3037,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:258:4");
M.v=new RT.Closure(_3034,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldr");
M.e.length-=2;
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_6869=RT.si_context_expected(4);

var _6855=function(M){if(--M.cbt<0){throw _6855;}
M.c.push(new RT.PromptFrame(_6857,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3019,2,[M.e[M.e.length-1]],"bad-list");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6843=function(M){if(--M.cbt<0){throw _6843;}
M.c.push(new RT.PromptFrame(_6845,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2980,4,[M.e[M.e.length-1]],"do-remove*");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3276=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-13][1];
M.e[M.e.length-2]=RT.makeSymbol("foldr");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-15];
M.e[M.e.length-6]=M.e[M.e.length-16];
M.e[M.e.length-7]=M.e[M.e.length-17];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3294,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3290)(M);}}else{M.v=RT.VOID;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6885=function(M){if(--M.cbt<0){throw _6885;}
M.e.length-=(M.a-1);
return(_6886)(M);};

var _6881=function(M){if(--M.cbt<0){throw _6881;}
M.e.length-=(M.a-1);
return(_6882)(M);};

var _6875=function(M){if(--M.cbt<0){throw _6875;}
M.e.length-=(M.a-1);
return(_6876)(M);};

var _6852=function(M){if(--M.cbt<0){throw _6852;}
M.e.length-=(M.a-1);
return(_6853)(M);};

var _6846=function(M){if(--M.cbt<0){throw _6846;}
M.e.length-=(M.a-1);
return(_6847)(M);};

var _6842=function(M){if(--M.cbt<0){throw _6842;}
M.e.length-=(M.a-1);
return(_6843)(M);};

var _6834=function(M){if(--M.cbt<0){throw _6834;}
M.e.length-=(M.a-1);
return(_6835)(M);};

var _6711=function(M){if(--M.cbt<0){throw _6711;}
M.v=((plt.baselib.numbers.equals(3,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=3;
M.e.push(M.e[M.e.length-7]);
M.v=3;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6717,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6816=function(M){if(--M.cbt<0){throw _6816;}
M.e.length-=(M.a-1);
return(_6817)(M);};

var _6806=function(M){if(--M.cbt<0){throw _6806;}
M.e.length-=(M.a-1);
return(_6807)(M);};

var _6800=function(M){--M.cbt<0;
M.modules["whalesong/lang/private/list.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/unsafe/ops.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/unsafe/ops.rkt"].isInvoked!==false){return(_6803)(M);}else{M.c.push(new RT.CallFrame(_6803,M.p));
return(M.modules["whalesong/lang/unsafe/ops.rkt"].label)(M);}}else{return(_6803)(M);}};


var _5847=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5859,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5845)(M);}};


var _6720=function(M){if(--M.cbt<0){throw _6720;}
M.e.length-=(M.a-1);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=4;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4773=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4754=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2977,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_4780,M.p));
return(_2977)(M);}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
return(_4773)(M);}}else{M.e[M.e.length-3]=RT.NULL;
return(_4773)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-3]=RT.NULL;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _6659=function(M){if(--M.cbt<0){throw _6659;}
M.e.length-=(M.a-1);
return(_6652)(M);};

var _6664=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("build-string");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6676,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6662)(M);}};

var _4684=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4671=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4683,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6070=function(M){if(--M.cbt<0){throw _6070;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6076,M.p));
return((M.p).label)(M);};


var _6450=function(M){--M.cbt<0;
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5453=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5473,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5469)(M);}};

var _6397=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4572=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4584,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3540=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-13][1];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-16];
M.e[M.e.length-6]=M.e[M.e.length-17];
M.e[M.e.length-7]=M.e[M.e.length-18];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3558,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_3554)(M);}}else{M.v=RT.VOID;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _5371=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6366=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6386,M.p));
return((M.p).label)(M);};

var _6369=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6382,M.p));
return((M.p).label)(M);};

var _4508=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4499)(M);};

var _3035=function(M){if(--M.cbt<0){throw _3035;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6337,M.p));
return((M.p).label)(M);};



var _6221=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-5],M.e[M.e.length-6]);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
if(M.v===false){M.v=M.e[M.e.length-4];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6269,M.p));
return((M.p).label)(M);}};

var _3349=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2989=function(M){if(--M.cbt<0){throw _2989;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5193,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5187,M.p));
return((M.p).label)(M);}};

var _6874=function(M){if(--M.cbt<0){throw _6874;}
M.c.push(new RT.PromptFrame(_6876,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_3031,3,[M.e[M.e.length-3]],"...private/list.rkt:239:4");
M.e[M.e.length-2]=new RT.Closure(_3033,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:243:4");
M.v=new RT.Closure(_3030,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldl");
M.e.length-=2;
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6861=function(M){if(--M.cbt<0){throw _6861;}
M.c.push(new RT.PromptFrame(_6872,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3027,3,[],"mapadd");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6853=function(M){if(--M.cbt<0){throw _6853;}
M.c.push(new RT.PromptFrame(_6855,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3018,2,[M.e[M.e.length-1]],"findf");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _6112=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6126,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6833=function(M){if(--M.cbt<0){throw _6833;}
M.c.push(new RT.PromptFrame(_6835,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2968,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][42]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6879=function(M){if(--M.cbt<0){throw _6879;}
M.e.length-=(M.a-1);
return(_6880)(M);};

var _6873=function(M){if(--M.cbt<0){throw _6873;}
M.e.length-=(M.a-1);
return(_6874)(M);};

var _6035=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=2;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6049,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6045)(M);}};

var _6798=function(M){if(--M.cbt<0){throw _6798;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_6784)(M);};

var _6779=function(M){if(--M.cbt<0){throw _6779;}
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-11]);
M.v=2;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6783,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_6773)(M);}};

var _6840=function(M){if(--M.cbt<0){throw _6840;}
M.e.length-=(M.a-1);
return(_6841)(M);};

var _6832=function(M){if(--M.cbt<0){throw _6832;}
M.e.length-=(M.a-1);
return(_6833)(M);};

var _6707=function(M){if(--M.cbt<0){throw _6707;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6711,M.p));
return((M.p).label)(M);};

var _6814=function(M){if(--M.cbt<0){throw _6814;}
M.e.length-=(M.a-1);
return(_6815)(M);};

var _6804=function(M){if(--M.cbt<0){throw _6804;}
M.e.length-=(M.a-1);
return(_6805)(M);};


var _6605=function(M){if(--M.cbt<0){throw _6605;}
M.e[M.e.length-1]=M.v;
M.v=((plt.baselib.numbers.equals(0,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=0;
M.e.push(M.e[M.e.length-7]);
M.v=0;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6612,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _4866=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4857)(M);};

var _4837=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4828)(M);};

var _6420=function(M){if(--M.cbt<0){throw _6420;}
return(_6403)(M);};


var _6865=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-4][18]=M.v;
M.e[M.e.length-4][19]=M.e[M.e.length-1];
M.e[M.e.length-4][20]=M.e[M.e.length-2];
M.e[M.e.length-4][21]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5668=function(M){--M.cbt<0;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_3013,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_3013)(M);};

var _6739=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("build-list");
M.e[M.e.length-2]="procedure (arity 1)";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6751,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6737)(M);}};

var _6250=function(M){if(--M.cbt<0){throw _6250;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][14];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][27];
M.e[M.e.length-1]="given procedure does not accept ~a arguments: ";
M.e.length+=1;
M.e.push(M.e[M.e.length-8][26]);
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6254,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6236)(M);}};


var _3527=function(M){if(--M.cbt<0){throw _3527;}
M.e.length-=(M.a-1);
return(_3520)(M);};

var _5595=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4693=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4684)(M);};




var _6497=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("filter");
M.e[M.e.length-2]="proper list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6517,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6513)(M);}};



var _5469=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5479,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5475)(M);}};





var _3399=function(M){if(--M.cbt<0){throw _3399;}
M.e.length-=(M.a-1);
return(_3392)(M);};

var _6516=function(M){if(--M.cbt<0){throw _6516;}
M.e.length-=(M.a-1);
return(_6513)(M);};

var _6510=function(M){if(--M.cbt<0){throw _6510;}
M.e.length-=(M.a-1);
return(_6497)(M);};

var _6343=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6353,M.p));
return((M.p).label)(M);};

var _2995=function(M){if(--M.cbt<0){throw _2995;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5336,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2983,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5330,M.p));
return((M.p).label)(M);}};




var _3352=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_3349)(M);};

var _3303=function(M){if(--M.cbt<0){throw _3303;}
M.e.length-=(M.a-1);
return(_3296)(M);};

var _3293=function(M){if(--M.cbt<0){throw _3293;}
M.e.length-=(M.a-1);
return(_3290)(M);};


var _6851=function(M){if(--M.cbt<0){throw _6851;}
M.c.push(new RT.PromptFrame(_6853,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3017,2,[M.e[M.e.length-1]],"memf");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _6106=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][5];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6116,M.p));
return((M.p).label)(M);};

var _6831=function(M){if(--M.cbt<0){throw _6831;}
M.c.push(new RT.PromptFrame(_6833,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2967,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][43]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6877=function(M){if(--M.cbt<0){throw _6877;}
M.e.length-=(M.a-1);
return(_6878)(M);};

var _6871=function(M){if(--M.cbt<0){throw _6871;}
M.e.length-=(M.a-1);
return(_6872)(M);};

var _6868=function(M){if(--M.cbt<0){throw _6868;}
if((M.a-4)===0){return(_6865)(M);}else{RT.si_context_expected(4)(M);
}};

var _6794=function(M){if(--M.cbt<0){throw _6794;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][57];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=4;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6798,M.p));
return((M.p).label)(M);};

var _6772=function(M){if(--M.cbt<0){throw _6772;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.push(M.e[M.e.length-7][41]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6779,M.p));
return((M.p).label)(M);};

var _6838=function(M){if(--M.cbt<0){throw _6838;}
M.e.length-=(M.a-1);
return(_6839)(M);};

var _6830=function(M){if(--M.cbt<0){throw _6830;}
M.e.length-=(M.a-1);
return(_6831)(M);};

var _3172=function(M){if(--M.cbt<0){throw _3172;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][36];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3180,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3161=function(M){if(--M.cbt<0){throw _3161;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][36];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-9]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3169,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6672=function(M){if(--M.cbt<0){throw _6672;}
return(_6664)(M);};

var _4908=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3136=function(M){if(--M.cbt<0){throw _3136;}
M.e.length-=(M.a-1);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][56];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3125=function(M){if(--M.cbt<0){throw _3125;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][39];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3133,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _4828=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4819)(M);};



var _6386=function(M){if(--M.cbt<0){throw _6386;}
return(_6363)(M);};



var _6690=function(M){if(--M.cbt<0){throw _6690;}
M.e.length-=(M.a-1);
M.v=((plt.baselib.numbers.equals(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.e.push(M.e[M.e.length-7]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6697,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6737=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][41]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6757,M.p));
return((M.p).label)(M);};

var _3547=function(M){if(--M.cbt<0){throw _3547;}
M.e.length-=(M.a-1);
return(_3540)(M);};

var _3537=function(M){if(--M.cbt<0){throw _3537;}
M.e.length-=(M.a-1);
return(_3534)(M);};


var _3517=function(M){if(--M.cbt<0){throw _3517;}
M.e.length-=(M.a-1);
return(_3514)(M);};

var _5579=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3008,2,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_3008)(M);};








var _3439=function(M){if(--M.cbt<0){throw _3439;}
M.e.length-=(M.a-1);
return(_3432)(M);};

var _3429=function(M){if(--M.cbt<0){throw _3429;}
M.e.length-=(M.a-1);
return(_3426)(M);};

var _3419=function(M){if(--M.cbt<0){throw _3419;}
M.e.length-=(M.a-1);
return(_3412)(M);};

var _3409=function(M){if(--M.cbt<0){throw _3409;}
M.e.length-=(M.a-1);
return(_3406)(M);};


var _3389=function(M){if(--M.cbt<0){throw _3389;}
M.e.length-=(M.a-1);
return(_3386)(M);};



var _5537=function(M){if(--M.cbt<0){throw _5537;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _6205=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=RT.makeSymbol("foldl");
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=2;
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-11];
M.e[M.e.length-7]=M.e[M.e.length-12];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6219,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_6215)(M);}};


var _3283=function(M){if(--M.cbt<0){throw _3283;}
M.e.length-=(M.a-1);
return(_3276)(M);};

var _3273=function(M){if(--M.cbt<0){throw _3273;}
M.e.length-=(M.a-1);
return(_3270)(M);};

var _3263=function(M){if(--M.cbt<0){throw _3263;}
M.e.length-=(M.a-1);
return(_3256)(M);};

var _3253=function(M){if(--M.cbt<0){throw _3253;}
M.e.length-=(M.a-1);
return(_3250)(M);};

var _6841=function(M){if(--M.cbt<0){throw _6841;}
M.c.push(new RT.PromptFrame(_6843,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2978,2,[M.e[M.e.length-1]],"remv");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6829=function(M){if(--M.cbt<0){throw _6829;}
M.c.push(new RT.PromptFrame(_6831,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2966,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][44]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _6809=function(M){if(--M.cbt<0){throw _6809;}
M.c.push(new RT.PromptFrame(_6811,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2955,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _3183=function(M){if(--M.cbt<0){throw _3183;}
M.e.length-=(M.a-1);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][55];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _3150=function(M){if(--M.cbt<0){throw _3150;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][36];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-8]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3158,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _3114=function(M){if(--M.cbt<0){throw _3114;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][39];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-9]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3122,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3103=function(M){if(--M.cbt<0){throw _3103;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"="))));
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][39];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-8]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3111,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};








var _2952=function(M){if(--M.cbt<0){throw _2952;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][41]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3050,M.p));
return((M.p).label)(M);};

var _6762=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5662=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("remv*");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5672,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_5668)(M);}};

_3104.mvr=_3103;
_3115.mvr=_3114;
_3126.mvr=_3125;
_3137.mvr=_3136;
_3151.mvr=_3150;
_3162.mvr=_3161;
_3173.mvr=_3172;
_3184.mvr=_3183;
_3254.mvr=_3253;
_3264.mvr=_3263;
_3274.mvr=_3273;
_3284.mvr=_3283;
_3294.mvr=_3293;
_3304.mvr=_3303;
_3390.mvr=_3389;
_3400.mvr=_3399;
_3410.mvr=_3409;
_3420.mvr=_3419;
_3430.mvr=_3429;
_3440.mvr=_3439;
_3518.mvr=_3517;
_3528.mvr=_3527;
_3538.mvr=_3537;
_3548.mvr=_3547;
_3558.mvr=_3557;
_3568.mvr=_3567;
_4490.mvr=_4489;
_4576.mvr=_4575;
_4669.mvr=_4668;
_4675.mvr=_4674;
_4758.mvr=_4757;
_4810.mvr=_4809;
_4893.mvr=_4892;
_4899.mvr=_4898;
_5353.mvr=_5352;
_5359.mvr=_5358;
_5467.mvr=_5466;
_5473.mvr=_5472;
_5479.mvr=_5478;
_5577.mvr=_5576;
_5583.mvr=_5582;
_5666.mvr=_5665;
_5672.mvr=_5671;
_5780.mvr=_5779;
_5859.mvr=_5858;
_5948.mvr=_5947;
_5968.mvr=_5967;
_6043.mvr=_6042;
_6049.mvr=_6048;
_6070.mvr=_6069;
_6104.mvr=_6103;
_6110.mvr=_6109;
_6120.mvr=_6119;
_6213.mvr=_6212;
_6219.mvr=_6218;
_6231.mvr=_6230;
_6240.mvr=_6239;
_6262.mvr=_6261;
_6341.mvr=_6340;
_6347.mvr=_6346;
_6357.mvr=_6356;
_6442.mvr=_6441;
_6448.mvr=_6447;
_6460.mvr=_6459;
_6469.mvr=_6468;
_6491.mvr=_6490;
_6511.mvr=_6510;
_6517.mvr=_6516;
_6585.mvr=_6584;
_6601.mvr=_6600;
_6616.mvr=_6615;
_6626.mvr=_6625;
_6636.mvr=_6635;
_6646.mvr=_6645;
_6660.mvr=_6659;
_6676.mvr=_6675;
_6691.mvr=_6690;
_6701.mvr=_6700;
_6711.mvr=_6710;
_6721.mvr=_6720;
_6735.mvr=_6734;
_6751.mvr=_6750;
_6803.mvr=_6802;
_6805.mvr=_6804;
_6807.mvr=_6806;
_6809.mvr=_6808;
_6811.mvr=_6810;
_6813.mvr=_6812;
_6815.mvr=_6814;
_6817.mvr=_6816;
_6819.mvr=_6818;
_6821.mvr=_6820;
_6823.mvr=_6822;
_6825.mvr=_6824;
_6827.mvr=_6826;
_6829.mvr=_6828;
_6831.mvr=_6830;
_6833.mvr=_6832;
_6835.mvr=_6834;
_6837.mvr=_6836;
_6839.mvr=_6838;
_6841.mvr=_6840;
_6843.mvr=_6842;
_6845.mvr=_6844;
_6847.mvr=_6846;
_6849.mvr=_6848;
_6851.mvr=_6850;
_6853.mvr=_6852;
_6855.mvr=_6854;
_6857.mvr=_6856;
_6859.mvr=_6858;
_6869.mvr=_6868;
_6861.mvr=_6860;
_6872.mvr=_6871;
_6874.mvr=_6873;
_6876.mvr=_6875;
_6878.mvr=_6877;
_6880.mvr=_6879;
_6882.mvr=_6881;
_6884.mvr=_6883;
_6886.mvr=_6885;
_3044.mvr=_3043;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6887, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/list.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/list.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/lang/unsafe/ops.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/lang/unsafe/ops.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/lang/unsafe/ops.rkt"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){
EXPORTS['unsafe-car'] =
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-car',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].first;
        });


EXPORTS['unsafe-cdr'] = 
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-cdr',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].rest;
        });
})(M, exports);
             modrec.namespace["unsafe-car1.1"] = exports["unsafe-car"];
modrec.namespace["unsafe-cdr2.2"] = exports["unsafe-cdr"];

             modrec.privateExports = exports;
             return M.c.pop().label(M);
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/map.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;

var _8089=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][11];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8123,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};



var _7485=function(M){if(--M.cbt<0){throw _7485;}
M.e.length-=(M.a-1);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][13];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};














































var _7505=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][9];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7529,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};


var _6900=function(M){if(--M.cbt<0){throw _6900;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_6901)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_6905)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_6903)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_6901)(M);}};

var _6897=function(M){if(--M.cbt<0){throw _6897;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7357,M.p));
return((M.p).label)(M);};

var _6888=function(M){if(--M.cbt<0){throw _6888;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6924,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7473=function(M){if(--M.cbt<0){throw _7473;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7486,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-7][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=10;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7461=function(M){if(--M.cbt<0){throw _7461;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7474,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-5][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=8;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7449=function(M){if(--M.cbt<0){throw _7449;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7462,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7418=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7450,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};



var _7405=function(M){if(--M.cbt<0){throw _7405;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][12];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7394=function(M){if(--M.cbt<0){throw _7394;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7406,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-4][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7383=function(M){if(--M.cbt<0){throw _7383;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7395,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=5;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7372=function(M){if(--M.cbt<0){throw _7372;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7384,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-2][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7353=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][7];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7373,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};


var _6896=function(M){if(--M.cbt<0){throw _6896;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_6897)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_6899)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_6898)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_6897)(M);}};

























var _7098=function(M){if(--M.cbt<0){throw _7098;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][12];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7087=function(M){if(--M.cbt<0){throw _7087;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7099,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-8][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=10;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7076=function(M){if(--M.cbt<0){throw _7076;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7088,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-7][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=9;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7065=function(M){if(--M.cbt<0){throw _7065;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7077,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-6][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=8;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7054=function(M){if(--M.cbt<0){throw _7054;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7066,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-5][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=7;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7043=function(M){if(--M.cbt<0){throw _7043;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7055,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-4][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7032=function(M){if(--M.cbt<0){throw _7032;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7044,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=5;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7021=function(M){if(--M.cbt<0){throw _7021;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7033,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-2][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7007=function(M){if(--M.cbt<0){throw _7007;}
M.e.length-=(M.a-1);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-18][13];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+18),18);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6995=function(M){if(--M.cbt<0){throw _6995;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7008,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-15][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=18;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6983=function(M){if(--M.cbt<0){throw _6983;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6996,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-13][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=16;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6971=function(M){if(--M.cbt<0){throw _6971;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6984,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-11][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=14;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6959=function(M){if(--M.cbt<0){throw _6959;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6972,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-9][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=12;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6947=function(M){if(--M.cbt<0){throw _6947;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6960,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-7][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=10;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6935=function(M){if(--M.cbt<0){throw _6935;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6948,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-5][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=8;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6923=function(M){if(--M.cbt<0){throw _6923;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6936,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6911=function(M){if(--M.cbt<0){throw _6911;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][11];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7324=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7316)(M);};

var _7332=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7324)(M);};

var _7255=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7247)(M);};

var _7168=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7161)(M);};

var _6910=function(M){if(--M.cbt<0){throw _6910;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8188,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7196=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7189)(M);};

var _7203=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7196)(M);};

var _7141=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7134)(M);};

var _6909=function(M){if(--M.cbt<0){throw _6909;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8093,M.p));
return((M.p).label)(M);};

var _6908=function(M){if(--M.cbt<0){throw _6908;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7980,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-1]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6907=function(M){if(--M.cbt<0){throw _6907;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7900,M.p));
return((M.p).label)(M);};

var _6905=function(M){if(--M.cbt<0){throw _6905;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][9];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6904=function(M){if(--M.cbt<0){throw _6904;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7783,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6903=function(M){if(--M.cbt<0){throw _6903;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7690,M.p));
return((M.p).label)(M);};

var _6902=function(M){if(--M.cbt<0){throw _6902;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-1]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7587,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-1]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6901=function(M){if(--M.cbt<0){throw _6901;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7509,M.p));
return((M.p).label)(M);};

var _6899=function(M){if(--M.cbt<0){throw _6899;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][7];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6898=function(M){if(--M.cbt<0){throw _6898;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7422,M.p));
return((M.p).label)(M);};

var _6895=function(M){if(--M.cbt<0){throw _6895;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7284=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _7308=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7300)(M);};

var _7316=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7308)(M);};

var _6894=function(M){if(--M.cbt<0){throw _6894;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7282,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7247=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _7263=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7255)(M);};

var _6893=function(M){if(--M.cbt<0){throw _6893;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7221,M.p));
return((M.p).label)(M);};

var _7161=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _7182=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7175)(M);};

var _7189=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7182)(M);};

var _6892=function(M){if(--M.cbt<0){throw _6892;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7160,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7127=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _7134=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7127)(M);};

var _6891=function(M){if(--M.cbt<0){throw _6891;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][1]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7114,M.p));
return((M.p).label)(M);};

var _6890=function(M){if(--M.cbt<0){throw _6890;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_6891)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_6895)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_6893)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_6891)(M);}};

var _6889=function(M){if(--M.cbt<0){throw _6889;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7022,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8218=function(M){if(--M.cbt<0){throw _8218;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8233,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7175=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7168)(M);};


var _7896=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][11];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7918,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};


var _7587=function(M){if(--M.cbt<0){throw _7587;}
if(M.v===false){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7600,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};


var _7217=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7245,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};




var _8315=function(M){if(--M.cbt<0){throw _8315;}
M.e.length-=(M.a-1);
return(_8316)(M);};

var _8318=function(M){if(--M.cbt<0){throw _8318;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/map.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _8310=function(M){if(--M.cbt<0){throw _8310;}
M.c.push(new RT.PromptFrame(_8312,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_6891,2,[M.e[M.e.length-4]],".../private/map.rkt:12:11");
M.e[M.e.length-2]=new RT.Closure(_6893,3,[M.e[M.e.length-4]],".../private/map.rkt:21:11");
M.e[M.e.length-3]=new RT.Closure(_6895,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:33:11");
M.v=new RT.Closure(_6890,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"map");
M.e.length-=3;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8278=function(M){if(--M.cbt<0){throw _8278;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-25];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8293,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-24];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+24),24);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=22;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8203=function(M){if(--M.cbt<0){throw _8203;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8218,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8153=function(M){if(--M.cbt<0){throw _8153;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8168,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8107=function(M){if(--M.cbt<0){throw _8107;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8111,M.p));
return((M.p).label)(M);};

var _8064=function(M){if(--M.cbt<0){throw _8064;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-16]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8078,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-15]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=15;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8008=function(M){if(--M.cbt<0){throw _8008;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8022,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7946=function(M){if(--M.cbt<0){throw _7946;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7960,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7900=function(M){if(--M.cbt<0){throw _7900;}
if(M.v===false){M.v=false;
return(_7896)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7906,M.p));
return((M.p).label)(M);}};

var _7839=function(M){if(--M.cbt<0){throw _7839;}
if(M.v===false){M.v=false;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7853,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7783=function(M){if(--M.cbt<0){throw _7783;}
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7797,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7722=function(M){if(--M.cbt<0){throw _7722;}
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7736,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7690=function(M){if(--M.cbt<0){throw _7690;}
if(M.v===false){M.v=false;
return(_7686)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7696,M.p));
return((M.p).label)(M);}};

var _7626=function(M){if(--M.cbt<0){throw _7626;}
if(M.v===false){M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7639,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _6906=function(M){if(--M.cbt<0){throw _6906;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_6907)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_6911)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_6909)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_6907)(M);}};

var _7515=function(M){if(--M.cbt<0){throw _7515;}
if(M.v===false){M.v=false;
return(_7505)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_7505)(M);}};

var _7474=function(M){if(--M.cbt<0){throw _7474;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7486,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-7][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=10;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7436=function(M){if(--M.cbt<0){throw _7436;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7440,M.p));
return((M.p).label)(M);};

var _7384=function(M){if(--M.cbt<0){throw _7384;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7395,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=5;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7342=function(M){if(--M.cbt<0){throw _7342;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7332)(M);};

var _7314=function(M){if(--M.cbt<0){throw _7314;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-25];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7322,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7316)(M);}};

var _7282=function(M){if(--M.cbt<0){throw _7282;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7290,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7284)(M);}};

var _7245=function(M){if(--M.cbt<0){throw _7245;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7253,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7247)(M);}};

var _7227=function(M){if(--M.cbt<0){throw _7227;}
if(M.v===false){M.v=false;
return(_7217)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
return(_7217)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.v=false;
return(_7217)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7235,M.p));
return((M.p).label)(M);}}}};

var _7188=function(M){if(--M.cbt<0){throw _7188;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-18]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7195,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7189)(M);}};

var _7160=function(M){if(--M.cbt<0){throw _7160;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7167,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7161)(M);}};

var _7150=function(M){if(--M.cbt<0){throw _7150;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7141)(M);};

var _7120=function(M){if(--M.cbt<0){throw _7120;}
if(M.v===false){M.v=false;
return(_7110)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_7110)(M);}};

var _7088=function(M){if(--M.cbt<0){throw _7088;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7099,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-8][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=10;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7033=function(M){if(--M.cbt<0){throw _7033;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7044,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=5;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6996=function(M){if(--M.cbt<0){throw _6996;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7008,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-15][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=18;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8317=function(M){if(--M.cbt<0){throw _8317;}
M.e.length-=(M.a-1);
return(_8318)(M);};

var _8313=function(M){if(--M.cbt<0){throw _8313;}
M.e.length-=(M.a-1);
return(_8314)(M);};

var _7686=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][9];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7722,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8316=function(M){if(--M.cbt<0){throw _8316;}
M.c.push(new RT.PromptFrame(_8318,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_6907,2,[M.e[M.e.length-4]],".../private/map.rkt:97:11");
M.e[M.e.length-2]=new RT.Closure(_6909,3,[M.e[M.e.length-4]],".../private/map.rkt:108:11");
M.e[M.e.length-3]=new RT.Closure(_6911,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:122:11");
M.v=new RT.Closure(_6906,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"ormap");
M.e.length-=3;
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8308=function(M){if(--M.cbt<0){throw _8308;}
M.c.push(new RT.PromptFrame(_8310,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_6889,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8263=function(M){if(--M.cbt<0){throw _8263;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-22];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8278,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+21),21);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=19;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8188=function(M){if(--M.cbt<0){throw _8188;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8203,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8138=function(M){if(--M.cbt<0){throw _8138;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8153,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8099=function(M){if(--M.cbt<0){throw _8099;}
if(M.v===false){M.v=false;
return(_8089)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
return(_8089)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.v=false;
return(_8089)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8107,M.p));
return((M.p).label)(M);}}}};

var _8050=function(M){if(--M.cbt<0){throw _8050;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-14]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8064,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-13]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7994=function(M){if(--M.cbt<0){throw _7994;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8008,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7932=function(M){if(--M.cbt<0){throw _7932;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7946,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7881=function(M){if(--M.cbt<0){throw _7881;}
if(M.v===false){M.v=false;
M.e.length-=17;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_6904,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+17),17);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7825=function(M){if(--M.cbt<0){throw _7825;}
if(M.v===false){M.v=false;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7839,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7764=function(M){if(--M.cbt<0){throw _7764;}
if(M.v===false){M.v=false;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_6904,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return(_6904)(M);}};

var _7708=function(M){if(--M.cbt<0){throw _7708;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_7686)(M);};

var _7665=function(M){if(--M.cbt<0){throw _7665;}
if(M.v===false){M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7678,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7613=function(M){if(--M.cbt<0){throw _7613;}
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7626,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7555=function(M){if(--M.cbt<0){throw _7555;}
if(M.v===false){M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7568,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7509=function(M){if(--M.cbt<0){throw _7509;}
if(M.v===false){M.v=false;
return(_7505)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7515,M.p));
return((M.p).label)(M);}};

var _7462=function(M){if(--M.cbt<0){throw _7462;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7474,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-5][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=8;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7428=function(M){if(--M.cbt<0){throw _7428;}
if(M.v===false){M.v=false;
return(_7418)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
return(_7418)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.v=false;
return(_7418)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7436,M.p));
return((M.p).label)(M);}}}};

var _7373=function(M){if(--M.cbt<0){throw _7373;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7384,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-2][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7338=function(M){if(--M.cbt<0){throw _7338;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_6894,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-34];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7342,M.p));
return((M.p).label)(M);};

var _7306=function(M){if(--M.cbt<0){throw _7306;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7314,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7308)(M);}};

var _7272=function(M){if(--M.cbt<0){throw _7272;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7263)(M);};

var _7261=function(M){if(--M.cbt<0){throw _7261;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7269,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7263)(M);}};

var _7221=function(M){if(--M.cbt<0){throw _7221;}
if(M.v===false){M.v=false;
return(_7217)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7227,M.p));
return((M.p).label)(M);}};

var _7202=function(M){if(--M.cbt<0){throw _7202;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-24]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7209,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7203)(M);}};

var _7167=function(M){if(--M.cbt<0){throw _7167;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7174,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7168)(M);}};

var _7133=function(M){if(--M.cbt<0){throw _7133;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7140,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7134)(M);}};

var _7099=function(M){if(--M.cbt<0){throw _7099;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][12];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7055=function(M){if(--M.cbt<0){throw _7055;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7066,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-5][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=7;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7022=function(M){if(--M.cbt<0){throw _7022;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7033,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-2][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6972=function(M){if(--M.cbt<0){throw _6972;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6984,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-11][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=14;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6936=function(M){if(--M.cbt<0){throw _6936;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6948,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-5][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=8;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8311=function(M){if(--M.cbt<0){throw _8311;}
M.e.length-=(M.a-1);
return(_8312)(M);};

var _8307=function(M){if(--M.cbt<0){throw _8307;}
M.e.length-=(M.a-1);
return(_8308)(M);};


var _7292=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7284)(M);};

var _8314=function(M){if(--M.cbt<0){throw _8314;}
M.c.push(new RT.PromptFrame(_8316,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_6901,2,[M.e[M.e.length-4]],".../private/map.rkt:66:11");
M.e[M.e.length-2]=new RT.Closure(_6903,3,[M.e[M.e.length-4]],".../private/map.rkt:77:11");
M.e[M.e.length-3]=new RT.Closure(_6905,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:91:11");
M.v=new RT.Closure(_6900,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"andmap");
M.e.length-=3;
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8293=function(M){if(--M.cbt<0){throw _8293;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_6910,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+25),25);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=25;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8248=function(M){if(--M.cbt<0){throw _8248;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-19];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8263,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+18),18);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8168=function(M){if(--M.cbt<0){throw _8168;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_6910,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+14),14);
M.c[M.c.length-1].p=M.p;
return(_6910)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8123=function(M){if(--M.cbt<0){throw _8123;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8138,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8093=function(M){if(--M.cbt<0){throw _8093;}
if(M.v===false){M.v=false;
return(_8089)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8099,M.p));
return((M.p).label)(M);}};

var _8036=function(M){if(--M.cbt<0){throw _8036;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8050,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7980=function(M){if(--M.cbt<0){throw _7980;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7994,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7918=function(M){if(--M.cbt<0){throw _7918;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7932,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7867=function(M){if(--M.cbt<0){throw _7867;}
if(M.v===false){M.v=false;
M.e.length-=15;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7881,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+17),17);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7811=function(M){if(--M.cbt<0){throw _7811;}
if(M.v===false){M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7825,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7750=function(M){if(--M.cbt<0){throw _7750;}
if(M.v===false){M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7764,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7704=function(M){if(--M.cbt<0){throw _7704;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7708,M.p));
return((M.p).label)(M);};

var _7652=function(M){if(--M.cbt<0){throw _7652;}
if(M.v===false){M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7665,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7639=function(M){if(--M.cbt<0){throw _7639;}
if(M.v===false){M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7652,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7542=function(M){if(--M.cbt<0){throw _7542;}
if(M.v===false){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7555,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7486=function(M){if(--M.cbt<0){throw _7486;}
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][13];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7440=function(M){if(--M.cbt<0){throw _7440;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_7418)(M);};

var _7422=function(M){if(--M.cbt<0){throw _7422;}
if(M.v===false){M.v=false;
return(_7418)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7428,M.p));
return((M.p).label)(M);}};

var _7363=function(M){if(--M.cbt<0){throw _7363;}
if(M.v===false){M.v=false;
return(_7353)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_7353)(M);}};

var _7330=function(M){if(--M.cbt<0){throw _7330;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-33];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7338,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7332)(M);}};

var _7298=function(M){if(--M.cbt<0){throw _7298;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7306,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7300)(M);}};

var _7269=function(M){if(--M.cbt<0){throw _7269;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_6894,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.c.push(new RT.CallFrame(_7272,M.p));
return(_6894)(M);};

var _7239=function(M){if(--M.cbt<0){throw _7239;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_7217)(M);};

var _7213=function(M){if(--M.cbt<0){throw _7213;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-5]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7203)(M);};

var _7209=function(M){if(--M.cbt<0){throw _7209;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_6892,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-26];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7213,M.p));
return((M.p).label)(M);};

var _7181=function(M){if(--M.cbt<0){throw _7181;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-15]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7188,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7182)(M);}};

var _7147=function(M){if(--M.cbt<0){throw _7147;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_6892,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_7150,M.p));
return(_6892)(M);};

var _7114=function(M){if(--M.cbt<0){throw _7114;}
if(M.v===false){M.v=false;
return(_7110)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7120,M.p));
return((M.p).label)(M);}};

var _7077=function(M){if(--M.cbt<0){throw _7077;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7088,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-7][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=9;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7044=function(M){if(--M.cbt<0){throw _7044;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7055,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-4][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6984=function(M){if(--M.cbt<0){throw _6984;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6996,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-13][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=16;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6948=function(M){if(--M.cbt<0){throw _6948;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6960,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-7][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=10;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8309=function(M){if(--M.cbt<0){throw _8309;}
M.e.length-=(M.a-1);
return(_8310)(M);};

var _8306=function(M){--M.cbt<0;
M.modules["whalesong/lang/private/map.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["map2"]||M.primitives["map2"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["map"],M.primitives["length"],M.params.currentNamespace["for-each2"]||M.primitives["for-each2"],M.primitives["void"],M.primitives["for-each"],M.params.currentNamespace["andmap2"]||M.primitives["andmap2"],M.primitives["andmap"],M.params.currentNamespace["ormap2"]||M.primitives["ormap2"],M.primitives["ormap"],false,false]);M.e[M.e.length-1].names=["map2","procedure?","procedure-arity-includes?","map","length","for-each2","void","for-each","andmap2","andmap","ormap2","ormap",false,false];
M.modules["whalesong/lang/private/map.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_8308,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_6888,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _7110=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7126,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};




var _7300=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_7292)(M);};

var _8319=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_6914,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/map.rkt"]=new RT.ModuleRecord("map",_8306);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8312=function(M){if(--M.cbt<0){throw _8312;}
M.c.push(new RT.PromptFrame(_8314,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_6897,2,[M.e[M.e.length-4]],".../private/map.rkt:39:11");
M.e[M.e.length-2]=new RT.Closure(_6898,3,[M.e[M.e.length-4]],".../private/map.rkt:48:11");
M.e[M.e.length-3]=new RT.Closure(_6899,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:60:11");
M.v=new RT.Closure(_6896,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"for-each");
M.e.length-=3;
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6914=function(M){if(--M.cbt<0){throw _6914;}
};

var _8233=function(M){if(--M.cbt<0){throw _8233;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8248,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _8111=function(M){if(--M.cbt<0){throw _8111;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_8089)(M);};

var _8078=function(M){if(--M.cbt<0){throw _8078;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_6908,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-18];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+17),17);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=17;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8022=function(M){if(--M.cbt<0){throw _8022;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8036,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7960=function(M){if(--M.cbt<0){throw _7960;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_6908,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return(_6908)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _7906=function(M){if(--M.cbt<0){throw _7906;}
if(M.v===false){M.v=false;
return(_7896)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_7896)(M);}};

var _7853=function(M){if(--M.cbt<0){throw _7853;}
if(M.v===false){M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7867,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7797=function(M){if(--M.cbt<0){throw _7797;}
if(M.v===false){M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7811,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7736=function(M){if(--M.cbt<0){throw _7736;}
if(M.v===false){M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7750,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7696=function(M){if(--M.cbt<0){throw _7696;}
if(M.v===false){M.v=false;
return(_7686)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
return(_7686)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){M.v=false;
return(_7686)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7704,M.p));
return((M.p).label)(M);}}}};

var _7678=function(M){if(--M.cbt<0){throw _7678;}
if(M.v===false){M.v=false;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_6902,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7600=function(M){if(--M.cbt<0){throw _7600;}
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7613,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7568=function(M){if(--M.cbt<0){throw _7568;}
if(M.v===false){M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_6902,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return(_6902)(M);}};

var _7529=function(M){if(--M.cbt<0){throw _7529;}
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7542,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _7450=function(M){if(--M.cbt<0){throw _7450;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7462,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7406=function(M){if(--M.cbt<0){throw _7406;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][12];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _7395=function(M){if(--M.cbt<0){throw _7395;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7406,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-4][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7357=function(M){if(--M.cbt<0){throw _7357;}
if(M.v===false){M.v=false;
return(_7353)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7363,M.p));
return((M.p).label)(M);}};

var _7322=function(M){if(--M.cbt<0){throw _7322;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-29];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7330,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7324)(M);}};

var _7290=function(M){if(--M.cbt<0){throw _7290;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7298,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7292)(M);}};

var _7253=function(M){if(--M.cbt<0){throw _7253;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7261,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_7255)(M);}};

var _7235=function(M){if(--M.cbt<0){throw _7235;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7239,M.p));
return((M.p).label)(M);};

var _7195=function(M){if(--M.cbt<0){throw _7195;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-21]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7202,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7196)(M);}};

var _7174=function(M){if(--M.cbt<0){throw _7174;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7181,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7175)(M);}};

var _7140=function(M){if(--M.cbt<0){throw _7140;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-13]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7147,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7141)(M);}};

var _7126=function(M){if(--M.cbt<0){throw _7126;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7133,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_7127)(M);}};

var _7066=function(M){if(--M.cbt<0){throw _7066;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_7077,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-6][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=8;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _7008=function(M){if(--M.cbt<0){throw _7008;}
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-18][13];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+18),18);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6960=function(M){if(--M.cbt<0){throw _6960;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6972,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-9][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=12;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6924=function(M){if(--M.cbt<0){throw _6924;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6936,M.p));
return((M.p).label)(M);}else{M.p=M.e[M.e.length-3][6];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=6;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _6913=function(M){if(--M.cbt<0){throw _6913;}
M.e.length-=M.a;
return(_6914)(M);};













_6924.mvr=_6923;
_6936.mvr=_6935;
_6948.mvr=_6947;
_6960.mvr=_6959;
_6972.mvr=_6971;
_6984.mvr=_6983;
_6996.mvr=_6995;
_7008.mvr=_7007;
_7022.mvr=_7021;
_7033.mvr=_7032;
_7044.mvr=_7043;
_7055.mvr=_7054;
_7066.mvr=_7065;
_7077.mvr=_7076;
_7088.mvr=_7087;
_7099.mvr=_7098;
_7373.mvr=_7372;
_7384.mvr=_7383;
_7395.mvr=_7394;
_7406.mvr=_7405;
_7450.mvr=_7449;
_7462.mvr=_7461;
_7474.mvr=_7473;
_7486.mvr=_7485;
_8308.mvr=_8307;
_8310.mvr=_8309;
_8312.mvr=_8311;
_8314.mvr=_8313;
_8316.mvr=_8315;
_8318.mvr=_8317;
_6914.mvr=_6913;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_8319, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/map.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/map.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/list.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;


var _12687=function(M){if(--M.cbt<0){throw _12687;}
M.e.length-=(M.a-1);
return(_12688)(M);};



var _9953=function(M){if(--M.cbt<0){throw _9953;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};










var _9546=function(M){if(--M.cbt<0){throw _9546;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};










var _9287=function(M){if(--M.cbt<0){throw _9287;}
if(M.v===false){M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};





var _11398=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11412,M.p));
return((M.p).label)(M);};






var _8897=function(M){if(--M.cbt<0){throw _8897;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-20]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.v=M.e[M.e.length-20];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8371=function(M){if(--M.cbt<0){throw _8371;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["apply"];
M.e[M.e.length-2]=M.e[M.e.length-5][32];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8828=function(M){if(--M.cbt<0){throw _8828;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-8]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9044,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9028,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-7]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8851,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8835,M.p));
return((M.p).label)(M);}}};


var _8761=function(M){if(--M.cbt<0){throw _8761;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8775,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8775,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _8708=function(M){if(--M.cbt<0){throw _8708;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8698=function(M){if(--M.cbt<0){throw _8698;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][1];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-15];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8702,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8694)(M);}};



var _8383=function(M){if(--M.cbt<0){throw _8383;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12126,M.p));
return((M.p).label)(M);};

var _8584=function(M){if(--M.cbt<0){throw _8584;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-13];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8588,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8580)(M);}};

var _8532=function(M){if(--M.cbt<0){throw _8532;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8536,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8528)(M);}};

var _8504=function(M){if(--M.cbt<0){throw _8504;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8508,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8500)(M);}};

var _8483=function(M){if(--M.cbt<0){throw _8483;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8487,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8479)(M);}};

var _8456=function(M){if(--M.cbt<0){throw _8456;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8460,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8452)(M);}};

var _8421=function(M){if(--M.cbt<0){throw _8421;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8428,M.p));
return((M.p).label)(M);};

var _12763=function(M){if(--M.cbt<0){throw _12763;}
M.e.length-=(M.a-1);
return(_12764)(M);};

var _12751=function(M){if(--M.cbt<0){throw _12751;}
M.e.length-=(M.a-1);
return(_12752)(M);};


var _12737=function(M){if(--M.cbt<0){throw _12737;}
M.e.length-=(M.a-1);
return(_12738)(M);};

var _8644=function(M){if(--M.cbt<0){throw _8644;}
M.e.length-=(M.a-1);
return(_8637)(M);};

var _8336=function(M){if(--M.cbt<0){throw _8336;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10093,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10085,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10077,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10069,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][53];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12711=function(M){if(--M.cbt<0){throw _12711;}
M.e.length-=(M.a-1);
return(_12712)(M);};

var _8360=function(M){if(--M.cbt<0){throw _8360;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10980,M.p));
return((M.p).label)(M);};


var _12685=function(M){if(--M.cbt<0){throw _12685;}
M.e.length-=(M.a-1);
return(_12686)(M);};

var _12679=function(M){if(--M.cbt<0){throw _12679;}
M.e.length-=(M.a-1);
return(_12680)(M);};


var _9919=function(M){if(--M.cbt<0){throw _9919;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};









var _9538=function(M){if(--M.cbt<0){throw _9538;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _11587=function(M){--M.cbt<0;
M.e.length-=1;
return(_11580)(M);};



var _9381=function(M){if(--M.cbt<0){throw _9381;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9385,M.p));
return((M.p).label)(M);};



var _9320=function(M){if(--M.cbt<0){throw _9320;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9363,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9328,M.p));
return((M.p).label)(M);}};

var _9283=function(M){if(--M.cbt<0){throw _9283;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9287,M.p));
return((M.p).label)(M);};












var _8367=function(M){if(--M.cbt<0){throw _8367;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _8802=function(M){if(--M.cbt<0){throw _8802;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8740=function(M){if(--M.cbt<0){throw _8740;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-12][67];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-17];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-12][67];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8702=function(M){if(--M.cbt<0){throw _8702;}
return(_8694)(M);};

var _8691=function(M){if(--M.cbt<0){throw _8691;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-7][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8698,M.p));
return((M.p).label)(M);};

var _8673=function(M){if(--M.cbt<0){throw _8673;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][1];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-12];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8677,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8669)(M);}};

var _8641=function(M){if(--M.cbt<0){throw _8641;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][1];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-15];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8645,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8637)(M);}};

var _8341=function(M){if(--M.cbt<0){throw _8341;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=4;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10269,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=4;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10261,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=4;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10253,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=4;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10245,M.p));
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}}}};

var _8577=function(M){if(--M.cbt<0){throw _8577;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8584,M.p));
return((M.p).label)(M);};

var _8381=function(M){if(--M.cbt<0){throw _8381;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12076,M.p));
return((M.p).label)(M);};

var _8497=function(M){if(--M.cbt<0){throw _8497;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8504,M.p));
return((M.p).label)(M);};

var _8476=function(M){if(--M.cbt<0){throw _8476;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8483,M.p));
return((M.p).label)(M);};

var _8449=function(M){if(--M.cbt<0){throw _8449;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-4][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8456,M.p));
return((M.p).label)(M);};

var _8411=function(M){if(--M.cbt<0){throw _8411;}
return(_8403)(M);};

var _12761=function(M){if(--M.cbt<0){throw _12761;}
M.e.length-=(M.a-1);
return(_12762)(M);};

var _8337=function(M){if(--M.cbt<0){throw _8337;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10151,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10143,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10135,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10127,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][52];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12747=function(M){if(--M.cbt<0){throw _12747;}
M.e.length-=(M.a-1);
return(_12748)(M);};

var _12735=function(M){if(--M.cbt<0){throw _12735;}
M.e.length-=(M.a-1);
return(_12736)(M);};

var _12731=function(M){if(--M.cbt<0){throw _12731;}
M.e.length-=(M.a-1);
return(_12732)(M);};

var _12723=function(M){if(--M.cbt<0){throw _12723;}
M.e.length-=(M.a-1);
return(_12724)(M);};

var _12709=function(M){if(--M.cbt<0){throw _12709;}
M.e.length-=(M.a-1);
return(_12710)(M);};

var _12707=function(M){if(--M.cbt<0){throw _12707;}
M.e.length-=(M.a-1);
return(_12708)(M);};

var _12699=function(M){if(--M.cbt<0){throw _12699;}
M.e.length-=(M.a-1);
return(_12700)(M);};

var _12339=function(M){if(--M.cbt<0){throw _12339;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12677=function(M){if(--M.cbt<0){throw _12677;}
M.e.length-=(M.a-1);
return(_12678)(M);};

var _8357=function(M){if(--M.cbt<0){throw _8357;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][23];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=RT.isList(M.e[M.e.length-9]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10829,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10829,M.p));
return((M.p).label)(M);}};


var _8562=function(M){if(--M.cbt<0){throw _8562;}
M.e.length-=(M.a-1);
return(_8555)(M);};

var _11777=function(M){--M.cbt<0;
M.e.length-=1;
return(_11770)(M);};



var _11724=function(M){--M.cbt<0;
M.e.length-=1;
return(_11703)(M);};








var _9703=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9693)(M);};









var _9247=function(M){if(--M.cbt<0){throw _9247;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9251,M.p));
return((M.p).label)(M);};



var _12489=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12503,M.p));
return((M.p).label)(M);};







var _8344=function(M){if(--M.cbt<0){throw _8344;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10428,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10420,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10412,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10404,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][54];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=3;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _8369=function(M){if(--M.cbt<0){throw _8369;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5][32];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8789=function(M){if(--M.cbt<0){throw _8789;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][66];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8802,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][66];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8802,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _8365=function(M){if(--M.cbt<0){throw _8365;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11209,M.p));
return((M.p).label)(M);};

var _8387=function(M){if(--M.cbt<0){throw _8387;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7][42];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12355,M.p));
return((M.p).label)(M);};

var _8683=function(M){if(--M.cbt<0){throw _8683;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8723,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-9];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-8];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8691,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8666=function(M){if(--M.cbt<0){throw _8666;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-4][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8673,M.p));
return((M.p).label)(M);};

var _8634=function(M){if(--M.cbt<0){throw _8634;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-7][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8641,M.p));
return((M.p).label)(M);};

var _12696=function(M){if(--M.cbt<0){throw _12696;}
M.c.push(new RT.PromptFrame(_12698,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8340,1,[M.e[M.e.length-1]],"third");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8569=function(M){if(--M.cbt<0){throw _8569;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8666,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-7];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8577,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8340=function(M){if(--M.cbt<0){throw _8340;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("third");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("third");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=3;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10220,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("third");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=3;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10212,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("third");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=3;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10204,M.p));
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}}};

var _8380=function(M){if(--M.cbt<0){throw _8380;}
M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8460=function(M){if(--M.cbt<0){throw _8460;}
return(_8452)(M);};

var _8432=function(M){if(--M.cbt<0){throw _8432;}
return(_8424)(M);};

var _8407=function(M){if(--M.cbt<0){throw _8407;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8411,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8403)(M);}};

var _12759=function(M){if(--M.cbt<0){throw _12759;}
M.e.length-=(M.a-1);
return(_12760)(M);};

var _12749=function(M){if(--M.cbt<0){throw _12749;}
M.e.length-=(M.a-1);
return(_12750)(M);};

var _12745=function(M){if(--M.cbt<0){throw _12745;}
M.e.length-=(M.a-1);
return(_12746)(M);};

var _12733=function(M){if(--M.cbt<0){throw _12733;}
M.e.length-=(M.a-1);
return(_12734)(M);};

var _12729=function(M){if(--M.cbt<0){throw _12729;}
M.e.length-=(M.a-1);
return(_12730)(M);};

var _12721=function(M){if(--M.cbt<0){throw _12721;}
M.e.length-=(M.a-1);
return(_12722)(M);};

var _12451=function(M){if(--M.cbt<0){throw _12451;}
return(_12443)(M);};

var _12705=function(M){if(--M.cbt<0){throw _12705;}
M.e.length-=(M.a-1);
return(_12706)(M);};

var _12697=function(M){if(--M.cbt<0){throw _12697;}
M.e.length-=(M.a-1);
return(_12698)(M);};

var _12324=function(M){if(--M.cbt<0){throw _12324;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.NULL;
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],RT.NULL);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12293=function(M){if(--M.cbt<0){throw _12293;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12675=function(M){if(--M.cbt<0){throw _12675;}
M.e.length-=(M.a-1);
return(_12676)(M);};




var _8535=function(M){if(--M.cbt<0){throw _8535;}
M.e.length-=(M.a-1);
return(_8528)(M);};


var _9731=function(M){if(--M.cbt<0){throw _9731;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-17];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9735,M.p));
return((M.p).label)(M);};

var _8507=function(M){if(--M.cbt<0){throw _8507;}
M.e.length-=(M.a-1);
return(_8500)(M);};


var _8486=function(M){if(--M.cbt<0){throw _8486;}
M.e.length-=(M.a-1);
return(_8479)(M);};


var _8459=function(M){if(--M.cbt<0){throw _8459;}
M.e.length-=(M.a-1);
return(_8452)(M);};



var _8431=function(M){if(--M.cbt<0){throw _8431;}
M.e.length-=(M.a-1);
return(_8424)(M);};


var _8410=function(M){if(--M.cbt<0){throw _8410;}
M.e.length-=(M.a-1);
return(_8403)(M);};


var _8320=function(M){if(--M.cbt<0){throw _8320;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8400,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9346=function(M){if(--M.cbt<0){throw _9346;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9350,M.p));
return((M.p).label)(M);};

var _9316=function(M){if(--M.cbt<0){throw _9316;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9320,M.p));
return((M.p).label)(M);};

var _9277=function(M){if(--M.cbt<0){throw _9277;}
M.e[M.e.length-3]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-19][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9283,M.p));
return((M.p).label)(M);};

var _12572=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12584,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12570)(M);}};

var _9240=function(M){if(--M.cbt<0){throw _9240;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9247,M.p));
return((M.p).label)(M);};

var _9221=function(M){if(--M.cbt<0){throw _9221;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9228,M.p));
return((M.p).label)(M);};

var _11944=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11948,M.p));
return((M.p).label)(M);};

var _12514=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12528,M.p));
return((M.p).label)(M);};

var _9105=function(M){if(--M.cbt<0){throw _9105;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9109,M.p));
return((M.p).label)(M);};

var _12443=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12455,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12441)(M);}};

var _8389=function(M){if(--M.cbt<0){throw _8389;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12447,M.p));
return((M.p).label)(M);};

var _11347=function(M){--M.cbt<0;
M.e.length-=1;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11369,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8959=function(M){if(--M.cbt<0){throw _8959;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9013,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8997,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-7]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8982,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8966,M.p));
return((M.p).label)(M);}}};

var _8385=function(M){if(--M.cbt<0){throw _8385;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][42];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12339,M.p));
return((M.p).label)(M);};

var _12760=function(M){if(--M.cbt<0){throw _12760;}
M.c.push(new RT.PromptFrame(_12762,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8390,2,[M.e[M.e.length-1]],"argmin");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8325=function(M){if(--M.cbt<0){throw _8325;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9221,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8388=function(M){if(--M.cbt<0){throw _8388;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12367,M.p));
return((M.p).label)(M);};

var _8343=function(M){if(--M.cbt<0){throw _8343;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10375,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10367,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10359,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10351,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][53];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _8386=function(M){if(--M.cbt<0){throw _8386;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][42];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12347,M.p));
return((M.p).label)(M);};

var _8342=function(M){if(--M.cbt<0){throw _8342;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10322,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10314,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10306,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=5;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10298,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][52];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _8651=function(M){if(--M.cbt<0){throw _8651;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8619=function(M){if(--M.cbt<0){throw _8619;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-14][67];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-14][67];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12694=function(M){if(--M.cbt<0){throw _12694;}
M.c.push(new RT.PromptFrame(_12696,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8339,1,[M.e[M.e.length-1]],"second");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8363=function(M){if(--M.cbt<0){throw _8363;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11146,M.p));
return((M.p).label)(M);};

var _12680=function(M){if(--M.cbt<0){throw _12680;}
M.c.push(new RT.PromptFrame(_12682,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8332,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8339=function(M){if(--M.cbt<0){throw _8339;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("second");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("second");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10182,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("second");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=2;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10174,M.p));
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _8338=function(M){if(--M.cbt<0){throw _8338;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("first");
M.e[M.e.length-2]="non-empty list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("first");
M.e[M.e.length-2]="non-empty list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8428=function(M){if(--M.cbt<0){throw _8428;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-11];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8432,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8424)(M);}};

var _8400=function(M){if(--M.cbt<0){throw _8400;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8407,M.p));
return((M.p).label)(M);};

var _12757=function(M){if(--M.cbt<0){throw _12757;}
M.e.length-=(M.a-1);
return(_12758)(M);};

var _8324=function(M){if(--M.cbt<0){throw _8324;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8828,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8812,M.p));
return((M.p).label)(M);}};

var _12743=function(M){if(--M.cbt<0){throw _12743;}
M.e.length-=(M.a-1);
return(_12744)(M);};

var _12522=function(M){if(--M.cbt<0){throw _12522;}
return(_12514)(M);};

var _12727=function(M){if(--M.cbt<0){throw _12727;}
M.e.length-=(M.a-1);
return(_12728)(M);};

var _12719=function(M){if(--M.cbt<0){throw _12719;}
M.e.length-=(M.a-1);
return(_12720)(M);};

var _12447=function(M){if(--M.cbt<0){throw _12447;}
if(M.v===false){M.v=false;
return(_12443)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12451,M.p));
return((M.p).label)(M);}};

var _12703=function(M){if(--M.cbt<0){throw _12703;}
M.e.length-=(M.a-1);
return(_12704)(M);};

var _12695=function(M){if(--M.cbt<0){throw _12695;}
M.e.length-=(M.a-1);
return(_12696)(M);};

var _12312=function(M){if(--M.cbt<0){throw _12312;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12683=function(M){if(--M.cbt<0){throw _12683;}
M.e.length-=(M.a-1);
return(_12684)(M);};

var _12673=function(M){if(--M.cbt<0){throw _12673;}
M.e.length-=(M.a-1);
return(_12674)(M);};

var _9911=function(M){if(--M.cbt<0){throw _9911;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8334=function(M){if(--M.cbt<0){throw _8334;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9977,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9969,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9961,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9953,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][55];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _9837=function(M){if(--M.cbt<0){throw _9837;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9779=function(M){if(--M.cbt<0){throw _9779;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-5][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9787,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9745=function(M){if(--M.cbt<0){throw _9745;}
M.e[M.e.length-4]=M.v;
return(_9703)(M);};

var _9725=function(M){if(--M.cbt<0){throw _9725;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9713)(M);};

var _8353=function(M){if(--M.cbt<0){throw _8353;}
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8377=function(M){if(--M.cbt<0){throw _8377;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11676,M.p));
return((M.p).label)(M);};

var _8376=function(M){if(--M.cbt<0){throw _8376;}
M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=false;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9572=function(M){if(--M.cbt<0){throw _9572;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.isList(M.e[M.e.length-8]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9679,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9679,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.push(M.e[M.e.length-4][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9591,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9576,M.p));
return((M.p).label)(M);}};

var _9509=function(M){if(--M.cbt<0){throw _9509;}
return(_9485)(M);};

var _9497=function(M){if(--M.cbt<0){throw _9497;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9501,M.p));
return((M.p).label)(M);};

var _11580=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _9447=function(M){if(--M.cbt<0){throw _9447;}
M.e[M.e.length-5]=M.v;
return(_9429)(M);};

var _9424=function(M){if(--M.cbt<0){throw _9424;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9428,M.p));
return((M.p).label)(M);};

var _9405=function(M){if(--M.cbt<0){throw _9405;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9409,M.p));
return((M.p).label)(M);};

var _9374=function(M){if(--M.cbt<0){throw _9374;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][63];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9389,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][63];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9381,M.p));
return((M.p).label)(M);}};

var _9363=function(M){if(--M.cbt<0){throw _9363;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9370,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-7]=RT.NULL;
return(_9364)(M);}};

var _9339=function(M){if(--M.cbt<0){throw _9339;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][63];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9354,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-17][63];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-19][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9346,M.p));
return((M.p).label)(M);}};

var _9309=function(M){if(--M.cbt<0){throw _9309;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9316,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_9310)(M);}};

var _8328=function(M){if(--M.cbt<0){throw _8328;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9562,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9554,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9546,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9538,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][61];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}};

var _9270=function(M){if(--M.cbt<0){throw _9270;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-14][64];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9277,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-14][64];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9277,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8375=function(M){if(--M.cbt<0){throw _8375;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11432,M.p));
return((M.p).label)(M);};

var _9206=function(M){if(--M.cbt<0){throw _9206;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-19];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-19]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _9175=function(M){if(--M.cbt<0){throw _9175;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _9140=function(M){if(--M.cbt<0){throw _9140;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8374=function(M){if(--M.cbt<0){throw _8374;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("add-between");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][35];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][35];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][35];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-19][35];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-21][62];
M.e[M.e.length-1]=M.e[M.e.length-23];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11404,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
return(_11398)(M);}}else{M.v=RT.NULL;
return(_11395)(M);}}else{M.v=RT.NULL;
return(_11392)(M);}}else{M.e[M.e.length-3]=RT.NULL;
return(_11389)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _9067=function(M){if(--M.cbt<0){throw _9067;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-7]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9121,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9105,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9090,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9074,M.p));
return((M.p).label)(M);}}};

var _9032=function(M){if(--M.cbt<0){throw _9032;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9329=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-7]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9321)(M);};

var _8947=function(M){if(--M.cbt<0){throw _8947;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8326=function(M){if(--M.cbt<0){throw _8326;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9297,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _12758=function(M){if(--M.cbt<0){throw _12758;}
M.c.push(new RT.PromptFrame(_12760,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8389,4,[M.e[M.e.length-1]],"mk-min");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12752=function(M){if(--M.cbt<0){throw _12752;}
M.c.push(new RT.PromptFrame(_12754,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8383,2,[M.e[M.e.length-1]],"partition");
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12744=function(M){if(--M.cbt<0){throw _12744;}
M.c.push(new RT.PromptFrame(_12746,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8372,1,[],"flatten");
M.e[M.e.length-1][33]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12736=function(M){if(--M.cbt<0){throw _12736;}
M.c.push(new RT.PromptFrame(_12738,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8361,2,[M.e[M.e.length-1]],"take-right");
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12728=function(M){if(--M.cbt<0){throw _12728;}
M.c.push(new RT.PromptFrame(_12730,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8357,3,[M.e[M.e.length-1]],"too-large");
M.e[M.e.length-1][22]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12720=function(M){if(--M.cbt<0){throw _12720;}
M.c.push(new RT.PromptFrame(_12722,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8354,1,[],"empty?");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12712=function(M){if(--M.cbt<0){throw _12712;}
M.c.push(new RT.PromptFrame(_12714,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8348,1,[M.e[M.e.length-1]],"last-pair");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12704=function(M){if(--M.cbt<0){throw _12704;}
M.c.push(new RT.PromptFrame(_12706,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8344,1,[M.e[M.e.length-1]],"seventh");
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12692=function(M){if(--M.cbt<0){throw _12692;}
M.c.push(new RT.PromptFrame(_12694,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8338,1,[M.e[M.e.length-1]],"first");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12688=function(M){if(--M.cbt<0){throw _12688;}
M.c.push(new RT.PromptFrame(_12690,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8336,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12678=function(M){if(--M.cbt<0){throw _12678;}
M.c.push(new RT.PromptFrame(_12680,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8331,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12672=function(M){if(--M.cbt<0){throw _12672;}
M.c.push(new RT.PromptFrame(_12674,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8328,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12664=function(M){if(--M.cbt<0){throw _12664;}
M.c.push(new RT.PromptFrame(_12666,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8324,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8394=function(M){if(--M.cbt<0){throw _8394;}
};

var _12635=function(M){if(--M.cbt<0){throw _12635;}
return(_12629)(M);};

var _12607=function(M){if(--M.cbt<0){throw _12607;}
return(_12599)(M);};

var _12584=function(M){if(--M.cbt<0){throw _12584;}
return(_12570)(M);};

var _12554=function(M){if(--M.cbt<0){throw _12554;}
return(_12546)(M);};

var _12518=function(M){if(--M.cbt<0){throw _12518;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-13][1];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-16];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12522,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12514)(M);}};

var _12497=function(M){if(--M.cbt<0){throw _12497;}
return(_12489)(M);};

var _12474=function(M){if(--M.cbt<0){throw _12474;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12478,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12470)(M);}};

var _12435=function(M){if(--M.cbt<0){throw _12435;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12408=function(M){if(--M.cbt<0){throw _12408;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12422,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12422,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _12371=function(M){if(--M.cbt<0){throw _12371;}
return(_12363)(M);};

var _12308=function(M){if(--M.cbt<0){throw _12308;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12312,M.p));
return((M.p).label)(M);};

var _12281=function(M){if(--M.cbt<0){throw _12281;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12671=function(M){if(--M.cbt<0){throw _12671;}
M.e.length-=(M.a-1);
return(_12672)(M);};

var _9903=function(M){if(--M.cbt<0){throw _9903;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8322=function(M){if(--M.cbt<0){throw _8322;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8552,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9803=function(M){if(--M.cbt<0){throw _9803;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-12][58];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.v=RT.makePair(M.e[M.e.length-13],M.e[M.e.length-4]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8356=function(M){if(--M.cbt<0){throw _8356;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][20]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10777,M.p));
return((M.p).label)(M);};

var _9741=function(M){if(--M.cbt<0){throw _9741;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9745,M.p));
return((M.p).label)(M);};

var _9719=function(M){if(--M.cbt<0){throw _9719;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-16][23];
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-19][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-21];
M.v=RT.isList(M.e[M.e.length-20]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9731,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9731,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-19][59];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9725,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-4]=RT.NULL;
return(_9713)(M);}};

var _8352=function(M){if(--M.cbt<0){throw _8352;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("rest");
M.e[M.e.length-2]="non-empty list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("rest");
M.e[M.e.length-2]="non-empty list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _9659=function(M){if(--M.cbt<0){throw _9659;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9591=function(M){if(--M.cbt<0){throw _9591;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-12];
M.v=RT.isList(M.e[M.e.length-11]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9669,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9669,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.push(M.e[M.e.length-7][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9610,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9595,M.p));
return((M.p).label)(M);}};

var _8351=function(M){if(--M.cbt<0){throw _8351;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8351,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _9505=function(M){if(--M.cbt<0){throw _9505;}
return(_9488)(M);};

var _9478=function(M){if(--M.cbt<0){throw _9478;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9470=function(M){if(--M.cbt<0){throw _9470;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9474,M.p));
return((M.p).label)(M);};

var _9443=function(M){if(--M.cbt<0){throw _9443;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9447,M.p));
return((M.p).label)(M);};

var _8350=function(M){if(--M.cbt<0){throw _8350;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("last");
M.e[M.e.length-2]="non-empty list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8351,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+12),12);
M.c[M.c.length-1].p=M.p;
return(_8351)(M);}}}}}}}}}}}}else{M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("last");
M.e[M.e.length-2]="non-empty list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8351,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+12),12);
M.c[M.c.length-1].p=M.p;
return(_8351)(M);}}}}}}}}}}}}};

var _9398=function(M){if(--M.cbt<0){throw _9398;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9405,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9370=function(M){if(--M.cbt<0){throw _9370;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9374,M.p));
return((M.p).label)(M);};

var _8349=function(M){if(--M.cbt<0){throw _8349;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8349,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _9335=function(M){if(--M.cbt<0){throw _9335;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9339,M.p));
return((M.p).label)(M);};

var _9301=function(M){if(--M.cbt<0){throw _9301;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9398,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9309,M.p));
return((M.p).label)(M);}};


var _9266=function(M){if(--M.cbt<0){throw _9266;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9270,M.p));
return((M.p).label)(M);};

var _8348=function(M){if(--M.cbt<0){throw _8348;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("last-pair");
M.e[M.e.length-2]="pair";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8349,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+12),12);
M.c[M.c.length-1].p=M.p;
return(_8349)(M);}}}}}}}}}}}};

var _9194=function(M){if(--M.cbt<0){throw _9194;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9163=function(M){if(--M.cbt<0){throw _9163;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8347=function(M){if(--M.cbt<0){throw _8347;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10587,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10579,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10571,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10563,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][57];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=6;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _9090=function(M){if(--M.cbt<0){throw _9090;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-13]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8346=function(M){if(--M.cbt<0){throw _8346;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10534,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10526,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10518,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10510,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][56];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=5;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _9028=function(M){if(--M.cbt<0){throw _9028;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9032,M.p));
return((M.p).label)(M);};

var _8997=function(M){if(--M.cbt<0){throw _8997;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9001,M.p));
return((M.p).label)(M);};

var _8345=function(M){if(--M.cbt<0){throw _8345;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e[M.e.length-2]="list";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10481,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10473,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10465,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=8;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10457,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][55];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=4;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};

var _12764=function(M){if(--M.cbt<0){throw _12764;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/list.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _12756=function(M){if(--M.cbt<0){throw _12756;}
M.c.push(new RT.PromptFrame(_12758,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8388,2,[M.e[M.e.length-1]],"filter-not");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12750=function(M){if(--M.cbt<0){throw _12750;}
M.c.push(new RT.PromptFrame(_12752,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8379,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"count");
M.e[M.e.length-1][44]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12742=function(M){if(--M.cbt<0){throw _12742;}
M.c.push(new RT.PromptFrame(_12744,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e[M.e.length-1]=new RT.Closure(_8367,1,[M.e[M.e.length-6]],"...nt/lang/list.rkt:162:15");
M.e[M.e.length-2]=new RT.Closure(_8368,2,[M.e[M.e.length-6]],"...nt/lang/list.rkt:163:15");
M.e[M.e.length-3]=new RT.Closure(_8369,3,[M.e[M.e.length-6]],"...nt/lang/list.rkt:164:15");
M.e[M.e.length-4]=new RT.Closure(_8370,4,[M.e[M.e.length-6]],"...nt/lang/list.rkt:165:15");
M.e[M.e.length-5]=new RT.Closure(_8371,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...nt/lang/list.rkt:166:15");
M.v=new RT.Closure(_8366,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))))),[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append*");
M.e.length-=5;
M.e[M.e.length-1][31]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12734=function(M){if(--M.cbt<0){throw _12734;}
M.c.push(new RT.PromptFrame(_12736,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8360,2,[M.e[M.e.length-1]],"drop");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12726=function(M){if(--M.cbt<0){throw _12726;}
M.c.push(new RT.PromptFrame(_12728,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8356,2,[M.e[M.e.length-1]],"drop*");
M.e[M.e.length-1][21]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12718=function(M){if(--M.cbt<0){throw _12718;}
M.c.push(new RT.PromptFrame(_12720,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8353,1,[],"cons?");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12710=function(M){if(--M.cbt<0){throw _12710;}
M.c.push(new RT.PromptFrame(_12712,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8347,1,[M.e[M.e.length-1]],"tenth");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12702=function(M){if(--M.cbt<0){throw _12702;}
M.c.push(new RT.PromptFrame(_12704,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8343,1,[M.e[M.e.length-1]],"sixth");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12690=function(M){if(--M.cbt<0){throw _12690;}
M.c.push(new RT.PromptFrame(_12692,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8337,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12686=function(M){if(--M.cbt<0){throw _12686;}
M.c.push(new RT.PromptFrame(_12688,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8335,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12676=function(M){if(--M.cbt<0){throw _12676;}
M.c.push(new RT.PromptFrame(_12678,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8330,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12670=function(M){if(--M.cbt<0){throw _12670;}
M.c.push(new RT.PromptFrame(_12672,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8327,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][62]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12662=function(M){if(--M.cbt<0){throw _12662;}
M.c.push(new RT.PromptFrame(_12664,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8323,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][66]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12650=function(M){if(--M.cbt<0){throw _12650;}
return(_12642)(M);};

var _12627=function(M){if(--M.cbt<0){throw _12627;}
return(_12613)(M);};

var _12603=function(M){if(--M.cbt<0){throw _12603;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12607,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12599)(M);}};

var _12580=function(M){if(--M.cbt<0){throw _12580;}
return(_12572)(M);};

var _12550=function(M){if(--M.cbt<0){throw _12550;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][1];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-15];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12554,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12546)(M);}};

var _12511=function(M){if(--M.cbt<0){throw _12511;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-8][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12518,M.p));
return((M.p).label)(M);};

var _12493=function(M){if(--M.cbt<0){throw _12493;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-13];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12497,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12489)(M);}};

var _12467=function(M){if(--M.cbt<0){throw _12467;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12474,M.p));
return((M.p).label)(M);};

var _12422=function(M){if(--M.cbt<0){throw _12422;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][66];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12435,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][66];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12435,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-7][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _12394=function(M){if(--M.cbt<0){throw _12394;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=RT.NULL;
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12408,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.NULL;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12408,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _12367=function(M){if(--M.cbt<0){throw _12367;}
if(M.v===false){M.v=false;
return(_12363)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12371,M.p));
return((M.p).label)(M);}};

var _8335=function(M){if(--M.cbt<0){throw _8335;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10035,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10027,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10019,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=7;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10011,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][54];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12277=function(M){if(--M.cbt<0){throw _12277;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12281,M.p));
return((M.p).label)(M);};

var _12669=function(M){if(--M.cbt<0){throw _12669;}
M.e.length-=(M.a-1);
return(_12670)(M);};

var _12667=function(M){if(--M.cbt<0){throw _12667;}
M.e.length-=(M.a-1);
return(_12668)(M);};

var _12659=function(M){if(--M.cbt<0){throw _12659;}
M.e.length-=(M.a-1);
return(_12660)(M);};

var _9795=function(M){if(--M.cbt<0){throw _9795;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-9][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9803,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9771=function(M){if(--M.cbt<0){throw _9771;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-4],M.e[M.e.length-6]);
M.e.push(M.e[M.e.length-3][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9779,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9735=function(M){if(--M.cbt<0){throw _9735;}
M.e[M.e.length-4]=M.v;
return(_9713)(M);};

var _8333=function(M){if(--M.cbt<0){throw _8333;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9919,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9911,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9903,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=9;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9895,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][56];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8391=function(M){if(--M.cbt<0){throw _8391;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12619,M.p));
return((M.p).label)(M);};

var _9649=function(M){if(--M.cbt<0){throw _9649;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8382=function(M){if(--M.cbt<0){throw _8382;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12085,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8332=function(M){if(--M.cbt<0){throw _8332;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9861,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9853,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9845,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][1];
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][3];
M.e[M.e.length-1]="list with ~a or more items";
M.v=10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9837,M.p));
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][57];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12583=function(M){if(--M.cbt<0){throw _12583;}
M.e.length-=(M.a-1);
return(_12570)(M);};

var _8331=function(M){if(--M.cbt<0){throw _8331;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][20]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9771,M.p));
return((M.p).label)(M);};

var _9463=function(M){if(--M.cbt<0){throw _9463;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][63];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9478,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][63];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9470,M.p));
return((M.p).label)(M);}};

var _9439=function(M){if(--M.cbt<0){throw _9439;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-7]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9429)(M);};

var _9417=function(M){if(--M.cbt<0){throw _9417;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9424,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_9418)(M);}};

var _8330=function(M){if(--M.cbt<0){throw _8330;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][20]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9689,M.p));
return((M.p).label)(M);};


var _9358=function(M){if(--M.cbt<0){throw _9358;}
M.e[M.e.length-5]=M.v;
return(_9340)(M);};

var _8329=function(M){if(--M.cbt<0){throw _8329;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][20]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9572,M.p));
return((M.p).label)(M);};



var _9259=function(M){if(--M.cbt<0){throw _9259;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9266,M.p));
return((M.p).label)(M);};

var _9232=function(M){if(--M.cbt<0){throw _9232;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9240,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"add1"));
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9240,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _8327=function(M){if(--M.cbt<0){throw _8327;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][35];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][35];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-12][35];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-16][35];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18][62];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9497,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
return(_9491)(M);}}else{M.v=RT.NULL;
return(_9488)(M);}}else{M.v=RT.NULL;
return(_9485)(M);}}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9159=function(M){if(--M.cbt<0){throw _9159;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9163,M.p));
return((M.p).label)(M);};

var _9136=function(M){if(--M.cbt<0){throw _9136;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9140,M.p));
return((M.p).label)(M);};

var _9078=function(M){if(--M.cbt<0){throw _9078;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9055=function(M){if(--M.cbt<0){throw _9055;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9013=function(M){if(--M.cbt<0){throw _9013;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-13]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8982=function(M){if(--M.cbt<0){throw _8982;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8943=function(M){if(--M.cbt<0){throw _8943;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8947,M.p));
return((M.p).label)(M);};

var _12762=function(M){if(--M.cbt<0){throw _12762;}
M.c.push(new RT.PromptFrame(_12764,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8391,2,[M.e[M.e.length-1]],"argmax");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12754=function(M){if(--M.cbt<0){throw _12754;}
M.c.push(new RT.PromptFrame(_12756,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_8385,2,[M.e[M.e.length-4]],"...nt/lang/list.rkt:318:15");
M.e[M.e.length-2]=new RT.Closure(_8386,3,[M.e[M.e.length-4]],"...nt/lang/list.rkt:319:15");
M.e[M.e.length-3]=new RT.Closure(_8387,(RT.makeArityAtLeast(2)),[M.e[M.e.length-4]],"...nt/lang/list.rkt:320:15");
M.v=new RT.Closure(_8384,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(2)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append-map");
M.e.length-=3;
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12748=function(M){if(--M.cbt<0){throw _12748;}
M.c.push(new RT.PromptFrame(_12750,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8375,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"filter-map");
M.e[M.e.length-1][36]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12740=function(M){if(--M.cbt<0){throw _12740;}
M.c.push(new RT.PromptFrame(_12742,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8365,2,[M.e[M.e.length-1]],"split-at-right");
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12732=function(M){if(--M.cbt<0){throw _12732;}
M.c.push(new RT.PromptFrame(_12734,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8359,2,[M.e[M.e.length-1]],"split-at");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12724=function(M){if(--M.cbt<0){throw _12724;}
M.c.push(new RT.PromptFrame(_12726,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8355,2,[M.e[M.e.length-1]],"make-list");
M.e[M.e.length-1][18]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12716=function(M){if(--M.cbt<0){throw _12716;}
M.c.push(new RT.PromptFrame(_12718,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8352,1,[M.e[M.e.length-1]],"rest");
M.e[M.e.length-1][14]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12708=function(M){if(--M.cbt<0){throw _12708;}
M.c.push(new RT.PromptFrame(_12710,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8346,1,[M.e[M.e.length-1]],"ninth");
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12700=function(M){if(--M.cbt<0){throw _12700;}
M.c.push(new RT.PromptFrame(_12702,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8342,1,[M.e[M.e.length-1]],"fifth");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _12684=function(M){if(--M.cbt<0){throw _12684;}
M.c.push(new RT.PromptFrame(_12686,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8334,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12674=function(M){if(--M.cbt<0){throw _12674;}
M.c.push(new RT.PromptFrame(_12676,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8329,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12668=function(M){if(--M.cbt<0){throw _12668;}
M.c.push(new RT.PromptFrame(_12670,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8326,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12660=function(M){if(--M.cbt<0){throw _12660;}
M.c.push(new RT.PromptFrame(_12662,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8322,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][67]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12646=function(M){if(--M.cbt<0){throw _12646;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12650,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12642)(M);}};

var _12623=function(M){if(--M.cbt<0){throw _12623;}
return(_12615)(M);};

var _12596=function(M){if(--M.cbt<0){throw _12596;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12603,M.p));
return((M.p).label)(M);};

var _12576=function(M){if(--M.cbt<0){throw _12576;}
if(M.v===false){M.v=false;
return(_12572)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12580,M.p));
return((M.p).label)(M);}};

var _12543=function(M){if(--M.cbt<0){throw _12543;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-7][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12550,M.p));
return((M.p).label)(M);};

var _8323=function(M){if(--M.cbt<0){throw _8323;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8761,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-1][26]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12486=function(M){if(--M.cbt<0){throw _12486;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12493,M.p));
return((M.p).label)(M);};

var _12463=function(M){if(--M.cbt<0){throw _12463;}
return(_12457)(M);};


var _12381=function(M){if(--M.cbt<0){throw _12381;}
return(_12377)(M);};

var _12355=function(M){if(--M.cbt<0){throw _12355;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _12270=function(M){if(--M.cbt<0){throw _12270;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12324,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12308,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],RT.NULL);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12293,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12277,M.p));
return((M.p).label)(M);}}};

var _12258=function(M){if(--M.cbt<0){throw _12258;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12665=function(M){if(--M.cbt<0){throw _12665;}
M.e.length-=(M.a-1);
return(_12666)(M);};

var _12657=function(M){if(--M.cbt<0){throw _12657;}
M.e.length-=(M.a-1);
return(_12658)(M);};

var _9787=function(M){if(--M.cbt<0){throw _9787;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-7][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9795,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9761=function(M){if(--M.cbt<0){throw _9761;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _9709=function(M){if(--M.cbt<0){throw _9709;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-12][23];
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-17];
M.v=RT.isList(M.e[M.e.length-16]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9741,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9741,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.push(M.e[M.e.length-13][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9719,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-4]=RT.NULL;
return(_9703)(M);}};

var _8321=function(M){if(--M.cbt<0){throw _8321;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8476,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9633=function(M){if(--M.cbt<0){throw _9633;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _9562=function(M){if(--M.cbt<0){throw _9562;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _9474=function(M){if(--M.cbt<0){throw _9474;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _9459=function(M){if(--M.cbt<0){throw _9459;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9463,M.p));
return((M.p).label)(M);};

var _9435=function(M){if(--M.cbt<0){throw _9435;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9439,M.p));
return((M.p).label)(M);};

var _9409=function(M){if(--M.cbt<0){throw _9409;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9452,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9417,M.p));
return((M.p).label)(M);}};

var _9393=function(M){if(--M.cbt<0){throw _9393;}
M.e[M.e.length-8]=M.v;
return(_9375)(M);};

var _12521=function(M){if(--M.cbt<0){throw _12521;}
M.e.length-=(M.a-1);
return(_12514)(M);};

var _9354=function(M){if(--M.cbt<0){throw _9354;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9358,M.p));
return((M.p).label)(M);};

var _9328=function(M){if(--M.cbt<0){throw _9328;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9335,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_9329)(M);}};

var _12496=function(M){if(--M.cbt<0){throw _12496;}
M.e.length-=(M.a-1);
return(_12489)(M);};


var _9251=function(M){if(--M.cbt<0){throw _9251;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9259,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9259,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _9228=function(M){if(--M.cbt<0){throw _9228;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9232,M.p));
return((M.p).label)(M);};

var _9190=function(M){if(--M.cbt<0){throw _9190;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9194,M.p));
return((M.p).label)(M);};

var _9152=function(M){if(--M.cbt<0){throw _9152;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9206,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-16];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9190,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-13]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9175,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9159,M.p));
return((M.p).label)(M);}}};

var _9121=function(M){if(--M.cbt<0){throw _9121;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _9074=function(M){if(--M.cbt<0){throw _9074;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9078,M.p));
return((M.p).label)(M);};

var _9051=function(M){if(--M.cbt<0){throw _9051;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9055,M.p));
return((M.p).label)(M);};

var _9001=function(M){if(--M.cbt<0){throw _9001;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8970=function(M){if(--M.cbt<0){throw _8970;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8928=function(M){if(--M.cbt<0){throw _8928;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-16][65];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+16),16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _11340=function(M){if(--M.cbt<0){throw _11340;}
M.e[M.e.length-4]=M.v;
return(_11328)(M);};

var _12380=function(M){if(--M.cbt<0){throw _12380;}
M.e.length-=(M.a-1);
return(_12377)(M);};

var _12746=function(M){if(--M.cbt<0){throw _12746;}
M.c.push(new RT.PromptFrame(_12748,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8374,2,[M.e[M.e.length-1]],"add-between");
M.e[M.e.length-1][34]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12738=function(M){if(--M.cbt<0){throw _12738;}
M.c.push(new RT.PromptFrame(_12740,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8363,2,[M.e[M.e.length-1]],"drop-right");
M.e[M.e.length-1][29]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12730=function(M){if(--M.cbt<0){throw _12730;}
M.c.push(new RT.PromptFrame(_12732,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8358,2,[M.e[M.e.length-1]],"take");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12722=function(M){if(--M.cbt<0){throw _12722;}
M.c.push(new RT.PromptFrame(_12724,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=RT.NULL;
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12714=function(M){if(--M.cbt<0){throw _12714;}
M.c.push(new RT.PromptFrame(_12716,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8350,1,[M.e[M.e.length-1]],"last");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12706=function(M){if(--M.cbt<0){throw _12706;}
M.c.push(new RT.PromptFrame(_12708,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8345,1,[M.e[M.e.length-1]],"eighth");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12698=function(M){if(--M.cbt<0){throw _12698;}
M.c.push(new RT.PromptFrame(_12700,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8341,1,[M.e[M.e.length-1]],"fourth");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _12682=function(M){if(--M.cbt<0){throw _12682;}
M.c.push(new RT.PromptFrame(_12684,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8333,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _12666=function(M){if(--M.cbt<0){throw _12666;}
M.c.push(new RT.PromptFrame(_12668,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8325,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12658=function(M){if(--M.cbt<0){throw _12658;}
M.c.push(new RT.PromptFrame(_12660,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8321,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][68]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12639=function(M){if(--M.cbt<0){throw _12639;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12646,M.p));
return((M.p).label)(M);};

var _12619=function(M){if(--M.cbt<0){throw _12619;}
if(M.v===false){M.v=false;
return(_12615)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12623,M.p));
return((M.p).label)(M);}};

var _12592=function(M){if(--M.cbt<0){throw _12592;}
return(_12586)(M);};

var _12560=function(M){if(--M.cbt<0){throw _12560;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12528=function(M){if(--M.cbt<0){throw _12528;}
if(M.v===false){M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-14][67];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-14][67];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12503=function(M){if(--M.cbt<0){throw _12503;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12543,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12511,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12478=function(M){if(--M.cbt<0){throw _12478;}
return(_12470)(M);};

var _12455=function(M){if(--M.cbt<0){throw _12455;}
return(_12441)(M);};

var _10269=function(M){if(--M.cbt<0){throw _10269;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12375=function(M){if(--M.cbt<0){throw _12375;}
return(_12361)(M);};

var _12347=function(M){if(--M.cbt<0){throw _12347;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10077=function(M){if(--M.cbt<0){throw _10077;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12139=function(M){if(--M.cbt<0){throw _12139;}
M.e.length-=(M.a-1);
return(_12136)(M);};

var _12254=function(M){if(--M.cbt<0){throw _12254;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12258,M.p));
return((M.p).label)(M);};

var _12223=function(M){if(--M.cbt<0){throw _12223;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12227,M.p));
return((M.p).label)(M);};

var _12185=function(M){if(--M.cbt<0){throw _12185;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],RT.NULL);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12239,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12223,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12208,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12192,M.p));
return((M.p).label)(M);}}};

var _12150=function(M){if(--M.cbt<0){throw _12150;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12130=function(M){if(--M.cbt<0){throw _12130;}
return(_12122)(M);};

var _12095=function(M){if(--M.cbt<0){throw _12095;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12105,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12105,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12058=function(M){if(--M.cbt<0){throw _12058;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_8382,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12067,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_8382,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12067,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12017=function(M){if(--M.cbt<0){throw _12017;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12021,M.p));
return((M.p).label)(M);};

var _11993=function(M){if(--M.cbt<0){throw _11993;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-16][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12000,M.p));
return((M.p).label)(M);};

var _11966=function(M){if(--M.cbt<0){throw _11966;}
if(M.v===false){M.e[M.e.length-1]=0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11974,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=1;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11974,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _11939=function(M){if(--M.cbt<0){throw _11939;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][40];
M.v=new RT.Closure(_8381,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...nt/lang/list.rkt:282:18");
M.a=1;
if(M.a===0){return(_11943)(M);}else{M.e.push(M.v);
return(_11943)(M);}};

var _11917=function(M){if(--M.cbt<0){throw _11917;}
return(_11891)(M);};

var _11901=function(M){if(--M.cbt<0){throw _11901;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11905,M.p));
return((M.p).label)(M);};

var _11871=function(M){if(--M.cbt<0){throw _11871;}
M.e[M.e.length-4]=M.v;
return(_11861)(M);};

var _11839=function(M){if(--M.cbt<0){throw _11839;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-8]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11833)(M);};

var _11814=function(M){if(--M.cbt<0){throw _11814;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11825,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11821,M.p));
return((M.p).label)(M);}};

var _11783=function(M){if(--M.cbt<0){throw _11783;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-10]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11777)(M);};

var _11758=function(M){if(--M.cbt<0){throw _11758;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11769,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11765,M.p));
return((M.p).label)(M);}};

var _11730=function(M){if(--M.cbt<0){throw _11730;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11741,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11737,M.p));
return((M.p).label)(M);}};

var _11702=function(M){if(--M.cbt<0){throw _11702;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11730,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-5]=RT.NULL;
return(_11724)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-14]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11712,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11706)(M);}}};

var _11659=function(M){if(--M.cbt<0){throw _11659;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11666,M.p));
return((M.p).label)(M);}};

var _11641=function(M){if(--M.cbt<0){throw _11641;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11652,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11648,M.p));
return((M.p).label)(M);}};

var _11613=function(M){if(--M.cbt<0){throw _11613;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11624,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11620,M.p));
return((M.p).label)(M);}};

var _11586=function(M){if(--M.cbt<0){throw _11586;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11613,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-5]=RT.NULL;
return(_11607)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11596,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11590)(M);}}};

var _11554=function(M){if(--M.cbt<0){throw _11554;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11558,M.p));
return((M.p).label)(M);};

var _11531=function(M){if(--M.cbt<0){throw _11531;}
M.e[M.e.length-5]=M.v;
return(_11513)(M);};

var _11512=function(M){if(--M.cbt<0){throw _11512;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][63];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11527,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][63];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11519,M.p));
return((M.p).label)(M);}};

var _11489=function(M){if(--M.cbt<0){throw _11489;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11493,M.p));
return((M.p).label)(M);};

var _11464=function(M){if(--M.cbt<0){throw _11464;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11468,M.p));
return((M.p).label)(M);};

var _11444=function(M){if(--M.cbt<0){throw _11444;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11448,M.p));
return((M.p).label)(M);};

var _11420=function(M){if(--M.cbt<0){throw _11420;}
M.e[M.e.length-3]=M.v;
return(_11389)(M);};

var _11404=function(M){if(--M.cbt<0){throw _11404;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11408,M.p));
return((M.p).label)(M);};

var _12765=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_8394,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/list.rkt"]=new RT.ModuleRecord("list",_12656);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11280=function(M){if(--M.cbt<0){throw _11280;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11230=function(M){if(--M.cbt<0){throw _11230;}
M.e[M.e.length-2]=M.v;
return(_11218)(M);};

var _11209=function(M){if(--M.cbt<0){throw _11209;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("split-at-right");
M.e[M.e.length-2]="non-negative exact integer";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11213,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11205)(M);}};

var _11167=function(M){if(--M.cbt<0){throw _11167;}
M.e[M.e.length-2]=M.v;
return(_11155)(M);};

var _11146=function(M){if(--M.cbt<0){throw _11146;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("drop-right");
M.e[M.e.length-2]="non-negative exact integer";
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11150,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11142)(M);}};

var _11055=function(M){if(--M.cbt<0){throw _11055;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("take-right");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11059,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11051)(M);}};

var _11030=function(M){if(--M.cbt<0){throw _11030;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e[M.e.length-9]=false;
return(_11024)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][21];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11036,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-9]=M.e[M.e.length-2];
return(_11024)(M);}};

var _10990=function(M){if(--M.cbt<0){throw _10990;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e[M.e.length-1]=false;
return(_10986)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.e.push(M.e[M.e.length-4][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11000,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-1]=M.e[M.e.length-3];
return(_10986)(M);}};

var _10950=function(M){if(--M.cbt<0){throw _10950;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10920=function(M){if(--M.cbt<0){throw _10920;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-16][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-18];
M.v=RT.isList(M.e[M.e.length-17]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10940,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10940,M.p));
return((M.p).label)(M);}}else{M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-15][60];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e[M.e.length-4]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-12];
M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10924,M.p));
return((M.p).label)(M);}};

var _10867=function(M){if(--M.cbt<0){throw _10867;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10839=function(M){if(--M.cbt<0){throw _10839;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10843,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_10835)(M);}};

var _10817=function(M){if(--M.cbt<0){throw _10817;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][21];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10767=function(M){if(--M.cbt<0){throw _10767;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-12][58];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.v=RT.makePair(M.e[M.e.length-14],M.e[M.e.length-4]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10729=function(M){if(--M.cbt<0){throw _10729;}
return(_10721)(M);};

var _10571=function(M){if(--M.cbt<0){throw _10571;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10510=function(M){if(--M.cbt<0){throw _10510;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10473=function(M){if(--M.cbt<0){throw _10473;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10412=function(M){if(--M.cbt<0){throw _10412;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10351=function(M){if(--M.cbt<0){throw _10351;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10306=function(M){if(--M.cbt<0){throw _10306;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10253=function(M){if(--M.cbt<0){throw _10253;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10220=function(M){if(--M.cbt<0){throw _10220;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10135=function(M){if(--M.cbt<0){throw _10135;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10085=function(M){if(--M.cbt<0){throw _10085;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10019=function(M){if(--M.cbt<0){throw _10019;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12239=function(M){if(--M.cbt<0){throw _12239;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12208=function(M){if(--M.cbt<0){throw _12208;}
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=RT.makePair(M.e[M.e.length-6],RT.NULL);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-13][65];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-7]);
M.v=RT.NULL;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12173=function(M){if(--M.cbt<0){throw _12173;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12146=function(M){if(--M.cbt<0){throw _12146;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12150,M.p));
return((M.p).label)(M);};

var _12126=function(M){if(--M.cbt<0){throw _12126;}
if(M.v===false){M.v=false;
return(_12122)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12130,M.p));
return((M.p).label)(M);}};

var _12085=function(M){if(--M.cbt<0){throw _12085;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12095,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12095,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12048=function(M){if(--M.cbt<0){throw _12048;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12058,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12058,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12011=function(M){if(--M.cbt<0){throw _12011;}
M.e[M.e.length-3]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-20][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12017,M.p));
return((M.p).label)(M);};

var _11985=function(M){if(--M.cbt<0){throw _11985;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11993,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11993,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _11962=function(M){if(--M.cbt<0){throw _11962;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11966,M.p));
return((M.p).label)(M);};

var _11933=function(M){if(--M.cbt<0){throw _11933;}
return(_11919)(M);};

var _11913=function(M){if(--M.cbt<0){throw _11913;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11917,M.p));
return((M.p).label)(M);};

var _11897=function(M){if(--M.cbt<0){throw _11897;}
if(M.v===false){M.v=false;
return(_11893)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11901,M.p));
return((M.p).label)(M);}};

var _11867=function(M){if(--M.cbt<0){throw _11867;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11861)(M);};

var _11832=function(M){if(--M.cbt<0){throw _11832;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11843,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11839,M.p));
return((M.p).label)(M);}};

var _11804=function(M){if(--M.cbt<0){throw _11804;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11832,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-5]=RT.NULL;
return(_11826)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11814,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11808)(M);}}};

var _11776=function(M){if(--M.cbt<0){throw _11776;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11787,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11783,M.p));
return((M.p).label)(M);}};

var _11748=function(M){if(--M.cbt<0){throw _11748;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11776,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-7]=RT.NULL;
return(_11770)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-12]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11758,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11752)(M);}}};

var _11723=function(M){if(--M.cbt<0){throw _11723;}
M.e[M.e.length-4]=M.v;
return(_11713)(M);};

var _11692=function(M){if(--M.cbt<0){throw _11692;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11748,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-5]=RT.NULL;
return(_11742)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11702,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11696)(M);}}};

var _11652=function(M){if(--M.cbt<0){throw _11652;}
M.e[M.e.length-4]=M.v;
return(_11642)(M);};

var _11631=function(M){if(--M.cbt<0){throw _11631;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11659,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-9]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11641,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11635)(M);}}};

var _11606=function(M){if(--M.cbt<0){throw _11606;}
M.e[M.e.length-4]=M.v;
return(_11597)(M);};

var _11576=function(M){if(--M.cbt<0){throw _11576;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11631,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-7]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11586,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11580)(M);}}};

var _11547=function(M){if(--M.cbt<0){throw _11547;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][63];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11562,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][63];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11554,M.p));
return((M.p).label)(M);}};

var _11527=function(M){if(--M.cbt<0){throw _11527;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11531,M.p));
return((M.p).label)(M);};

var _11508=function(M){if(--M.cbt<0){throw _11508;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11512,M.p));
return((M.p).label)(M);};

var _11483=function(M){if(--M.cbt<0){throw _11483;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][43];
M.e[M.e.length-1]=RT.makeSymbol("filter-map");
M.v="all lists must have same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11489,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _11460=function(M){if(--M.cbt<0){throw _11460;}
return(_11456)(M);};

var _11440=function(M){if(--M.cbt<0){throw _11440;}
return(_11428)(M);};

var _11416=function(M){if(--M.cbt<0){throw _11416;}
return(_11392)(M);};

var _11378=function(M){if(--M.cbt<0){throw _11378;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11336=function(M){if(--M.cbt<0){throw _11336;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11340,M.p));
return((M.p).label)(M);};

var _11272=function(M){if(--M.cbt<0){throw _11272;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11226=function(M){if(--M.cbt<0){throw _11226;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11230,M.p));
return((M.p).label)(M);};

var _11203=function(M){if(--M.cbt<0){throw _11203;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11197)(M);};

var _11163=function(M){if(--M.cbt<0){throw _11163;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11167,M.p));
return((M.p).label)(M);};

var _11076=function(M){if(--M.cbt<0){throw _11076;}
M.e[M.e.length-2]=M.v;
return(_11064)(M);};

var _11059=function(M){if(--M.cbt<0){throw _11059;}
return(_11051)(M);};

var _11010=function(M){if(--M.cbt<0){throw _11010;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e[M.e.length-5]=false;
return(_11004)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.push(M.e[M.e.length-8][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11020,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-5]=M.e[M.e.length-2];
return(_11004)(M);}};

var _10984=function(M){if(--M.cbt<0){throw _10984;}
return(_10976)(M);};

var _10940=function(M){if(--M.cbt<0){throw _10940;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10901=function(M){if(--M.cbt<0){throw _10901;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-15];
M.v=RT.isList(M.e[M.e.length-14]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10950,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10950,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.push(M.e[M.e.length-10][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10920,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10905,M.p));
return((M.p).label)(M);}};

var _10863=function(M){if(--M.cbt<0){throw _10863;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.isList(M.e[M.e.length-8]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10970,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10970,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=RT.NULL;
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.push(M.e[M.e.length-4][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10882,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-3][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10867,M.p));
return((M.p).label)(M);}};

var _10829=function(M){if(--M.cbt<0){throw _10829;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10807=function(M){if(--M.cbt<0){throw _10807;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.push(M.e[M.e.length-9][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10817,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10759=function(M){if(--M.cbt<0){throw _10759;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-11],M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-9][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10767,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10743=function(M){if(--M.cbt<0){throw _10743;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-5][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10751,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10587=function(M){if(--M.cbt<0){throw _10587;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10518=function(M){if(--M.cbt<0){throw _10518;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10457=function(M){if(--M.cbt<0){throw _10457;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10428=function(M){if(--M.cbt<0){throw _10428;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10359=function(M){if(--M.cbt<0){throw _10359;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10314=function(M){if(--M.cbt<0){throw _10314;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10245=function(M){if(--M.cbt<0){throw _10245;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10204=function(M){if(--M.cbt<0){throw _10204;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10174=function(M){if(--M.cbt<0){throw _10174;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10127=function(M){if(--M.cbt<0){throw _10127;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10069=function(M){if(--M.cbt<0){throw _10069;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12227=function(M){if(--M.cbt<0){throw _12227;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12196=function(M){if(--M.cbt<0){throw _12196;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12169=function(M){if(--M.cbt<0){throw _12169;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12173,M.p));
return((M.p).label)(M);};

var _12140=function(M){if(--M.cbt<0){throw _12140;}
return(_12136)(M);};

var _12114=function(M){if(--M.cbt<0){throw _12114;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12076=function(M){if(--M.cbt<0){throw _12076;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12038=function(M){if(--M.cbt<0){throw _12038;}
if(M.v===false){M.e[M.e.length-1]=0;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12048,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=1;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12048,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12004=function(M){if(--M.cbt<0){throw _12004;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-15][64];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12011,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-15][64];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12011,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _11981=function(M){if(--M.cbt<0){throw _11981;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11985,M.p));
return((M.p).label)(M);};

var _11955=function(M){if(--M.cbt<0){throw _11955;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11962,M.p));
return((M.p).label)(M);};

var _11929=function(M){if(--M.cbt<0){throw _11929;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11933,M.p));
return((M.p).label)(M);};

var _11909=function(M){if(--M.cbt<0){throw _11909;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11913,M.p));
return((M.p).label)(M);};

var _11885=function(M){if(--M.cbt<0){throw _11885;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11860=function(M){if(--M.cbt<0){throw _11860;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11871,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-14];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11867,M.p));
return((M.p).label)(M);}};

var _11825=function(M){if(--M.cbt<0){throw _11825;}
M.e[M.e.length-4]=M.v;
return(_11815)(M);};

var _11794=function(M){if(--M.cbt<0){throw _11794;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11850,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11804,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11798)(M);}}};

var _11769=function(M){if(--M.cbt<0){throw _11769;}
M.e[M.e.length-4]=M.v;
return(_11759)(M);};

var _11741=function(M){if(--M.cbt<0){throw _11741;}
M.e[M.e.length-6]=M.v;
return(_11731)(M);};

var _11719=function(M){if(--M.cbt<0){throw _11719;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11713)(M);};

var _11682=function(M){if(--M.cbt<0){throw _11682;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11794,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11692,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11686)(M);}}};

var _11676=function(M){if(--M.cbt<0){throw _11676;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11624=function(M){if(--M.cbt<0){throw _11624;}
M.e[M.e.length-6]=M.v;
return(_11614)(M);};

var _11602=function(M){if(--M.cbt<0){throw _11602;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11597)(M);};

var _11562=function(M){if(--M.cbt<0){throw _11562;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11543=function(M){if(--M.cbt<0){throw _11543;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11547,M.p));
return((M.p).label)(M);};

var _11523=function(M){if(--M.cbt<0){throw _11523;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-7]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11513)(M);};

var _11501=function(M){if(--M.cbt<0){throw _11501;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11508,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-4]=RT.NULL;
return(_11502)(M);}};

var _11474=function(M){if(--M.cbt<0){throw _11474;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][40];
M.v=new RT.Closure(_8377,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...nt/lang/list.rkt:256:18");
M.a=1;
if(M.a===0){return(_11478)(M);}else{M.e.push(M.v);
return(_11478)(M);}};

var _11452=function(M){if(--M.cbt<0){throw _11452;}
return(_11426)(M);};

var _11436=function(M){if(--M.cbt<0){throw _11436;}
M.e[M.e.length-1]=M.v;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11440,M.p));
return((M.p).label)(M);};

var _11412=function(M){if(--M.cbt<0){throw _11412;}
return(_11395)(M);};

var _11369=function(M){if(--M.cbt<0){throw _11369;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11378,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _11359=function(M){if(--M.cbt<0){throw _11359;}
M.e[M.e.length-2]=M.v;
return(_11347)(M);};

var _11264=function(M){if(--M.cbt<0){throw _11264;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11217=function(M){if(--M.cbt<0){throw _11217;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at-right");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=RT.isList(M.e[M.e.length-10]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11226,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11226,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-2]=M.e[M.e.length-1];
return(_11218)(M);}};

var _11185=function(M){if(--M.cbt<0){throw _11185;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11180)(M);};

var _11154=function(M){if(--M.cbt<0){throw _11154;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][23];
M.e[M.e.length-1]=RT.makeSymbol("drop-right");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=RT.isList(M.e[M.e.length-10]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11163,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11163,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-2]=M.e[M.e.length-1];
return(_11155)(M);}};

var _11072=function(M){if(--M.cbt<0){throw _11072;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11076,M.p));
return((M.p).label)(M);};

var _11045=function(M){if(--M.cbt<0){throw _11045;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11000=function(M){if(--M.cbt<0){throw _11000;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e[M.e.length-3]=false;
return(_10994)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.push(M.e[M.e.length-6][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11010,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-3]=M.e[M.e.length-2];
return(_10994)(M);}};

var _10980=function(M){if(--M.cbt<0){throw _10980;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("drop");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10984,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_10976)(M);}};

var _10960=function(M){if(--M.cbt<0){throw _10960;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10886=function(M){if(--M.cbt<0){throw _10886;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10882=function(M){if(--M.cbt<0){throw _10882;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-12];
M.v=RT.isList(M.e[M.e.length-11]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10960,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10960,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.push(M.e[M.e.length-7][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10901,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10886,M.p));
return((M.p).label)(M);}};

var _10853=function(M){if(--M.cbt<0){throw _10853;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10857,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_10849)(M);}};

var _10797=function(M){if(--M.cbt<0){throw _10797;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.push(M.e[M.e.length-7][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10807,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10751=function(M){if(--M.cbt<0){throw _10751;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-9],M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-7][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10759,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10725=function(M){if(--M.cbt<0){throw _10725;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("make-list");
M.e[M.e.length-2]="non-negative exact integer";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10729,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_10721)(M);}};

var _10563=function(M){if(--M.cbt<0){throw _10563;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10534=function(M){if(--M.cbt<0){throw _10534;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10481=function(M){if(--M.cbt<0){throw _10481;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10404=function(M){if(--M.cbt<0){throw _10404;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10367=function(M){if(--M.cbt<0){throw _10367;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10322=function(M){if(--M.cbt<0){throw _10322;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10261=function(M){if(--M.cbt<0){throw _10261;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10182=function(M){if(--M.cbt<0){throw _10182;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10151=function(M){if(--M.cbt<0){throw _10151;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10093=function(M){if(--M.cbt<0){throw _10093;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10027=function(M){if(--M.cbt<0){throw _10027;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _12192=function(M){if(--M.cbt<0){throw _12192;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12196,M.p));
return((M.p).label)(M);};

var _12162=function(M){if(--M.cbt<0){throw _12162;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],RT.NULL);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12270,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12254,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],RT.NULL);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12185,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12169,M.p));
return((M.p).label)(M);}}};

var _12134=function(M){if(--M.cbt<0){throw _12134;}
return(_12120)(M);};

var _12105=function(M){if(--M.cbt<0){throw _12105;}
if(M.v===false){M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_8382,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12114,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"add1"));
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_8382,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12114,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _12067=function(M){if(--M.cbt<0){throw _12067;}
if(M.v===false){M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return(_8382)(M);}else{M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return(_8382)(M);}};

var _12021=function(M){if(--M.cbt<0){throw _12021;}
if(M.v===false){M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12000=function(M){if(--M.cbt<0){throw _12000;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12004,M.p));
return((M.p).label)(M);};

var _11974=function(M){if(--M.cbt<0){throw _11974;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11981,M.p));
return((M.p).label)(M);};

var _11948=function(M){if(--M.cbt<0){throw _11948;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][43];
M.e[M.e.length-1]=RT.makeSymbol("count");
M.v="all lists must have same size";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11955,M.p));
return((M.p).label)(M);}else{M.v=0;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _11925=function(M){if(--M.cbt<0){throw _11925;}
return(_11921)(M);};

var _11905=function(M){if(--M.cbt<0){throw _11905;}
return(_11893)(M);};

var _11878=function(M){if(--M.cbt<0){throw _11878;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-10];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-12];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11885,M.p));
return((M.p).label)(M);}};

var _11850=function(M){if(--M.cbt<0){throw _11850;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11878,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11860,M.p));
return((M.p).label)(M);}else{M.e[M.e.length-3]=RT.NULL;
return(_11854)(M);}}};

var _11843=function(M){if(--M.cbt<0){throw _11843;}
M.e[M.e.length-6]=M.v;
return(_11833)(M);};

var _11821=function(M){if(--M.cbt<0){throw _11821;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11815)(M);};

var _11787=function(M){if(--M.cbt<0){throw _11787;}
M.e[M.e.length-8]=M.v;
return(_11777)(M);};

var _11765=function(M){if(--M.cbt<0){throw _11765;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11759)(M);};

var _11737=function(M){if(--M.cbt<0){throw _11737;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-8]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11731)(M);};

var _11712=function(M){if(--M.cbt<0){throw _11712;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-16];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11723,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-18];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11719,M.p));
return((M.p).label)(M);}};

var _11666=function(M){if(--M.cbt<0){throw _11666;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11648=function(M){if(--M.cbt<0){throw _11648;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11642)(M);};

var _11620=function(M){if(--M.cbt<0){throw _11620;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-8]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11614)(M);};

var _11596=function(M){if(--M.cbt<0){throw _11596;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11606,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8378,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-15];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_11602,M.p));
return(_8378)(M);}};

var _11558=function(M){if(--M.cbt<0){throw _11558;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11536=function(M){if(--M.cbt<0){throw _11536;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11543,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _11519=function(M){if(--M.cbt<0){throw _11519;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11523,M.p));
return((M.p).label)(M);};

var _11493=function(M){if(--M.cbt<0){throw _11493;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11536,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11501,M.p));
return((M.p).label)(M);}};

var _11468=function(M){if(--M.cbt<0){throw _11468;}
return(_11454)(M);};

var _11448=function(M){if(--M.cbt<0){throw _11448;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11452,M.p));
return((M.p).label)(M);};

var _11432=function(M){if(--M.cbt<0){throw _11432;}
if(M.v===false){M.v=false;
return(_11428)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11436,M.p));
return((M.p).label)(M);}};

var _11408=function(M){if(--M.cbt<0){throw _11408;}
return(_11398)(M);};

var _11355=function(M){if(--M.cbt<0){throw _11355;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11359,M.p));
return((M.p).label)(M);};

var _11327=function(M){if(--M.cbt<0){throw _11327;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1]);
return(_11328)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11336,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-4]=M.e[M.e.length-1];
return(_11328)(M);}};

var _11256=function(M){if(--M.cbt<0){throw _11256;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11213=function(M){if(--M.cbt<0){throw _11213;}
return(_11205)(M);};

var _11150=function(M){if(--M.cbt<0){throw _11150;}
return(_11142)(M);};

var _11063=function(M){if(--M.cbt<0){throw _11063;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][23];
M.e[M.e.length-1]=RT.makeSymbol("take-right");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=RT.isList(M.e[M.e.length-10]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11072,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11072,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-2]=M.e[M.e.length-1];
return(_11064)(M);}};

var _11036=function(M){if(--M.cbt<0){throw _11036;}
M.e[M.e.length-9]=M.v;
return(_11024)(M);};

var _11020=function(M){if(--M.cbt<0){throw _11020;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.e[M.e.length-7]=false;
return(_11014)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.push(M.e[M.e.length-10][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11030,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-7]=M.e[M.e.length-2];
return(_11014)(M);}};

var _10970=function(M){if(--M.cbt<0){throw _10970;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10924=function(M){if(--M.cbt<0){throw _10924;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10905=function(M){if(--M.cbt<0){throw _10905;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10857=function(M){if(--M.cbt<0){throw _10857;}
return(_10849)(M);};

var _10843=function(M){if(--M.cbt<0){throw _10843;}
return(_10835)(M);};

var _10787=function(M){if(--M.cbt<0){throw _10787;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.push(M.e[M.e.length-5][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10797,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10777=function(M){if(--M.cbt<0){throw _10777;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.push(M.e[M.e.length-3][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10787,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10735=function(M){if(--M.cbt<0){throw _10735;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"sub1"), 1);
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-5],RT.NULL);
M.e.push(M.e[M.e.length-3][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10743,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _10579=function(M){if(--M.cbt<0){throw _10579;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10526=function(M){if(--M.cbt<0){throw _10526;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10465=function(M){if(--M.cbt<0){throw _10465;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10420=function(M){if(--M.cbt<0){throw _10420;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10375=function(M){if(--M.cbt<0){throw _10375;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10298=function(M){if(--M.cbt<0){throw _10298;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12715=function(M){if(--M.cbt<0){throw _12715;}
M.e.length-=(M.a-1);
return(_12716)(M);};

var _10212=function(M){if(--M.cbt<0){throw _10212;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10143=function(M){if(--M.cbt<0){throw _10143;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _10035=function(M){if(--M.cbt<0){throw _10035;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _10011=function(M){if(--M.cbt<0){throw _10011;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12663=function(M){if(--M.cbt<0){throw _12663;}
M.e.length-=(M.a-1);
return(_12664)(M);};

var _12656=function(M){--M.cbt<0;
M.modules["whalesong/lang/list.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["first"]||M.primitives["first"],M.primitives["raise-type-error"],M.params.currentNamespace["second"]||M.primitives["second"],M.primitives["format"],M.params.currentNamespace["third"]||M.primitives["third"],M.params.currentNamespace["fourth"]||M.primitives["fourth"],M.params.currentNamespace["fifth"]||M.primitives["fifth"],M.params.currentNamespace["sixth"]||M.primitives["sixth"],M.params.currentNamespace["seventh"]||M.primitives["seventh"],M.params.currentNamespace["eighth"]||M.primitives["eighth"],M.params.currentNamespace["ninth"]||M.primitives["ninth"],M.params.currentNamespace["tenth"]||M.primitives["tenth"],M.params.currentNamespace["last-pair"]||M.primitives["last-pair"],M.params.currentNamespace["last"]||M.primitives["last"],M.params.currentNamespace["rest"]||M.primitives["rest"],M.params.currentNamespace["cons?"]||M.primitives["cons?"],M.params.currentNamespace["empty?"]||M.primitives["empty?"],M.params.currentNamespace["empty"]||M.primitives["empty"],M.params.currentNamespace["make-list"]||M.primitives["make-list"],M.primitives["exact-nonnegative-integer?"],M.primitives["zero?"],M.params.currentNamespace["drop*"]||M.primitives["drop*"],M.params.currentNamespace["too-large"]||M.primitives["too-large"],M.primitives["raise-mismatch-error"],M.params.currentNamespace["take"]||M.primitives["take"],M.params.currentNamespace["split-at"]||M.primitives["split-at"],M.primitives["reverse"],M.params.currentNamespace["drop"]||M.primitives["drop"],M.params.currentNamespace["take-right"]||M.primitives["take-right"],M.params.currentNamespace["drop-right"]||M.primitives["drop-right"],M.params.currentNamespace["split-at-right"]||M.primitives["split-at-right"],M.params.currentNamespace["append*"]||M.primitives["append*"],M.primitives["append"],M.params.currentNamespace["flatten"]||M.primitives["flatten"],M.params.currentNamespace["add-between"]||M.primitives["add-between"],M.primitives["list*"],M.params.currentNamespace["filter-map"]||M.primitives["filter-map"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["length"],M.primitives["andmap"],M.primitives["ormap"],M.primitives["map"],M.primitives["error"],M.params.currentNamespace["count"]||M.primitives["count"],M.params.currentNamespace["partition"]||M.primitives["partition"],M.params.currentNamespace["append-map"]||M.primitives["append-map"],M.params.currentNamespace["filter-not"]||M.primitives["filter-not"],M.params.currentNamespace["mk-min"]||M.primitives["mk-min"],M.primitives["real?"],M.params.currentNamespace["argmin"]||M.primitives["argmin"],M.params.currentNamespace["argmax"]||M.primitives["argmax"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["first","raise-type-error","second","format","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","last-pair","last","rest","cons?","empty?","empty","make-list","exact-nonnegative-integer?","zero?","drop*","too-large","raise-mismatch-error","take","split-at","reverse","drop","take-right","drop-right","split-at-right","append*","append","flatten","add-between","list*","filter-map","procedure?","procedure-arity-includes?","length","andmap","ormap","map","error","count","partition","append-map","filter-not","mk-min","real?","argmin","argmax",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_12658,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_8320,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][69]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8393=function(M){if(--M.cbt<0){throw _8393;}
M.e.length-=M.a;
return(_8394)(M);};

var _9755=function(M){if(--M.cbt<0){throw _9755;}
M.e[M.e.length-4]=M.v;
return(_9693)(M);};

var _12634=function(M){if(--M.cbt<0){throw _12634;}
M.e.length-=(M.a-1);
return(_12629)(M);};

var _12626=function(M){if(--M.cbt<0){throw _12626;}
M.e.length-=(M.a-1);
return(_12613)(M);};


var _9629=function(M){if(--M.cbt<0){throw _9629;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-16][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-18];
M.v=RT.isList(M.e[M.e.length-17]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9649,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9649,M.p));
return((M.p).label)(M);}}else{M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-15][60];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e[M.e.length-4]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+15),15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-12];
M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9633,M.p));
return((M.p).label)(M);}};


var _9554=function(M){if(--M.cbt<0){throw _9554;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _8390=function(M){if(--M.cbt<0){throw _8390;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12576,M.p));
return((M.p).label)(M);};

var _9452=function(M){if(--M.cbt<0){throw _9452;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-13][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9459,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _9389=function(M){if(--M.cbt<0){throw _9389;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9393,M.p));
return((M.p).label)(M);};


var _9350=function(M){if(--M.cbt<0){throw _9350;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-7]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9340)(M);};




var _12477=function(M){if(--M.cbt<0){throw _12477;}
M.e.length-=(M.a-1);
return(_12470)(M);};


var _12454=function(M){if(--M.cbt<0){throw _12454;}
M.e.length-=(M.a-1);
return(_12441)(M);};


var _9109=function(M){if(--M.cbt<0){throw _9109;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _9044=function(M){if(--M.cbt<0){throw _9044;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9152,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9136,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-10]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9067,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9051,M.p));
return((M.p).label)(M);}}};


var _8966=function(M){if(--M.cbt<0){throw _8966;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8970,M.p));
return((M.p).label)(M);};

var _8373=function(M){if(--M.cbt<0){throw _8373;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-5]);
return(_11318)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11327,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-2]=M.e[M.e.length-5];
return(_11318)(M);}}}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _8885=function(M){if(--M.cbt<0){throw _8885;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12374=function(M){if(--M.cbt<0){throw _12374;}
M.e.length-=(M.a-1);
return(_12361)(M);};



var _8734=function(M){if(--M.cbt<0){throw _8734;}
return(_8726)(M);};


var _8677=function(M){if(--M.cbt<0){throw _8677;}
return(_8669)(M);};

var _8645=function(M){if(--M.cbt<0){throw _8645;}
return(_8637)(M);};

var _8613=function(M){if(--M.cbt<0){throw _8613;}
return(_8605)(M);};


var _8563=function(M){if(--M.cbt<0){throw _8563;}
return(_8555)(M);};





var _8364=function(M){if(--M.cbt<0){throw _8364;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-4]=RT.NULL;
return(_11189)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-4]=RT.NULL;
return(_11193)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-4]=RT.NULL;
return(_11197)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8364,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11203,M.p));
return((M.p).label)(M);}}}}};



var _12741=function(M){if(--M.cbt<0){throw _12741;}
M.e.length-=(M.a-1);
return(_12742)(M);};


var _12725=function(M){if(--M.cbt<0){throw _12725;}
M.e.length-=(M.a-1);
return(_12726)(M);};

var _12717=function(M){if(--M.cbt<0){throw _12717;}
M.e.length-=(M.a-1);
return(_12718)(M);};


var _12701=function(M){if(--M.cbt<0){throw _12701;}
M.e.length-=(M.a-1);
return(_12702)(M);};

var _12693=function(M){if(--M.cbt<0){throw _12693;}
M.e.length-=(M.a-1);
return(_12694)(M);};

var _12691=function(M){if(--M.cbt<0){throw _12691;}
M.e.length-=(M.a-1);
return(_12692)(M);};

var _12133=function(M){if(--M.cbt<0){throw _12133;}
M.e.length-=(M.a-1);
return(_12120)(M);};


var _12661=function(M){if(--M.cbt<0){throw _12661;}
M.e.length-=(M.a-1);
return(_12662)(M);};


var _12649=function(M){if(--M.cbt<0){throw _12649;}
M.e.length-=(M.a-1);
return(_12642)(M);};





var _12606=function(M){if(--M.cbt<0){throw _12606;}
M.e.length-=(M.a-1);
return(_12599)(M);};


var _12591=function(M){if(--M.cbt<0){throw _12591;}
M.e.length-=(M.a-1);
return(_12586)(M);};




var _12553=function(M){if(--M.cbt<0){throw _12553;}
M.e.length-=(M.a-1);
return(_12546)(M);};









var _12462=function(M){if(--M.cbt<0){throw _12462;}
M.e.length-=(M.a-1);
return(_12457)(M);};





var _11916=function(M){if(--M.cbt<0){throw _11916;}
M.e.length-=(M.a-1);
return(_11891)(M);};






























var _8378=function(M){if(--M.cbt<0){throw _8378;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11682,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _8361=function(M){if(--M.cbt<0){throw _8361;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11055,M.p));
return((M.p).label)(M);};










var _11479=function(M){--M.cbt<0;
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11483,M.p));
return((M.p).label)(M);};



var _11451=function(M){if(--M.cbt<0){throw _11451;}
M.e.length-=(M.a-1);
return(_11426)(M);};









var _11932=function(M){if(--M.cbt<0){throw _11932;}
M.e.length-=(M.a-1);
return(_11919)(M);};

























var _11149=function(M){if(--M.cbt<0){throw _11149;}
M.e.length-=(M.a-1);
return(_11142)(M);};










var _11058=function(M){if(--M.cbt<0){throw _11058;}
M.e.length-=(M.a-1);
return(_11051)(M);};












var _11467=function(M){if(--M.cbt<0){throw _11467;}
M.e.length-=(M.a-1);
return(_11454)(M);};














var _8372=function(M){if(--M.cbt<0){throw _8372;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return(_8373)(M);};

var _8370=function(M){if(--M.cbt<0){throw _8370;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6][32];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8368=function(M){if(--M.cbt<0){throw _8368;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][32];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8366=function(M){if(--M.cbt<0){throw _8366;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 5]).racketArity,M.a)){return(_8367)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 5];
return(_8371)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_8370)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_8369)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_8368)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_8367)(M);}};






var _11212=function(M){if(--M.cbt<0){throw _11212;}
M.e.length-=(M.a-1);
return(_11205)(M);};







var _8362=function(M){if(--M.cbt<0){throw _8362;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8362,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}}};











var _10983=function(M){if(--M.cbt<0){throw _10983;}
M.e.length-=(M.a-1);
return(_10976)(M);};





var _11064=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=18;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=20;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=22;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8362,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+22),22);
M.c[M.c.length-1].p=M.p;
return(_8362)(M);}}}}}}}}}}};

var _8555=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8569,M.p));
return((M.p).label)(M);};

var _11921=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("count");
M.e[M.e.length-2]="proper list";
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][41];
M.e[M.e.length-1]=new RT.Closure(_8380,1,[],"...nt/lang/list.rkt:279:12");
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11929,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11919)(M);}};

var _8637=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8651,M.p));
return((M.p).label)(M);};

var _11749=function(M){--M.cbt<0;
M.e.length-=1;
return(_11742)(M);};

var _11919=function(M){--M.cbt<0;
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12038,M.p));
return((M.p).label)(M);}else{M.v=0;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][39]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11939,M.p));
return((M.p).label)(M);}};

var _10849=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][20]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10863,M.p));
return((M.p).label)(M);};

var _10835=function(M){--M.cbt<0;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][59];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11770=function(M){--M.cbt<0;
M.e.length-=1;
return(_11749)(M);};

var _11454=function(M){--M.cbt<0;
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11576,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][39]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11474,M.p));
return((M.p).label)(M);}};


var _11142=function(M){--M.cbt<0;
M.e.length+=1;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][21];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11154,M.p));
return((M.p).label)(M);};


var _11808=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11805)(M);};

var _11815=function(M){--M.cbt<0;
M.e.length-=1;
return(_11808)(M);};

var _9895=function(M){if(--M.cbt<0){throw _9895;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11706=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11703)(M);};

var _11456=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("filter-map");
M.e[M.e.length-2]="proper list";
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][41];
M.e[M.e.length-1]=new RT.Closure(_8376,1,[],"...nt/lang/list.rkt:253:12");
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11464,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11454)(M);}};


var _11193=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11189)(M);};

var _12120=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("partition");
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12140,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12136)(M);}};

var _12122=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("partition");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12134,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12120)(M);}};



var _11854=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8669=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8683,M.p));
return((M.p).label)(M);};

var _11833=function(M){--M.cbt<0;
M.e.length-=1;
return(_11826)(M);};


var _11686=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _9861=function(M){if(--M.cbt<0){throw _9861;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9699=function(M){if(--M.cbt<0){throw _9699;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][23];
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-11][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-13];
M.v=RT.isList(M.e[M.e.length-12]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9751,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9751,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.e.push(M.e[M.e.length-9][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9709,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-4]=RT.NULL;
return(_9693)(M);}};

var _12586=function(M){--M.cbt<0;
M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12596,M.p));
return((M.p).label)(M);};

var _11328=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_11318)(M);};



var _11218=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-4][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11280,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=RT.NULL;
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-7][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11272,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-10][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11264,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-13][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11256,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-14][61];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}}}};

var _11189=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11155=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-4]=RT.NULL;
return(_11172)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-4]=RT.NULL;
return(_11176)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-4]=RT.NULL;
return(_11180)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8364,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_11185,M.p));
return(_8364)(M);}}}}};




var _11893=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("count");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.length+=1;
M.e.push(M.e[M.e.length-7][39]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11909,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11891)(M);}};

var _11004=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_10994)(M);};

var _10976=function(M){--M.cbt<0;
M.e.length+=1;
M.e.push(M.e[M.e.length-2][20]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10990,M.p));
return((M.p).label)(M);};

var _11798=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11826=function(M){--M.cbt<0;
M.e.length-=1;
return(_11805)(M);};


var _9977=function(M){if(--M.cbt<0){throw _9977;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8580=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8594,M.p));
return((M.p).label)(M);};

var _9853=function(M){if(--M.cbt<0){throw _9853;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11696=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11693)(M);};

var _8479=function(M){--M.cbt<0;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"<"))));
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8525,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8497,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _9689=function(M){if(--M.cbt<0){throw _9689;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][23];
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.isList(M.e[M.e.length-8]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9761,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9761,M.p));
return((M.p).label)(M);}}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"sub1"), 1);
M.e.push(M.e[M.e.length-5][20]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9699,M.p));
return((M.p).label)(M);}}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _11502=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12570=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12592,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12586)(M);}}else{M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("argmin");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12592,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12586)(M);}}};

var _12470=function(M){--M.cbt<0;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12486,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _12363=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("filter-not");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12375,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12361)(M);}};

var _8881=function(M){if(--M.cbt<0){throw _8881;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-17];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8885,M.p));
return((M.p).label)(M);};




var _11180=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11176)(M);};


var _8733=function(M){if(--M.cbt<0){throw _8733;}
M.e.length-=(M.a-1);
return(_8726)(M);};





var _11051=function(M){--M.cbt<0;
M.e.length+=1;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][21];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11063,M.p));
return((M.p).label)(M);};

var _10994=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_10986)(M);};


var _8726=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8740,M.p));
return((M.p).label)(M);};

var _11861=function(M){--M.cbt<0;
M.e.length-=1;
return(_11854)(M);};

var _11805=function(M){--M.cbt<0;
M.e.length-=1;
return(_11798)(M);};



var _9969=function(M){if(--M.cbt<0){throw _9969;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8605=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8619,M.p));
return((M.p).label)(M);};

var _9845=function(M){if(--M.cbt<0){throw _9845;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11703=function(M){--M.cbt<0;
M.e.length-=1;
return(_11696)(M);};

var _8500=function(M){--M.cbt<0;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"<"))));
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-9][68];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-9][68];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _9679=function(M){if(--M.cbt<0){throw _9679;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11614=function(M){--M.cbt<0;
M.e.length-=1;
return(_11607)(M);};

var _12613=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12635,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12629)(M);}}else{M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12635,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12629)(M);}}};

var _11513=function(M){--M.cbt<0;
M.e.length-=1;
return(_11502)(M);};


var _11426=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
return(_11456)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][40];
M.e[M.e.length-1]=M.primitives["list?"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11460,M.p));
return((M.p).label)(M);}};

var _12457=function(M){--M.cbt<0;
M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12467,M.p));
return((M.p).label)(M);};


var _8874=function(M){if(--M.cbt<0){throw _8874;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-14]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8928,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8912,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-13]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8897,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8881,M.p));
return((M.p).label)(M);}}};

var _8851=function(M){if(--M.cbt<0){throw _8851;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-11]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8959,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8943,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.push(M.e[M.e.length-10]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8874,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8858,M.p));
return((M.p).label)(M);}}};


var _11205=function(M){--M.cbt<0;
M.e.length+=1;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][21];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11217,M.p));
return((M.p).label)(M);};


var _11197=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11193)(M);};

var _11176=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11172)(M);};

var _12136=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12162,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-3][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12146,M.p));
return((M.p).label)(M);}};


var _8559=function(M){if(--M.cbt<0){throw _8559;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][1];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8563,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8555)(M);}};




var _8676=function(M){if(--M.cbt<0){throw _8676;}
M.e.length-=(M.a-1);
return(_8669)(M);};

var _11891=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.v=false;
return(_11921)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][40];
M.e[M.e.length-1]=M.primitives["list?"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11925,M.p));
return((M.p).label)(M);}};

var _10986=function(M){--M.cbt<0;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][23];
M.e[M.e.length-1]=RT.makeSymbol("drop");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=RT.isList(M.e[M.e.length-9]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11045,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11045,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _11024=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_11014)(M);};

var _8694=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8708,M.p));
return((M.p).label)(M);};



var _8587=function(M){if(--M.cbt<0){throw _8587;}
M.e.length-=(M.a-1);
return(_8580)(M);};

var _9961=function(M){if(--M.cbt<0){throw _9961;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11742=function(M){--M.cbt<0;
M.e.length-=1;
return(_11693)(M);};


var _8528=function(M){--M.cbt<0;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,"<"))));
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][68];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][68];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _9751=function(M){if(--M.cbt<0){throw _9751;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9755,M.p));
return((M.p).label)(M);};

var _11731=function(M){--M.cbt<0;
M.e.length-=1;
return(_11724)(M);};

var _9669=function(M){if(--M.cbt<0){throw _9669;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _11713=function(M){--M.cbt<0;
M.e.length-=1;
return(_11706)(M);};

var _8452=function(M){--M.cbt<0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,">"))));
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][69];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-8][69];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8403=function(M){--M.cbt<0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,">"))));
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8449,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8421,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _11635=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _9713=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9703)(M);};

var _12642=function(M){--M.cbt<0;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][69];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12629=function(M){--M.cbt<0;
M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12639,M.p));
return((M.p).label)(M);};

var _12615=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("argmax");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12627,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12613)(M);}};


var _11428=function(M){--M.cbt<0;
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][1];
M.e[M.e.length-1]=RT.makeSymbol("filter-map");
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.length+=1;
M.e.push(M.e[M.e.length-7][39]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11444,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_11426)(M);}};

var _11389=function(M){--M.cbt<0;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11395=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11416,M.p));
return((M.p).label)(M);};

var _9418=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11318=function(M){--M.cbt<0;
M.e.length-=1;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){M.v=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-4]);
return(_11347)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_8373,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11355,M.p));
return((M.p).label)(M);}}else{M.e[M.e.length-2]=M.e[M.e.length-4];
return(_11347)(M);}}}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _8862=function(M){if(--M.cbt<0){throw _8862;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8839=function(M){if(--M.cbt<0){throw _8839;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};





var _11172=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _8609=function(M){if(--M.cbt<0){throw _8609;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-13][1];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-16];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8613,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8605)(M);}};

var _8552=function(M){if(--M.cbt<0){throw _8552;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8559,M.p));
return((M.p).label)(M);};





var _12755=function(M){if(--M.cbt<0){throw _12755;}
M.e.length-=(M.a-1);
return(_12756)(M);};




var _11014=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_11004)(M);};







var _11693=function(M){--M.cbt<0;
M.e.length-=1;
return(_11686)(M);};


var _11759=function(M){--M.cbt<0;
M.e.length-=1;
return(_11752)(M);};


var _10721=function(M){--M.cbt<0;
M.e.push(M.e[M.e.length-1][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10735,M.p));
return((M.p).label)(M);};



var _9614=function(M){if(--M.cbt<0){throw _9614;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+12),12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _8424=function(M){--M.cbt<0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,">"))));
if(M.v===false){M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-9][69];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-9][69];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};



var _9693=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _11478=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_11479)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_11479)(M);}};




var _12599=function(M){--M.cbt<0;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][68];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9297=function(M){if(--M.cbt<0){throw _9297;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9301,M.p));
return((M.p).label)(M);};

var _9485=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _12546=function(M){--M.cbt<0;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12560,M.p));
return((M.p).label)(M);};

var _11392=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11420,M.p));
return((M.p).label)(M);};

var _9429=function(M){--M.cbt<0;
M.e.length-=1;
return(_9418)(M);};

var _9364=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
return(_9321)(M);};

var _9340=function(M){--M.cbt<0;
M.e.length-=1;
return(_9329)(M);};


var _8858=function(M){if(--M.cbt<0){throw _8858;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8862,M.p));
return((M.p).label)(M);};

var _8835=function(M){if(--M.cbt<0){throw _8835;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6][26]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8839,M.p));
return((M.p).label)(M);};

var _8816=function(M){if(--M.cbt<0){throw _8816;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};






var _8602=function(M){if(--M.cbt<0){throw _8602;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-8][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8609,M.p));
return((M.p).label)(M);};

var _8536=function(M){if(--M.cbt<0){throw _8536;}
return(_8528)(M);};

var _8525=function(M){if(--M.cbt<0){throw _8525;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-4][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8532,M.p));
return((M.p).label)(M);};



var _8701=function(M){if(--M.cbt<0){throw _8701;}
M.e.length-=(M.a-1);
return(_8694)(M);};


var _12753=function(M){if(--M.cbt<0){throw _12753;}
M.e.length-=(M.a-1);
return(_12754)(M);};







var _8612=function(M){if(--M.cbt<0){throw _8612;}
M.e.length-=(M.a-1);
return(_8605)(M);};


var _12681=function(M){if(--M.cbt<0){throw _12681;}
M.e.length-=(M.a-1);
return(_12682)(M);};




var _11752=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-8]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11749)(M);};


var _8359=function(M){if(--M.cbt<0){throw _8359;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10853,M.p));
return((M.p).label)(M);};

var _10842=function(M){if(--M.cbt<0){throw _10842;}
M.e.length-=(M.a-1);
return(_10835)(M);};

var _8358=function(M){if(--M.cbt<0){throw _8358;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10839,M.p));
return((M.p).label)(M);};

var _9610=function(M){if(--M.cbt<0){throw _9610;}
if(M.v===false){M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][23];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][3];
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-15];
M.v=RT.isList(M.e[M.e.length-14]);
if(M.v===false){M.v=" (not a proper list)";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9659,M.p));
return((M.p).label)(M);}else{M.v="";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9659,M.p));
return((M.p).label)(M);}}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"sub1"), 1);
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.e.push(M.e[M.e.length-10][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9629,M.p));
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-9][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9614,M.p));
return((M.p).label)(M);}};



var _9501=function(M){if(--M.cbt<0){throw _9501;}
return(_9491)(M);};

var _11642=function(M){--M.cbt<0;
M.e.length-=1;
return(_11635)(M);};

var _11607=function(M){--M.cbt<0;
M.e.length-=1;
return(_11587)(M);};

var _9428=function(M){if(--M.cbt<0){throw _9428;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][63];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-15][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9443,M.p));
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-15][63];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-17][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9435,M.p));
return((M.p).label)(M);}};

var _11597=function(M){--M.cbt<0;
M.e.length-=1;
return(_11590)(M);};

var _9385=function(M){if(--M.cbt<0){throw _9385;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-10]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_9375)(M);};




var _8355=function(M){if(--M.cbt<0){throw _8355;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_10725,M.p));
return((M.p).label)(M);};

var _9488=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9509,M.p));
return((M.p).label)(M);};

var _9491=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_9505,M.p));
return((M.p).label)(M);};


var _11943=function(M){--M.cbt<0;
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.length-=1;
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_11944)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=1;
return(_11944)(M);}};


var _12441=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){M.v=false;
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12463,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12457)(M);}}else{M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12463,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12457)(M);}}};

var _9321=function(M){--M.cbt<0;
M.e.length-=1;
return(_9310)(M);};

var _9375=function(M){--M.cbt<0;
M.e.length-=1;
return(_9364)(M);};

var _12361=function(M){--M.cbt<0;
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][1];
M.e[M.e.length-1]=RT.makeSymbol("filter-not");
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12381,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_12377)(M);}};

var _8916=function(M){if(--M.cbt<0){throw _8916;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+14),14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _8812=function(M){if(--M.cbt<0){throw _8812;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][26]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8816,M.p));
return((M.p).label)(M);};

var _8775=function(M){if(--M.cbt<0){throw _8775;}
if(M.v===false){M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8789,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}else{M.v=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-8]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8789,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}}};

var _8730=function(M){if(--M.cbt<0){throw _8730;}
if(M.v===false){M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-11][1];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-14];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8734,M.p));
return((M.p).label)(M);}else{M.v=RT.VOID;
return(_8726)(M);}};




var _8594=function(M){if(--M.cbt<0){throw _8594;}
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-10]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8634,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-11]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8602,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};


var _8508=function(M){if(--M.cbt<0){throw _8508;}
return(_8500)(M);};

var _8487=function(M){if(--M.cbt<0){throw _8487;}
return(_8479)(M);};






var _8379=function(M){if(--M.cbt<0){throw _8379;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][37]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_11897,M.p));
return((M.p).label)(M);};



var _12713=function(M){if(--M.cbt<0){throw _12713;}
M.e.length-=(M.a-1);
return(_12714)(M);};



var _12689=function(M){if(--M.cbt<0){throw _12689;}
M.e.length-=(M.a-1);
return(_12690)(M);};







var _10856=function(M){if(--M.cbt<0){throw _10856;}
M.e.length-=(M.a-1);
return(_10849)(M);};




var _9595=function(M){if(--M.cbt<0){throw _9595;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _9576=function(M){if(--M.cbt<0){throw _9576;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};






var _11590=function(M){--M.cbt<0;
M.e.length-=1;
M.e[M.e.length-6]=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_11587)(M);};




var _10728=function(M){if(--M.cbt<0){throw _10728;}
M.e.length-=(M.a-1);
return(_10721)(M);};


var _8354=function(M){if(--M.cbt<0){throw _8354;}
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _9310=function(M){--M.cbt<0;
M.e.length-=1;
M.e.length-=1;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _12377=function(M){--M.cbt<0;
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12394,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-1][26]);
M.v=RT.NULL;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _8912=function(M){if(--M.cbt<0){throw _8912;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-12][26]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8916,M.p));
return((M.p).label)(M);};

var _8384=function(M){if(--M.cbt<0){throw _8384;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_8385)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_8387)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_8386)(M);}}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_8385)(M);}};




var _8723=function(M){if(--M.cbt<0){throw _8723;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6][49]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_8730,M.p));
return((M.p).label)(M);};




var _8588=function(M){if(--M.cbt<0){throw _8588;}
return(_8580)(M);};









var _12739=function(M){if(--M.cbt<0){throw _12739;}
M.e.length-=(M.a-1);
return(_12740)(M);};




_8411.mvr=_8410;
_8432.mvr=_8431;
_8460.mvr=_8459;
_8487.mvr=_8486;
_8508.mvr=_8507;
_8536.mvr=_8535;
_8563.mvr=_8562;
_8588.mvr=_8587;
_8613.mvr=_8612;
_8645.mvr=_8644;
_8677.mvr=_8676;
_8702.mvr=_8701;
_8734.mvr=_8733;
_10729.mvr=_10728;
_10843.mvr=_10842;
_10857.mvr=_10856;
_10984.mvr=_10983;
_11059.mvr=_11058;
_11150.mvr=_11149;
_11213.mvr=_11212;
_11452.mvr=_11451;
_11468.mvr=_11467;
_11917.mvr=_11916;
_11933.mvr=_11932;
_12134.mvr=_12133;
_12140.mvr=_12139;
_12375.mvr=_12374;
_12381.mvr=_12380;
_12455.mvr=_12454;
_12463.mvr=_12462;
_12478.mvr=_12477;
_12497.mvr=_12496;
_12522.mvr=_12521;
_12554.mvr=_12553;
_12584.mvr=_12583;
_12592.mvr=_12591;
_12607.mvr=_12606;
_12627.mvr=_12626;
_12635.mvr=_12634;
_12650.mvr=_12649;
_12658.mvr=_12657;
_12660.mvr=_12659;
_12662.mvr=_12661;
_12664.mvr=_12663;
_12666.mvr=_12665;
_12668.mvr=_12667;
_12670.mvr=_12669;
_12672.mvr=_12671;
_12674.mvr=_12673;
_12676.mvr=_12675;
_12678.mvr=_12677;
_12680.mvr=_12679;
_12682.mvr=_12681;
_12684.mvr=_12683;
_12686.mvr=_12685;
_12688.mvr=_12687;
_12690.mvr=_12689;
_12692.mvr=_12691;
_12694.mvr=_12693;
_12696.mvr=_12695;
_12698.mvr=_12697;
_12700.mvr=_12699;
_12702.mvr=_12701;
_12704.mvr=_12703;
_12706.mvr=_12705;
_12708.mvr=_12707;
_12710.mvr=_12709;
_12712.mvr=_12711;
_12714.mvr=_12713;
_12716.mvr=_12715;
_12718.mvr=_12717;
_12720.mvr=_12719;
_12722.mvr=_12721;
_12724.mvr=_12723;
_12726.mvr=_12725;
_12728.mvr=_12727;
_12730.mvr=_12729;
_12732.mvr=_12731;
_12734.mvr=_12733;
_12736.mvr=_12735;
_12738.mvr=_12737;
_12740.mvr=_12739;
_12742.mvr=_12741;
_12744.mvr=_12743;
_12746.mvr=_12745;
_12748.mvr=_12747;
_12750.mvr=_12749;
_12752.mvr=_12751;
_12754.mvr=_12753;
_12756.mvr=_12755;
_12758.mvr=_12757;
_12760.mvr=_12759;
_12762.mvr=_12761;
_12764.mvr=_12763;
_8394.mvr=_8393;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_12765, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/list.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/list.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/qq-and-or.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _12769=function(M){if(--M.cbt<0){throw _12769;}
};

var _12784=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_12769,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/qq-and-or.rkt"]=new RT.ModuleRecord("qq-and-or",_12781);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12781=function(M){--M.cbt<0;
M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["qq-append"]||M.primitives["qq-append"]]);M.e[M.e.length-1].names=["qq-append"];
M.modules["whalesong/lang/private/qq-and-or.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_12783,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12766,2,[],"qq-append");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12768=function(M){if(--M.cbt<0){throw _12768;}
M.e.length-=M.a;
return(_12769)(M);};

var _12766=function(M){if(--M.cbt<0){throw _12766;}
M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.primitives["raise-type-error"];
M.e[M.e.length-1]=RT.makeSymbol("unquote-splicing");
M.e[M.e.length-2]="proper list";
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.primitives["append"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _12783=function(M){if(--M.cbt<0){throw _12783;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/qq-and-or.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _12782=function(M){if(--M.cbt<0){throw _12782;}
M.e.length-=(M.a-1);
return(_12783)(M);};

_12783.mvr=_12782;
_12769.mvr=_12768;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_12784, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/qq-and-or.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/qq-and-or.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/shared.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _12797=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_12787,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/shared.rkt"]=new RT.ModuleRecord("shared",_12789);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12791=function(M){if(--M.cbt<0){throw _12791;}
M.e.length-=(M.a-1);
return(_12792)(M);};

var _12786=function(M){if(--M.cbt<0){throw _12786;}
M.e.length-=M.a;
return(_12787)(M);};

var _12787=function(M){if(--M.cbt<0){throw _12787;}
};

var _12792=function(M){if(--M.cbt<0){throw _12792;}
M.e.push([M.params.currentNamespace["undefined"]||M.primitives["undefined"]]);M.e[M.e.length-1].names=["undefined"];
M.modules["whalesong/lang/private/shared.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_12794,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([undefined]);
M.v=M.e[M.e.length-1][0];
M.e.length-=1;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12789=function(M){--M.cbt<0;
M.modules["whalesong/lang/private/shared.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/private/traced-app.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_12792)(M);}else{M.c.push(new RT.CallFrame(_12792,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}}else{return(_12792)(M);}};

var _12794=function(M){if(--M.cbt<0){throw _12794;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/shared.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _12793=function(M){if(--M.cbt<0){throw _12793;}
M.e.length-=(M.a-1);
return(_12794)(M);};

_12792.mvr=_12791;
_12794.mvr=_12793;
_12787.mvr=_12786;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_12797, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/shared.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/private/shared.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/check-expect/check-expect.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;



var _13215=function(M){if(--M.cbt<0){throw _13215;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-5]===0);
if(M.v===false){M.v=(M.e[M.e.length-5]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13224,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="one test";
return(_13218)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="zero tests";
return(_13218)(M);}};




var _13176=function(M){if(--M.cbt<0){throw _13176;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-9]===0);
if(M.v===false){M.v=(M.e[M.e.length-9]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13185,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-9];
M.e[M.e.length-1]="one test";
return(_13179)(M);}}else{M.v=M.e[M.e.length-9];
M.e[M.e.length-1]="zero tests";
return(_13179)(M);}};


var _13155=function(M){if(--M.cbt<0){throw _13155;}
M.e.length-=(M.a-1);
M.p=M.e[M.e.length-5][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13160,M.p));
return((M.p).label)(M);};







var _13088=function(M){if(--M.cbt<0){throw _13088;}
M.e.length-=(M.a-1);
return(_12965)(M);};




var _13049=function(M){if(--M.cbt<0){throw _13049;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-10]===0);
if(M.v===false){M.v=(M.e[M.e.length-10]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13058,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-10];
M.e[M.e.length-1]="one test";
return(_13052)(M);}}else{M.v=M.e[M.e.length-10];
M.e[M.e.length-1]="zero tests";
return(_13052)(M);}};





var _13010=function(M){if(--M.cbt<0){throw _13010;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-5]===0);
if(M.v===false){M.v=(M.e[M.e.length-5]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13019,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="one test";
return(_13013)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="zero tests";
return(_13013)(M);}};







var _12938=function(M){if(--M.cbt<0){throw _12938;}
M.e.length-=(M.a-1);
return(_12815)(M);};




var _12899=function(M){if(--M.cbt<0){throw _12899;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-6]===0);
if(M.v===false){M.v=(M.e[M.e.length-6]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12908,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-6];
M.e[M.e.length-1]="one test";
return(_12902)(M);}}else{M.v=M.e[M.e.length-6];
M.e[M.e.length-1]="zero tests";
return(_12902)(M);}};




var _12860=function(M){if(--M.cbt<0){throw _12860;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-5]===0);
if(M.v===false){M.v=(M.e[M.e.length-5]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12869,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="one test";
return(_12863)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="zero tests";
return(_12863)(M);}};


var _12843=function(M){if(--M.cbt<0){throw _12843;}
M.e.length-=(M.a-1);
return(_12844)(M);};




var _12798=function(M){if(--M.cbt<0){throw _12798;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][17]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12813,M.p));
return((M.p).label)(M);};

var _13557=function(M){--M.cbt<0;
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=M.e[M.e.length-5];
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["make-struct-field-accessor"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.v=RT.makeSymbol("result");
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13564,M.p));
return((M.p).label)(M);};

var _13470=function(M){--M.cbt<0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13498,M.p));
return((M.p).label)(M);};

var _13440=function(M){--M.cbt<0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13468,M.p));
return((M.p).label)(M);};

var _13392=function(M){--M.cbt<0;
M.e[M.e.length-2][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13401=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13417,M.p));
return((M.p).label)(M);};

var _12804=function(M){if(--M.cbt<0){throw _12804;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13375,M.p));
return((M.p).label)(M);};

var _12799=function(M){if(--M.cbt<0){throw _12799;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2];
M.e.length+=1;
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13287,M.p));
return((M.p).label)(M);};

var _13225=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13255,M.p));
return((M.p).label)(M);};

var _13186=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13216,M.p));
return((M.p).label)(M);};

var _13179=function(M){--M.cbt<0;
M.e.length+=2;
M.e.push(M.e[M.e.length-10][9]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13192,M.p));
return((M.p).label)(M);};

var _13165=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13177,M.p));
return((M.p).label)(M);};

var _13140=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13156,M.p));
return((M.p).label)(M);};

var _13059=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13089,M.p));
return((M.p).label)(M);};

var _13052=function(M){--M.cbt<0;
M.e.length+=2;
M.e.push(M.e[M.e.length-10][9]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13065,M.p));
return((M.p).label)(M);};

var _13020=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13050,M.p));
return((M.p).label)(M);};

var _13013=function(M){--M.cbt<0;
M.e.length+=2;
M.e.push(M.e[M.e.length-10][9]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13026,M.p));
return((M.p).label)(M);};

var _12965=function(M){--M.cbt<0;
M.e[M.e.length-5][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12974=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12990,M.p));
return((M.p).label)(M);};

var _12909=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12939,M.p));
return((M.p).label)(M);};

var _12902=function(M){--M.cbt<0;
M.e.length+=2;
M.e.push(M.e[M.e.length-6][9]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12915,M.p));
return((M.p).label)(M);};

var _12870=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12900,M.p));
return((M.p).label)(M);};

var _12849=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12861,M.p));
return((M.p).label)(M);};

var _12815=function(M){--M.cbt<0;
M.e[M.e.length-1][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12824=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12840,M.p));
return((M.p).label)(M);};

_13568=RT.si_context_expected(4);

var _13218=function(M){--M.cbt<0;
M.e.length+=2;
M.e.push(M.e[M.e.length-10][9]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13231,M.p));
return((M.p).label)(M);};

var _13564=function(M){if(--M.cbt<0){throw _13564;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13568,M.p));
return((M.p).label)(M);};

var _13551=function(M){--M.cbt<0;
M.e.splice(M.e.length-(3+5),5);
M.e[M.e.length-4][23]=M.v;
M.e[M.e.length-4][24]=M.e[M.e.length-1];
M.e[M.e.length-4][25]=M.e[M.e.length-2];
M.e[M.e.length-4][26]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13426=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13438,M.p));
return((M.p).label)(M);};

var _13375=function(M){if(--M.cbt<0){throw _13375;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=RT.VOID;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.push(M.e[M.e.length-1][3]);
M.v="Running tests...\n";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13379,M.p));
return((M.p).label)(M);}};

var _13287=function(M){if(--M.cbt<0){throw _13287;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13292,M.p));
return((M.p).label)(M);};


var _12999=function(M){--M.cbt<0;
M.e.length-=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13011,M.p));
return((M.p).label)(M);};


_13559=RT.si_context_expected(5);

var _13549=function(M){if(--M.cbt<0){throw _13549;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/check-expect/check-expect.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _13541=function(M){if(--M.cbt<0){throw _13541;}
M.c.push(new RT.PromptFrame(_13543,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12802,1,[M.e[M.e.length-1]],"test-suffixed");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13533=function(M){if(--M.cbt<0){throw _13533;}
M.c.push(new RT.PromptFrame(_13535,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=RT.NULL;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13507=function(M){if(--M.cbt<0){throw _13507;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][27];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=1;
M.e.push(M.e[M.e.length-7][21]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13522,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][27];
M.e[M.e.length-1]=1;
M.e[M.e.length-2]=0;
M.e.push(M.e[M.e.length-7][21]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13514,M.p));
return((M.p).label)(M);}};

var _13490=function(M){if(--M.cbt<0){throw _13490;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13494,M.p));
return((M.p).label)(M);};

var _13474=function(M){if(--M.cbt<0){throw _13474;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v="zero tests";
return(_13470)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][10];
M.e.push(M.e[M.e.length-6][11]);
M.e.push(M.e[M.e.length-7][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][13];
M.e[M.e.length-1]="zero tests";
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13478,M.p));
return((M.p).label)(M);}};

var _13456=function(M){if(--M.cbt<0){throw _13456;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][14];
M.e[M.e.length-1]="zero tests";
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13460,M.p));
return((M.p).label)(M);};

var _13438=function(M){if(--M.cbt<0){throw _13438;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=2;
M.e.push(M.e[M.e.length-6][9]);
M.v="zero tests";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13444,M.p));
return((M.p).label)(M);};

var _13417=function(M){if(--M.cbt<0){throw _13417;}
M.p=M.e[M.e.length-2][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13421,M.p));
return((M.p).label)(M);};

var _13365=function(M){if(--M.cbt<0){throw _13365;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13279=function(M){if(--M.cbt<0){throw _13279;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13259=function(M){if(--M.cbt<0){throw _13259;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13264,M.p));
return((M.p).label)(M);};



var _13131=function(M){--M.cbt<0;
M.e[M.e.length-5][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13177=function(M){if(--M.cbt<0){throw _13177;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-9]===0);
if(M.v===false){M.v=(M.e[M.e.length-9]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13185,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-9];
M.e[M.e.length-1]="one test";
return(_13179)(M);}}else{M.v=M.e[M.e.length-9];
M.e[M.e.length-1]="zero tests";
return(_13179)(M);}};




var _13159=function(M){if(--M.cbt<0){throw _13159;}
M.e.length-=(M.a-1);
return(_13160)(M);};



var _12863=function(M){--M.cbt<0;
M.e.length+=2;
M.e.push(M.e[M.e.length-6][9]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12876,M.p));
return((M.p).label)(M);};






var _13544=function(M){if(--M.cbt<0){throw _13544;}
M.e.length-=(M.a-1);
return(_13545)(M);};

var _13555=function(M){if(--M.cbt<0){throw _13555;}
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.NULL);
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("unexpected-no-error");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13559,M.p));
return((M.p).label)(M);};

var _13547=function(M){if(--M.cbt<0){throw _13547;}
M.c.push(new RT.PromptFrame(_13549,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("unexpected-no-error");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.p=M.primitives["current-inspector"];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13555,M.p));
return((M.p).label)(M);};

var _13539=function(M){if(--M.cbt<0){throw _13539;}
M.c.push(new RT.PromptFrame(_13541,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12801,1,[M.e[M.e.length-1]],"accumulate-test!");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13522=function(M){if(--M.cbt<0){throw _13522;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13502=function(M){if(--M.cbt<0){throw _13502;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13507,M.p));
return((M.p).label)(M);};

var _13486=function(M){if(--M.cbt<0){throw _13486;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][14];
M.e[M.e.length-1]="zero tests";
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13490,M.p));
return((M.p).label)(M);};

var _13468=function(M){if(--M.cbt<0){throw _13468;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=2;
M.e.push(M.e[M.e.length-6][9]);
M.v="zero tests";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13474,M.p));
return((M.p).label)(M);};

var _13452=function(M){if(--M.cbt<0){throw _13452;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13456,M.p));
return((M.p).label)(M);};

var _13434=function(M){if(--M.cbt<0){throw _13434;}
return(_13426)(M);};

var _13413=function(M){if(--M.cbt<0){throw _13413;}
return(_13401)(M);};

var _13396=function(M){if(--M.cbt<0){throw _13396;}
M.e[M.e.length-1]=M.v;
M.v=((plt.baselib.numbers.equals(0,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"="))));
M.e.length-=1;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][3];
M.e[M.e.length-1]="Ran ~a.\n";
M.e.length+=1;
M.e.push(M.e[M.e.length-5][16]);
if (M.e[M.e.length-6][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[0]); }
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13425,M.p));
return((M.p).label)(M);}else{M.e.push(M.e[M.e.length-2][18]);
M.e.length+=1;
M.e.push(M.e[M.e.length-4][16]);
if (M.e[M.e.length-5][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[0]); }
M.v=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13400,M.p));
return((M.p).label)(M);}};

var _13361=function(M){if(--M.cbt<0){throw _13361;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][14];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13365,M.p));
return((M.p).label)(M);};

var _13353=function(M){if(--M.cbt<0){throw _13353;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13357,M.p));
return((M.p).label)(M);};

var _13323=function(M){if(--M.cbt<0){throw _13323;}
M.e[M.e.length-2]=M.v;
M.e.push(M.primitives["srcloc-line"]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13327,M.p));
return((M.p).label)(M);};

var _13307=function(M){if(--M.cbt<0){throw _13307;}
M.e[M.e.length-2]=M.v;
M.e.push(M.primitives["srcloc-line"]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13311,M.p));
return((M.p).label)(M);};

var _13271=function(M){if(--M.cbt<0){throw _13271;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13255=function(M){if(--M.cbt<0){throw _13255;}
return(_13131)(M);};

var _13239=function(M){if(--M.cbt<0){throw _13239;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13243,M.p));
return((M.p).label)(M);};

var _13216=function(M){if(--M.cbt<0){throw _13216;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-5]===0);
if(M.v===false){M.v=(M.e[M.e.length-5]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13224,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="one test";
return(_13218)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="zero tests";
return(_13218)(M);}};

var _13200=function(M){if(--M.cbt<0){throw _13200;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13204,M.p));
return((M.p).label)(M);};


var _13156=function(M){if(--M.cbt<0){throw _13156;}
M.p=M.e[M.e.length-5][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13160,M.p));
return((M.p).label)(M);};

var _13135=function(M){if(--M.cbt<0){throw _13135;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="Ran ~a.\n";
M.e.length+=1;
M.e.push(M.e[M.e.length-8][16]);
if (M.e[M.e.length-9][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[0]); }
M.v=M.e[M.e.length-9][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13164,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-2];
M.e.push(M.e[M.e.length-5][18]);
M.e.length+=1;
M.e.push(M.e[M.e.length-7][16]);
if (M.e[M.e.length-8][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-8].names[0]); }
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13139,M.p));
return((M.p).label)(M);}};

var _13105=function(M){if(--M.cbt<0){throw _13105;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13085=function(M){if(--M.cbt<0){throw _13085;}
return(_13059)(M);};

var _13069=function(M){if(--M.cbt<0){throw _13069;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13073,M.p));
return((M.p).label)(M);};

var _13046=function(M){if(--M.cbt<0){throw _13046;}
return(_13020)(M);};

var _13030=function(M){if(--M.cbt<0){throw _13030;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13034,M.p));
return((M.p).label)(M);};

var _12994=function(M){if(--M.cbt<0){throw _12994;}
return(_12965)(M);};

var _12990=function(M){if(--M.cbt<0){throw _12990;}
M.p=M.e[M.e.length-5][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12994,M.p));
return((M.p).label)(M);};

var _12969=function(M){if(--M.cbt<0){throw _12969;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="Ran ~a.\n";
M.e.length+=1;
M.e.push(M.e[M.e.length-8][16]);
if (M.e[M.e.length-9][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-9].names[0]); }
M.v=M.e[M.e.length-9][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12998,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-2];
M.e.push(M.e[M.e.length-5][18]);
M.e.length+=1;
M.e.push(M.e[M.e.length-7][16]);
if (M.e[M.e.length-8][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-8].names[0]); }
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12973,M.p));
return((M.p).label)(M);}};

var _12931=function(M){if(--M.cbt<0){throw _12931;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12935,M.p));
return((M.p).label)(M);};

var _12915=function(M){if(--M.cbt<0){throw _12915;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
return(_12909)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][10];
M.e.push(M.e[M.e.length-6][11]);
M.e.push(M.e[M.e.length-7][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][13];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12919,M.p));
return((M.p).label)(M);}};

var _12900=function(M){if(--M.cbt<0){throw _12900;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-6]===0);
if(M.v===false){M.v=(M.e[M.e.length-6]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12908,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-6];
M.e[M.e.length-1]="one test";
return(_12902)(M);}}else{M.v=M.e[M.e.length-6];
M.e[M.e.length-1]="zero tests";
return(_12902)(M);}};

var _12888=function(M){if(--M.cbt<0){throw _12888;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12892,M.p));
return((M.p).label)(M);};

var _12869=function(M){if(--M.cbt<0){throw _12869;}
M.e[M.e.length-1]=M.v;
return(_12863)(M);};

var _12844=function(M){if(--M.cbt<0){throw _12844;}
return(_12815)(M);};

var _13567=function(M){if(--M.cbt<0){throw _13567;}
if((M.a-4)===0){return(_13551)(M);}else{RT.si_context_expected(4)(M);
}};


var _13542=function(M){if(--M.cbt<0){throw _13542;}
M.e.length-=(M.a-1);
return(_13543)(M);};

var _13536=function(M){if(--M.cbt<0){throw _13536;}
M.e.length-=(M.a-1);
return(_13537)(M);};




var _13545=function(M){if(--M.cbt<0){throw _13545;}
M.c.push(new RT.PromptFrame(_13547,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12804,0,[M.e[M.e.length-1]],"run-tests");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13537=function(M){if(--M.cbt<0){throw _13537;}
M.c.push(new RT.PromptFrame(_13539,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12800,1,[M.e[M.e.length-1]],"display-location");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13514=function(M){if(--M.cbt<0){throw _13514;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13498=function(M){if(--M.cbt<0){throw _13498;}
return(_13392)(M);};

var _13482=function(M){if(--M.cbt<0){throw _13482;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13486,M.p));
return((M.p).label)(M);};

var _13464=function(M){if(--M.cbt<0){throw _13464;}
return(_13440)(M);};

var _13448=function(M){if(--M.cbt<0){throw _13448;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13452,M.p));
return((M.p).label)(M);};

var _13425=function(M){if(--M.cbt<0){throw _13425;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13434,M.p));
return((M.p).label)(M);}else{M.v="one test";
return(_13426)(M);}}else{M.v="zero tests";
return(_13426)(M);}};

var _13409=function(M){if(--M.cbt<0){throw _13409;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13413,M.p));
return((M.p).label)(M);};

var _13390=function(M){if(--M.cbt<0){throw _13390;}
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-3][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13502,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13396,M.p));
return((M.p).label)(M);}};

var _13357=function(M){if(--M.cbt<0){throw _13357;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13361,M.p));
return((M.p).label)(M);};

var _13349=function(M){if(--M.cbt<0){throw _13349;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][10];
M.e.push(M.e[M.e.length-3][11]);
M.e.push(M.e[M.e.length-4][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][13];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13353,M.p));
return((M.p).label)(M);}};

var _13319=function(M){if(--M.cbt<0){throw _13319;}
M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13303=function(M){if(--M.cbt<0){throw _13303;}
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="  at: ~s, line ~s, column ~s\n";
M.e.push(M.primitives["srcloc-source"]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13307,M.p));
return((M.p).label)(M);};

var _13264=function(M){if(--M.cbt<0){throw _13264;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][27];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"add1"));
M.e.push(M.e[M.e.length-10][21]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13279,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][27];
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-11],0,"add1"));
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-10][21]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13271,M.p));
return((M.p).label)(M);}};

var _13251=function(M){if(--M.cbt<0){throw _13251;}
return(_13225)(M);};

var _13235=function(M){if(--M.cbt<0){throw _13235;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13239,M.p));
return((M.p).label)(M);};

var _13212=function(M){if(--M.cbt<0){throw _13212;}
return(_13186)(M);};

var _13196=function(M){if(--M.cbt<0){throw _13196;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13200,M.p));
return((M.p).label)(M);};

var _13173=function(M){if(--M.cbt<0){throw _13173;}
return(_13165)(M);};

var _13152=function(M){if(--M.cbt<0){throw _13152;}
return(_13140)(M);};

var _13129=function(M){if(--M.cbt<0){throw _13129;}
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13259,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7][16]);
if (M.e[M.e.length-8][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-8].names[0]); }
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13135,M.p));
return((M.p).label)(M);}};

var _13113=function(M){if(--M.cbt<0){throw _13113;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13089=function(M){if(--M.cbt<0){throw _13089;}
return(_12965)(M);};

var _13065=function(M){if(--M.cbt<0){throw _13065;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
return(_13059)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][10];
M.e.push(M.e[M.e.length-10][11]);
M.e.push(M.e[M.e.length-11][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14][13];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13069,M.p));
return((M.p).label)(M);}};

var _13042=function(M){if(--M.cbt<0){throw _13042;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13046,M.p));
return((M.p).label)(M);};

var _13026=function(M){if(--M.cbt<0){throw _13026;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
return(_13020)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][10];
M.e.push(M.e[M.e.length-10][11]);
M.e.push(M.e[M.e.length-11][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14][13];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13030,M.p));
return((M.p).label)(M);}};

var _13007=function(M){if(--M.cbt<0){throw _13007;}
return(_12999)(M);};

var _12982=function(M){if(--M.cbt<0){throw _12982;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12986,M.p));
return((M.p).label)(M);};

var _12948=function(M){if(--M.cbt<0){throw _12948;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
M.e.length+=1;
M.e.push(M.e[M.e.length-5][21]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13122,M.p));
return((M.p).label)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"add1"));
M.e.length+=1;
M.e.push(M.e[M.e.length-5][21]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12956,M.p));
return((M.p).label)(M);}};

var _12939=function(M){if(--M.cbt<0){throw _12939;}
return(_12815)(M);};

var _12923=function(M){if(--M.cbt<0){throw _12923;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12927,M.p));
return((M.p).label)(M);};

var _12896=function(M){if(--M.cbt<0){throw _12896;}
return(_12870)(M);};

var _12884=function(M){if(--M.cbt<0){throw _12884;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12888,M.p));
return((M.p).label)(M);};

var _12857=function(M){if(--M.cbt<0){throw _12857;}
return(_12849)(M);};

var _12840=function(M){if(--M.cbt<0){throw _12840;}
M.p=M.e[M.e.length-1][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12844,M.p));
return((M.p).label)(M);};

var _12823=function(M){if(--M.cbt<0){throw _12823;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][7];
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(M.e[M.e.length-5][16]);
if (M.e[M.e.length-6][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-6].names[0]); }
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12832,M.p));
return((M.p).label)(M);}else{M.v="Both tests passed!";
return(_12824)(M);}}else{M.v="The test passed!";
return(_12824)(M);}};


var _13548=function(M){if(--M.cbt<0){throw _13548;}
M.e.length-=(M.a-1);
return(_13549)(M);};

var _13540=function(M){if(--M.cbt<0){throw _13540;}
M.e.length-=(M.a-1);
return(_13541)(M);};

var _13534=function(M){if(--M.cbt<0){throw _13534;}
M.e.length-=(M.a-1);
return(_13535)(M);};

var _13531=function(M){if(--M.cbt<0){throw _13531;}
M.e.push([M.params.currentNamespace["*tests*"]||M.primitives["*tests*"],M.params.currentNamespace["check-expect*"]||M.primitives["check-expect*"],M.primitives["equal?"],M.primitives["printf"],M.params.currentNamespace["display-location"]||M.primitives["display-location"],M.params.currentNamespace["accumulate-test!"]||M.primitives["accumulate-test!"],M.params.currentNamespace["test-suffixed"]||M.primitives["test-suffixed"],M.primitives["format"],M.params.currentNamespace["capitalize"]||M.primitives["capitalize"],M.primitives["string-length"],M.primitives["string-append"],M.primitives["string"],M.primitives["char-upcase"],M.primitives["string-ref"],M.primitives["substring"],M.params.currentNamespace["run-tests"]||M.primitives["run-tests"],M.primitives["length"],M.modules["whalesong/lang/list.rkt"].namespace["empty?"],M.primitives["display"],M.primitives["newline"],M.modules["whalesong/lang/list.rkt"].namespace["first"],M.modules["whalesong/lang/list.rkt"].namespace["rest"],M.primitives["reverse"],M.params.currentNamespace["struct:unexpected-no-error"]||M.primitives["struct:unexpected-no-error"],M.params.currentNamespace["make-unexpected-no-error"]||M.primitives["make-unexpected-no-error"],M.params.currentNamespace["unexpected-no-error?"]||M.primitives["unexpected-no-error?"],M.params.currentNamespace["unexpected-no-error-result"]||M.primitives["unexpected-no-error-result"],false]);M.e[M.e.length-1].names=["*tests*","check-expect*","equal?","printf","display-location","accumulate-test!","test-suffixed","format","capitalize","string-length","string-append","string","char-upcase","string-ref","substring","run-tests","length","empty?","display","newline","first","rest","reverse","struct:unexpected-no-error","make-unexpected-no-error","unexpected-no-error?","unexpected-no-error-result",false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_13533,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12798,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _13467=function(M){if(--M.cbt<0){throw _13467;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=2;
M.e.push(M.e[M.e.length-6][9]);
M.v="zero tests";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13474,M.p));
return((M.p).label)(M);};




var _13437=function(M){if(--M.cbt<0){throw _13437;}
M.e.length-=(M.a-1);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=2;
M.e.push(M.e[M.e.length-6][9]);
M.v="zero tests";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13444,M.p));
return((M.p).label)(M);};


var _13416=function(M){if(--M.cbt<0){throw _13416;}
M.e.length-=(M.a-1);
M.p=M.e[M.e.length-2][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13421,M.p));
return((M.p).label)(M);};

var _13378=function(M){if(--M.cbt<0){throw _13378;}
M.e.length-=(M.a-1);
M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
if (M.e[M.e.length-3][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[0]); }
M.v=M.e[M.e.length-3][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13383,M.p));
return((M.p).label)(M);};

var _13543=function(M){if(--M.cbt<0){throw _13543;}
M.c.push(new RT.PromptFrame(_13545,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12803,1,[M.e[M.e.length-1]],"capitalize");
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13535=function(M){if(--M.cbt<0){throw _13535;}
M.c.push(new RT.PromptFrame(_13537,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_12799,4,[M.e[M.e.length-1]],"check-expect*");
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _13494=function(M){if(--M.cbt<0){throw _13494;}
return(_13470)(M);};

var _13478=function(M){if(--M.cbt<0){throw _13478;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13482,M.p));
return((M.p).label)(M);};

var _13460=function(M){if(--M.cbt<0){throw _13460;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13464,M.p));
return((M.p).label)(M);};

var _13444=function(M){if(--M.cbt<0){throw _13444;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v="zero tests";
return(_13440)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][10];
M.e.push(M.e[M.e.length-6][11]);
M.e.push(M.e[M.e.length-7][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][13];
M.e[M.e.length-1]="zero tests";
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13448,M.p));
return((M.p).label)(M);}};

var _13421=function(M){if(--M.cbt<0){throw _13421;}
return(_13392)(M);};

var _13400=function(M){if(--M.cbt<0){throw _13400;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][7];
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(M.e[M.e.length-6][16]);
if (M.e[M.e.length-7][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-7].names[0]); }
M.v=M.e[M.e.length-7][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13409,M.p));
return((M.p).label)(M);}else{M.v="Both tests passed!";
return(_13401)(M);}}else{M.v="The test passed!";
return(_13401)(M);}};

var _13383=function(M){if(--M.cbt<0){throw _13383;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-2][17]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13390,M.p));
return((M.p).label)(M);};


var _13331=function(M){if(--M.cbt<0){throw _13331;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13315=function(M){if(--M.cbt<0){throw _13315;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13319,M.p));
return((M.p).label)(M);};

var _13299=function(M){if(--M.cbt<0){throw _13299;}
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][3];
M.e[M.e.length-1]="check-expect: actual value ~s differs from ~s, the expected value\n";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13303,M.p));
return((M.p).label)(M);}else{M.v=true;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _13243=function(M){if(--M.cbt<0){throw _13243;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13247,M.p));
return((M.p).label)(M);};

var _13224=function(M){if(--M.cbt<0){throw _13224;}
M.e[M.e.length-1]=M.v;
return(_13218)(M);};

var _13204=function(M){if(--M.cbt<0){throw _13204;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13208,M.p));
return((M.p).label)(M);};

var _13185=function(M){if(--M.cbt<0){throw _13185;}
M.e[M.e.length-1]=M.v;
return(_13179)(M);};

var _13148=function(M){if(--M.cbt<0){throw _13148;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13152,M.p));
return((M.p).label)(M);};

var _13139=function(M){if(--M.cbt<0){throw _13139;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][7];
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(M.e[M.e.length-9][16]);
if (M.e[M.e.length-10][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-10].names[0]); }
M.v=M.e[M.e.length-10][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13148,M.p));
return((M.p).label)(M);}else{M.v="Both tests passed!";
return(_13140)(M);}}else{M.v="The test passed!";
return(_13140)(M);}};

var _13098=function(M){if(--M.cbt<0){throw _13098;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][27];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12],0,"add1"));
M.e.push(M.e[M.e.length-10][21]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13113,M.p));
return((M.p).label)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][27];
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"add1"));
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e.push(M.e[M.e.length-10][21]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13105,M.p));
return((M.p).label)(M);}};

var _13081=function(M){if(--M.cbt<0){throw _13081;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13085,M.p));
return((M.p).label)(M);};

var _13058=function(M){if(--M.cbt<0){throw _13058;}
M.e[M.e.length-1]=M.v;
return(_13052)(M);};

var _13038=function(M){if(--M.cbt<0){throw _13038;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13042,M.p));
return((M.p).label)(M);};

var _13034=function(M){if(--M.cbt<0){throw _13034;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13038,M.p));
return((M.p).label)(M);};

var _13011=function(M){if(--M.cbt<0){throw _13011;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-5]===0);
if(M.v===false){M.v=(M.e[M.e.length-5]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13019,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="one test";
return(_13013)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="zero tests";
return(_13013)(M);}};

var _12973=function(M){if(--M.cbt<0){throw _12973;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][7];
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(M.e[M.e.length-9][16]);
if (M.e[M.e.length-10][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-10].names[0]); }
M.v=M.e[M.e.length-10][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12982,M.p));
return((M.p).label)(M);}else{M.v="Both tests passed!";
return(_12974)(M);}}else{M.v="The test passed!";
return(_12974)(M);}};

var _12956=function(M){if(--M.cbt<0){throw _12956;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][17]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12963,M.p));
return((M.p).label)(M);};

var _12935=function(M){if(--M.cbt<0){throw _12935;}
return(_12909)(M);};

var _12919=function(M){if(--M.cbt<0){throw _12919;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12923,M.p));
return((M.p).label)(M);};

var _12892=function(M){if(--M.cbt<0){throw _12892;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12896,M.p));
return((M.p).label)(M);};

var _12880=function(M){if(--M.cbt<0){throw _12880;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12884,M.p));
return((M.p).label)(M);};

var _12861=function(M){if(--M.cbt<0){throw _12861;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]="~a passed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-5]===0);
if(M.v===false){M.v=(M.e[M.e.length-5]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12869,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="one test";
return(_12863)(M);}}else{M.v=M.e[M.e.length-5];
M.e[M.e.length-1]="zero tests";
return(_12863)(M);}};

var _12836=function(M){if(--M.cbt<0){throw _12836;}
return(_12824)(M);};

var _12819=function(M){if(--M.cbt<0){throw _12819;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]="Ran ~a.\n";
M.e.length+=1;
M.e.push(M.e[M.e.length-4][16]);
if (M.e[M.e.length-5][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-5].names[0]); }
M.v=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12848,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(M.e[M.e.length-1][18]);
M.e.length+=1;
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12823,M.p));
return((M.p).label)(M);}};

var _13558=function(M){if(--M.cbt<0){throw _13558;}
if((M.a-5)===0){return(_13557)(M);}else{RT.si_context_expected(5)(M);
}};

var _13546=function(M){if(--M.cbt<0){throw _13546;}
M.e.length-=(M.a-1);
return(_13547)(M);};

var _13538=function(M){if(--M.cbt<0){throw _13538;}
M.e.length-=(M.a-1);
return(_13539)(M);};

var _13532=function(M){if(--M.cbt<0){throw _13532;}
M.e.length-=(M.a-1);
return(_13533)(M);};

var _13528=function(M){--M.cbt<0;
M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_13531)(M);}else{M.c.push(new RT.CallFrame(_13531,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}}else{return(_13531)(M);}};

var _12993=function(M){if(--M.cbt<0){throw _12993;}
M.e.length-=(M.a-1);
return(_12994)(M);};


var _13497=function(M){if(--M.cbt<0){throw _13497;}
M.e.length-=(M.a-1);
return(_13392)(M);};








var _13420=function(M){if(--M.cbt<0){throw _13420;}
M.e.length-=(M.a-1);
return(_13421)(M);};




var _13570=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_12807,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"]=new RT.ModuleRecord("check-expect",_13528);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _12839=function(M){if(--M.cbt<0){throw _12839;}
M.e.length-=(M.a-1);
M.p=M.e[M.e.length-1][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12844,M.p));
return((M.p).label)(M);};



var _12807=function(M){if(--M.cbt<0){throw _12807;}
};


var _12801=function(M){if(--M.cbt<0){throw _12801;}
M.e.push.apply(M.e,M.p.closedVals);
M.e[M.e.length-1][0]=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1][0]);
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _13318=function(M){if(--M.cbt<0){throw _13318;}
M.e.length-=(M.a-1);
M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _13379=function(M){if(--M.cbt<0){throw _13379;}
M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
if (M.e[M.e.length-3][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-3].names[0]); }
M.v=M.e[M.e.length-3][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13383,M.p));
return((M.p).label)(M);};


var _13327=function(M){if(--M.cbt<0){throw _13327;}
M.e[M.e.length-3]=M.v;
M.e.push(M.primitives["srcloc-column"]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13331,M.p));
return((M.p).label)(M);};

var _13311=function(M){if(--M.cbt<0){throw _13311;}
M.e[M.e.length-3]=M.v;
M.e.push(M.primitives["srcloc-column"]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13315,M.p));
return((M.p).label)(M);};

var _13292=function(M){if(--M.cbt<0){throw _13292;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][2];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13299,M.p));
return((M.p).label)(M);};


var _13247=function(M){if(--M.cbt<0){throw _13247;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13251,M.p));
return((M.p).label)(M);};

var _13231=function(M){if(--M.cbt<0){throw _13231;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
return(_13225)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][10];
M.e.push(M.e[M.e.length-10][11]);
M.e.push(M.e[M.e.length-11][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14][13];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13235,M.p));
return((M.p).label)(M);}};

var _13208=function(M){if(--M.cbt<0){throw _13208;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13212,M.p));
return((M.p).label)(M);};

var _13192=function(M){if(--M.cbt<0){throw _13192;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
return(_13186)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][10];
M.e.push(M.e[M.e.length-10][11]);
M.e.push(M.e[M.e.length-11][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14][13];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13196,M.p));
return((M.p).label)(M);}};

var _13164=function(M){if(--M.cbt<0){throw _13164;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13173,M.p));
return((M.p).label)(M);}else{M.v="one test";
return(_13165)(M);}}else{M.v="zero tests";
return(_13165)(M);}};

var _13160=function(M){if(--M.cbt<0){throw _13160;}
return(_13131)(M);};

var _13122=function(M){if(--M.cbt<0){throw _13122;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][17]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13129,M.p));
return((M.p).label)(M);};

var _13093=function(M){if(--M.cbt<0){throw _13093;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13098,M.p));
return((M.p).label)(M);};

var _13077=function(M){if(--M.cbt<0){throw _13077;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-12][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13081,M.p));
return((M.p).label)(M);};

var _13073=function(M){if(--M.cbt<0){throw _13073;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13077,M.p));
return((M.p).label)(M);};

var _13050=function(M){if(--M.cbt<0){throw _13050;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="~a failed.\n";
M.e.length+=1;
M.v=(M.e[M.e.length-10]===0);
if(M.v===false){M.v=(M.e[M.e.length-10]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13058,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-10];
M.e[M.e.length-1]="one test";
return(_13052)(M);}}else{M.v=M.e[M.e.length-10];
M.e[M.e.length-1]="zero tests";
return(_13052)(M);}};

var _13019=function(M){if(--M.cbt<0){throw _13019;}
M.e[M.e.length-1]=M.v;
return(_13013)(M);};

var _12998=function(M){if(--M.cbt<0){throw _12998;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13007,M.p));
return((M.p).label)(M);}else{M.v="one test";
return(_12999)(M);}}else{M.v="zero tests";
return(_12999)(M);}};

var _12986=function(M){if(--M.cbt<0){throw _12986;}
return(_12974)(M);};

var _12963=function(M){if(--M.cbt<0){throw _12963;}
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-6][20]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13093,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-7][16]);
if (M.e[M.e.length-8][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-8].names[0]); }
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12969,M.p));
return((M.p).label)(M);}};

var _12943=function(M){if(--M.cbt<0){throw _12943;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12948,M.p));
return((M.p).label)(M);};

var _12927=function(M){if(--M.cbt<0){throw _12927;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=1;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12931,M.p));
return((M.p).label)(M);};

var _12908=function(M){if(--M.cbt<0){throw _12908;}
M.e[M.e.length-1]=M.v;
return(_12902)(M);};

var _12876=function(M){if(--M.cbt<0){throw _12876;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){M.v=M.e[M.e.length-1];
return(_12870)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][10];
M.e.push(M.e[M.e.length-6][11]);
M.e.push(M.e[M.e.length-7][12]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][13];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12880,M.p));
return((M.p).label)(M);}};

var _12848=function(M){if(--M.cbt<0){throw _12848;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12857,M.p));
return((M.p).label)(M);}else{M.v="one test";
return(_12849)(M);}}else{M.v="zero tests";
return(_12849)(M);}};

var _12832=function(M){if(--M.cbt<0){throw _12832;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12836,M.p));
return((M.p).label)(M);};

var _12813=function(M){if(--M.cbt<0){throw _12813;}
if(M.v===false){M.e.length+=1;
M.e.push(M.e[M.e.length-2][20]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12943,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12819,M.p));
return((M.p).label)(M);}};




var _13530=function(M){if(--M.cbt<0){throw _13530;}
M.e.length-=(M.a-1);
return(_13531)(M);};


var _12806=function(M){if(--M.cbt<0){throw _12806;}
M.e.length-=M.a;
return(_12807)(M);};

var _12989=function(M){if(--M.cbt<0){throw _12989;}
M.e.length-=(M.a-1);
M.p=M.e[M.e.length-5][19];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_12994,M.p));
return((M.p).label)(M);};




















var _12802=function(M){if(--M.cbt<0){throw _12802;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-2]===0);
if(M.v===false){M.v=(M.e[M.e.length-2]===1);
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][7];
M.e[M.e.length-1]="~a tests";
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v="one test";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v="zero tests";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _12800=function(M){if(--M.cbt<0){throw _12800;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][3];
M.e[M.e.length-1]="  at: ~s, line ~s, column ~s\n";
M.e.push(M.primitives["srcloc-source"]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13323,M.p));
return((M.p).label)(M);};



var _13302=function(M){if(--M.cbt<0){throw _13302;}
M.e.length-=(M.a-1);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-7][3];
M.e[M.e.length-1]="  at: ~s, line ~s, column ~s\n";
M.e.push(M.primitives["srcloc-source"]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13307,M.p));
return((M.p).label)(M);};

var _12803=function(M){if(--M.cbt<0){throw _12803;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e.push(M.e[M.e.length-3][9]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13349,M.p));
return((M.p).label)(M);};




var _13254=function(M){if(--M.cbt<0){throw _13254;}
M.e.length-=(M.a-1);
return(_13131)(M);};


_12840.mvr=_12839;
_12844.mvr=_12843;
_12861.mvr=_12860;
_12900.mvr=_12899;
_12939.mvr=_12938;
_12990.mvr=_12989;
_12994.mvr=_12993;
_13011.mvr=_13010;
_13050.mvr=_13049;
_13089.mvr=_13088;
_13156.mvr=_13155;
_13160.mvr=_13159;
_13177.mvr=_13176;
_13216.mvr=_13215;
_13255.mvr=_13254;
_13303.mvr=_13302;
_13319.mvr=_13318;
_13379.mvr=_13378;
_13417.mvr=_13416;
_13421.mvr=_13420;
_13438.mvr=_13437;
_13468.mvr=_13467;
_13498.mvr=_13497;
_13531.mvr=_13530;
_13533.mvr=_13532;
_13535.mvr=_13534;
_13537.mvr=_13536;
_13539.mvr=_13538;
_13541.mvr=_13540;
_13543.mvr=_13542;
_13545.mvr=_13544;
_13547.mvr=_13546;
_13559.mvr=_13558;
_13568.mvr=_13567;
_13549.mvr=_13548;
_12807.mvr=_12806;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_13570, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _13608=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_13577,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/lang/primitives.rkt"]=new RT.ModuleRecord("primitives",_13583);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13592=function(M){if(--M.cbt<0){throw _13592;}
M.c.push(new RT.PromptFrame(_13594,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13574,1,[M.e[M.e.length-1]],"caddr");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13577=function(M){if(--M.cbt<0){throw _13577;}
};

var _13593=function(M){if(--M.cbt<0){throw _13593;}
M.e.length-=(M.a-1);
return(_13594)(M);};

var _13585=function(M){if(--M.cbt<0){throw _13585;}
M.e.length-=(M.a-1);
return(_13586)(M);};

var _13583=function(M){--M.cbt<0;
M.modules["root/lang/primitives.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_13586)(M);}else{M.c.push(new RT.CallFrame(_13586,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}}else{return(_13586)(M);}};

var _13576=function(M){if(--M.cbt<0){throw _13576;}
M.e.length-=M.a;
return(_13577)(M);};

var _13571=function(M){if(--M.cbt<0){throw _13571;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",93,6,8,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"<"))));
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _13573=function(M){if(--M.cbt<0){throw _13573;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",166,12,2,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",171,12,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.c.pop();
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13587=function(M){if(--M.cbt<0){throw _13587;}
M.e.length-=(M.a-1);
return(_13588)(M);};

var _13586=function(M){if(--M.cbt<0){throw _13586;}
M.e.push([M.params.currentNamespace["min"]||M.primitives["min"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.params.currentNamespace["max"]||M.primitives["max"],M.params.currentNamespace["cadr"]||M.primitives["cadr"],M.params.currentNamespace["caddr"]||M.primitives["caddr"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["min","traced-app-key","max","cadr","caddr","run-tests","print-values"];
M.modules["root/lang/primitives.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_13588,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13571,2,[M.e[M.e.length-1]],"min");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13574=function(M){if(--M.cbt<0){throw _13574;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",202,15,2,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",207,15,7,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",212,15,12,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.c.pop();
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.length-=1;
M.c.pop();
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13588=function(M){if(--M.cbt<0){throw _13588;}
M.c.push(new RT.PromptFrame(_13590,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13572,2,[M.e[M.e.length-1]],"max");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13606=function(M){if(--M.cbt<0){throw _13606;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13591=function(M){if(--M.cbt<0){throw _13591;}
M.e.length-=(M.a-1);
return(_13592)(M);};

var _13607=function(M){if(--M.cbt<0){throw _13607;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13602=function(M){if(--M.cbt<0){throw _13602;}
M.a=1;
return(_13600)(M);};

var _13600=function(M){if(--M.cbt<0){throw _13600;}
if(M.a===0){return(_13598)(M);}else{M.e.push(M.v);
return(_13598)(M);}};

var _13595=function(M){if(--M.cbt<0){throw _13595;}
M.e.length-=(M.a-1);
return(_13596)(M);};

var _13589=function(M){if(--M.cbt<0){throw _13589;}
M.e.length-=(M.a-1);
return(_13590)(M);};

var _13596=function(M){if(--M.cbt<0){throw _13596;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/lang/primitives.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _13590=function(M){if(--M.cbt<0){throw _13590;}
M.c.push(new RT.PromptFrame(_13592,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13573,1,[M.e[M.e.length-1]],"cadr");
M.e[M.e.length-1][3]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13572=function(M){if(--M.cbt<0){throw _13572;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",132,9,6,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,">"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,">"))));
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _13594=function(M){if(--M.cbt<0){throw _13594;}
M.c.push(new RT.PromptFrame(_13596,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][6];
M.p=M.e[M.e.length-1][5];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13602,M.p));
return((M.p).label)(M);};

var _13598=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13607,M.p));
return((M.p).label)(M);};

_13586.mvr=_13585;
_13588.mvr=_13587;
_13590.mvr=_13589;
_13592.mvr=_13591;
_13594.mvr=_13593;
_13602.mvr=_13600;
_13607.mvr=_13606;
_13596.mvr=_13595;
_13577.mvr=_13576;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_13608, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/js.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _13611=function(M){if(--M.cbt<0){throw _13611;}
};

var _13616=function(M){if(--M.cbt<0){throw _13616;}
if((M.modules["whalesong/js/main.rkt"]!==undefined)!==false){if(M.modules["whalesong/js/main.rkt"].isInvoked!==false){return(_13619)(M);}else{M.c.push(new RT.CallFrame(_13619,M.p));
return(M.modules["whalesong/js/main.rkt"].label)(M);}}else{return(_13619)(M);}};

var _13613=function(M){--M.cbt<0;
M.modules["whalesong/js.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_13616)(M);}else{M.c.push(new RT.CallFrame(_13616,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}}else{return(_13616)(M);}};

var _13618=function(M){if(--M.cbt<0){throw _13618;}
M.e.length-=(M.a-1);
return(_13619)(M);};

var _13619=function(M){if(--M.cbt<0){throw _13619;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/js.rkt"].prefix=M.e[M.e.length-1];
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/js.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _13620=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_13611,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/js.rkt"]=new RT.ModuleRecord("js",_13613);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13615=function(M){if(--M.cbt<0){throw _13615;}
M.e.length-=(M.a-1);
return(_13616)(M);};

var _13610=function(M){if(--M.cbt<0){throw _13610;}
M.e.length-=M.a;
return(_13611)(M);};

_13616.mvr=_13615;
_13619.mvr=_13618;
_13611.mvr=_13610;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_13620, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/js.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/whalesong/current/js.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/js/main.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/js/main.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/js/main.rkt"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){var VOID = plt.baselib.constants.VOID_VALUE;
var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;

EXPORTS['alert'] =
    makePrimitiveProcedure(
        'alert',
        1,
        function(MACHINE) {
            var elt = MACHINE.e[MACHINE.e.length - 1];
            alert(String(elt));
            return VOID;
        });


EXPORTS['body'] = $(document.body);

EXPORTS['$'] =
    makePrimitiveProcedure(
        '$',
        1,
        function(MACHINE) {
            var obj = MACHINE.e[MACHINE.e.length - 1];
            return $(obj);
        });

EXPORTS['call-method'] = 
    makePrimitiveProcedure(
        'call-method',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
            var obj = MACHINE.e[MACHINE.e.length - 1];
            var methodName = MACHINE.e[MACHINE.e.length - 2];
            var args = [];
            for (var i = 0; i < MACHINE.a - 2; i++) {
                args.push(MACHINE.e[MACHINE.e.length -1 - 2 - i]);
            }
            var result = obj[methodName].apply(obj, args);
            return result;
        });




// Javascript-specific extensions.  A small experiment.
EXPORTS['viewport-width'] = 
    makePrimitiveProcedure(
        'viewport-width',
        0,
        function(MACHINE) {
            return $(window).width();
        });

EXPORTS['viewport-height'] = 
    makePrimitiveProcedure(
        'viewport-height',
        0,
        function(MACHINE) {
            return $(window).height();
        });


EXPORTS['in-javascript-context?'] =
    makePrimitiveProcedure(
        'in-javascript-context?',
        0,
        function(MACHINE) {
            return true;
        });
})(M, exports);
             modrec.namespace["$4.4"] = exports["$"];
modrec.namespace["alert1.1"] = exports["alert"];
modrec.namespace["body2.2"] = exports["body"];
modrec.namespace["call-method3.3"] = exports["call-method"];
modrec.namespace["in-javascript-context?7.7"] = exports["in-javascript-context?"];
modrec.namespace["viewport-height6.6"] = exports["viewport-height"];
modrec.namespace["viewport-width5.5"] = exports["viewport-width"];

             modrec.privateExports = exports;
             return M.c.pop().label(M);
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _13784=function(M){if(--M.cbt<0){throw _13784;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/utilities/string.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _13776=function(M){if(--M.cbt<0){throw _13776;}
M.c.push(new RT.PromptFrame(_13778,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13627,1,[M.e[M.e.length-1]],"string-trim-both");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13768=function(M){if(--M.cbt<0){throw _13768;}
M.c.push(new RT.PromptFrame(_13770,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13623,2,[M.e[M.e.length-1]],"doloop");
M.e[M.e.length-1][22]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13740=function(M){if(--M.cbt<0){throw _13740;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",788,34,8,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][15];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13718=function(M){if(--M.cbt<0){throw _13718;}
M.c.pop();
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][23];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",482,21,14,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][11]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13722,M.p));
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _13682=function(M){if(--M.cbt<0){throw _13682;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13652=function(M){if(--M.cbt<0){throw _13652;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=(M.e[M.e.length-1]===false);
M.e.length-=1;
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",884,25,30,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][23];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",500,21,32,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"-"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",839,24,24,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][9];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13656,M.p));
return((M.p).label)(M);}};

var _13794=function(M){if(--M.cbt<0){throw _13794;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13779=function(M){if(--M.cbt<0){throw _13779;}
M.e.length-=(M.a-1);
return(_13780)(M);};

var _13771=function(M){if(--M.cbt<0){throw _13771;}
M.e.length-=(M.a-1);
return(_13772)(M);};

var _13764=function(M){if(--M.cbt<0){throw _13764;}
M.e.push([M.params.currentNamespace["string-reverse"]||M.primitives["string-reverse"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.primitives["list->string"],M.primitives["reverse"],M.primitives["string->list"],M.params.currentNamespace["string-trim-left"]||M.primitives["string-trim-left"],M.primitives["string=?"],M.modules["root/lang/char.rkt"].namespace["char-whitespace?"],M.primitives["string-ref"],M.primitives["void"],M.primitives["substring"],M.primitives["string-length"],M.params.currentNamespace["string-trim-right"]||M.primitives["string-trim-right"],M.params.currentNamespace["string-trim-both"]||M.primitives["string-trim-both"],M.params.currentNamespace["string-append-n"]||M.primitives["string-append-n"],M.primitives["string-append"],M.params.currentNamespace["stringify"]||M.primitives["stringify"],M.modules["whalesong/lang/private/map.rkt"].namespace["map2"],M.primitives["number?"],M.primitives["number->string"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"],false,false,false]);M.e[M.e.length-1].names=["string-reverse","traced-app-key","list->string","reverse","string->list","string-trim-left","string=?","char-whitespace?","string-ref","void","substring","string-length","string-trim-right","string-trim-both","string-append-n","string-append","stringify","map2","number?","number->string","run-tests","print-values",false,false,false];
M.modules["root/utilities/string.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_13766,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13621,1,[M.e[M.e.length-1]],"...ities/string.rkt:38:14");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13761=function(M){if(--M.cbt<0){throw _13761;}
if((M.modules["root/lang/char.rkt"]!==undefined)!==false){if(M.modules["root/lang/char.rkt"].isInvoked!==false){return(_13764)(M);}else{M.c.push(new RT.CallFrame(_13764,M.p));
return(M.modules["root/lang/char.rkt"].label)(M);}}else{return(_13764)(M);}};

var _13758=function(M){if(--M.cbt<0){throw _13758;}
if((M.modules["root/lang/do.rkt"]!==undefined)!==false){if(M.modules["root/lang/do.rkt"].isInvoked!==false){return(_13761)(M);}else{M.c.push(new RT.CallFrame(_13761,M.p));
return(M.modules["root/lang/do.rkt"].label)(M);}}else{return(_13761)(M);}};

var _13631=function(M){if(--M.cbt<0){throw _13631;}
M.e.length-=M.a;
return(_13632)(M);};

var _13698=function(M){if(--M.cbt<0){throw _13698;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13628=function(M){if(--M.cbt<0){throw _13628;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",715,31,6,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<="),0)));
M.c.pop();
if(M.v===false){M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",748,33,15,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",769,33,36,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"-"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13740,M.p));
return((M.p).label)(M);}else{M.v="";
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _13656=function(M){if(--M.cbt<0){throw _13656;}
M.c.pop();
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",576,23,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][10];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=0;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _13781=function(M){if(--M.cbt<0){throw _13781;}
M.e.length-=(M.a-1);
return(_13782)(M);};

var _13625=function(M){if(--M.cbt<0){throw _13625;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",259,12,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][6];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v="";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13708,M.p));
return((M.p).label)(M);};

var _13765=function(M){if(--M.cbt<0){throw _13765;}
M.e.length-=(M.a-1);
return(_13766)(M);};

var _13677=function(M){if(--M.cbt<0){throw _13677;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",369,16,9,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][10];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",384,16,24,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][11]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13682,M.p));
return((M.p).label)(M);};

var _13770=function(M){if(--M.cbt<0){throw _13770;}
M.c.push(new RT.PromptFrame(_13772,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13624,1,[M.e[M.e.length-1]],"string-reverse");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13730=function(M){if(--M.cbt<0){throw _13730;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13655=function(M){if(--M.cbt<0){throw _13655;}
M.e.length-=(M.a-1);
M.c.pop();
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",576,23,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][10];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=0;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13678=function(M){if(--M.cbt<0){throw _13678;}
M.c.pop();
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",369,16,9,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][10];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",384,16,24,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][11]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13682,M.p));
return((M.p).label)(M);};


var _13788=function(M){if(--M.cbt<0){throw _13788;}
if(M.a===0){return(_13786)(M);}else{M.e.push(M.v);
return(_13786)(M);}};

var _13626=function(M){if(--M.cbt<0){throw _13626;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",444,19,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][6];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v="";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13718,M.p));
return((M.p).label)(M);};

var _13623=function(M){if(--M.cbt<0){throw _13623;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",318,15,9,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",323,15,14,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][7]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",341,15,32,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][8];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13670,M.p));
return((M.p).label)(M);};

var _13767=function(M){if(--M.cbt<0){throw _13767;}
M.e.length-=(M.a-1);
return(_13768)(M);};

var _13780=function(M){if(--M.cbt<0){throw _13780;}
M.c.push(new RT.PromptFrame(_13782,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13629,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"stringify");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13775=function(M){if(--M.cbt<0){throw _13775;}
M.e.length-=(M.a-1);
return(_13776)(M);};

var _13795=function(M){if(--M.cbt<0){throw _13795;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13796=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_13632,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/utilities/string.rkt"]=new RT.ModuleRecord("string",_13755);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13782=function(M){if(--M.cbt<0){throw _13782;}
M.c.push(new RT.PromptFrame(_13784,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][21];
M.p=M.e[M.e.length-1][20];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13790,M.p));
return((M.p).label)(M);};

var _13774=function(M){if(--M.cbt<0){throw _13774;}
M.c.push(new RT.PromptFrame(_13776,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13626,1,[M.e[M.e.length-1]],"string-trim-right");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13766=function(M){if(--M.cbt<0){throw _13766;}
M.c.push(new RT.PromptFrame(_13768,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13622,2,[M.e[M.e.length-1]],"doloop");
M.e[M.e.length-1][23]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13749=function(M){if(--M.cbt<0){throw _13749;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13722=function(M){if(--M.cbt<0){throw _13722;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _13694=function(M){if(--M.cbt<0){throw _13694;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13698,M.p));
return((M.p).label)(M);};

var _13648=function(M){if(--M.cbt<0){throw _13648;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13652,M.p));
return((M.p).label)(M);};

var _13638=function(M){if(--M.cbt<0){throw _13638;}
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",904,38,42,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][19]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _13777=function(M){if(--M.cbt<0){throw _13777;}
M.e.length-=(M.a-1);
return(_13778)(M);};

var _13769=function(M){if(--M.cbt<0){throw _13769;}
M.e.length-=(M.a-1);
return(_13770)(M);};

var _13763=function(M){if(--M.cbt<0){throw _13763;}
M.e.length-=(M.a-1);
return(_13764)(M);};

var _13760=function(M){if(--M.cbt<0){throw _13760;}
M.e.length-=(M.a-1);
return(_13761)(M);};

var _13757=function(M){if(--M.cbt<0){throw _13757;}
M.e.length-=(M.a-1);
return(_13758)(M);};

var _13755=function(M){--M.cbt<0;
M.modules["root/utilities/string.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_13758)(M);}else{M.c.push(new RT.CallFrame(_13758,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}}else{return(_13758)(M);}};

var _13708=function(M){if(--M.cbt<0){throw _13708;}
M.c.pop();
if(M.v===false){M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][22];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};












var _13621=function(M){if(--M.cbt<0){throw _13621;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",892,38,30,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][18]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13638,M.p));
return((M.p).label)(M);};

var _13629=function(M){if(--M.cbt<0){throw _13629;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",841,37,2,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][15];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",871,38,9,73]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=M.e[M.e.length-5][24];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13749,M.p));
return((M.p).label)(M);};

var _13627=function(M){if(--M.cbt<0){throw _13627;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",630,26,2,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][12]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",652,27,3,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][5]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13730,M.p));
return((M.p).label)(M);};

var _13624=function(M){if(--M.cbt<0){throw _13624;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",180,9,2,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][2]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",194,9,16,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][3]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",203,9,25,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13694,M.p));
return((M.p).label)(M);};

var _13622=function(M){if(--M.cbt<0){throw _13622;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",519,22,9,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",524,22,14,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][7]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",542,22,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][8];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",556,22,46,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"-"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13648,M.p));
return((M.p).label)(M);};

var _13778=function(M){if(--M.cbt<0){throw _13778;}
M.c.push(new RT.PromptFrame(_13780,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13628,2,[M.e[M.e.length-1]],"string-append-n");
M.e[M.e.length-1][14]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13772=function(M){if(--M.cbt<0){throw _13772;}
M.c.push(new RT.PromptFrame(_13774,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13625,1,[M.e[M.e.length-1]],"string-trim-left");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13632=function(M){if(--M.cbt<0){throw _13632;}
};


var _13674=function(M){if(--M.cbt<0){throw _13674;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=(M.e[M.e.length-1]===false);
M.e.length-=1;
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",884,25,30,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][22];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",299,14,16,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"+"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",839,24,24,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][9];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13678,M.p));
return((M.p).label)(M);}};

var _13670=function(M){if(--M.cbt<0){throw _13670;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13674,M.p));
return((M.p).label)(M);};

var _13786=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13795,M.p));
return((M.p).label)(M);};

var _13783=function(M){if(--M.cbt<0){throw _13783;}
M.e.length-=(M.a-1);
return(_13784)(M);};

var _13773=function(M){if(--M.cbt<0){throw _13773;}
M.e.length-=(M.a-1);
return(_13774)(M);};

var _13790=function(M){if(--M.cbt<0){throw _13790;}
M.a=1;
return(_13788)(M);};

_13656.mvr=_13655;
_13678.mvr=_13677;
_13758.mvr=_13757;
_13761.mvr=_13760;
_13764.mvr=_13763;
_13766.mvr=_13765;
_13768.mvr=_13767;
_13770.mvr=_13769;
_13772.mvr=_13771;
_13774.mvr=_13773;
_13776.mvr=_13775;
_13778.mvr=_13777;
_13780.mvr=_13779;
_13782.mvr=_13781;
_13790.mvr=_13788;
_13795.mvr=_13794;
_13784.mvr=_13783;
_13632.mvr=_13631;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_13796, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _13826=function(M){if(--M.cbt<0){throw _13826;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13827=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_13800,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/lang/char.rkt"]=new RT.ModuleRecord("char",_13808);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13800=function(M){if(--M.cbt<0){throw _13800;}
};

var _13810=function(M){if(--M.cbt<0){throw _13810;}
M.e.length-=(M.a-1);
return(_13811)(M);};

var _13808=function(M){--M.cbt<0;
M.modules["root/lang/char.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_13811)(M);}else{M.c.push(new RT.CallFrame(_13811,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}}else{return(_13811)(M);}};

var _13797=function(M){if(--M.cbt<0){throw _13797;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>",100,6,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(M.e[M.e.length-3]===RT.makeChar(" "));
M.c.pop();
M.v=M.e[M.e.length-1];
if(M.v===false){M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>",122,7,6,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(M.e[M.e.length-4]===RT.makeChar("\n"));
M.c.pop();
M.v=M.e[M.e.length-1];
if(M.v===false){M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>",146,8,6,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===RT.makeChar("\t"));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _13819=function(M){if(--M.cbt<0){throw _13819;}
if(M.a===0){return(_13817)(M);}else{M.e.push(M.v);
return(_13817)(M);}};

var _13813=function(M){if(--M.cbt<0){throw _13813;}
M.c.push(new RT.PromptFrame(_13815,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][3];
M.p=M.e[M.e.length-1][2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13821,M.p));
return((M.p).label)(M);};

var _13814=function(M){if(--M.cbt<0){throw _13814;}
M.e.length-=(M.a-1);
return(_13815)(M);};

var _13811=function(M){if(--M.cbt<0){throw _13811;}
M.e.push([M.params.currentNamespace["char-whitespace?"]||M.primitives["char-whitespace?"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["char-whitespace?","traced-app-key","run-tests","print-values"];
M.modules["root/lang/char.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_13813,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13797,1,[M.e[M.e.length-1]],"char-whitespace?");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13799=function(M){if(--M.cbt<0){throw _13799;}
M.e.length-=M.a;
return(_13800)(M);};

var _13815=function(M){if(--M.cbt<0){throw _13815;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/lang/char.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _13825=function(M){if(--M.cbt<0){throw _13825;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13812=function(M){if(--M.cbt<0){throw _13812;}
M.e.length-=(M.a-1);
return(_13813)(M);};

var _13821=function(M){if(--M.cbt<0){throw _13821;}
M.a=1;
return(_13819)(M);};

var _13817=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13826,M.p));
return((M.p).label)(M);};

_13811.mvr=_13810;
_13813.mvr=_13812;
_13821.mvr=_13819;
_13826.mvr=_13825;
_13815.mvr=_13814;
_13800.mvr=_13799;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_13827, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _13863=function(M){if(--M.cbt<0){throw _13863;}
M.e.length-=(M.a-1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13853=function(M){if(--M.cbt<0){throw _13853;}
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/utilities/random.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _13857=function(M){if(--M.cbt<0){throw _13857;}
if(M.a===0){return(_13855)(M);}else{M.e.push(M.v);
return(_13855)(M);}};

var _13855=function(M){--M.cbt<0;
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13864,M.p));
return((M.p).label)(M);};

var _13859=function(M){if(--M.cbt<0){throw _13859;}
M.a=1;
return(_13857)(M);};

var _13865=function(M){--M.cbt<0;
M.c.push(new RT.PromptFrame(_13832,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/utilities/random.rkt"]=new RT.ModuleRecord("random",_13844);
M.v=M.v;
M.e.length-=1;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13849=function(M){if(--M.cbt<0){throw _13849;}
M.c.push(new RT.PromptFrame(_13851,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13829,2,[M.e[M.e.length-1]],"random-in-interval");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13842=function(M){if(--M.cbt<0){throw _13842;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"+"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"+"));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13850=function(M){if(--M.cbt<0){throw _13850;}
M.e.length-=(M.a-1);
return(_13851)(M);};

var _13847=function(M){if(--M.cbt<0){throw _13847;}
M.e.push([M.params.currentNamespace["interval"]||M.primitives["interval"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.params.currentNamespace["random-in-interval"]||M.primitives["random-in-interval"],M.primitives["random"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["interval","traced-app-key","random-in-interval","random","run-tests","print-values"];
M.modules["root/utilities/random.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_13849,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_13828,2,[M.e[M.e.length-1]],"interval");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13844=function(M){--M.cbt<0;
M.modules["root/utilities/random.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_13847)(M);}else{M.c.push(new RT.CallFrame(_13847,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}}else{return(_13847)(M);}};


var _13838=function(M){if(--M.cbt<0){throw _13838;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13829=function(M){if(--M.cbt<0){throw _13829;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",474,18,2,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",482,18,10,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][3]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",490,18,18,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",493,18,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"-"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,"-"));
M.c.pop();
M.e[M.e.length-2]=1;
M.v=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"+"), M.e[M.e.length-2]);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13842,M.p));
return((M.p).label)(M);};

var _13846=function(M){if(--M.cbt<0){throw _13846;}
M.e.length-=(M.a-1);
return(_13847)(M);};

var _13831=function(M){if(--M.cbt<0){throw _13831;}
M.e.length-=M.a;
return(_13832)(M);};


var _13828=function(M){if(--M.cbt<0){throw _13828;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",260,11,6,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,">="))));
M.c.pop();
if(M.v===false){M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",289,13,6,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",300,13,17,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",310,13,27,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"+"), 1);
M.c.pop();
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13838,M.p));
return((M.p).label)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _13852=function(M){if(--M.cbt<0){throw _13852;}
M.e.length-=(M.a-1);
return(_13853)(M);};

var _13848=function(M){if(--M.cbt<0){throw _13848;}
M.e.length-=(M.a-1);
return(_13849)(M);};

var _13864=function(M){if(--M.cbt<0){throw _13864;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _13851=function(M){if(--M.cbt<0){throw _13851;}
M.c.push(new RT.PromptFrame(_13853,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][5];
M.p=M.e[M.e.length-1][4];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_13859,M.p));
return((M.p).label)(M);};

var _13832=function(M){if(--M.cbt<0){throw _13832;}
};

_13847.mvr=_13846;
_13849.mvr=_13848;
_13851.mvr=_13850;
_13859.mvr=_13857;
_13864.mvr=_13863;
_13853.mvr=_13852;
_13832.mvr=_13831;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_13865, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>");
                          }
                     },
                     {});