
// The following contains the Whalesong runtime.


(function(window, undefined) {
    // dyoo: this library has been modified slightly so it checks to see
    // if window.jQuery has already been installed.  This is to prevent an ugly issue
    // with regards to a memory leak if one tries to repeatedly load jQuery.
    // NOTE: this portion of the file (jquery-protect-header.js) is intentionally
    // unbalanced.  It'll be closed up by jquery-protect-footer.js.
    if (!window.jQuery) {
/*! jQuery v1.6.3 http://jquery.com/ | http://jquery.org/license */
(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cq(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cp(){cn=b}function co(){setTimeout(cp,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bA.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bW(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bP,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bW(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bW(a,c,d,e,"*",g));return l}function bV(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bL),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function by(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bt:bu;if(d>0){c!=="border"&&f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bv(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&&f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bl(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bd,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bk(a){f.nodeName(a,"input")?bj(a):"getElementsByTagName"in a&&f.grep(a.getElementsByTagName("input"),bj)}function bj(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bi(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bh(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bg(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i<j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bf(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function V(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(Q.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function U(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function M(a,b){return(a&&a!=="*"?a+".":"")+b.replace(y,"`").replace(z,"&")}function L(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&&a.type==="click")){a.namespace&&(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i<s.length;i++)g=s[i],g.origType.replace(w,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j<k;j++){m=e[j];for(i=0;i<s.length;i++){g=s[i];if(m.selector===g.selector&&(!n||n.test(g.namespace))&&!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&&f.contains(h,d)&&(d=h);(!d||d!==h)&&p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j<k;j++){e=p[j];if(c&&e.level>c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&&(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function J(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function D(){return!0}function C(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&&(d==="queue"||!f.data(a,g,b,!0))&&(d==="mark"||!f.data(a,h,b,!0))&&setTimeout(function(){!f.data(a,g,b,!0)&&!f.data(a,h,b,!0)&&(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(j,"$1-$2").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.3",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;B.resolveWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!E.call(a,"constructor")&&!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(!b)return-1;if(I)return I.call(b,a);for(var c=0,d=b.length;c<d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&&(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&&(C=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",C),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&&(k=b,b=0);for(g=0,h=c.length;g<h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&&a.push(i);k&&e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&&!b&&!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&&f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g+"With"](this===b?d:this,[h])}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&&a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length>1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred();if(d>1){for(;c<d;c++)b[c]&&f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&&g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   <link><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type=checkbox>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&&f.extend(p,{position:"absolute",left:"-1000px",top:"-1000px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&&q[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([a-z])([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i=f.expando,j=typeof c=="string",k=a.nodeType,l=k?f.cache:a,m=k?a[f.expando]:a[f.expando]&&f.expando;if((!m||e&&m&&l[m]&&!l[m][i])&&j&&d===b)return;m||(k?a[f.expando]=m=++f.uuid:m=f.expando),l[m]||(l[m]={},k||(l[m].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?l[m][i]=f.extend(l[m][i],c):l[m]=f.extend(l[m],c);g=l[m],e&&(g[i]||(g[i]={}),g=g[i]),d!==b&&(g[f.camelCase(c)]=d);if(c==="events"&&!g[c])return g[i]&&g[i].events;j?(h=g[c],h==null&&(h=g[f.camelCase(c)])):h=g;return h}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e=f.expando,g=a.nodeType,h=g?f.cache:a,i=g?a[f.expando]:f.expando;if(!h[i])return;if(b){d=c?h[i][e]:h[i];if(d){d[b]||(b=f.camelCase(b)),delete d[b];if(!l(d))return}}if(c){delete h[i][e];if(!l(h[i]))return}var j=h[i][e];f.support.deleteExpando||!h.setInterval?delete h[i]:h[i]=null,j?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=j):g&&(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h<i;h++)g=e[h].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&&this.length&&(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&&j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&&(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&&(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u,v;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(n," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&&"get"in c&&(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c<0)return null;for(var h=g?c:0,i=g?c+1:e.length;h<i;h++){var j=e[h];if(j.selected&&(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&&(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&&!d.length&&e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&&(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=v:u&&(i=u)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&&"set"in i&&j&&(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&&"get"in i&&j&&(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&&(b=f.attrFix[b]||b,f.attr(a,b,""),a.removeAttribute(b),t.test(b)&&(c=f.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(u&&f.nodeName(a,"button"))return u.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(u&&f.nodeName(a,"button"))return u.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&&(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&&"set"in h&&(g=h.set(a,d,c))!==b?g:a[c]=d:h&&"get"in h&&(g=h.get(a,c))!==null?g:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabIndex=f.propHooks.tabIndex,v={get:function(a,c){var d;return f.prop(a,c)===!0||(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(u=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&d.nodeValue!==""?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var w=/\.(.*)$/,x=/^(?:textarea|input|select)$/i,y=/\./g,z=/ /g,A=/[^\w\s.|`]/g,B=function(a){return a.replace(A,"\\$&")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){if(d===!1)d=C;else if(!d)return;var g,h;d.handler&&(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")>-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&&a.attachEvent("on"+l,k)}p.add&&(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){d===!1&&(d=C);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&&f._data(a),t=s&&s.events;if(!s||!t)return;c&&c.type&&(d=c.handler,c=c.type);if(!c||typeof c=="string"&&c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")<0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),B).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j<p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j<p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&&p.splice(j--,1),o.remove&&o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&&p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&&f.removeEvent(a,h,s.handle),g=null
,delete t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&&(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&&f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")>=0&&(h=h.slice(0,-1),j=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if(!!e&&!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&&b.events&&b.events[h]&&f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")<0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&&m.apply(k,d),l&&f.acceptData(k)&&k[l]&&k[l].apply(k,d)===!1&&(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&&a}while(k&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)){try{l&&e[h]&&(n=e[l],n&&(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&&(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h<i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&&(c.result=k,k===!1&&(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&&a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&&i.scrollLeft||j&&j.scrollLeft||0)-(i&&i.clientLeft||j&&j.clientLeft||0),a.pageY=a.clientY+(i&&i.scrollTop||j&&j.scrollTop||0)-(i&&i.clientTop||j&&j.clientTop||0)}a.which==null&&(a.charCode!=null||a.keyCode!=null)&&(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=a.button&1?1:a.button&2?3:a.button&4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,M(a.origType,a.selector),f.extend({},a,{handler:L,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,M(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?D:C):this.type=a,b&&f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=D;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=D;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=D,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var E=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&&(b&&(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},F=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&&c.selector?F:E,a)},teardown:function(a){f.event.remove(this,b,a&&a.selector?F:E)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="submit"||c==="image")&&f(b).closest("form").length&&J("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="text"||c==="password")&&f(b).closest("form").length&&a.keyCode===13&&J("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var G,H=function(a){var b=f.nodeName(a,"input")?a.type:"",c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex>-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&&(c=a.selectedIndex);return c},I=function(c){var d=c.target,e,g;if(!!x.test(d.nodeName)&&!d.readOnly){e=f._data(d,"_change_data"),g=H(d),(c.type!=="focusout"||d.type!=="radio")&&f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:I,beforedeactivate:I,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&&I.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&&!f.nodeName(b,"textarea")||a.keyCode===32&&(c==="checkbox"||c==="radio")||c==="select-multiple")&&I.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",H(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in G)f.event.add(this,c+".specialChange",G[c]);return x.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return x.test(this.nodeName)}},G=f.event.special.change.filters,G.focus=G.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&&c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i<j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&&!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d<e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var K={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&&!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&&!a&&g&&g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||C,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=w.exec(h),k="",j&&(k=j[0],h=h.replace(w,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,K[h]?(a.push(K[h]+k),h=h+k):h=(K[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p<q;p++)f.event.add(n[p],"live."+M(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+M(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&&!f&&(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length>1&&m.exec(b))if(x.length===2&&l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&&(b+=x.shift()),j=v(b,j)}else{!g&&x.length>1&&d.nodeType===9&&!w&&l.match.ID.test(x[0])&&!l.match.ID.test(x[x.length-1])&&(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&&(x[0]==="~"||x[0]==="+")&&d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length>0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&&(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&&d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&&(n[t]===!0||n[t].nodeType===1&&k.contains(d,n[t]))&&f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&&n[t].nodeType===1&&f.push(j[t]);else p(n,f);o&&(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e<f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);while(a&&c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&&f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&&(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&o!=null?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!j.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&&f===0)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&&j/e>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c<f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&&(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&&!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&&l.find.CLASS&&e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return p([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&"):e.setAttribute("id",o),r&&q&&(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g<h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var N=/Until$/,O=/^(?:parents|prevUntil|prevAll)/,P=/,/,Q=/^.[^:#\[\.,]*$/,R=Array.prototype.slice,S=f.expr.match.POS,T={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(V(this,a,!1),"not",a)},filter:function(a){return this.pushStack(V(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&&a.length){for(d=0,e=a.length;d<e;d++)i=a[d],j[i]||(j[i]=S.test(i)?f(i,b||this.context):i);while(g&&g.ownerDocument&&g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)>-1:f(g).is(h))&&c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=S.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(l?l.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(U(c[0])||U(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=R.call(arguments);N.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!T[a]?f.unique(e):e,(this.length>1||P.test(d))&&O.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|object|embed|option|style)/i,bb=/checked\s*(?:[^=]|=\s*.checked.)/i,bc=/\/(java|ecma)script/i,bd=/^\s*<!(?:\[CDATA\[|\-\-)/,be={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};be.optgroup=be.option,be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,f.support.htmlSerialize||(be._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!be[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bb.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bf(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bl)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof a[0]=="string"&&a[0].length<512&&i===c&&a[0].charAt(0)==="<"&&!ba.test(a[0])&&(f.support.checkClone||!bb.test(a[0]))&&(g=!0,h=f.fragments[a[0]],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[a[0]]=h?e:1);
return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bh(a,d),e=bi(a),g=bi(d);for(h=0;e[h];++h)g[h]&&bh(e[h],g[h])}if(b){bg(a,d);if(c){e=bi(a),g=bi(d);for(h=0;e[h];++h)bg(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=be[l]||be._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bk(k[i]);else bk(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bc.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&&f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&&d[c][e];if(b&&b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&&(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&&j.removeAttribute(f.expando),delete d[c]}}}});var bm=/alpha\([^)]*\)/i,bn=/opacity=([^)]*)/,bo=/([A-Z]|^ms)/g,bp=/^-?\d+(?:px)?$/i,bq=/^-?\d/,br=/^([\-+])=([\-+.\de]+)/,bs={position:"absolute",visibility:"hidden",display:"block"},bt=["Left","Right"],bu=["Top","Bottom"],bv,bw,bx;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bv(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=br.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bv)return bv(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return by(a,b,d);f.swap(a,bs,function(){e=by(a,b,d)});return e}},set:function(a,b){if(!bp.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bn.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bm,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bm.test(g)?g.replace(bm,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bv(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bw=function(a,c){var d,e,g;c=c.replace(bo,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bx=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;!bp.test(d)&&bq.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e));return d===""?"auto":d}),bv=bw||bx,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bz=/%20/g,bA=/\[\]$/,bB=/\r?\n/g,bC=/#.*$/,bD=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bE=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bF=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bG=/^(?:GET|HEAD)$/,bH=/^\/\//,bI=/\?/,bJ=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bK=/^(?:select|textarea)/i,bL=/\s+/,bM=/([?&])_=[^&]*/,bN=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bO=f.fn.load,bP={},bQ={},bR,bS,bT=["*/"]+["*"];try{bR=e.href}catch(bU){bR=c.createElement("a"),bR.href="",bR=bR.href}bS=bN.exec(bR.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bO)return bO.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bJ,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bK.test(this.nodeName)||bE.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bB,"\r\n")}}):{name:b.name,value:c.replace(bB,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?bX(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),bX(a,b);return a},ajaxSettings:{url:bR,isLocal:bF.test(bS[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bT},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bV(bP),ajaxTransport:bV(bQ),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?bZ(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=b$(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bD.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bC,"").replace(bH,bS[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bL),d.crossDomain==null&&(r=bN.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bS[1]&&r[2]==bS[2]&&(r[3]||(r[1]==="http:"?80:443))==(bS[3]||(bS[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bW(bP,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bG.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bI.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bM,"$1_="+x);d.url=y+(y===d.url?(bI.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bT+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bW(bQ,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&").replace(bz,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ca.test(b.url)||e&&ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ca,l),b.url===j&&(e&&(k=k.replace(ca,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cb&&delete cd[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&&(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cq("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cr(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cq("hide",3),a,b,c);for(var d=0,e=this.length;d<e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&&!f._data(this[d],"olddisplay")&&f._data(this[d],"olddisplay",g)}for(d=0;d<e;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cq("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(f.support.inlineBlockNeedsLayout?(j=cr(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&&(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&&(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&&this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cq("show",1),slideUp:cq("hide",1),slideToggle:cq("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function g(a){return d.step(a)}var d=this,e=f.fx;this.startTime=cn||co(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,g.elem=this.elem,g()&&f.timers.push(g)&&!cl&&(cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||co(),c=!0,d=this.elem,e=this.options,g,h;if(a||b>=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&&(c=!1);if(c){e.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&&f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cs=/^t(?:able|d|h)$/i,ct=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cu(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.offset.supportsFixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&&(!f.offset.doesAddBorderForTableAndCells||!cs.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=ct.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!ct.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cu(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cu(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&&a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&&b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNaN(j)?i:j}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);    }
})(window);var __PLTNUMBERS_TOP__;typeof exports!=="undefined"?__PLTNUMBERS_TOP__=exports:(this.jsnums||(this.jsnums={}),__PLTNUMBERS_TOP__=this.jsnums);
(function(){function f(a,b,c){a!=null&&("number"==typeof a?this.fromNumber(a,b,c):b==null&&"string"!=typeof a?this.fromString(a,256):this.fromString(a,b))}function p(){return new f(null)}function hb(a,b,c,e,j,d){for(;--d>=0;){var f=b*this[a++]+c[e]+j,j=Math.floor(f/67108864);c[e++]=f&67108863}return j}function ib(a,b,c,e,j,d){var f=b&32767;for(b>>=15;--d>=0;){var g=this[a]&32767,h=this[a++]>>15,i=b*g+h*f,g=f*g+((i&32767)<<15)+c[e]+(j&1073741823),j=(g>>>30)+(i>>>15)+b*h+(j>>>30);c[e++]=g&1073741823}return j}
function jb(a,b,c,e,j,d){var f=b&16383;for(b>>=14;--d>=0;){var g=this[a]&16383,h=this[a++]>>14,i=b*g+h*f,g=f*g+((i&16383)<<14)+c[e]+j,j=(g>>28)+(i>>14)+b*h;c[e++]=g&268435455}return j}function xa(a,b){var c=ja[a.charCodeAt(b)];return c==null?-1:c}function N(a){var b=p();b.fromInt(a);return b}function Y(a){var b=this.s-a.s;if(b!=0)return b;var c=this.t,b=this.s<0?a.t-c:c-a.t;if(b!=0)return b;for(;--c>=0;)if((b=this[c]-a[c])!=0)return b;return 0}function ka(a){var b=1,c;if((c=a>>>16)!=0)a=c,b+=16;if((c=
a>>8)!=0)a=c,b+=8;if((c=a>>4)!=0)a=c,b+=4;if((c=a>>2)!=0)a=c,b+=2;a>>1!=0&&(b+=1);return b}function ya(a){var b=p();this.abs().divRemTo(a,null,b);this.s<0&&b.compareTo(f.ZERO)>0&&a.subTo(b,b);return b}function P(a){this.m=a}function Q(a){this.m=a;this.mp=a.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<a.DB-15)-1;this.mt2=2*a.t}function Z(a){return this.compareTo(a)==0}function kb(a,b){return a&b}function ua(a,b){return a|b}function za(a,b){return a^b}function Aa(a,b){return a&
~b}function Ba(a){var b=p();this.addTo(a,b);return b}function Ca(a){var b=p();this.subTo(a,b);return b}function Da(a){var b=p();this.multiplyTo(a,b);return b}function Ea(a){var b=p();this.divRemTo(a,b,null);return b}function Fa(a){var b=p();this.divRemTo(a,null,b);return b}function Ga(a){var b=p(),c=p();this.divRemTo(a,b,c);return[b,c]}function $(){}function Ha(a){return a}function Ia(a){return this.exp(a,new $)}function V(a){this.r2=p();this.q3=p();f.ONE.dlShiftTo(2*a.t,this.r2);this.mu=this.r2.divide(a);
this.m=a}function Ja(a){var b=this.s<0?this.negate():this.clone(),a=a.s<0?a.negate():a.clone();if(b.compareTo(a)<0)var c=b,b=a,a=c;var c=b.getLowestSetBit(),e=a.getLowestSetBit();if(e<0)return b;c<e&&(e=c);e>0&&(b.rShiftTo(e,b),a.rShiftTo(e,a));for(;b.signum()>0;)(c=b.getLowestSetBit())>0&&b.rShiftTo(c,b),(c=a.getLowestSetBit())>0&&a.rShiftTo(c,a),b.compareTo(a)>=0?(b.subTo(a,b),b.rShiftTo(1,b)):(a.subTo(b,a),a.rShiftTo(1,a));e>0&&a.lShiftTo(e,a);return a}var h=__PLTNUMBERS_TOP__,H=function(a,b,c){c=
c||{};return function(e,j){if(c.isXSpecialCase&&c.isXSpecialCase(e))return c.onXSpecialCase(e,j);if(c.isYSpecialCase&&c.isYSpecialCase(j))return c.onYSpecialCase(e,j);if(typeof e==="number"&&typeof j==="number")return a(e,j);typeof e==="number"&&(e=Ka(e,j));typeof j==="number"&&(j=Ka(j,e));e.level<j.level&&(e=e.liftTo(j));j.level<e.level&&(j=j.liftTo(e));return b(e,j)}},Na=function(a){var b=a.match(La);return b?(a=b[1].match(/^([^.]*)(.*)$/),b=Number(b[2]),a[2].length===0?a[1]+Ma(b):b>=a[2].length-
1?a[1]+a[2].substring(1)+Ma(b-(a[2].length-1)):a[1]+a[2].substring(1,1+b)):a},Ma=function(a){var b=[];b.length=a;for(var c=0;c<a;c++)b[c]="0";return b.join("")},Ka=function(a,b){switch(b.level){case 0:return v(a);case 1:return new i(a,1);case 2:return new d(a);case 3:return new g(a,0);default:l("IMPOSSIBLE: cannot lift fixnum integer to "+b.toString(),a,b)}},l=function(a,b,c){h.onThrowRuntimeError(a,b,c)},R=function(a){return typeof a==="number"||a instanceof i||a instanceof d||a instanceof g||a instanceof
f},va=function(a){return typeof a==="number"||R(a)&&a.isRational()},E=function(a){return typeof a==="number"||R(a)&&a.isReal()},W=function(a){return typeof a==="number"||R(a)&&a.isExact()},aa=function(a){return typeof a==="number"?!1:R(a)&&a.isInexact()},t=function(a){return typeof a==="number"||R(a)&&a.isInteger()},O=function(a){return typeof a==="number"||R(a)&&a.isInteger()&&a.isExact()},I=function(a){return typeof a==="number"?a:a.toFixnum()},S=function(a){return typeof a==="number"?a:a.toExact()},
ba=function(a){return typeof a==="number"?d.makeInstance(a):a.toInexact()},m=H(function(a,b){var c=a+b;return K(c)?v(a).add(v(b)):c},function(a,b){return a.add(b)},{isXSpecialCase:function(a){return O(a)&&r(a)},onXSpecialCase:function(a,b){return b},isYSpecialCase:function(a){return O(a)&&r(a)},onYSpecialCase:function(a){return a}}),w=H(function(a,b){var c=a-b;return K(c)?v(a).subtract(v(b)):c},function(a,b){return a.subtract(b)},{isXSpecialCase:function(a){return O(a)&&r(a)},onXSpecialCase:function(a,
b){return x(b)},isYSpecialCase:function(a){return O(a)&&r(a)},onYSpecialCase:function(a){return a}}),k=H(function(a,b){var c=a*b;return K(c)?v(a).multiply(v(b)):c},function(a,b){return a.multiply(b)},{isXSpecialCase:function(a){return O(a)&&(r(a)||T(a)||la(a))},onXSpecialCase:function(a,b){if(r(a))return 0;if(T(a))return b;if(la(a))return x(b)},isYSpecialCase:function(a){return O(a)&&(r(a)||T(a)||la(a))},onYSpecialCase:function(a,b){if(r(b))return 0;if(T(b))return a;if(la(b))return x(a)}}),o=H(function(a,
b){r(b)&&l("/: division by zero",a,b);var c=a/b;return K(c)?v(a).divide(v(b)):Math.floor(c)!==c?i.makeInstance(a,b):c},function(a,b){return a.divide(b)},{isXSpecialCase:function(a){return q(a,0)},onXSpecialCase:function(a,b){q(b,0)&&l("/: division by zero",a,b);return 0},isYSpecialCase:function(a){return q(a,0)},onYSpecialCase:function(a,b){l("/: division by zero",a,b)}}),s=H(function(a,b){return a===b},function(a,b){return a.equals(b)}),q=function(a,b){if(a===b)return!0;if(typeof a==="number"&&typeof b===
"number")return a===b;if(a===L||b===L)return a===b;if(a instanceof g||b instanceof g)return q(M(a),M(b))&&q(ca(a),ca(b));var c=W(a),e=W(b);return(c&&e||!c&&!e)&&s(a,b)},ma=H(function(a,b){return a>=b},function(a,b){(!E(a)||!E(b))&&l(">=: couldn't be applied to complex number",a,b);return a.greaterThanOrEqual(b)}),da=H(function(a,b){return a<=b},function(a,b){(!E(a)||!E(b))&&l("<=: couldn't be applied to complex number",a,b);return a.lessThanOrEqual(b)}),U=H(function(a,b){return a>b},function(a,b){(!E(a)||
!E(b))&&l(">: couldn't be applied to complex number",a,b);return a.greaterThan(b)}),J=H(function(a,b){return a<b},function(a,b){(!E(a)||!E(b))&&l("<: couldn't be applied to complex number",a,b);return a.lessThan(b)}),lb=function(){var a=H(function(a,c){var e=Math.pow(a,c);return K(e)?v(a).expt(v(c)):e},function(a,c){return s(c,0)?m(c,1):a.expt(c)});return function(b,c){return s(c,0)?m(c,1):E(c)&&J(c,0)?a(o(1,b),x(c)):a(b,c)}}(),F=function(a){return q(a,0)?1:typeof a==="number"?d.makeInstance(Math.exp(a)):
a.exp()},Pa=function(a,b){t(a)||l("modulo: the first argument "+a+" is not an integer.",a,b);t(b)||l("modulo: the second argument "+b+" is not an integer.",a,b);var c;if(typeof a==="number")return c=a%b,b<0?c<=0?c:c+b:c<0?c+b:c;c=Oa(z(a),z(b));return J(b,0)?da(c,0)?c:m(c,b):J(c,0)?m(c,b):c},ea=function(a){return typeof a==="number"?a:a.numerator()},Qa=function(a){return typeof a==="number"?1:a.denominator()},D=function(a){return typeof a==="number"?a>=0?(a=Math.sqrt(a),Math.floor(a)===a?a:d.makeInstance(a)):
g.makeInstance(0,D(-a)):a.sqrt()},A=function(a){return typeof a==="number"?Math.abs(a):a.abs()},z=function(a){return typeof a==="number"?a:a.floor()},Ra=function(a){return typeof a==="number"?a:a.ceiling()},Sa=function(a){return typeof a==="number"?a:a.conjugate()},na=function(a){return q(a,1)?0:typeof a==="number"?d.makeInstance(Math.log(a)):a.log()},Ta=function(a){return typeof a==="number"?a>0?0:d.pi:a.angle()},Ua=function(a){return q(a,0)?0:typeof a==="number"?d.makeInstance(Math.tan(a)):a.tan()},
wa=function(a){return q(a,0)?0:typeof a==="number"?d.makeInstance(Math.atan(a)):a.atan()},oa=function(a){return q(a,0)?1:typeof a==="number"?d.makeInstance(Math.cos(a)):a.cos()},pa=function(a){return q(a,0)?0:typeof a==="number"?d.makeInstance(Math.sin(a)):a.sin()},Va=function(a){return q(a,1)?0:typeof a==="number"?d.makeInstance(Math.acos(a)):a.acos()},Wa=function(a){return q(a,0)?0:typeof a==="number"?d.makeInstance(Math.asin(a)):a.asin()},ca=function(a){return typeof a==="number"?0:a.imaginaryPart()},
M=function(a){return typeof a==="number"?a:a.realPart()},Xa=function(a){return typeof a==="number"?a:a.round()},X=function(a){return k(a,a)},Ya=function(a){t(a)||l("integer-sqrt: the argument "+a.toString()+" is not an integer.",a);return typeof a==="number"?a<0?g.makeInstance(0,Math.floor(Math.sqrt(-a))):Math.floor(Math.sqrt(a)):a.integerSqrt()},qa=function(a,b){t(a)||l("quotient: the first argument "+a.toString()+" is not an integer.",a);t(b)||l("quotient: the second argument "+b.toString()+" is not an integer.",
b);return fa(a,b)},ra=function(a,b){t(a)||l("remainder: the first argument "+a.toString()+" is not an integer.",a);t(b)||l("remainder: the second argument "+b.toString()+" is not an integer.",b);return mb(a,b)},K=function(a){return a<-9E15||9E15<a},x=function(a){return typeof a==="number"?-a:a.negate()},Za=function(a,b){for(var c=1;;){if(r(b))return c;s(Pa(b,2),0)?(a=k(a,a),b=o(b,2)):(c=k(c,a),b=w(b,1))}},n=function(a,b,c){c=c||{};return function(e,j){e instanceof i?e=ea(e):e instanceof g&&(e=M(e));
j instanceof i?j=ea(j):j instanceof g&&(j=M(j));if(typeof e==="number"&&typeof j==="number"){var f=a(e,j);if(!K(f)||c.ignoreOverflow)return f}if(e instanceof d||j instanceof d)return c.doNotCoerseToFloating?a(I(e),I(j)):d.makeInstance(a(I(e),I(j)));typeof e==="number"&&(e=v(e));typeof j==="number"&&(j=v(j));return b(e,j)}},y=function(a,b,c){c=c||{};return function(e){e instanceof i?e=ea(e):e instanceof g&&(e=M(e));if(typeof e==="number"){var j=a(e);if(!K(j)||c.ignoreOverflow)return j}if(e instanceof
d)return a(I(e));typeof e==="number"&&(e=v(e));return b(e)}},Oa=n(function(a,b){return a%b},function(a,b){return ya.call(a,b)}),sa=n(function(a,b){for(var c;b!==0;)c=a,a=b,b=c%b;return a},function(a,b){return Ja.call(a,b)}),r=y(function(a){return a===0},function(a){return Z.call(a,f.ZERO)}),T=y(function(a){return a===1},function(a){return Z.call(a,f.ONE)}),la=y(function(a){return a===-1},function(a){return Z.call(a,f.NEGATIVE_ONE)}),nb=n(function(a,b){return a+b},function(a,b){return Ba.call(a,b)}),
ob=n(function(a,b){return a-b},function(a,b){return Ca.call(a,b)}),u=n(function(a,b){return a*b},function(a,b){return Da.call(a,b)}),fa=n(function(a,b){return(a-a%b)/b},function(a,b){return Ea.call(a,b)}),mb=n(function(a,b){return a%b},function(a,b){return Fa.call(a,b)}),B=n(function(a,b){return a/b},function(a,b){return I(a)/I(b)},{ignoreOverflow:!0,doNotCoerseToFloating:!0}),$a=n(function(a,b){return a===b},function(a,b){return Z.call(a,b)},{doNotCoerseToFloating:!0}),ab=n(function(a,b){return a>
b},function(a,b){return Y.call(a,b)>0},{doNotCoerseToFloating:!0}),ta=n(function(a,b){return a<b},function(a,b){return Y.call(a,b)<0},{doNotCoerseToFloating:!0}),bb=n(function(a,b){return a>=b},function(a,b){return Y.call(a,b)>=0},{doNotCoerseToFloating:!0}),pb=n(function(a,b){return a<=b},function(a,b){return Y.call(a,b)<=0},{doNotCoerseToFloating:!0}),i=function(a,b){this.n=a;this.d=b};i.prototype.toString=function(){return T(this.d)?this.n.toString()+"":this.n.toString()+"/"+this.d.toString()};
i.prototype.level=1;i.prototype.liftTo=function(a){return a.level===2?new d(B(this.n,this.d)):a.level===3?new g(this,0):l("invalid level of Number",this,a)};i.prototype.isFinite=function(){return!0};i.prototype.equals=function(a){return a instanceof i&&$a(this.n,a.n)&&$a(this.d,a.d)};i.prototype.isInteger=function(){return T(this.d)};i.prototype.isRational=function(){return!0};i.prototype.isReal=function(){return!0};i.prototype.add=function(a){return i.makeInstance(nb(u(this.n,a.d),u(this.d,a.n)),
u(this.d,a.d))};i.prototype.subtract=function(a){return i.makeInstance(ob(u(this.n,a.d),u(this.d,a.n)),u(this.d,a.d))};i.prototype.negate=function(){return i.makeInstance(-this.n,this.d)};i.prototype.multiply=function(a){return i.makeInstance(u(this.n,a.n),u(this.d,a.d))};i.prototype.divide=function(a){(r(this.d)||r(a.n))&&l("/: division by zero",this,a);return i.makeInstance(u(this.n,a.d),u(this.d,a.n))};i.prototype.toExact=function(){return this};i.prototype.toInexact=function(){return d.makeInstance(this.toFixnum())};
i.prototype.isExact=function(){return!0};i.prototype.isInexact=function(){return!1};i.prototype.toFixnum=function(){return B(this.n,this.d)};i.prototype.numerator=function(){return this.n};i.prototype.denominator=function(){return this.d};i.prototype.greaterThan=function(a){return ab(u(this.n,a.d),u(this.d,a.n))};i.prototype.greaterThanOrEqual=function(a){return bb(u(this.n,a.d),u(this.d,a.n))};i.prototype.lessThan=function(a){return ta(u(this.n,a.d),u(this.d,a.n))};i.prototype.lessThanOrEqual=function(a){return pb(u(this.n,
a.d),u(this.d,a.n))};i.prototype.integerSqrt=function(){var a=D(this);return va(a)?S(z(a)):E(a)?S(z(a)):g.makeInstance(S(z(M(a))),S(z(ca(a))))};i.prototype.sqrt=function(){if(bb(this.n,0)){var a=D(this.n),b=D(this.d);return s(z(a),a)&&s(z(b),b)?i.makeInstance(a,b):d.makeInstance(B(a,b))}else return a=D(x(this.n)),b=D(this.d),s(z(a),a)&&s(z(b),b)?g.makeInstance(0,i.makeInstance(a,b)):g.makeInstance(0,d.makeInstance(B(a,b)))};i.prototype.abs=function(){return i.makeInstance(A(this.n),this.d)};i.prototype.floor=
function(){var a=fa(this.n,this.d);return ta(this.n,0)?w(a,1):a};i.prototype.ceiling=function(){var a=fa(this.n,this.d);return ta(this.n,0)?a:m(a,1)};i.prototype.conjugate=function(){return this};i.prototype.magnitude=i.prototype.abs;i.prototype.log=function(){return d.makeInstance(Math.log(this.n/this.d))};i.prototype.angle=function(){return r(this.n)?0:ab(this.n,0)?0:d.pi};i.prototype.tan=function(){return d.makeInstance(Math.tan(B(this.n,this.d)))};i.prototype.atan=function(){return d.makeInstance(Math.atan(B(this.n,
this.d)))};i.prototype.cos=function(){return d.makeInstance(Math.cos(B(this.n,this.d)))};i.prototype.sin=function(){return d.makeInstance(Math.sin(B(this.n,this.d)))};i.prototype.expt=function(a){return O(a)&&ma(a,0)?Za(this,a):d.makeInstance(Math.pow(B(this.n,this.d),B(a.n,a.d)))};i.prototype.exp=function(){return d.makeInstance(Math.exp(B(this.n,this.d)))};i.prototype.acos=function(){return d.makeInstance(Math.acos(B(this.n,this.d)))};i.prototype.asin=function(){return d.makeInstance(Math.asin(B(this.n,
this.d)))};i.prototype.imaginaryPart=function(){return 0};i.prototype.realPart=function(){return this};i.prototype.round=function(){if(s(this.d,2)){var a=B(this.n,this.d),b=Math.floor(a),a=Math.ceil(a);return r(b%2)?b:a}else return Math.round(this.n/this.d)};i.makeInstance=function(a,b){a===void 0&&l("n undefined",a,b);b===void 0&&(b=1);ta(b,0)&&(a=x(a),b=x(b));var c=sa(A(a),A(b)),a=fa(a,c),b=fa(b,c);return T(b)||r(a)?a:new i(a,b)};var d=function(a){this.n=a},ga=new d(Number.NaN),n=new d(Number.POSITIVE_INFINITY),
cb=new d(Number.NEGATIVE_INFINITY),db=new d(Number.POSITIVE_INFINITY),eb=new d(Number.NEGATIVE_INFINITY),L=new d(0),fb=new d(0);d.pi=new d(Math.PI);d.e=new d(Math.E);d.nan=ga;d.inf=n;d.neginf=cb;d.makeInstance=function(a){if(isNaN(a))return d.nan;else if(a===Number.POSITIVE_INFINITY)return d.inf;else if(a===Number.NEGATIVE_INFINITY)return d.neginf;else if(a===0)return 1/a===-Infinity?L:fb;return new d(a)};d.prototype.isExact=function(){return!1};d.prototype.isInexact=function(){return!0};d.prototype.isFinite=
function(){return isFinite(this.n)||this===db||this===eb};d.prototype.toExact=function(){(!isFinite(this.n)||isNaN(this.n))&&l("toExact: no exact representation for "+this,this);var a=this.n.toString().match(/^(.*)\.(.*)$/);return a?(parseInt(a[1]),parseInt(a[2]),a=Math.pow(10,a[2].length),i.makeInstance(Math.round(this.n*a),a)):this.n};d.prototype.toInexact=function(){return this};d.prototype.isInexact=function(){return!0};d.prototype.level=2;d.prototype.liftTo=function(a){return a.level===3?new g(this,
0):l("invalid level of Number",this,a)};d.prototype.toString=function(){if(isNaN(this.n))return"+nan.0";if(this.n===Number.POSITIVE_INFINITY)return"+inf.0";if(this.n===Number.NEGATIVE_INFINITY)return"-inf.0";if(this===L)return"-0.0";var a=this.n.toString();return a.match("\\.")?a:a+".0"};d.prototype.equals=function(a){return a instanceof d&&this.n===a.n};d.prototype.isRational=function(){return this.isFinite()};d.prototype.isInteger=function(){return this.isFinite()&&this.n===Math.floor(this.n)};
d.prototype.isReal=function(){return!0};var ha=function(a){return J(a,0)?-1:U(a,0)?1:a===L?-1:0};d.prototype.add=function(a){return this.isFinite()&&a.isFinite()?d.makeInstance(this.n+a.n):isNaN(this.n)||isNaN(a.n)?ga:this.isFinite()&&!a.isFinite()?a:!this.isFinite()&&a.isFinite()?this:ha(this)*ha(a)===1?this:ga};d.prototype.subtract=function(a){return this.isFinite()&&a.isFinite()?d.makeInstance(this.n-a.n):isNaN(this.n)||isNaN(a.n)?ga:!this.isFinite()&&!a.isFinite()?ha(this)===ha(a)?ga:this:this.isFinite()?
k(a,-1):this};d.prototype.negate=function(){return d.makeInstance(-this.n)};d.prototype.multiply=function(a){return d.makeInstance(this.n*a.n)};d.prototype.divide=function(a){return d.makeInstance(this.n/a.n)};d.prototype.toFixnum=function(){return this.n};d.prototype.numerator=function(){var a=this.n.toString().match(/^(.*)\.(.*)$/);if(a){var b=parseInt(a[2]),a=Math.pow(10,a[2].length),b=sa(a,b);return d.makeInstance(Math.round(this.n*(a/b)))}else return this};d.prototype.denominator=function(){var a=
this.n.toString().match(/^(.*)\.(.*)$/);if(a){var b=parseInt(a[2]),a=Math.pow(10,a[2].length),b=sa(a,b);return d.makeInstance(Math.round(a/b))}else return d.makeInstance(1)};d.prototype.floor=function(){return d.makeInstance(Math.floor(this.n))};d.prototype.ceiling=function(){return d.makeInstance(Math.ceil(this.n))};d.prototype.greaterThan=function(a){return this.n>a.n};d.prototype.greaterThanOrEqual=function(a){return this.n>=a.n};d.prototype.lessThan=function(a){return this.n<a.n};d.prototype.lessThanOrEqual=
function(a){return this.n<=a.n};d.prototype.integerSqrt=function(){if(this===L)return this;if(t(this))return this.n>=0?d.makeInstance(Math.floor(Math.sqrt(this.n))):g.makeInstance(fb,d.makeInstance(Math.floor(Math.sqrt(-this.n))));else l("integerSqrt: can only be applied to an integer",this)};d.prototype.sqrt=function(){return this.n<0?g.makeInstance(0,d.makeInstance(Math.sqrt(-this.n))):d.makeInstance(Math.sqrt(this.n))};d.prototype.abs=function(){return d.makeInstance(Math.abs(this.n))};d.prototype.log=
function(){return this.n<0?(new g(this,0)).log():d.makeInstance(Math.log(this.n))};d.prototype.angle=function(){return 0===this.n?0:this.n>0?0:d.pi};d.prototype.tan=function(){return d.makeInstance(Math.tan(this.n))};d.prototype.atan=function(){return d.makeInstance(Math.atan(this.n))};d.prototype.cos=function(){return d.makeInstance(Math.cos(this.n))};d.prototype.sin=function(){return d.makeInstance(Math.sin(this.n))};d.prototype.expt=function(a){return this.n===1?(a.isFinite()||isNaN(a.n),this):
d.makeInstance(Math.pow(this.n,a.n))};d.prototype.exp=function(){return d.makeInstance(Math.exp(this.n))};d.prototype.acos=function(){return d.makeInstance(Math.acos(this.n))};d.prototype.asin=function(){return d.makeInstance(Math.asin(this.n))};d.prototype.imaginaryPart=function(){return 0};d.prototype.realPart=function(){return this};d.prototype.round=function(){return isFinite(this.n)?this===L?this:Math.abs(Math.floor(this.n)-this.n)===0.5?Math.floor(this.n)%2===0?d.makeInstance(Math.floor(this.n)):
d.makeInstance(Math.ceil(this.n)):d.makeInstance(Math.round(this.n)):this};d.prototype.conjugate=function(){return this};d.prototype.magnitude=d.prototype.abs;var g=function(a,b){this.r=a;this.i=b};g.makeInstance=function(a,b){b===void 0&&(b=0);if(W(b)&&t(b)&&r(b))return a;if(aa(a)||aa(b))a=ba(a),b=ba(b);return new g(a,b)};g.prototype.toString=function(){var a=this.r.toString(),b=this.i.toString();return b[0]==="-"||b[0]==="+"?a+b+"i":a+"+"+b+"i"};g.prototype.isFinite=function(){return(typeof this.r===
"number"?isFinite(this.r):this.r.isFinite())&&(typeof this.i==="number"?isFinite(this.i):this.i.isFinite())};g.prototype.isRational=function(){return va(this.r)&&q(this.i,0)};g.prototype.isInteger=function(){return t(this.r)&&q(this.i,0)};g.prototype.toExact=function(){return g.makeInstance(S(this.r),S(this.i))};g.prototype.toInexact=function(){return g.makeInstance(ba(this.r),ba(this.i))};g.prototype.isExact=function(){return W(this.r)&&W(this.i)};g.prototype.isInexact=function(){return aa(this.r)||
aa(this.i)};g.prototype.level=3;g.prototype.liftTo=function(a){l("Don't know how to lift Complex number",this,a)};g.prototype.equals=function(a){return a instanceof g&&s(this.r,a.r)&&s(this.i,a.i)};g.prototype.greaterThan=function(a){(!this.isReal()||!a.isReal())&&l(">: expects argument of type real number",this,a);return U(this.r,a.r)};g.prototype.greaterThanOrEqual=function(a){(!this.isReal()||!a.isReal())&&l(">=: expects argument of type real number",this,a);return ma(this.r,a.r)};g.prototype.lessThan=
function(a){(!this.isReal()||!a.isReal())&&l("<: expects argument of type real number",this,a);return J(this.r,a.r)};g.prototype.lessThanOrEqual=function(a){(!this.isReal()||!a.isReal())&&l("<=: expects argument of type real number",this,a);return da(this.r,a.r)};g.prototype.abs=function(){s(this.i,0).valueOf()||l("abs: expects argument of type real number",this);return A(this.r)};g.prototype.toFixnum=function(){s(this.i,0).valueOf()||l("toFixnum: expects argument of type real number",this);return I(this.r)};
g.prototype.numerator=function(){this.isReal()||l("numerator: can only be applied to real number",this);return ea(this.n)};g.prototype.denominator=function(){this.isReal()||l("floor: can only be applied to real number",this);return Qa(this.n)};g.prototype.add=function(a){return g.makeInstance(m(this.r,a.r),m(this.i,a.i))};g.prototype.subtract=function(a){return g.makeInstance(w(this.r,a.r),w(this.i,a.i))};g.prototype.negate=function(){return g.makeInstance(x(this.r),x(this.i))};g.prototype.multiply=
function(a){if(a.isReal())return g.makeInstance(k(this.r,a.r),k(this.i,a.r));var b=w(k(this.r,a.r),k(this.i,a.i)),a=m(k(this.r,a.i),k(this.i,a.r));return g.makeInstance(b,a)};g.prototype.divide=function(a){var b,c,e,j,d;return a.isReal()?g.makeInstance(o(this.r,a.r),o(this.i,a.r)):this.isInexact()||a.isInexact()?(b=this.r,c=this.i,e=a.r,j=a.i,da(A(j),A(e))?(d=o(j,e),a=o(m(b,k(c,d)),m(e,k(j,d))),b=o(w(c,k(b,d)),m(e,k(j,d)))):(d=o(e,j),a=o(m(k(b,d),c),m(k(e,d),j)),b=o(w(k(c,d),b),m(k(e,d),j))),g.makeInstance(a,
b)):(c=Sa(a),b=k(this,c),c=M(k(a,c)),g.makeInstance(o(M(b),c),o(ca(b),c)))};g.prototype.conjugate=function(){return g.makeInstance(this.r,w(0,this.i))};g.prototype.magnitude=function(){var a=m(k(this.r,this.r),k(this.i,this.i));return D(a)};g.prototype.isReal=function(){return q(this.i,0)};g.prototype.integerSqrt=function(){if(t(this))return Ya(this.r);else l("integerSqrt: can only be applied to an integer",this)};g.prototype.sqrt=function(){if(this.isReal())return D(this.r);var a=m(this.magnitude(),
this.r),b=D(o(a,2)),a=o(this.i,D(k(a,2)));return g.makeInstance(b,a)};g.prototype.log=function(){var a=this.magnitude(),b=this.angle();return m(na(a),k(b,G))};g.prototype.angle=function(){if(this.isReal())return Ta(this.r);if(s(0,this.r)){var a=o(d.pi,2);return U(this.i,0)?a:x(a)}else return a=wa(o(A(this.i),A(this.r))),U(this.r,0)?U(this.i,0)?a:x(a):U(this.i,0)?w(d.pi,a):w(a,d.pi)};var G=g.makeInstance(0,1),gb=g.makeInstance(0,-1);g.prototype.tan=function(){return o(this.sin(),this.cos())};g.prototype.atan=
function(){return s(this,G)||s(this,gb)?cb:k(G,k(d.makeInstance(0.5),na(o(m(G,this),m(G,w(0,this))))))};g.prototype.cos=function(){if(this.isReal())return oa(this.r);var a=k(this,G),b=x(a),a=m(F(a),F(b));return o(a,2)};g.prototype.sin=function(){if(this.isReal())return pa(this.r);var a=k(this,G),b=x(a),c=g.makeInstance(0,2),a=w(F(a),F(b));return o(a,c)};g.prototype.expt=function(a){if(O(a)&&ma(a,0))return Za(this,a);a=k(a,this.log());return F(a)};g.prototype.exp=function(){var a=F(this.r),b=oa(this.i),
c=pa(this.i);return k(a,m(b,k(c,G)))};g.prototype.acos=function(){if(this.isReal())return Va(this.r);var a=o(d.pi,2),b=k(this,G),c=D(w(1,X(this))),b=na(m(b,c)),b=k(b,G);return m(a,b)};g.prototype.asin=function(){if(this.isReal())return Wa(this.r);var a=w(1,X(this)),a=D(a);return k(2,wa(o(this,m(1,a))))};g.prototype.ceiling=function(){this.isReal()||l("ceiling: can only be applied to real number",this);return Ra(this.r)};g.prototype.floor=function(){this.isReal()||l("floor: can only be applied to real number",
this);return z(this.r)};g.prototype.imaginaryPart=function(){return this.i};g.prototype.realPart=function(){return this.r};g.prototype.round=function(){this.isReal()||l("round: can only be applied to real number",this);return Xa(this.r)};var qb=/^([+-]?\d+)\/(\d+)$/,rb=/^([+-]?[\d\w/\.]*)([+-])([\d\w/\.]*)i$/,sb=/^[+-]?\d+$/,tb=/^([+-]?\d*)\.(\d*)$/,La=/^([+-]?\d*\.?\d*)[Ee](\+?\d+)$/,ia=function(a){var b=a.match(qb);if(b)return i.makeInstance(ia(b[1]),ia(b[2]));if(b=a.match(rb))return g.makeInstance(ia(b[1]||
"0"),ia(b[2]+(b[3]||"1")));if(a==="+nan.0"||a==="-nan.0")return d.nan;if(a==="+inf.0")return d.inf;if(a==="-inf.0")return d.neginf;if(a==="-0.0")return L;return a.match(tb)||a.match(La)?d.makeInstance(Number(a)):a.match(sb)?(b=Number(a),K(b)?v(a):b):!1};typeof navigator!=="undefined"&&navigator.appName=="Microsoft Internet Explorer"?(f.prototype.am=ib,n=30):typeof navigator!=="undefined"&&navigator.appName!="Netscape"?(f.prototype.am=hb,n=26):(f.prototype.am=jb,n=28);f.prototype.DB=n;f.prototype.DM=
(1<<n)-1;f.prototype.DV=1<<n;f.prototype.FV=Math.pow(2,52);f.prototype.F1=52-n;f.prototype.F2=2*n-52;for(var ja=[],n="0".charCodeAt(0),y=0;y<=9;++y)ja[n++]=y;n="a".charCodeAt(0);for(y=10;y<36;++y)ja[n++]=y;n="A".charCodeAt(0);for(y=10;y<36;++y)ja[n++]=y;P.prototype.convert=function(a){return a.s<0||a.compareTo(this.m)>=0?a.mod(this.m):a};P.prototype.revert=function(a){return a};P.prototype.reduce=function(a){a.divRemTo(this.m,null,a)};P.prototype.mulTo=function(a,b,c){a.multiplyTo(b,c);this.reduce(c)};
P.prototype.sqrTo=function(a,b){a.squareTo(b);this.reduce(b)};Q.prototype.convert=function(a){var b=p();a.abs().dlShiftTo(this.m.t,b);b.divRemTo(this.m,null,b);a.s<0&&b.compareTo(f.ZERO)>0&&this.m.subTo(b,b);return b};Q.prototype.revert=function(a){var b=p();a.copyTo(b);this.reduce(b);return b};Q.prototype.reduce=function(a){for(;a.t<=this.mt2;)a[a.t++]=0;for(var b=0;b<this.m.t;++b){var c=a[b]&32767,e=c*this.mpl+((c*this.mph+(a[b]>>15)*this.mpl&this.um)<<15)&a.DM,c=b+this.m.t;for(a[c]+=this.m.am(0,
e,a,b,0,this.m.t);a[c]>=a.DV;)a[c]-=a.DV,a[++c]++}a.clamp();a.drShiftTo(this.m.t,a);a.compareTo(this.m)>=0&&a.subTo(this.m,a)};Q.prototype.mulTo=function(a,b,c){a.multiplyTo(b,c);this.reduce(c)};Q.prototype.sqrTo=function(a,b){a.squareTo(b);this.reduce(b)};f.prototype.copyTo=function(a){for(var b=this.t-1;b>=0;--b)a[b]=this[b];a.t=this.t;a.s=this.s};f.prototype.fromInt=function(a){this.t=1;this.s=a<0?-1:0;a>0?this[0]=a:a<-1?this[0]=a+DV:this.t=0};f.prototype.fromString=function(a,b){var c;if(b==16)c=
4;else if(b==8)c=3;else if(b==256)c=8;else if(b==2)c=1;else if(b==32)c=5;else if(b==4)c=2;else{this.fromRadix(a,b);return}this.s=this.t=0;for(var e=a.length,j=!1,d=0;--e>=0;){var g=c==8?a[e]&255:xa(a,e);g<0?a.charAt(e)=="-"&&(j=!0):(j=!1,d==0?this[this.t++]=g:d+c>this.DB?(this[this.t-1]|=(g&(1<<this.DB-d)-1)<<d,this[this.t++]=g>>this.DB-d):this[this.t-1]|=g<<d,d+=c,d>=this.DB&&(d-=this.DB))}if(c==8&&(a[0]&128)!=0)this.s=-1,d>0&&(this[this.t-1]|=(1<<this.DB-d)-1<<d);this.clamp();j&&f.ZERO.subTo(this,
this)};f.prototype.clamp=function(){for(var a=this.s&this.DM;this.t>0&&this[this.t-1]==a;)--this.t};f.prototype.dlShiftTo=function(a,b){var c;for(c=this.t-1;c>=0;--c)b[c+a]=this[c];for(c=a-1;c>=0;--c)b[c]=0;b.t=this.t+a;b.s=this.s};f.prototype.drShiftTo=function(a,b){for(var c=a;c<this.t;++c)b[c-a]=this[c];b.t=Math.max(this.t-a,0);b.s=this.s};f.prototype.lShiftTo=function(a,b){var c=a%this.DB,e=this.DB-c,d=(1<<e)-1,f=Math.floor(a/this.DB),g=this.s<<c&this.DM,h;for(h=this.t-1;h>=0;--h)b[h+f+1]=this[h]>>
e|g,g=(this[h]&d)<<c;for(h=f-1;h>=0;--h)b[h]=0;b[f]=g;b.t=this.t+f+1;b.s=this.s;b.clamp()};f.prototype.rShiftTo=function(a,b){b.s=this.s;var c=Math.floor(a/this.DB);if(c>=this.t)b.t=0;else{var e=a%this.DB,d=this.DB-e,f=(1<<e)-1;b[0]=this[c]>>e;for(var g=c+1;g<this.t;++g)b[g-c-1]|=(this[g]&f)<<d,b[g-c]=this[g]>>e;e>0&&(b[this.t-c-1]|=(this.s&f)<<d);b.t=this.t-c;b.clamp()}};f.prototype.subTo=function(a,b){for(var c=0,e=0,d=Math.min(a.t,this.t);c<d;)e+=this[c]-a[c],b[c++]=e&this.DM,e>>=this.DB;if(a.t<
this.t){for(e-=a.s;c<this.t;)e+=this[c],b[c++]=e&this.DM,e>>=this.DB;e+=this.s}else{for(e+=this.s;c<a.t;)e-=a[c],b[c++]=e&this.DM,e>>=this.DB;e-=a.s}b.s=e<0?-1:0;e<-1?b[c++]=this.DV+e:e>0&&(b[c++]=e);b.t=c;b.clamp()};f.prototype.multiplyTo=function(a,b){var c=this.abs(),e=a.abs(),d=c.t;for(b.t=d+e.t;--d>=0;)b[d]=0;for(d=0;d<e.t;++d)b[d+c.t]=c.am(0,e[d],b,d,0,c.t);b.s=0;b.clamp();this.s!=a.s&&f.ZERO.subTo(b,b)};f.prototype.squareTo=function(a){for(var b=this.abs(),c=a.t=2*b.t;--c>=0;)a[c]=0;for(c=
0;c<b.t-1;++c){var e=b.am(c,b[c],a,2*c,0,1);if((a[c+b.t]+=b.am(c+1,2*b[c],a,2*c+1,e,b.t-c-1))>=b.DV)a[c+b.t]-=b.DV,a[c+b.t+1]=1}a.t>0&&(a[a.t-1]+=b.am(c,b[c],a,2*c,0,1));a.s=0;a.clamp()};f.prototype.divRemTo=function(a,b,c){var e=a.abs();if(!(e.t<=0)){var d=this.abs();if(d.t<e.t)b!=null&&b.fromInt(0),c!=null&&this.copyTo(c);else{c==null&&(c=p());var g=p(),h=this.s,a=a.s,i=this.DB-ka(e[e.t-1]);i>0?(e.lShiftTo(i,g),d.lShiftTo(i,c)):(e.copyTo(g),d.copyTo(c));e=g.t;d=g[e-1];if(d!=0){var l=d*(1<<this.F1)+
(e>1?g[e-2]>>this.F2:0),k=this.FV/l,l=(1<<this.F1)/l,n=1<<this.F2,m=c.t,o=m-e,q=b==null?p():b;g.dlShiftTo(o,q);c.compareTo(q)>=0&&(c[c.t++]=1,c.subTo(q,c));f.ONE.dlShiftTo(e,q);for(q.subTo(g,g);g.t<e;)g[g.t++]=0;for(;--o>=0;){var r=c[--m]==d?this.DM:Math.floor(c[m]*k+(c[m-1]+n)*l);if((c[m]+=g.am(0,r,c,o,0,e))<r){g.dlShiftTo(o,q);for(c.subTo(q,c);c[m]<--r;)c.subTo(q,c)}}b!=null&&(c.drShiftTo(e,b),h!=a&&f.ZERO.subTo(b,b));c.t=e;c.clamp();i>0&&c.rShiftTo(i,c);h<0&&f.ZERO.subTo(c,c)}}}};f.prototype.invDigit=
function(){if(this.t<1)return 0;var a=this[0];if((a&1)==0)return 0;var b=a&3,b=b*(2-(a&15)*b)&15,b=b*(2-(a&255)*b)&255,b=b*(2-((a&65535)*b&65535))&65535,b=b*(2-a*b%this.DV)%this.DV;return b>0?this.DV-b:-b};f.prototype.isEven=function(){return(this.t>0?this[0]&1:this.s)==0};f.prototype.exp=function(a,b){if(a>4294967295||a<1)return f.ONE;var c=p(),e=p(),d=b.convert(this),g=ka(a)-1;for(d.copyTo(c);--g>=0;)if(b.sqrTo(c,e),(a&1<<g)>0)b.mulTo(e,d,c);else var h=c,c=e,e=h;return b.revert(c)};f.prototype.toString=
function(a){if(this.s<0)return"-"+this.negate().toString(a);if(a==16)a=4;else if(a==8)a=3;else if(a==2)a=1;else if(a==32)a=5;else if(a==4)a=2;else return this.toRadix(a);var b=(1<<a)-1,c,e=!1,d=[],f=this.t,g=this.DB-f*this.DB%a;if(f-- >0){if(g<this.DB&&(c=this[f]>>g)>0)e=!0,d.push("0123456789abcdefghijklmnopqrstuvwxyz".charAt(c));for(;f>=0;)g<a?(c=(this[f]&(1<<g)-1)<<a-g,c|=this[--f]>>(g+=this.DB-a)):(c=this[f]>>(g-=a)&b,g<=0&&(g+=this.DB,--f)),c>0&&(e=!0),e&&d.push("0123456789abcdefghijklmnopqrstuvwxyz".charAt(c))}return e?
d.join(""):"0"};f.prototype.negate=function(){var a=p();f.ZERO.subTo(this,a);return a};f.prototype.abs=function(){return this.s<0?this.negate():this};f.prototype.compareTo=Y;f.prototype.bitLength=function(){return this.t<=0?0:this.DB*(this.t-1)+ka(this[this.t-1]^this.s&this.DM)};f.prototype.mod=ya;f.prototype.modPowInt=function(a,b){var c;c=a<256||b.isEven()?new P(b):new Q(b);return this.exp(a,c)};f.ZERO=N(0);f.ONE=N(1);$.prototype.convert=Ha;$.prototype.revert=Ha;$.prototype.mulTo=function(a,b,c){a.multiplyTo(b,
c)};$.prototype.sqrTo=function(a,b){a.squareTo(b)};V.prototype.convert=function(a){if(a.s<0||a.t>2*this.m.t)return a.mod(this.m);else if(a.compareTo(this.m)<0)return a;else{var b=p();a.copyTo(b);this.reduce(b);return b}};V.prototype.revert=function(a){return a};V.prototype.reduce=function(a){a.drShiftTo(this.m.t-1,this.r2);if(a.t>this.m.t+1)a.t=this.m.t+1,a.clamp();this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);for(this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);a.compareTo(this.r2)<0;)a.dAddOffset(1,
this.m.t+1);for(a.subTo(this.r2,a);a.compareTo(this.m)>=0;)a.subTo(this.m,a)};V.prototype.mulTo=function(a,b,c){a.multiplyTo(b,c);this.reduce(c)};V.prototype.sqrTo=function(a,b){a.squareTo(b);this.reduce(b)};var C=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,
409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],ub=67108864/C[C.length-1];f.prototype.chunkSize=function(a){return Math.floor(Math.LN2*this.DB/Math.log(a))};f.prototype.toRadix=function(a){a==null&&(a=10);if(this.signum()==0||a<2||a>36)return"0";var b=this.chunkSize(a),b=Math.pow(a,b),c=N(b),e=p(),d=p(),f="";for(this.divRemTo(c,e,d);e.signum()>0;)f=(b+d.intValue()).toString(a).substr(1)+f,e.divRemTo(c,e,d);return d.intValue().toString(a)+f};f.prototype.fromRadix=function(a,
b){this.fromInt(0);b==null&&(b=10);for(var c=this.chunkSize(b),e=Math.pow(b,c),d=!1,g=0,h=0,i=0;i<a.length;++i){var l=xa(a,i);l<0?a.charAt(i)=="-"&&this.signum()==0&&(d=!0):(h=b*h+l,++g>=c&&(this.dMultiply(e),this.dAddOffset(h,0),h=g=0))}g>0&&(this.dMultiply(Math.pow(b,g)),this.dAddOffset(h,0));d&&f.ZERO.subTo(this,this)};f.prototype.fromNumber=function(a,b,c){if("number"==typeof b)if(a<2)this.fromInt(1);else{this.fromNumber(a,c);this.testBit(a-1)||this.bitwiseTo(f.ONE.shiftLeft(a-1),ua,this);for(this.isEven()&&
this.dAddOffset(1,0);!this.isProbablePrime(b);)this.dAddOffset(2,0),this.bitLength()>a&&this.subTo(f.ONE.shiftLeft(a-1),this)}else{var c=[],e=a&7;c.length=(a>>3)+1;b.nextBytes(c);e>0?c[0]&=(1<<e)-1:c[0]=0;this.fromString(c,256)}};f.prototype.bitwiseTo=function(a,b,c){var e,d,f=Math.min(a.t,this.t);for(e=0;e<f;++e)c[e]=b(this[e],a[e]);if(a.t<this.t){d=a.s&this.DM;for(e=f;e<this.t;++e)c[e]=b(this[e],d);c.t=this.t}else{d=this.s&this.DM;for(e=f;e<a.t;++e)c[e]=b(d,a[e]);c.t=a.t}c.s=b(this.s,a.s);c.clamp()};
f.prototype.changeBit=function(a,b){var c=f.ONE.shiftLeft(a);this.bitwiseTo(c,b,c);return c};f.prototype.addTo=function(a,b){for(var c=0,e=0,d=Math.min(a.t,this.t);c<d;)e+=this[c]+a[c],b[c++]=e&this.DM,e>>=this.DB;if(a.t<this.t){for(e+=a.s;c<this.t;)e+=this[c],b[c++]=e&this.DM,e>>=this.DB;e+=this.s}else{for(e+=this.s;c<a.t;)e+=a[c],b[c++]=e&this.DM,e>>=this.DB;e+=a.s}b.s=e<0?-1:0;e>0?b[c++]=e:e<-1&&(b[c++]=this.DV+e);b.t=c;b.clamp()};f.prototype.dMultiply=function(a){this[this.t]=this.am(0,a-1,this,
0,0,this.t);++this.t;this.clamp()};f.prototype.dAddOffset=function(a,b){if(a!=0){for(;this.t<=b;)this[this.t++]=0;for(this[b]+=a;this[b]>=this.DV;)this[b]-=this.DV,++b>=this.t&&(this[this.t++]=0),++this[b]}};f.prototype.multiplyLowerTo=function(a,b,c){var e=Math.min(this.t+a.t,b);c.s=0;for(c.t=e;e>0;)c[--e]=0;var d;for(d=c.t-this.t;e<d;++e)c[e+this.t]=this.am(0,a[e],c,e,0,this.t);for(d=Math.min(a.t,b);e<d;++e)this.am(0,a[e],c,e,0,b-e);c.clamp()};f.prototype.multiplyUpperTo=function(a,b,c){--b;var e=
c.t=this.t+a.t-b;for(c.s=0;--e>=0;)c[e]=0;for(e=Math.max(b-this.t,0);e<a.t;++e)c[this.t+e-b]=this.am(b-e,a[e],c,0,0,this.t+e-b);c.clamp();c.drShiftTo(1,c)};f.prototype.modInt=function(a){if(a<=0)return 0;var b=this.DV%a,c=this.s<0?a-1:0;if(this.t>0)if(b==0)c=this[0]%a;else for(var e=this.t-1;e>=0;--e)c=(b*c+this[e])%a;return c};f.prototype.millerRabin=function(a){var b=this.subtract(f.ONE),c=b.getLowestSetBit();if(c<=0)return!1;var e=b.shiftRight(c),a=a+1>>1;if(a>C.length)a=C.length;for(var d=p(),
g=0;g<a;++g){d.fromInt(C[g]);var h=d.modPow(e,this);if(h.compareTo(f.ONE)!=0&&h.compareTo(b)!=0){for(var i=1;i++<c&&h.compareTo(b)!=0;)if(h=h.modPowInt(2,this),h.compareTo(f.ONE)==0)return!1;if(h.compareTo(b)!=0)return!1}}return!0};f.prototype.clone=function(){var a=p();this.copyTo(a);return a};f.prototype.intValue=function(){if(this.s<0)if(this.t==1)return this[0]-this.DV;else{if(this.t==0)return-1}else if(this.t==1)return this[0];else if(this.t==0)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|
this[0]};f.prototype.byteValue=function(){return this.t==0?this.s:this[0]<<24>>24};f.prototype.shortValue=function(){return this.t==0?this.s:this[0]<<16>>16};f.prototype.signum=function(){return this.s<0?-1:this.t<=0||this.t==1&&this[0]<=0?0:1};f.prototype.toByteArray=function(){var a=this.t,b=[];b[0]=this.s;var c=this.DB-a*this.DB%8,e,d=0;if(a-- >0){if(c<this.DB&&(e=this[a]>>c)!=(this.s&this.DM)>>c)b[d++]=e|this.s<<this.DB-c;for(;a>=0;)if(c<8?(e=(this[a]&(1<<c)-1)<<8-c,e|=this[--a]>>(c+=this.DB-
8)):(e=this[a]>>(c-=8)&255,c<=0&&(c+=this.DB,--a)),(e&128)!=0&&(e|=-256),d==0&&(this.s&128)!=(e&128)&&++d,d>0||e!=this.s)b[d++]=e}return b};f.prototype.equals=Z;f.prototype.min=function(a){return this.compareTo(a)<0?this:a};f.prototype.max=function(a){return this.compareTo(a)>0?this:a};f.prototype.and=function(a){var b=p();this.bitwiseTo(a,kb,b);return b};f.prototype.or=function(a){var b=p();this.bitwiseTo(a,ua,b);return b};f.prototype.xor=function(a){var b=p();this.bitwiseTo(a,za,b);return b};f.prototype.andNot=
function(a){var b=p();this.bitwiseTo(a,Aa,b);return b};f.prototype.not=function(){for(var a=p(),b=0;b<this.t;++b)a[b]=this.DM&~this[b];a.t=this.t;a.s=~this.s;return a};f.prototype.shiftLeft=function(a){var b=p();a<0?this.rShiftTo(-a,b):this.lShiftTo(a,b);return b};f.prototype.shiftRight=function(a){var b=p();a<0?this.lShiftTo(-a,b):this.rShiftTo(a,b);return b};f.prototype.getLowestSetBit=function(){for(var a=0;a<this.t;++a)if(this[a]!=0){var b=a*this.DB;a=this[a];if(a==0)a=-1;else{var c=0;(a&65535)==
0&&(a>>=16,c+=16);(a&255)==0&&(a>>=8,c+=8);(a&15)==0&&(a>>=4,c+=4);(a&3)==0&&(a>>=2,c+=2);(a&1)==0&&++c;a=c}return b+a}return this.s<0?this.t*this.DB:-1};f.prototype.bitCount=function(){for(var a=0,b=this.s&this.DM,c=0;c<this.t;++c){for(var e=this[c]^b,d=0;e!=0;)e&=e-1,++d;a+=d}return a};f.prototype.testBit=function(a){var b=Math.floor(a/this.DB);return b>=this.t?this.s!=0:(this[b]&1<<a%this.DB)!=0};f.prototype.setBit=function(a){return this.changeBit(a,ua)};f.prototype.clearBit=function(a){return this.changeBit(a,
Aa)};f.prototype.flipBit=function(a){return this.changeBit(a,za)};f.prototype.add=Ba;f.prototype.subtract=Ca;f.prototype.multiply=Da;f.prototype.divide=Ea;f.prototype.remainder=Fa;f.prototype.divideAndRemainder=Ga;f.prototype.modPow=function(a,b){var c=a.bitLength(),e,d=N(1),f;if(c<=0)return d;else e=c<18?1:c<48?3:c<144?4:c<768?5:6;f=c<8?new P(b):b.isEven()?new V(b):new Q(b);var g=[],h=3,i=e-1,l=(1<<e)-1;g[1]=f.convert(this);if(e>1){c=p();for(f.sqrTo(g[1],c);h<=l;)g[h]=p(),f.mulTo(c,g[h-2],g[h]),
h+=2}for(var k=a.t-1,m,o=!0,n=p(),c=ka(a[k])-1;k>=0;){c>=i?m=a[k]>>c-i&l:(m=(a[k]&(1<<c+1)-1)<<i-c,k>0&&(m|=a[k-1]>>this.DB+c-i));for(h=e;(m&1)==0;)m>>=1,--h;if((c-=h)<0)c+=this.DB,--k;if(o)g[m].copyTo(d),o=!1;else{for(;h>1;)f.sqrTo(d,n),f.sqrTo(n,d),h-=2;h>0?f.sqrTo(d,n):(h=d,d=n,n=h);f.mulTo(n,g[m],d)}for(;k>=0&&(a[k]&1<<c)==0;)f.sqrTo(d,n),h=d,d=n,n=h,--c<0&&(c=this.DB-1,--k)}return f.revert(d)};f.prototype.modInverse=function(a){var b=a.isEven();if(this.isEven()&&b||a.signum()==0)return f.ZERO;
for(var c=a.clone(),e=this.clone(),d=N(1),g=N(0),h=N(0),i=N(1);c.signum()!=0;){for(;c.isEven();){c.rShiftTo(1,c);if(b){if(!d.isEven()||!g.isEven())d.addTo(this,d),g.subTo(a,g);d.rShiftTo(1,d)}else g.isEven()||g.subTo(a,g);g.rShiftTo(1,g)}for(;e.isEven();){e.rShiftTo(1,e);if(b){if(!h.isEven()||!i.isEven())h.addTo(this,h),i.subTo(a,i);h.rShiftTo(1,h)}else i.isEven()||i.subTo(a,i);i.rShiftTo(1,i)}c.compareTo(e)>=0?(c.subTo(e,c),b&&d.subTo(h,d),g.subTo(i,g)):(e.subTo(c,e),b&&h.subTo(d,h),i.subTo(g,i))}if(e.compareTo(f.ONE)!=
0)return f.ZERO;if(i.compareTo(a)>=0)return i.subtract(a);if(i.signum()<0)i.addTo(a,i);else return i;return i.signum()<0?i.add(a):i};f.prototype.pow=Ia;f.prototype.gcd=Ja;f.prototype.isProbablePrime=function(a){var b,c=this.abs();if(c.t==1&&c[0]<=C[C.length-1]){for(b=0;b<C.length;++b)if(c[0]==C[b])return!0;return!1}if(c.isEven())return!1;for(b=1;b<C.length;){for(var e=C[b],d=b+1;d<C.length&&e<ub;)e*=C[d++];for(e=c.modInt(e);b<d;)if(e%C[b++]==0)return!1}return c.millerRabin(a)};f.NEGATIVE_ONE=f.ONE.negate();
var v=function(a){typeof a==="number"&&(a+="");a=Na(a);return new f(a,10)};f.prototype.level=0;f.prototype.liftTo=function(a){if(a.level===1)return new i(this,1);return a.level===2?(a=this.toFixnum(),a===Number.POSITIVE_INFINITY?db:a===Number.NEGATIVE_INFINITY?eb:new d(a)):a.level===3?new g(this,0):l("invalid level for BigInteger lift",this,a)};f.prototype.isFinite=function(){return!0};f.prototype.isInteger=function(){return!0};f.prototype.isRational=function(){return!0};f.prototype.isReal=function(){return!0};
f.prototype.isExact=function(){return!0};f.prototype.isInexact=function(){return!1};f.prototype.toExact=function(){return this};f.prototype.toInexact=function(){return d.makeInstance(this.toFixnum())};f.prototype.toFixnum=function(){var a=0,b=this.toString(),c;if(b[0]==="-"){for(c=1;c<b.length;c++)a=a*10+Number(b[c]);return-a}else{for(c=0;c<b.length;c++)a=a*10+Number(b[c]);return a}};f.prototype.greaterThan=function(a){return this.compareTo(a)>0};f.prototype.greaterThanOrEqual=function(a){return this.compareTo(a)>=
0};f.prototype.lessThan=function(a){return this.compareTo(a)<0};f.prototype.lessThanOrEqual=function(a){return this.compareTo(a)<=0};f.prototype.divide=function(a){var b=Ga.call(this,a);return b[1].compareTo(f.ZERO)===0?b[0]:m(b[0],i.makeInstance(b[1],a))};f.prototype.numerator=function(){return this};f.prototype.denominator=function(){return 1};(function(){var a=function(a,c){for(;!da(X(c),a)||!J(a,X(m(c,1)));)c=z(o(m(c,z(o(a,c))),2));return c};f.prototype.integerSqrt=function(){var b;return ha(this)>=
0?a(this,this):(b=this.negate(),g.makeInstance(0,a(b,b)))}})();(function(){f.prototype.sqrt=function(){var a=this.integerSqrt(),b;if(q(X(a),this))return a;b=I(this);return isFinite(b)?b>=0?d.makeInstance(Math.sqrt(b)):g.makeInstance(0,d.makeInstance(Math.sqrt(-b))):a}})();f.prototype.floor=function(){return this};f.prototype.ceiling=function(){return this};f.prototype.expt=function(a){return Ia.call(this,a)};f.prototype.imaginaryPart=function(){return 0};f.prototype.realPart=function(){return this};
n=function(){return function(a,b,c){var e=512;if(c&&typeof c.limit!=="undefined")e=c.limit;t(a)||l("toRepeatingDecimal: n "+a.toString()+" is not an integer.");t(b)||l("toRepeatingDecimal: d "+b.toString()+" is not an integer.");s(b,0)&&l("toRepeatingDecimal: d equals 0");J(b,0)&&l("toRepeatingDecimal: d < 0");c=J(a,0)?"-":"";a=A(a);c+=qa(a,b);a:{var a=ra(a,b),d=e,e=[],f={};for(f[a]=!0;;){if(d--<=0){b=[e.join(""),"..."];break a}var g=qa(k(a,10),b),a=ra(k(a,10),b);e.push(g.toString());if(f[a])break;
else f[a]=!0}f=a;for(d=[];;)if(g=qa(k(a,10),b),a=ra(k(a,10),b),d.push(g.toString()),s(a,f))break;b=e.join("");for(a=d.join("");b.length>=a.length&&b.substring(b.length-a.length)===a;)b=b.substring(0,b.length-a.length);b=[b,a]}return[c].concat(b)}}();h.fromFixnum=function(a){if(isNaN(a)||!isFinite(a))return d.makeInstance(a);var b=Math.floor(a);return b===a?K(b)?v(Na(a+"")):b:d.makeInstance(a)};h.fromString=ia;h.makeBignum=v;h.makeRational=i.makeInstance;h.makeFloat=d.makeInstance;h.makeComplex=g.makeInstance;
h.makeComplexPolar=function(a,b){return q(b,0)?a:g.makeInstance(k(a,oa(b)),k(a,pa(b)))};h.pi=d.pi;h.e=d.e;h.nan=d.nan;h.negative_inf=d.neginf;h.inf=d.inf;h.negative_one=-1;h.zero=0;h.one=1;h.i=G;h.negative_i=gb;h.negative_zero=L;h.onThrowRuntimeError=function(a){throw Error(a);};h.isSchemeNumber=R;h.isRational=va;h.isReal=E;h.isExact=W;h.isInexact=aa;h.isInteger=t;h.toFixnum=I;h.toExact=S;h.toInexact=ba;h.add=m;h.subtract=w;h.multiply=k;h.divide=o;h.equals=s;h.eqv=q;h.approxEquals=function(a,b,c){return J(A(w(a,
b)),c)};h.greaterThanOrEqual=ma;h.lessThanOrEqual=da;h.greaterThan=U;h.lessThan=J;h.expt=lb;h.exp=F;h.modulo=Pa;h.numerator=ea;h.denominator=Qa;h.integerSqrt=Ya;h.sqrt=D;h.abs=A;h.quotient=qa;h.remainder=ra;h.floor=z;h.ceiling=Ra;h.conjugate=Sa;h.magnitude=function(a){return typeof a==="number"?Math.abs(a):a.magnitude()};h.log=na;h.angle=Ta;h.tan=Ua;h.atan=wa;h.cos=oa;h.sin=pa;h.tan=Ua;h.acos=Va;h.asin=Wa;h.cosh=function(a){return q(a,0)?d.makeInstance(1):o(m(F(a),F(x(a))),2)};h.sinh=function(a){return o(w(F(a),
F(x(a))),2)};h.imaginaryPart=ca;h.realPart=M;h.round=Xa;h.sqr=X;h.gcd=function(a,b){t(a)||l("gcd: the argument "+a.toString()+" is not an integer.",a);for(var c=A(a),e,d,f=0;f<b.length;f++){d=A(b[f]);for(t(d)||l("gcd: the argument "+d.toString()+" is not an integer.",d);!r(d);)e=c,c=d,d=Oa(e,d)}return c};h.lcm=function(a,b){t(a)||l("lcm: the argument "+a.toString()+" is not an integer.",a);var c=A(a);if(r(c))return 0;for(var d=0;d<b.length;d++){t(b[d])||l("lcm: the argument "+b[d].toString()+" is not an integer.",
b[d]);var f=sa(c,b[d]);if(r(f))return 0;c=o(k(c,b[d]),f)}return c};h.toRepeatingDecimal=n;h.BigInteger=f;h.Rational=i;h.FloatPoint=d;h.Complex=g;h.MIN_FIXNUM=-9E15;h.MAX_FIXNUM=9E15})();
/*jslint vars: true, plusplus: true, maxerr: 50, indent: 4 */

// Basic library functions.  This will include a few simple functions,
// but be augmented with several namespaces for the other libraries in
// the base library.
if (!(this.plt)) { this.plt = {}; }
(function (plt) {
    'use strict';
    var baselib = {};
    plt.baselib = baselib;



    // Simple object inheritance.
    var heir = function (parentPrototype) {
        var F = function () {};
        F.prototype = parentPrototype;
        return new F();
    };



    // clone: object -> object
    // Copies an object.  The new object should respond like the old
    // object, including to things like instanceof.
    var clone = function (obj) {
        var property;
        var C = function () {};
        C.prototype = obj;
        var c = new C();
        for (property in obj) {
            if (obj.hasOwnProperty(property)) {
                c[property] = obj[property];
            }
        }
        return c;
    };


    // Consumes a class and creates a predicate that recognizes subclasses.
    var makeClassPredicate = function (aClass) {
        return function (x) { return x instanceof aClass; };
    };



    // Helper to deal with the argument-passing of primitives.  Call f
    // with arguments bound from MACHINE.e, assuming
    // MACHINE.a has been initialized with the number of
    // arguments on the stack.  vs provides optional values for the
    // arguments that go beyond those of the mandatoryArgCount.
    var withArguments = function (MACHINE, mandatoryArgCount, vs, f) {
        var args = [], i;
        for (i = 0; i < MACHINE.a; i++) {
            if (i < mandatoryArgCount) {
                args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
            } else {
                if (i < MACHINE.a) {
                    args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
                } else {
                    args.push(vs[mandatoryArgCount - i]);
                }
            }
        }
        return f.apply(null, args);
    };



    baselib.heir = heir;
    baselib.clone = clone;
    baselib.makeClassPredicate = makeClassPredicate;
    baselib.withArguments = withArguments;


}(this.plt));
/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Frame structures.
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.frames = exports;



    // A generic frame just holds marks.
    var Frame = function() {
	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	this.pendingContinuationMarkKey = undefined;
	this.pendingApplyValuesProc = undefined;
	this.pendingBegin0Count = undefined;
	this.pendingBegin0Values = undefined;
    };


    // Frames must support marks and the temporary variables necessary to
    // support with-continuation-mark and with-values.

    // Specialized frames support more features:

    // A CallFrame represents a call stack frame, and includes the return address
    // as well as the function being called.
    var CallFrame = function(label, proc) {
	this.label = label;
	this.p = proc;

	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	// this.pendingContinuationMarkKey = undefined;
    };
    CallFrame.prototype = baselib.heir(Frame.prototype);



    // A prompt frame includes a return address, as well as a prompt tag
    // for supporting delimited continuations.
    var PromptFrame = function(label, tag) {
	this.label = label;
	this.tag = tag; // ContinuationPromptTag

	// The set of continuation marks.
	this.marks = [];

	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	// this.pendingContinuationMarkKey = undefined;	
    };
    PromptFrame.prototype = baselib.heir(Frame.prototype);




    //////////////////////////////////////////////////////////////////////
    exports.Frame = Frame;
    exports.CallFrame = CallFrame;
    exports.PromptFrame = PromptFrame;



}(this.plt.baselib));/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";

    // Union/find for circular equality testing.

    var UnionFind = function () {
        // this.parenMap holds the arrows from an arbitrary pointer
        // to its parent.
        this.parentMap = baselib.hashes.makeLowLevelEqHash();
    };

    // find: ptr -> UnionFindNode
    // Returns the representative for this ptr.
    UnionFind.prototype.find = function (ptr) {
        var parent = (this.parentMap.containsKey(ptr) ? 
                      this.parentMap.get(ptr) : ptr);
        if (parent === ptr) {
            return parent;
        } else {
            var rep = this.find(parent);
            // Path compression:
            this.parentMap.put(ptr, rep);
            return rep;
        }
    };

    // merge: ptr ptr -> void
    // Merge the representative nodes for ptr1 and ptr2.
    UnionFind.prototype.merge = function (ptr1, ptr2) {
        this.parentMap.put(this.find(ptr1), this.find(ptr2));
    };



    baselib.UnionFind = UnionFind;

}(this.plt.baselib));/*jslint vars: true, white: true, maxerr: 50, indent: 4 */


// Equality function
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.equality = exports;



    var eqv = function (x, y) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return jsnums.eqv(x, y);
        } else if (baselib.chars.isChar(x) && baselib.chars.isChar(y)) {
            return x.val === y.val;
        } else {
            return false;
        }
    };




    // equals: X Y -> boolean
    // Returns true if the objects are equivalent; otherwise, returns false.
    var equals = function (x, y, aUnionFind) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return baselib.numbers.eqv(x, y);
        }

        if (baselib.strings.isString(x) && baselib.strings.isString(y)) {
            return x.toString() === y.toString();
        }

        if (x === undefined || x === null) {
            return (y === undefined || y === null);
        }

        if (typeof (x) === 'object' && typeof (y) === 'object' &&
            x.equals && y.equals) {
            if (typeof (aUnionFind) === 'undefined') {
                aUnionFind = new baselib.UnionFind();
            }

            if (aUnionFind.find(x) === aUnionFind.find(y)) {
                return true;
            }
            else {
                aUnionFind.merge(x, y); 
                return x.equals(y, aUnionFind);
            }
        }
        return false;
    };

    exports.eqv = eqv;
    exports.equals = equals;

}(this.plt.baselib, jsnums));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Formatting library.
// Produces string and DOM representations of values.
//
/*global $*/
(function(baselib, $) {
    'use strict';
    var exports = {};
    baselib.format = exports;


    var replaceUnprintableStringChars = function(s) {
        var ret = [], i;
        for (i = 0; i < s.length; i++) {
            var val = s.charCodeAt(i);
            switch(val) {
            case 7: ret.push('\\a'); break;
            case 8: ret.push('\\b'); break;
            case 9: ret.push('\\t'); break;
            case 10: ret.push('\\n'); break;
            case 11: ret.push('\\v'); break;
            case 12: ret.push('\\f'); break;
            case 13: ret.push('\\r'); break;
            case 34: ret.push('\\"'); break;
            case 92: ret.push('\\\\'); break;
            default: if (val >= 32 && val <= 126) {
                ret.push( s.charAt(i) );
            }
                else {
                    var numStr = val.toString(16).toUpperCase();
                    while (numStr.length < 4) {
                        numStr = '0' + numStr;
                    }
                    ret.push('\\u' + numStr);
                }
                break;
            }
        }
        return ret.join('');
    };

    var escapeString = function(s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };


    // toWrittenString: Any Hashtable -> String
    var toWrittenString = function(x, cache) {
        if (! cache) { 
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === undefined) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return escapeString(x.toString());
        }

        if (baselib.functions.isProcedure(x)) {
            return '#<procedure:' + x.displayName + '>';
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (x.toWrittenString) {
            returnVal = x.toWrittenString(cache);
        } else if (x.toDisplayedString) {
            returnVal = x.toDisplayedString(cache);
        } else {
            returnVal = x.toString();
        }
        return returnVal;
    };



    // toDisplayedString: Any Hashtable -> String
    var toDisplayedString = function(x, cache) {
        if (! cache) {
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === undefined || x === null) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return x;
        }

        if (baselib.functions.isProcedure(x)) {
            return '#<procedure:' + x.displayName + '>';
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (x.toDisplayedString) {
            returnVal = x.toDisplayedString(cache);
        } else if (x.toWrittenString) {
            returnVal = x.toWrittenString(cache);
        } else {
            returnVal = x.toString();
        }
        return returnVal;
    };



    var formatRegexp1 = new RegExp('~[sSaA]', 'g');
    var formatRegexp2 = new RegExp("~[sSaAnevE%~]", "g");
    
    // format: string [X ...] string -> string
    // String formatting.  If an exception occurs, throws
    // a plain Error whose message describes the formatting error.
    var format = function(formatStr, args, functionName) {
        var throwFormatError = function() {
            functionName = functionName || 'format';
            var matches = formatStr.match(formatRegexp1);
            var expectedNumberOfArgs = (matches === null ? 0 : matches.length);
            var errorStrBuffer = [functionName + ': format string requires ' + expectedNumberOfArgs
                                  + ' arguments, given ' + args.length + '; arguments were:',
                                  toWrittenString(formatStr)];
            var i;
            for (i = 0; i < args.length; i++) {
                errorStrBuffer.push( toWrittenString(args[i]) );
            }

            throw new Error(errorStrBuffer.join(' '));
        };


        var buffer = args.slice(0);
        var onTemplate = function(s) {
            if (s === "~~") {
                return "~";
            } else if (s === '~n' || s === '~%') {
                return "\n";
            } else if (s === '~s' || s === "~S") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift());
            } else if (s === '~e' || s === "~E") {
                // FIXME: we don't yet have support for the error-print
                // handler, and currently treat ~e just like ~s.
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift()); 
            }
            else if (s === '~v') {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                // fprintf must do something more interesting here by
                // printing the dom representation directly...
                return toWrittenString(buffer.shift());
            } else if (s === '~a' || s === "~A") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toDisplayedString(buffer.shift());
            } else {
                throw new Error(functionName + 
                                ': string.replace matched invalid regexp');
            }
        };
        var result = formatStr.replace(formatRegexp2, onTemplate);
        if (buffer.length > 0) {
            throwFormatError();
        }
        return result;
    };
    



    var ToDomNodeParameters = function(params) {
        if (! params) { params = {}; }
        var k;
        for (k in params) {
            if (params.hasOwnProperty(k)) {
                this[k] = params[k];
            }
        }
        if (this.cache === undefined) {
            this.cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (this.cycles === undefined) {
            this.cycles = baselib.hashes.makeLowLevelEqHash();
        }
        if (this.depth === undefined) {
            this.depth = 0;
        }
        if (this.objectCounter === undefined) {
            this.objectCounter = 0;
        }
    };


    ToDomNodeParameters.prototype.incrementDepth = function() {
        return new ToDomNodeParameters({ mode : this.mode,
                                         depth: this.depth + 1,
                                         cache: this.cache,
                                         cycles: this.cycles,
                                         objectCounter: this.objectCounter });
    };
    

    // getMode: -> (U "print" "display" "write" "constructor")
    ToDomNodeParameters.prototype.getMode = function() {
        if (this.mode) { 
            return this.mode; 
        }
        return 'print';
    };

    ToDomNodeParameters.prototype.getDepth = function(x) {
        return this.depth;
    };

    ToDomNodeParameters.prototype.containsKey = function(x) {
        return this.cache.containsKey(x);
    };

    ToDomNodeParameters.prototype.seesOldCycle = function(x) {
        return this.cycles.containsKey(x);
    };

    ToDomNodeParameters.prototype.get = function(x) {
        return this.cache.get(x);
    };

    ToDomNodeParameters.prototype.remove = function(x) {
        return this.cache.remove(x);
    };

    ToDomNodeParameters.prototype.put = function(x, v) {
        return this.cache.put(x, v);
    };

    ToDomNodeParameters.prototype.recur = function(x) {
        return toDomNode(x, this.incrementDepth());
    };



    // rationalToDomNode: rational -> dom-node
    var rationalToDomNode = function(n) {
        var repeatingDecimalNode = document.createElement("span");
        var chunks = baselib.numbers.toRepeatingDecimal(baselib.numbers.numerator(n),
                                                        baselib.numbers.denominator(n),
                                                        {limit: 25});
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[0] + '.'));
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[1]));
        if (chunks[2] === '...') {
            repeatingDecimalNode.appendChild(
                document.createTextNode(chunks[2]));
        } else if (chunks[2] !== '0') {
            var overlineSpan = document.createElement("span");
            overlineSpan.style.textDecoration = 'overline';
            overlineSpan.appendChild(document.createTextNode(chunks[2]));
            repeatingDecimalNode.appendChild(overlineSpan);
        }


        var fractionalNode = document.createElement("span");
        var numeratorNode = document.createElement("sup");
        numeratorNode.appendChild(document.createTextNode(String(baselib.numbers.numerator(n))));
        var denominatorNode = document.createElement("sub");
        denominatorNode.appendChild(document.createTextNode(String(baselib.numbers.denominator(n))));
        fractionalNode.appendChild(numeratorNode);
        fractionalNode.appendChild(document.createTextNode("/"));
        fractionalNode.appendChild(denominatorNode);

        
        var numberNode = document.createElement("span");
        numberNode.appendChild(repeatingDecimalNode);
        numberNode.appendChild(fractionalNode);
        fractionalNode.style['display'] = 'none';

        var showingRepeating = true;

        numberNode.onclick = function(e) {
            showingRepeating = !showingRepeating;
            repeatingDecimalNode.style['display'] = 
                (showingRepeating ? 'inline' : 'none');
            fractionalNode.style['display'] = 
                (!showingRepeating ? 'inline' : 'none');
        };
        numberNode.style['cursor'] = 'pointer';
        return numberNode;
    };


    // numberToDomNode: jsnum -> dom
    // Given a jsnum, produces a dom-node representation.
    var numberToDomNode = function(n, params) {
        var node;
        if (baselib.numbers.isExact(n)) {
            if (baselib.numbers.isInteger(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else if (baselib.numbers.isRational(n)) {
                return rationalToDomNode(n);
            } else if (baselib.numbers.isComplex(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            }
        } else {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(n.toString()));
            return node;
        }
    };


    var coerseToParams = function(params) {
        if (params === 'write') {
            params = new ToDomNodeParameters({'mode' : 'write'});
        } else if (params === 'print') {
            params = new ToDomNodeParameters({'mode' : 'print'});
        } else if (params === 'display') {
            params = new ToDomNodeParameters({'mode' : 'display'});
        } else if (params === 'constructor') {
            params = new ToDomNodeParameters({'mode' : 'constructor'});
        } else {
            params = params || new ToDomNodeParameters({'mode' : 'display'});
        } 
        return params;
    };


    // toDomNode: scheme-value -> dom-node
    var toDomNode = function(x, params) {
        var node, retval;
        params = coerseToParams(params);

        if (x === null) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#<null>"));
            $(node).addClass("null");
            return node;
        }

        if (x === undefined) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#<undefined>"));
            $(node).addClass("undefined");
            return node;
        }

        if (baselib.numbers.isSchemeNumber(x)) {
            node = numberToDomNode(x, params);
            $(node).addClass("number");
            return node;
        }

        if (typeof(x) === 'string') {
            var wrapper = document.createElement("span");
            wrapper.style["white-space"] = "pre";
            if (params.getMode() === 'write' || params.getMode() === 'print' || params.getMode() === 'constructor') {
                node = document.createTextNode(toWrittenString(x));
            } else {
                node = document.createTextNode(toDisplayedString(x));
            }
            wrapper.appendChild(node);
            $(wrapper).addClass("string");
            return wrapper;
        }

        if (x === true || x === false) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x ? "true" : "false"));
            $(node).addClass("boolean");
            return node;
        }

        if (baselib.functions.isProcedure(x)) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode('#<procedure:' + x.displayName + '>'));
            $(node).addClass("procedure");
            return node;
        }

        if (typeof(x) !== 'object') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toString()));
            return node;
        }

        if (x.nodeType) {
            return x;
        }



        // Otherwise, we know the value is an object.
        
        // If we're along a print path with a loop, we need to stop
        // and return the key.
        if (params.seesOldCycle(x)) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#" + params.cycles.get(x) + "#"));
            $(node).addClass("cycle");
            return node;
        }

        // If we see a fresh cycle, register it.
        if (params.containsKey(x)) {
            $('<span/>').text('#' + params.objectCounter +'=')
                    .prependTo(params.get(x));

            params.cycles.put(x, params.objectCounter);
            params.objectCounter++;

            node = document.createElement("span");
            node.appendChild(document.createTextNode("#" + params.cycles.get(x) + "#"));
            $(node).addClass("cycle");
            return node;
        }

        node = document.createElement("span");
        params.put(x, node);
        if (x.toDomNode) {
            node.appendChild(x.toDomNode(params));
        } else if (params.getMode() === 'write' && x.toWrittenString) {
            node.appendChild(document.createTextNode(
                x.toWrittenString(params)));
        } else if (params.getMode() === 'display' && x.toDisplayedString) {
            node.appendChild(document.createTextNode(
                x.toDisplayedString(params)));
        } else {
            node.appendChild(document.createTextNode(x.toString()));
        }
        params.remove(x);
        return node;
    };



    //////////////////////////////////////////////////////////////////////


    exports.ToDomNodeParameters = ToDomNodeParameters;

    exports.format = format;
    exports.toWrittenString = toWrittenString;
    exports.toDisplayedString = toDisplayedString;
    exports.toDomNode = toDomNode;

    exports.escapeString = escapeString;
}(this.plt.baselib, $));/*jslint vars: true, maxerr: 50, indent: 4 */


// Other miscellaneous constants
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.constants = exports;


    var VoidValue = function () {};
    VoidValue.prototype.toString = function () {
        return "#<void>";
    };

    var VOID_VALUE = new VoidValue();


    var EofValue = function () {};
    EofValue.prototype.toString = function () {
        return "#<eof>";
    };

    var EOF_VALUE = new EofValue();


    exports.VOID_VALUE = VOID_VALUE;
    exports.EOF_VALUE = EOF_VALUE;
}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Numbers.
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.numbers = exports;



    var isNumber = jsnums.isSchemeNumber;
    var isReal = jsnums.isReal;
    var isRational = jsnums.isRational;
    var isComplex = isNumber;
    var isInteger = jsnums.isInteger;


    var isNatural = function (x) {
        return (jsnums.isExact(x) && isInteger(x) 
                && jsnums.greaterThanOrEqual(x, 0));
    };

    var isNonNegativeReal = function (x) {
        return isReal(x) && jsnums.greaterThanOrEqual(x, 0);
    };

    var isByte = function (x) {
        return (isNatural(x) && 
                jsnums.lessThan(x, 256));
    };


    // sign: number -> number
    var sign = function (x) {
        if (jsnums.isInexact(x)) {
            if (jsnums.greaterThan(x, 0)) {
                return jsnums.makeFloat(1);
            } else if (jsnums.lessThan(x, 0)) {
                return jsnums.makeFloat(-1);
            } else {
                return jsnums.makeFloat(0);
            }
        } else {
            if (jsnums.greaterThan(x, 0)) {
                return 1;
            } else if (jsnums.lessThan(x, 0)) {
                return -1;
            } else {
                return 0;
            }
        }
    };




    //////////////////////////////////////////////////////////////////////
    // Exports


    // We first re-export everything in jsnums.
    var prop;
    for (prop in jsnums) {
        if (jsnums.hasOwnProperty(prop)) {
            exports[prop] = jsnums[prop];
        }
    }

    exports.isNumber = jsnums.isSchemeNumber;
    exports.isReal = isReal;
    exports.isRational = isRational;
    exports.isComplex = isComplex;
    exports.isInteger = isInteger;
    exports.isNatural = isNatural;
    exports.isByte = isByte;
    exports.isNonNegativeReal = isNonNegativeReal;

    exports.sign = sign;


}(this.plt.baselib, jsnums));/*global $*/
/*jslint browser: true, unparam: true, vars: true, plusplus: true, maxerr: 50, indent: 4 */


// list structures (pairs, empty)
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.lists = exports;


    var Empty = function () {
    };
    Empty.EMPTY = new Empty();
    var EMPTY = Empty.EMPTY;



    Empty.prototype.equals = function (other, aUnionFind) {
        return other instanceof Empty;
    };

    Empty.prototype.hashCode = function(depth) {
        return baselib.hashes.getEqualHashCode("empty");
    };


    Empty.prototype.reverse = function () {
        return this;
    };

    Empty.prototype.toWrittenString = function (cache) { return "empty"; };
    Empty.prototype.toDisplayedString = function (cache) { return "empty"; };
    Empty.prototype.toString = function (cache) { return "()"; };

    Empty.prototype.toDomNode = function(params) {
        if (params.getMode() === "display") {
            return $("<span/>").text("()").get(0);
        } else if (params.getMode() === "write") {
            return $("<span/>").text("()").get(0);
        } else if (params.getMode() === "print") {
            if (params.getDepth() === 0) {
                return $("<span/>").text("'()").get(0);
            } else {
                return $("<span/>").text("()").get(0);
            }
        } else if (params.getMode() === "constructor") {
            return $("<span/>").text("(list)").get(0);
        } else {
            return $("<span/>").text("()").get(0);
        }
    };

    // Empty.append: (listof X) -> (listof X)
    Empty.prototype.append = function (b) {
        return b;
    };



    //////////////////////////////////////////////////////////////////////

    // Cons Pairs

    var Cons = function (first, rest) {
        this.first = first;
        this.rest = rest;
    };

    var makePair = function (first, rest) {
        return new Cons(first, rest);
    };

    Cons.prototype.reverse = function () {
        var lst = this;
        var ret = EMPTY;
        while (lst !== EMPTY) {
            ret = makePair(lst.first, ret);
            lst = lst.rest;
        }
        return ret;
    };

    // FIXME: can we reduce the recursion on this?
    Cons.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof Cons)) {
            return false;
        }
        return (baselib.equality.equals(this.first, other.first, aUnionFind) &&
                baselib.equality.equals(this.rest, other.rest, aUnionFind));
    };

    Cons.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Cons");
        k += baselib.hashes.getEqualHashCode(this.first, depth);
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.rest, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };



    // Cons.append: (listof X) -> (listof X)
    Cons.prototype.append = function (b) {
        if (b === EMPTY) {
            return this;
        }
        var ret = b;
        var lst = this.reverse();
        while (lst !== EMPTY) {
            ret = makePair(lst.first, ret);
            lst = lst.rest;
        }
        return ret;
    };


    Cons.prototype.toWrittenString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toWrittenString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toWrittenString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };

    Cons.prototype.toString = Cons.prototype.toWrittenString;

    Cons.prototype.toDisplayedString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toDisplayedString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toDisplayedString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };



    Cons.prototype.toDomNode = function (params) {
        var node;

        var subelts = [], dottedPair = false, i;
        var p = this;
        while (p instanceof Cons) {
            subelts.push(params.recur(p.first));
            p = p.rest;
            if (typeof (p) === 'object' && params.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            dottedPair = true;
            subelts.push(params.recur(p));
        }


        if (params.getMode() === 'constructor') {
            if (dottedPair) {
                node = subelts[subelts.length - 1];
                for (i = subelts.length - 2; i >= 0; i--) {
                    node = $('<span/>')
                        .text("(cons ")
                        .append(subelts[i])
                        .append(" ")
                        .append(node)
                        .append(")").get(0);
                }
                return node;
            } else {
                node = document.createElement("span");
                node.appendChild(document.createTextNode("("));
                node.appendChild(document.createTextNode("list"));
                node.appendChild(document.createTextNode(" "));
                node.appendChild(subelts[0]);
                for (i = 1; i < subelts.length; i++) {
                    node.appendChild(document.createTextNode(" "));
                    node.appendChild(subelts[i]);
                }
                node.appendChild(document.createTextNode(")"));
                return node;
            }
        }

        node = document.createElement('span');
        if (params.getMode() === 'print') {
            node.appendChild(document.createTextNode("'"));
        }
        node.appendChild(document.createTextNode("("));
        node.appendChild(subelts[0]);
        if (subelts.length > 1) {
            for (i = 1; i < subelts.length - 1; i++) {
                node.appendChild(document.createTextNode(" "));
                node.appendChild(subelts[i]);
            }
            if (dottedPair) {
                node.appendChild(document.createTextNode(" "));
                node.appendChild(document.createTextNode("."));
            }
            node.appendChild(document.createTextNode(" "));
            node.appendChild(subelts[subelts.length - 1]);
        }
        node.appendChild(document.createTextNode(")"));
        return node;
    };


    var isPair = function (x) { return x instanceof Cons; };
    var isEmpty = function (x) { return x === EMPTY; };



    var makeList = function () {
        var result = EMPTY, i;
        for (i = arguments.length - 1; i >= 0; i--) {
            result = makePair(arguments[i], result);
        }
        return result;
    };


    var arrayToList = function (arr) {
        var result = EMPTY, i;
        for (i = arr.length -1; i >= 0; i--) {
            result = makePair(arr[i], result);
        }
        return result;
    };


    // Coerse a list back into a JavaScript array.
    var listToArray = function (lst) {
        var result = [];
        while (lst !== EMPTY) {
            result.push(lst.first);
            lst = lst.rest;
        }
        return result;
    };


    // isList: Any -> Boolean
    // Returns true if x is a list (a chain of pairs terminated by EMPTY).
    var isList = function (x) {
        var tortoise, hare;
        tortoise = hare = x;
        if (hare === EMPTY) { return true; }
        while (true) {
            if (!(hare instanceof Cons)) { return false; }
            if (tortoise instanceof Cons) { tortoise = tortoise.rest; }
            hare = hare.rest;
            if (hare instanceof Cons) { hare = hare.rest; }
            if (hare === EMPTY) { return true; }
            if (tortoise === hare) { return false; }
        }
    };



    var reverse = function (lst) {
        var rev = EMPTY;
        while (lst !== EMPTY) {
            rev = makePair(lst.first, rev);
            lst = lst.rest;
        }
        return rev;
    };


    var length = function (lst) {
        var len = 0;
        while (lst !== EMPTY) {
            len++;
            lst = lst.rest;
        }
        return len;
    };


    var listRef = function (lst, n) {
        var i;
        for (i = 0; i < n; i++) {
            lst = lst.rest;
        }
        return lst.first;
    };



    //////////////////////////////////////////////////////////////////////

    exports.EMPTY = EMPTY;
    exports.Empty = Empty;
    exports.Cons = Cons;
    exports.isPair = isPair;
    exports.isList = isList;
    exports.isEmpty = isEmpty;
    exports.makePair = makePair;
    exports.makeList = makeList;
    exports.reverse = reverse;
    exports.length = length;
    exports.listRef = listRef;
    exports.listToArray = listToArray;
    exports.arrayToList = arrayToList;

}(this.plt.baselib));// vectors
/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.vectors = exports;



    var Vector = function (n, initialElements) {
        var i;
        this.elts = [];
        this.elts.length = n;
        if (initialElements) {
            for (i = 0; i < n; i++) {
                this.elts[i] = initialElements[i];
            }
        } else {
            for (i = 0; i < n; i++) {
                this.elts[i] = undefined;
            }
        }
        this.mutable = true;
    };

    Vector.makeInstance = function (n, elts) {
        return new Vector(n, elts);
    };

    Vector.prototype.length = function () {
        return this.elts.length;
    };

    Vector.prototype.ref = function (k) {
        return this.elts[k];
    };

    Vector.prototype.set = function (k, v) {
        this.elts[k] = v;
    };

    Vector.prototype.equals = function (other, aUnionFind) {
        var i;
        if (other instanceof Vector) {
            if (other.length() !== this.length()) {
                return false;
            }
            for (i = 0; i <  this.length(); i++) {
                if (!(baselib.equality.equals(this.elts[i], other.elts[i], aUnionFind))) {
                    return false;
                }
            }
            return true;
        } else {
            return false;
        }
    };

    Vector.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Vector");
        var i;
        k = baselib.hashes.hashMix(k);
        for (i = 0; i < this.elts.length; i++) {
            k += baselib.hashes.getEqualHashCode(this.elts[i], depth);
            k = baselib.hashes.hashMix(k);
        }
        return k;
    };

    Vector.prototype.toList = function () {
        var ret = baselib.lists.EMPTY, i;
        for (i = this.length() - 1; i >= 0; i--) {
            ret = baselib.lists.makePair(this.elts[i], ret);           
        }       
        return ret;
    };

    Vector.prototype.toWrittenString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toWrittenString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDisplayedString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toDisplayedString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDomNode = function (params) {
        var node = document.createElement("span"), i;
        if (params.getMode() === 'constructor') {
            node.appendChild(document.createTextNode("(vector"));
            for (i = 0; i < this.length(); i++) {
                node.appendChild(document.createTextNode(" "));
                node.appendChild(params.recur(this.ref(i)));
            }
            node.appendChild(document.createTextNode(")"));
        } else {
            node.appendChild(document.createTextNode("#("));
            for (i = 0; i < this.length(); i++) {
                node.appendChild(params.recur(this.ref(i)));
                if (i !== this.length() - 1) {
                    node.appendChild(document.createTextNode(" "));
                }
            }
            node.appendChild(document.createTextNode(")"));
        }
        return node;
    };


    var isVector = function (x) { return x instanceof Vector; };

    // makeVector: x ... -> vector
    var makeVector = function (n, elts) {
        return Vector.makeInstance(n, elts);
    };

    var makeVectorImmutable = function (n, elts) {
        var v = Vector.makeInstance(n, elts);
        v.mutable = false;
        return v;
    };



    //////////////////////////////////////////////////////////////////////

    exports.Vector = Vector;
    exports.isVector = isVector;
    exports.makeVector = makeVector;
    exports.makeVectorImmutable = makeVectorImmutable;


}(this.plt.baselib));// Single characters
(function(baselib) {
    var exports = {};
    baselib.chars = exports;


    // Chars
    // Char: string -> Char
    var Char = function(val){
        this.val = val;
    };
    // The characters less than 256 must be eq?, according to the
    // documentation:
    // http://docs.racket-lang.org/reference/characters.html
    var _CharCache = {};
    for (var i = 0; i < 256; i++) {
        _CharCache[String.fromCharCode(i)] = new Char(String.fromCharCode(i));
    }
    
    // makeInstance: 1-character string -> Char  
    Char.makeInstance = function(val){
        if (_CharCache[val]) {
	    return _CharCache[val];
        }
        return new Char(val);
    };

    Char.prototype.toString = function(cache) {
	var code = this.val.charCodeAt(0);
	var returnVal;
	switch (code) {
	case 0: returnVal = '#\\nul'; break;
	case 8: returnVal = '#\\backspace'; break;
	case 9: returnVal = '#\\tab'; break;
	case 10: returnVal = '#\\newline'; break;
	case 11: returnVal = '#\\vtab'; break;
	case 12: returnVal = '#\\page'; break;
	case 13: returnVal = '#\\return'; break;
	case 20: returnVal = '#\\space'; break;
	case 127: returnVal = '#\\rubout'; break;
	default: if (code >= 32 && code <= 126) {
	    returnVal = ("#\\" + this.val);
	}
	    else {
		var numStr = code.toString(16).toUpperCase();
		while (numStr.length < 4) {
		    numStr = '0' + numStr;
		}
		returnVal = ('#\\u' + numStr);
	    }
	    break;
	}
	return returnVal;
    };

    Char.prototype.toWrittenString = Char.prototype.toString;

    Char.prototype.toDisplayedString = function (cache) {
        return this.val;
    };

    Char.prototype.getValue = function() {
        return this.val;
    };

    Char.prototype.equals = function(other, aUnionFind){
        return other instanceof Char && this.val == other.val;
    };

    Char.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode('Char');
        k += this.val.charCodeAt(0);
        k = baselib.hashes.hashMix(k);
        return k;
    };


    exports.Char = Char;
    exports.makeChar = Char.makeInstance;
    exports.isChar = plt.baselib.makeClassPredicate(Char);


})(this['plt'].baselib);/*jslint devel: false, browser: true, unparam: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
// Structure types
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.symbols = exports;


    //////////////////////////////////////////////////////////////////////
    
    // Symbols

    //////////////////////////////////////////////////////////////////////
    var Symbol = function (val) {
        this.val = val;
    };

    var symbolCache = {};
    
    // makeInstance: string -> Symbol.
    Symbol.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(symbolCache.hasOwnProperty(val))) {
            symbolCache[val] = new Symbol(val);
        }
        return symbolCache[val];
    };
    
    Symbol.prototype.equals = function (other, aUnionFind) {
        return other instanceof Symbol &&
            this.val === other.val;
    };

    Symbol.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Symbol");
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.val);
        k = baselib.hashes.hashMix(k);
        return k;
    };
    

    Symbol.prototype.toString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toDisplayedString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toDomNode = function(params) {
        if (params.getMode() === 'write') {
            return $("<span/>").text(this.val).get(0);
        }
        if (params.getMode() === 'display') {
            return $("<span/>").text(this.val).get(0);
        }
        if (params.getMode() === 'print') {
            if (params.getDepth() === 0) {
                return $("<span/>").text("'" + this.val).get(0);
            } else {
                return $("<span/>").text(this.val).get(0);
            }
        }
        if (params.getMode() === 'constructor') {
            return $("<span/>").text("'" + this.val).get(0);
        }

        return $("<span/>").text(this.val).get(0);
    };
    


    var isSymbol = function (x) { return x instanceof Symbol; };

    var makeSymbol = function (s) { return Symbol.makeInstance(s); };



    //////////////////////////////////////////////////////////////////////

    exports.Symbol = Symbol;
    exports.makeSymbol = makeSymbol;
    exports.isSymbol = isSymbol;

}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */


// Strings

// Strings are either mutable or immutable.  immutable strings are represented
// as regular JavaScript strings.  Mutable ones are represented as instances
// of the Str class.

(function (baselib) {
    'use strict';
    var exports = {};

    baselib.strings = exports;


    // chars: arrayof string
    // Precondition: each string must only be 1 character long or bad things
    // happen.
    var Str = function (chars) {
	this.chars = chars;
	this.length = chars.length;
	this.mutable = true;
    };

    Str.makeInstance = function (chars) {
	return new Str(chars);
    };

    Str.fromString = function (s) {
	return Str.makeInstance(s.split(""));
    };

    Str.prototype.toString = function () {
	return this.chars.join("");
    };

    var replaceUnprintableStringChars = function (s) {
	var ret = [], i;
	for (i = 0; i < s.length; i++) {
	    var val = s.charCodeAt(i);
	    switch(val) {
	    case 7: ret.push('\\a'); break;
	    case 8: ret.push('\\b'); break;
	    case 9: ret.push('\\t'); break;
	    case 10: ret.push('\\n'); break;
	    case 11: ret.push('\\v'); break;
	    case 12: ret.push('\\f'); break;
	    case 13: ret.push('\\r'); break;
	    case 34: ret.push('\\"'); break;
	    case 92: ret.push('\\\\'); break;
	    default: 
                if (val >= 32 && val <= 126) {
		    ret.push( s.charAt(i) );
	        }
		else {
		    var numStr = val.toString(16).toUpperCase();
		    while (numStr.length < 4) {
			numStr = '0' + numStr;
		    }
		    ret.push('\\u' + numStr);
		}
		break;
	    }
	}
	return ret.join('');
    };

    var escapeString = function (s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };

    Str.prototype.toWrittenString = function (cache) {
        return escapeString(this.toString());
    };

    Str.prototype.toDisplayedString = Str.prototype.toString;

    Str.prototype.copy = function () {
	return Str.makeInstance(this.chars.slice(0));
    };

    Str.prototype.substring = function (start, end) {
	if (end === null || end === undefined) {
	    end = this.length;
	}
	return Str.makeInstance( this.chars.slice(start, end) );
    };

    Str.prototype.charAt = function (index) {
	return this.chars[index];
    };

    Str.prototype.charCodeAt = function (index) {
	return this.chars[index].charCodeAt(0);
    };

    Str.prototype.replace = function (expr, newStr) {
	return Str.fromString(this.toString().replace(expr, newStr) );
    };


    Str.prototype.equals = function (other, aUnionFind) {
	if ( !(other instanceof Str || typeof(other) === 'string') ) {
	    return false;
	}
	return this.toString() === other.toString();
    };

    Str.prototype.hashCode = function(depth) {
        return baselib.hashes.getEqualHashCode(this.toString());
    };


    Str.prototype.set = function (i, c) {
	this.chars[i] = c;
    };

    Str.prototype.toUpperCase = function () {
	return Str.fromString(this.chars.join("").toUpperCase() );
    };

    Str.prototype.toLowerCase = function () {
	return Str.fromString(this.chars.join("").toLowerCase() );
    };

    Str.prototype.match = function (regexpr) {
	return this.toString().match(regexpr);
    };



    var isString = function (s) {
	return (typeof s === 'string' || 
                s instanceof Str);
    };

    var isMutableString = baselib.makeClassPredicate(Str);



    exports.Str = Str;
    exports.escapeString = escapeString;
    exports.isString = isString;
    exports.isMutableString = isMutableString;
    exports.makeMutableString = Str.makeInstance;

}(this.plt.baselib));/*jslint unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */



(function(baselib) {
    'use strict';
    var exports = {};
    baselib.bytes = exports;

    // Bytes

    var Bytes = function(bts, mutable) {
        // bytes: arrayof [0-255]
        this.bytes = bts;
        this.mutable = (mutable === undefined) ? false : mutable;
    };

    Bytes.prototype.get = function(i) {
	return this.bytes[i];
    };

    Bytes.prototype.set = function(i, b) {
	if (this.mutable) {
	    this.bytes[i] = b;
	}
    };

    Bytes.prototype.length = function() {
	return this.bytes.length;
    };

    Bytes.prototype.copy = function(mutable) {
	return new Bytes(this.bytes.slice(0), mutable);
    };

    Bytes.prototype.subbytes = function(start, end) {
	if (end === null || end === undefined) {
	    end = this.bytes.length;
	}
	return new Bytes( this.bytes.slice(start, end), true );
    };


    Bytes.prototype.equals = function(other) {
        if (! (other instanceof Bytes)) {
	    return false;
        }
        if (this.bytes.length !== other.bytes.length) {
	    return false;
        }
        var A = this.bytes;
        var B = other.bytes;
        var n = this.bytes.length;
        var i;
        for (i = 0; i < n; i++) {
	    if (A[i] !== B[i]) {
	        return false;
            }
        }
        return true;
    };

    Bytes.prototype.hashCode = function(depth) {
        var i;
        var k = baselib.hashes.getEqualHashCode('Bytes');
        for (i = 0; i < this.bytes.length; i++) {
            k += this.bytes[i];
            k = baselib.hashes.hashMix(k);
        }
        return k;
    };


    Bytes.prototype.toString = function(cache) {
	var ret = [], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(String.fromCharCode(this.bytes[i]));
	}

	return ret.join('');
    };

    Bytes.prototype.toDisplayedString = Bytes.prototype.toString;

    var escapeByte = function(aByte) {
	var ret = [];
	var returnVal;
	switch(aByte) {
	case 7: returnVal = '\\a'; break;
	case 8: returnVal = '\\b'; break;
	case 9: returnVal = '\\t'; break;
	case 10: returnVal = '\\n'; break;
	case 11: returnVal = '\\v'; break;
	case 12: returnVal = '\\f'; break;
	case 13: returnVal = '\\r'; break;
	case 34: returnVal = '\\"'; break;
	case 92: returnVal = '\\\\'; break;
	default: if (aByte >= 32 && aByte <= 126) {
	    returnVal = String.fromCharCode(aByte);
	}
	    else {
		ret.push( '\\' + aByte.toString(8) );
	    }
	    break;
	}
	return returnVal;
    };

    Bytes.prototype.toWrittenString = function() {
	var ret = ['#"'], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(escapeByte(this.bytes[i]));
	}
	ret.push('"');
	return ret.join('');
    };

    var makeBytes = function(chars) {
        return new Bytes(chars);
    };

    var isBytes = baselib.makeClassPredicate(Bytes);


    exports.Bytes = Bytes;
    exports.makeBytes = makeBytes;
    exports.isBytes = isBytes;


}(this.plt.baselib));(function() {
/**
 * Copyright 2010 Tim Down.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * jshashtable
 *
 * jshashtable is a JavaScript implementation of a hash table. It creates a single constructor function called Hashtable
 * in the global scope.
 *
 * Author: Tim Down <tim@timdown.co.uk>
 * Version: 2.1
 * Build date: 21 March 2010
 * Website: http://www.timdown.co.uk/jshashtable
 */

var Hashtable = (function() {
	var FUNCTION = "function";

	var arrayRemoveAt = (typeof Array.prototype.splice == FUNCTION) ?
		function(arr, idx) {
			arr.splice(idx, 1);
		} :

		function(arr, idx) {
			var itemsAfterDeleted, i, len;
			if (idx === arr.length - 1) {
				arr.length = idx;
			} else {
				itemsAfterDeleted = arr.slice(idx + 1);
				arr.length = idx;
				for (i = 0, len = itemsAfterDeleted.length; i < len; ++i) {
					arr[idx + i] = itemsAfterDeleted[i];
				}
			}
		};

	function hashObject(obj) {
		var hashCode;
		if (typeof obj == "string") {
			return obj;
		} else if (typeof obj.hashCode == FUNCTION) {
			// Check the hashCode method really has returned a string
			hashCode = obj.hashCode();
			return (typeof hashCode == "string") ? hashCode : hashObject(hashCode);
		} else if (typeof obj.toString == FUNCTION) {
			return obj.toString();
		} else {
			try {
				return String(obj);
			} catch (ex) {
				// For host objects (such as ActiveObjects in IE) that have no toString() method and throw an error when
				// passed to String()
				return Object.prototype.toString.call(obj);
			}
		}
	}

	function equals_fixedValueHasEquals(fixedValue, variableValue) {
		return fixedValue.equals(variableValue);
	}

	function equals_fixedValueNoEquals(fixedValue, variableValue) {
		return (typeof variableValue.equals == FUNCTION) ?
			   variableValue.equals(fixedValue) : (fixedValue === variableValue);
	}

	function createKeyValCheck(kvStr) {
		return function(kv) {
			if (kv === null) {
				throw new Error("null is not a valid " + kvStr);
			} else if (typeof kv == "undefined") {
				throw new Error(kvStr + " must not be undefined");
			}
		};
	}

	var checkKey = createKeyValCheck("key"), checkValue = createKeyValCheck("value");

	/*----------------------------------------------------------------------------------------------------------------*/

	function Bucket(hash, firstKey, firstValue, equalityFunction) {
        this[0] = hash;
		this.entries = [];
		this.addEntry(firstKey, firstValue);

		if (equalityFunction !== null) {
			this.getEqualityFunction = function() {
				return equalityFunction;
			};
		}
	}

	var EXISTENCE = 0, ENTRY = 1, ENTRY_INDEX_AND_VALUE = 2;

	function createBucketSearcher(mode) {
		return function(key) {
			var i = this.entries.length, entry, equals = this.getEqualityFunction(key);
			while (i--) {
				entry = this.entries[i];
				if ( equals(key, entry[0]) ) {
					switch (mode) {
						case EXISTENCE:
							return true;
						case ENTRY:
							return entry;
						case ENTRY_INDEX_AND_VALUE:
							return [ i, entry[1] ];
					}
				}
			}
			return false;
		};
	}

	function createBucketLister(entryProperty) {
		return function(aggregatedArr) {
			var startIndex = aggregatedArr.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				aggregatedArr[startIndex + i] = this.entries[i][entryProperty];
			}
		};
	}

	Bucket.prototype = {
		getEqualityFunction: function(searchValue) {
			return (typeof searchValue.equals == FUNCTION) ? equals_fixedValueHasEquals : equals_fixedValueNoEquals;
		},

		getEntryForKey: createBucketSearcher(ENTRY),

		getEntryAndIndexForKey: createBucketSearcher(ENTRY_INDEX_AND_VALUE),

		removeEntryForKey: function(key) {
			var result = this.getEntryAndIndexForKey(key);
			if (result) {
				arrayRemoveAt(this.entries, result[0]);
				return result[1];
			}
			return null;
		},

		addEntry: function(key, value) {
			this.entries[this.entries.length] = [key, value];
		},

		keys: createBucketLister(0),

		values: createBucketLister(1),

		getEntries: function(entries) {
			var startIndex = entries.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				// Clone the entry stored in the bucket before adding to array
				entries[startIndex + i] = this.entries[i].slice(0);
			}
		},

		containsKey: createBucketSearcher(EXISTENCE),

		containsValue: function(value) {
			var i = this.entries.length;
			while (i--) {
				if ( value === this.entries[i][1] ) {
					return true;
				}
			}
			return false;
		}
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	// Supporting functions for searching hashtable buckets

	function searchBuckets(buckets, hash) {
		var i = buckets.length, bucket;
		while (i--) {
			bucket = buckets[i];
			if (hash === bucket[0]) {
				return i;
			}
		}
		return null;
	}

	function getBucketForHash(bucketsByHash, hash) {
		var bucket = bucketsByHash[hash];

		// Check that this is a genuine bucket and not something inherited from the bucketsByHash's prototype
		return ( bucket && (bucket instanceof Bucket) ) ? bucket : null;
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	function Hashtable(hashingFunctionParam, equalityFunctionParam) {
		var that = this;
		var buckets = [];
		var bucketsByHash = {};

		var hashingFunction = (typeof hashingFunctionParam == FUNCTION) ? hashingFunctionParam : hashObject;
		var equalityFunction = (typeof equalityFunctionParam == FUNCTION) ? equalityFunctionParam : null;

		this.put = function(key, value) {
			checkKey(key);
			checkValue(value);
			var hash = hashingFunction(key), bucket, bucketEntry, oldValue = null;

			// Check if a bucket exists for the bucket key
			bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it already contains this key
				bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so replace old value and we're done.
					oldValue = bucketEntry[1];
					bucketEntry[1] = value;
				} else {
					// The bucket does not contain an entry for this key, so add one
					bucket.addEntry(key, value);
				}
			} else {
				// No bucket exists for the key, so create one and put our key/value mapping in
				bucket = new Bucket(hash, key, value, equalityFunction);
				buckets[buckets.length] = bucket;
				bucketsByHash[hash] = bucket;
			}
			return oldValue;
		};

		this.get = function(key) {
			checkKey(key);

			var hash = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it contains this key
				var bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so return the value.
					return bucketEntry[1];
				}
			}
			return null;
		};

		this.containsKey = function(key) {
			checkKey(key);
			var bucketKey = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, bucketKey);

			return bucket ? bucket.containsKey(key) : false;
		};

		this.containsValue = function(value) {
			checkValue(value);
			var i = buckets.length;
			while (i--) {
				if (buckets[i].containsValue(value)) {
					return true;
				}
			}
			return false;
		};

		this.clear = function() {
			buckets.length = 0;
			bucketsByHash = {};
		};

		this.isEmpty = function() {
			return !buckets.length;
		};

		var createBucketAggregator = function(bucketFuncName) {
			return function() {
				var aggregated = [], i = buckets.length;
				while (i--) {
					buckets[i][bucketFuncName](aggregated);
				}
				return aggregated;
			};
		};

		this.keys = createBucketAggregator("keys");
		this.values = createBucketAggregator("values");
		this.entries = createBucketAggregator("getEntries");

		this.remove = function(key) {
			checkKey(key);

			var hash = hashingFunction(key), bucketIndex, oldValue = null;

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);

			if (bucket) {
				// Remove entry from this bucket for this key
				oldValue = bucket.removeEntryForKey(key);
				if (oldValue !== null) {
					// Entry was removed, so check if bucket is empty
					if (!bucket.entries.length) {
						// Bucket is empty, so remove it from the bucket collections
						bucketIndex = searchBuckets(buckets, hash);
						arrayRemoveAt(buckets, bucketIndex);
						delete bucketsByHash[hash];
					}
				}
			}
			return oldValue;
		};

		this.size = function() {
			var total = 0, i = buckets.length;
			while (i--) {
				total += buckets[i].entries.length;
			}
			return total;
		};

		this.each = function(callback) {
			var entries = that.entries(), i = entries.length, entry;
			while (i--) {
				entry = entries[i];
				callback(entry[0], entry[1]);
			}
		};

		this.putAll = function(hashtable, conflictCallback) {
			var entries = hashtable.entries();
			var entry, key, value, thisValue, i = entries.length;
			var hasConflictCallback = (typeof conflictCallback == FUNCTION);
			while (i--) {
				entry = entries[i];
				key = entry[0];
				value = entry[1];

				// Check for a conflict. The default behaviour is to overwrite the value for an existing key
				if ( hasConflictCallback && (thisValue = that.get(key)) ) {
					value = conflictCallback(key, thisValue, value);
				}
				that.put(key, value);
			}
		};

		this.clone = function() {
			var clone = new Hashtable(hashingFunctionParam, equalityFunctionParam);
			clone.putAll(that);
			return clone;
		};
	}

	return Hashtable;
})();/*jslint plusplus: true, vars: true, white: true, nomen: true, maxerr: 50, indent: 4 */

var LLRBTree = {};

// The code basically follows the structure of
// https://github.com/kazu-yamamoto/llrbtree
//
// Mostly comes from the code in:
//
// https://github.com/kazu-yamamoto/llrbtree/blob/master/Data/RBTree/LL.hs
//
// as well as:
//
// https://github.com/kazu-yamamoto/llrbtree/blob/master/Data/RBTree/Internal.hs

(function() {
    'use strict';

    // function declarations
    var turnR, turnB;
    var insert_, balanceL, balanceR, replaceX, remove_;
    var removeLT, removeGT, removeEQ;
    var isRed, isBlack, isBlackLeftBlack, isBlackLeftRed;
    var hardMin;
    var minimum, removeMin_;


    // red and black colors.
    var R = "R", B = "B";

    // An rbtree is either a Leaf or a Node.

    var Node = function(c, //h,
                        l, x, r) {
        this.c = c; // color: (U R B)
        //this.h = h; // height: int
        this.l = l; // left: rbtree
        this.x = x; // x : element
        this.r = r; // right: rbtree
    };



    var Leaf = function() {};
    // WARNING: DO NOT CONSTRUCT ANY OTHER INSTANCES OF LEAF, OR BAD
    // THINGS WILL HAPPEN.
    var EMPTY = new Leaf();






    var items_ = function(tree, elts) {
        if (tree === EMPTY) { return; }
        items_(tree.l, elts);
        elts.push(tree.x);
        items_(tree.r, elts);
    };

    var items = function(tree) {
        var elts = [];
        items_(tree, elts);
        return elts;
    };



    // Either returns the element, or undefined if we hit a leaf.
    var find = function(tree, x, cmp) {
        while (true) {
            if (tree === EMPTY) { return undefined; }
            else {
                var cmpval = cmp(x, tree.x);
                if (cmpval < 0) {
                    tree = tree.l;
                } else if (cmpval > 0) {
                    tree = tree.r;
                } else {
                    return tree.x;
                }
            }
        }
    };

    var contains = function(tree, x, cmp) {
        while (true) {
            if (tree === EMPTY) { return false; }
            else {
                var cmpval = cmp(x, tree.x);
                if (cmpval < 0) {
                    tree = tree.l;
                } else if (cmpval > 0) {
                    tree = tree.r;
                } else {
                    return true;
                }
            }
        }
    };


    var insert = function(tree, x, cmp) {
        return turnB(insert_(tree, x, cmp));
    };

    insert_ = function(tree, x, cmp) {
        var cmpval;
        if (tree === EMPTY) {
            return new Node(R, //1,
                            EMPTY, x, EMPTY);
        } else {
            cmpval = cmp(x, tree.x);
            if (cmpval < 0) {
                return balanceL(tree.c,// tree.h, 
                                insert_(tree.l, x, cmp), tree.x, tree.r);
            } else if (cmpval > 0) {
                return balanceR(tree.c,// tree.h,
                                tree.l, tree.x, insert_(tree.r, x, cmp));
            } else {
                return replaceX(tree, x);
            }
        }
    };

    balanceL = function(c,// h,
                        l, x, r) {
        if (c === B &&
            l !== EMPTY && l.c === R 
            && l.l !== EMPTY && l.l.c === R) {
            return new Node(R,// h+1,
                            turnB(l.l), l.x, new Node(B, //h,
                                                      l.r, x, r));
        } else {
            return new Node(c,// h,
                            l, x, r);
        }
    };

    balanceR = function(c,// h,
                        l, x, r) {
        if (c === B &&
           l !== EMPTY && l.c === R &&
           r !== EMPTY && r.c === R) {
            return new Node(R,// h+1,
                            turnB(l), x, turnB(r));
        } else if (r !== EMPTY &&
                  r.c === R) {
            return new Node(c,// h,
                            new Node(R,// r.h,
                                     l, x, r.l), r.x, r.r);
        } else {
            return new Node(c,// h,
                            l, x, r);
        }
    };


    var remove = function(tree, x, cmp) {
        var removed;
        if (tree === EMPTY) { 
            return tree; 
        } else {
            removed = remove_(turnR(tree), x, cmp);
            if (removed === EMPTY) {
                return removed;
            } else {
                return turnB(removed);
            }
        }
    };

    remove_ = function(tree, x, cmp) {
        var cmpval;
        if (tree === EMPTY) { 
            return tree; 
        } else {
            cmpval = cmp(x, tree.x);
            if (cmpval < 0) {
                return removeLT(x, tree.c,// tree.h,
                                tree.l, tree.x, tree.r, cmp);
            } else if (cmpval > 0) { 
                return removeGT(x, tree.c,// tree.h,
                                tree.l, tree.x, tree.r, cmp);
            } else {
                return removeEQ(x, tree.c,// tree.h,
                                tree.l, tree.x, tree.r, cmp);
            }
        }
    };

    removeLT = function(kx, c,// h,
                        l, x, r, cmp) {
        var isBB;
        var isBR;
        if (c === R) {
            isBB = isBlackLeftBlack(l);
            isBR = isBlackLeftRed(r);
            if (isBB && isBR) {
                return new Node(R,
                                //h,
                                new Node(B,// r.h,
                                         remove_(turnR(l), kx, cmp), x, r.l.l),
                                r.l.x,
                                new Node(B,// r.h,
                                         r.l.r, r.x, r.r));
            } else if (isBB) {
                return balanceR(B,// h-1,
                                remove_(turnR(l), kx, cmp), x, turnR(r));
            }
        }
        return new Node(c,// h,
                        remove_(l, kx, cmp), x,  r);
    };


    removeGT = function(kx, c,// h,
                        l, x, r, cmp) {
        var isBB, isBR;
        if (l !== EMPTY && l.c === R) {
            return balanceR(c,// h,
                            l.l, l.x, remove_(new Node(R,// h,
                                                             l.r, x, r), kx, cmp));
        }
        if (c === R) {
            isBB = isBlackLeftBlack(r);
            isBR = isBlackLeftRed(l);
            if (isBB && isBR) {
                return new Node(R, 
                                //h,
                                turnB(l.l), 
                                l.x, 
                                balanceR(B,// l.h,
                                         l.r, x, remove_(turnR(r), kx, cmp)));
            } 
            if (isBB) {
                return balanceR(B,// h-1,
                                turnR(l), x, remove_(turnR(r), kx, cmp));
            }
        }
        if (c === R) {
            return new Node(R,// h,
                            l, x, remove_(r, kx, cmp));
        }
        throw new Error("removeGT");
    };

    removeEQ = function(kx, c,// h,
                        l, x, r, cmp) {
        var isBB, isBR, m;
        if (c === R && l === EMPTY && r === EMPTY) {
            return EMPTY;
        }
        if (l !== EMPTY && l.c === R) {
            return balanceR(c,// h,
                            l.l, l.x, remove_(new Node(R,// h,
                                                             l.r, x, r), kx, cmp));
        }
        if (c === R) {
            isBB = isBlackLeftBlack(r);
            isBR = isBlackLeftRed(l);
            if (isBB && isBR) {
                m = minimum(r);
                return balanceR(R,// h,
                                turnB(l.l), l.x, balanceR(B,// l.h,
                                                          l.r, m, removeMin_(turnR(r))));
            }
            if (isBB) {
                m = minimum(r);
                return balanceR(B,// h-1,
                                turnR(l), m, removeMin_(turnR(r)));
            }
        }
        if (c === R &&
            r !== EMPTY && r.c === B) {
            m = minimum(r);
            return new Node(R,// h,
                            l, m, new Node(B,// r.h,
                                           removeMin_(r.l), r.x, r.r));
        }
        throw new Error("removeEQ");
    };


    removeMin_ = function(t) {
        // var h;
        var l, x, r, isBB, isBR;
        if (t !== EMPTY && t.c === R && 
            t.l === EMPTY && t.r === EMPTY) {
            return EMPTY;
        }
        if (t !== EMPTY && t.c === R) {
            //h = t.h;
            l = t.l; x = t.x; r = t.r;
            isBB = isBlackLeftBlack(l);
            isBR = isBlackLeftRed(r);
            if (isRed(l)) {
                return new Node(R,// h,
                                removeMin_(l), x, r);
            } else if (isBB && isBR) {
                return hardMin(t);
            } else if (isBB) {
                return balanceR(B,// h-1,
                                removeMin_(turnR(l)), x, turnR(r));
            } else {
                return new Node(R,// h,
                                new Node(B,// l.h,
                                         removeMin_(l.l), l.x, l.r), x, r);
            }
        }
        throw new Error("removeMin");
    };


    hardMin = function(t) {
        if (t !== EMPTY && t.c === R &&
            t.r !== EMPTY && t.r.c === B &&
            t.r.l !== EMPTY && t.r.l.c === R) {
            return new Node(R,
                            //t.h, 
                            new Node(B,// t.r.h,
                                     removeMin_(turnR(t.l)), t.x, t.r.l.l), 
                            t.r.l.x,
                            new Node(B,// t.r.h,
                                     t.r.l.r, t.r.x, t.r.r));
        }
        throw new Error("hardMin");
    };



    //////////////////////////////////////////////////////////////////////

    // turnB: llrbtree -> llrbtree
    turnB = function(tree) {
        if (tree === EMPTY) { throw new Error("turnB"); }
        return new Node(B, //tree.h,
                        tree.l, tree.x, tree.r);
    };

    // turnR: llrbtree -> llrbtree
    turnR = function(tree) {
        if (tree === EMPTY) { throw new Error("turnR"); }
        return new Node(R, //tree.h,
                        tree.l, tree.x, tree.r);
    };

    // turnR: llrbtree x -> llrbtree
    replaceX = function(tree, x) {
        if (tree === EMPTY) { throw new Error("replaceElt"); }
        return new Node(tree.c, //tree.h,
                        tree.l, x, tree.r);
    };

    // isBlack: llrbtree -> boolean
    isBlack = function(tree) {
        if (tree === EMPTY) { return true; }
        return tree.c === B;
    };

    // isRed: llrbtree -> boolean
    isRed = function(tree) {
        if (tree === EMPTY) { return false; }
        return tree.c === R;
    };

    // isBlackLeftBlack: llrbtree -> boolean
    isBlackLeftBlack = function(tree) {
        if (tree !== EMPTY) {
            if (tree.c === B) {
                if (tree.l === EMPTY) {
                    return true;
                } else {
                    return tree.l.c === B;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
    };


    // isBlackLeftRed: llrbtree -> boolean
    isBlackLeftRed = function(tree) {
        if (tree !== EMPTY) {
            if (tree.c === B) {
                if (tree.l !== EMPTY) {
                    return tree.l.c === R;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
    };


    // minimum: llrbtree -> X
    // Returns the minimum element in the tree.
    minimum = function(tree) {
        if (tree === EMPTY) { throw new Error("minimum"); }
        while(true) {
            if (tree.l === EMPTY) { 
                return tree.x;
            }
            tree = tree.l;
        }
    };



    //////////////////////////////////////////////////////////////////////
    // This Map makes it easier to use the llrbtree as an associative array.
    // The nodes on the tree are key/value pairs, the comparator of which
    // focuses only on the key portion of the pair.
    
    var Map = function(cmp, tree) {
        this.cmp = cmp;
        this.tree = tree;
    };

    var makeMap = function(keycmp) {
        keycmp = keycmp || function(x, y) { var sx = String(x), sy = String(y);
                                            if (sx < sy) { return -1; }
                                            if (sx > sy) { return 1; }
                                            return 0; };
        return new Map(
            function(n1, n2) {
                return keycmp(n1[0], n2[0]);
            },
            EMPTY);
    };

    Map.prototype.put = function(key, val) {
        return new Map(this.cmp,
                       insert(this.tree, [key, val], this.cmp));
    };

    Map.prototype.contains = function(key) {
        return contains(this.tree, [key, undefined], this.cmp);
    };

    var defaultOnFail = function() { 
        throw new Error("lookup failed"); 
    }; 

    Map.prototype.get = function(key, onFail) {
        var x;
        onFail = onFail || defaultOnFail;
        x = find(this.tree, [key, undefined], this.cmp);
        if (x === undefined) { return onFail(); }
        return x[1];
    };

    Map.prototype.remove = function(key) {
        return new Map(this.cmp,
                       remove(this.tree, [key, undefined], this.cmp));
    };

    Map.prototype.isEmpty = function() {
        return this.tree === EMPTY;
    };

    Map.prototype.keys = function() {
        var result = items(this.tree), i;
        for (i = 0; i < result.length; i++) {
            result[i] = result[i][0];
        }
        return result;
    };

    Map.prototype.values = function() {
        var result = items(this.tree), i;
        for (i = 0; i < result.length; i++) {
            result[i] = result[i][1];
        }
        return result;
    };

    Map.prototype.items = function() {
        var result = items(this.tree), i;
        for (i = 0; i < result.length; i++) {
            // Make sure to copy so that you can't damage the internal
            // key/value pairs.
            result[i] = result[i].slice(0);
        }
        return result;
    };

    // Return the color at the tree.
    Map.prototype.color = function() {
        if (this.tree === EMPTY) { return B; }
        return this.tree.c;
    };

    // Navigate left
    Map.prototype.left = function() {
        if (this.tree === EMPTY) { throw new Error("left"); }
        return new Map(this.cmp, this.tree.l);
    };

    // Navigate right
    Map.prototype.right = function() {
        if (this.tree === EMPTY) { throw new Error("right"); }
        return new Map(this.cmp, this.tree.r);
    };

    // Get the key at the tree
    Map.prototype.key = function() {
        if (this.tree === EMPTY) { throw new Error("key"); }
        return this.tree.x[0];
    };

    // Get the value at the tree.
    Map.prototype.val = function() {
        if (this.tree === EMPTY) { throw new Error("val"); }
        return this.tree.x[1];
    };





    //////////////////////////////////////////////////////////////////////
    LLRBTree.EMPTY = EMPTY;
    LLRBTree.insert = insert;
    LLRBTree.contains = contains;
    LLRBTree.find = find;
    LLRBTree.remove = remove;
    LLRBTree.items = items;


    LLRBTree.makeMap = makeMap;
}());/*jslint unparam: true, vars: true, white: true, newcap: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

/*global window,Hashtable*/

// Mutable hashtables.


(function (baselib, Hashtable) {
    'use strict';
    var exports = {};

    baselib.hashes = exports;


    
    var _eqHashCodeCounter = 0;
    var makeEqHashCode = function () {
        _eqHashCodeCounter++;
        return String(_eqHashCodeCounter);
    };


    // getEqHashCode: any -> string
    // Given a value, produces a hashcode appropriate for eq.
    var getEqHashCode = function (x) {
        if (typeof (x) === 'string') {
            return x;
        }
        if (typeof (x) === 'number') {
            return String(x);
        }
        if (x && !x._eqHashCode) {
            x._eqHashCode = makeEqHashCode();
        }
        if (x && x._eqHashCode) {
            return x._eqHashCode;
        }
        return '';
    };


    // getEqvHashCode: any -> string
    var getEqvHashCode = function (x) {
        if (baselib.numbers.isNumber(x)) {
            return baselib.numbers.toFixnum(x);
        }
        if (baselib.chars.isChar(x)) {
            return x.val;
        } 
        return getEqHashCode(x);
    };


    var eq = function (x, y) { return x === y; };
    var eqv = baselib.equality.eqv;
    var equal = function (x, y) {
        return baselib.equality.equals(x, y, new baselib.UnionFind()); 
    };


    // Creates a low-level hashtable, following the interface of 
    // http://www.timdown.co.uk/jshashtable/
    var makeLowLevelEqHash = function () {
        return new Hashtable(getEqHashCode,
                             function (x, y) { return x === y; });
    };


    var makeEqHashtable = function() { 
        return new WhalesongHashtable(
            "hasheq",
            getEqHashCode,
            eq,
            new Hashtable(getEqHashCode, eq));
    };

    var makeEqualHashtable = function() {
        return new WhalesongHashtable(
            "hash",
            getEqualHashCode,
            equal,
            new Hashtable(getEqualHashCode, equal));
    };
    
    
    var makeEqvHashtable = function() {
        return new WhalesongHashtable(
            "hasheqv",
            getEqvHashCode,
            eqv,
            new Hashtable(getEqvHashCode, eqv));
    };


    var makeImmutableEqHashtable = function() { 
        return makeEqHashtable().toImmutable();
    };

    var makeImmutableEqualHashtable = function() {
        return makeEqualHashtable().toImmutable();
    };
        
    var makeImmutableEqvHashtable = function() {
        return makeEqvHashtable().toImmutable();
    };


    // When we need to make comparators for the immutable hash tables, use this.
    var makeComparator = function(hash, eq) {
        return function(x, y) {
            var hx = hash(x), hy = hash(y);
            if (hx < hy) { return -1; }
            if (hx > hy) { return 1; }
            
            if (eq(x, y)) { return 0; }

            hx = getEqHashCode(x);
            hy = getEqHashCode(y);
            if (hx < hy) { return -1; }
            if (hx > hy) { return 1; }
            return 0;
        }
    };


    //////////////////////////////////////////////////////////////////////
    // Whalesong's Hashtables are a thin wrapper around the mutable Hashtable
    // class to make it printable and equatable.
    var WhalesongHashtable = function (type, hash_function, equality_function, hash) {
        this.type = type;
        this.hash_function = hash_function;
        this.equality_function = equality_function;
        this.hash = hash;
    };

    WhalesongHashtable.prototype.clone = function() {
        return new WhalesongHashtable(this.type, this.hash_function, this.equality_function, this.hash.clone());
    };

    WhalesongHashtable.prototype.size = function() {
        return this.hash.size();
    };

    WhalesongHashtable.prototype.toWrittenString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toWrittenString(keys[i], cache);
            var valStr = baselib.format.toWrittenString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };
    
    WhalesongHashtable.prototype.toDisplayedString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toDisplayedString(keys[i], cache);
            var valStr = baselib.format.toDisplayedString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };

    WhalesongHashtable.prototype.keys = function() {
        return this.hash.keys();
    };

    WhalesongHashtable.prototype.values = function() {
        return this.hash.values();
    };


    WhalesongHashtable.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof WhalesongHashtable)) {
            return false; 
        }
        if (other.type !== this.type) { 
            return false;
        }
        if (this.hash.keys().length !== other.hash.keys().length) { 
            return false;
        }

        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++) {
            if (!(other.hash.containsKey(keys[i]) &&
                  baselib.equality.equals(this.hash.get(keys[i]),
                                          other.hash.get(keys[i]),
                                          aUnionFind))) {
                return false;
            }
        }
        return true;
    };

    WhalesongHashtable.prototype.hashCode = function(depth) {
        var k = getEqualHashCode(this.type);
        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++) {
            k += hashMix(getEqualHashCode(this.hash.get(keys[i]), depth));
        }
        return hashMix(k);
    };


    WhalesongHashtable.prototype.get = function(key) {
        return this.hash.get(key);
    };

    WhalesongHashtable.prototype.put = function(key, value) {
        this.hash.put(key, value);
    };

    WhalesongHashtable.prototype.functionalPut = function(key, value) {
        return this.toImmutable().functionalPut(key, value);
    };

    WhalesongHashtable.prototype.remove = function(key) {
        this.hash.remove(key);
    };

    WhalesongHashtable.prototype.functionalRemove = function(key) {
        return this.toImmutable().functionalRemove(key);
    };

    WhalesongHashtable.prototype.containsKey = function(key) {
        return this.hash.containsKey(key);
    };

    WhalesongHashtable.prototype.isImmutable = function() {
        return false;
    };

    WhalesongHashtable.prototype.toImmutable = function() {
        var keycmp = makeComparator(this.hash_function, this.equality_function)
        var immutable = new WhalesongImmutableHashtable(
            this.type,
            this.hash_function,
            this.equality_function,
            LLRBTree.makeMap(keycmp));
        var keys = this.hash.keys();
        var i;
        for (i = 0; i < keys.length; i++) {
            immutable = immutable.functionalPut(keys[i], this.hash.get(keys[i]));
        }
        return immutable;
    };


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // Whalesong's immutable hashtables are a thin wrapper around the
    // llrbtree class to make it printable and equatable.
    // llrbtree comes from: https://github.com/dyoo/js-llrbtree
    var WhalesongImmutableHashtable = function (type,
                                                hash_function,
                                                equality_function,
                                                map) {
        this.type = type;
        this.hash_function = hash_function;
        this.equality_function = equality_function;
        this.map = map;
    };

    WhalesongImmutableHashtable.prototype.size = function() {
        return this.map.items().length;
    };


    WhalesongImmutableHashtable.prototype.toWrittenString = function (cache) {
        var items = this.map.items();
        var ret = [], i;
        for (i = 0; i < items.length; i++) {
            var keyStr = baselib.format.toWrittenString(items[i][0], cache);
            var valStr = baselib.format.toWrittenString(items[i][1], cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };
    
    WhalesongImmutableHashtable.prototype.toDisplayedString = function (cache) {
        var items = this.map.keys();
        var ret = [], i;
        for (i = 0; i < items.length; i++) {
            var keyStr = baselib.format.toDisplayedString(items[i][0], cache);
            var valStr = baselib.format.toDisplayedString(items[i][1], cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };

    WhalesongImmutableHashtable.prototype.keys = function() {
        return this.map.keys();
    };

    WhalesongImmutableHashtable.prototype.values = function() {
        return this.map.values();
    };

    WhalesongImmutableHashtable.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof WhalesongImmutableHashtable)) {
            return false; 
        }
        if (other.type !== this.type) { 
            return false;
        }
        var litems = this.map.items();
        var ritems = other.map.items();

        if (litems.length !== ritems.length) { 
            return false;
        }
        var i;
        for (i = 0; i < litems.length; i++) {
            if (!(baselib.equality.equals(litems[i][0], ritems[i][0], aUnionFind))) {
                return false;
            }
            if (!(baselib.equality.equals(litems[i][1], ritems[i][1], aUnionFind))) {
                return false;
            }
        }
        return true;
    };

    WhalesongImmutableHashtable.prototype.hashCode = function(depth) {
        var k = getEqualHashCode(this.type);
        var items = this.map.items(), i;
        for (i = 0; i < items.length; i++) {
            k = getEqualHashCode(items[i][0], depth);
            k = hashMix(k);
            k = getEqualHashCode(items[i][1], depth);
            k = hashMix(k);
        }
        return hashMix(k);
    };


    WhalesongImmutableHashtable.prototype.get = function(key) {
        return this.map.get(key);
    };

    WhalesongImmutableHashtable.prototype.put = function(key, value) {
        throw new Error();
    };

    WhalesongImmutableHashtable.prototype.functionalPut = function(key, value) {
        return new WhalesongImmutableHashtable(this.type,
                                               this.hash_function,
                                               this.equality_function,
                                               this.map.put(key, value));
    };

    WhalesongImmutableHashtable.prototype.remove = function(key) {
        throw new Error();
    };

    WhalesongImmutableHashtable.prototype.functionalRemove = function(key) {
        return new WhalesongImmutableHashtable(this.type,
                                               this.hash_function,
                                               this.equality_function,
                                               this.map.remove(key));
    };

    WhalesongImmutableHashtable.prototype.containsKey = function(key) {
        return this.map.contains(key);
    };

    WhalesongImmutableHashtable.prototype.isImmutable = function() { 
        return true;
    };
    //////////////////////////////////////////////////////////////////////    



    var isHash = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable);
    };

    var isHashEqual = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable) && x.type === 'hash';
    };

    var isHashEqv = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable) && x.type === 'hasheqv';
    };

    var isHashEq = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable) && x.type === 'hasheq';
    };



    // Arbitrary magic number.  We have to cut off the hashing at some point.
    var MAX_HASH_DEPTH = 128;

    // Returns a JavaScript number.
    var getEqualHashCode = function (x, depth) {
        var i, t, k = 0;
        if (depth === undefined) { depth = [0]; }

        if (depth[0] > MAX_HASH_DEPTH) { return 0; }

        if (baselib.numbers.isNumber(x)) {
            return hashMix(baselib.numbers.toFixnum(x));
        }

        if (baselib.strings.isString(x)) {
            t = x.toString();
            for (i = 0; i < t.length; i++) {
                k += t.charCodeAt(i);
                k = hashMix(k);
            }
            return k;
        }

        if (x === undefined || x === null) {
            return 1;
        }

        if (typeof(x) === 'object' &&
            typeof(x.hashCode) === 'function') {
            depth[0] = depth[0] + 1;
            return x.hashCode(depth);
        }
        return 0;
    };


    // Does some weird math on k.  Grabbed from Racket's implementation of hashes.
    // References to: http://www.burtleburtle.net/bob/hash/doobs.html
    var hashMix = function(k) {
        k += (k << 10);
        k ^= (k >> 6);
        return k;
    };



    //////////////////////////////////////////////////////////////////////

    exports.getEqHashCode = getEqHashCode;
    exports.getEqualHashCode = getEqualHashCode;
    exports.getEqvHashCode = getEqvHashCode;

    exports.hashMix = hashMix;

    exports.makeEqHashCode = makeEqHashCode;
    exports.makeLowLevelEqHash = makeLowLevelEqHash;

    exports.makeEqHashtable = makeEqHashtable;
    exports.makeEqvHashtable = makeEqvHashtable;
    exports.makeEqualHashtable = makeEqualHashtable;

    exports.makeImmutableEqHashtable = makeImmutableEqHashtable;
    exports.makeImmutableEqvHashtable = makeImmutableEqvHashtable;
    exports.makeImmutableEqualHashtable = makeImmutableEqualHashtable;

    exports.isHash = isHash;

    exports.isHashEqual = isHashEqual;
    exports.isHashEqv = isHashEqv;
    exports.isHashEq = isHashEq;
}(window.plt.baselib, Hashtable));}());
/*jslint vars: true, maxerr: 50, indent: 4 */

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.regexps = exports;


    // Regular expressions.

    var RegularExpression = function (pattern) {
        this.pattern = pattern;
    };


    var ByteRegularExpression = function (pattern) {
        this.pattern = pattern;
    };

    //////////////////////////////////////////////////////////////////////

    exports.RegularExpression = RegularExpression;
    exports.ByteRegularExpression = ByteRegularExpression;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */


(function (baselib) {
    'use strict';
    var exports = {};
    baselib.paths = exports;

    // Paths

    var Path = function (p) {
        this.path = p;
    };

    Path.prototype.toString = function () {
        return "#<path:" + String(this.path) + ">";
    };


    Path.prototype.equals = function(other, aUnionFind) {
        return (other instanceof Path &&
                this.path === other.path);
    };

    Path.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("path");
        k += baselib.hashes.getEqualHashCode(this.path, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };


    //////////////////////////////////////////////////////////////////////

    var makePath = function (p) {
        return new Path(p);
    };

    var isPath = baselib.makeClassPredicate(Path);



    exports.Path = Path;
    exports.makePath = makePath;
    exports.isPath = isPath;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Exceptions

(function(baselib) {
    'use strict';
    var exports = {};
    baselib.boxes = exports;


    //////////////////////////////////////////////////////////////////////
    // Boxes
    
    var Box = function(x, mutable) {
	this.val = x;
	this.mutable = mutable;
    };

    Box.prototype.ref = function() {
        return this.val;
    };

    Box.prototype.set = function(newVal) {
        if (this.mutable) {
	    this.val = newVal;
        }
    };

    Box.prototype.toString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toWrittenString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toDisplayedString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toDisplayedString(this.val, cache);
    };

    Box.prototype.toDomNode = function(params) {
        var node = document.createElement("span");
        if (params.getMode() === 'constructor') {
            node.appendChild(document.createTextNode("(box "));
            node.appendChild(params.recur(this.val));
            node.appendChild(document.createTextNode(")"));
        } else {
            node.appendChild(document.createTextNode('#&'));
            node.appendChild(params.recur(this.val));
        }
        return node;
    };

    Box.prototype.equals = function(other, aUnionFind) {
        return ((other instanceof Box) &&
	        baselib.equality.equals(this.val, other.val, aUnionFind));
    };

    Box.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Box");
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.val, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };

    
    var makeBox = function(x) { 
        return new Box(x, true); 
    };

    var makeImmutableBox = function(x) {
        return new Box(x, false); 
    };

    var isBox = function(x) {
        return x instanceof Box;
    };

    var isMutableBox = function(x) { 
        return (x instanceof Box && x.mutable); 
    };

    var isImmutableBox = function(x) { 
        return (x instanceof Box && (!x.mutable));
    };




    //////////////////////////////////////////////////////////////////////
    exports.Box = Box;
    exports.isBox = isBox;
    exports.isMutableBox = isMutableBox;
    exports.isImmutableBox = isImmutableBox;
    exports.makeBox = makeBox;
    exports.makeImmutableBox = makeImmutableBox;


}(this.plt.baselib));// Placeholders
/*jslint browser: true, unparam: true, vars: true, maxerr: 50, indent: 4 */
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.placeholders = exports;


    // Placeholders: same thing as boxes.  Distinct type just to support make-reader-graph.

    var Placeholder = function (x, mutable) {
        this.val = x;
    };

    Placeholder.prototype.ref = function () {
        return this.val;
    };

    Placeholder.prototype.set = function (newVal) {
        this.val = newVal;
    };

    Placeholder.prototype.toString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toWrittenString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDisplayedString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDomNode = function (cache) {
        var parent = document.createElement("span");
        parent.appendChild(document.createTextNode('#<placeholder>'));
        return parent;
    };

    Placeholder.prototype.equals = function (other, aUnionFind) {
        return ((other instanceof Placeholder) &&
                baselib.equality.equals(this.val, other.val, aUnionFind));
    };

    Placeholder.prototype.hashCode = function(depth) {
        var k = baselib.hashes.hashCode("Placeholder");
        k += baselib.hashes.hashCode(this.val, depth);
        return baselib.hashes.hashMix(k);
    };


    var makePlaceholder = function(v) {
        return new Placeholder(v);
    };

    var isPlaceholder = function (x) { 
        return x instanceof Placeholder; 
    };
    


    //////////////////////////////////////////////////////////////////////
    exports.Placeholder = Placeholder;
    exports.makePlaceholder = makePlaceholder;
    exports.isPlaceholder = isPlaceholder;



}(this.plt.baselib));/*jslint unparam: true, vars: true, maxerr: 50, indent: 4 */

// Keywords

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.keywords = exports;


    var Keyword = function (val) {
        this.val = val;
    };

    var keywordCache = {};
    
    // makeInstance: string -> Keyword.
    Keyword.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(keywordCache.hasOwnProperty(val))) {
            keywordCache[val] = new Keyword(val);
        }
        return keywordCache[val];
    };
    
    Keyword.prototype.equals = function (other, aUnionFind) {
        return other instanceof Keyword &&
            this.val === other.val;
    };

    Keyword.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Keyword");
        k += baselib.hashes.getEqualHashCode(this.val, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };
    

    Keyword.prototype.toString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toDisplayedString = function (cache) {
        return this.val;
    };


    exports.Keyword = Keyword;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    "use strict";
    var exports = {};
    baselib.structs = exports;



    //////////////////////////////////////////////////////////////////////

    var Struct = function (constructorName, fields, structType) {
        this._constructorName = constructorName; 
        this._fields = [];
        this.structType = structType;
    };

    Struct.prototype.toWrittenString = function (cache) { 
        var buffer = [], i;
        cache.put(this, true);
        buffer.push("(");
        buffer.push(this._constructorName);
        for(i = 0; i < this._fields.length; i++) {
            buffer.push(" ");
            buffer.push(baselib.format.toWrittenString(this._fields[i], cache));
        }
        buffer.push(")");
        return buffer.join("");
    };

    Struct.prototype.toDisplayedString = function (cache) {
        return baselib.format.toWrittenString(this, cache); 
    };

    Struct.prototype.toDomNode = function (params) {
        var node = document.createElement("span"), i;
        $(node).append(document.createTextNode("("));
        $(node).append(document.createTextNode(this._constructorName));
        for(i = 0; i < this._fields.length; i++) {
            $(node).append(document.createTextNode(" "));
            $(node).append(params.recur(this._fields[i]));
        }
        $(node).append(document.createTextNode(")"));
        return node;
    };


    Struct.prototype.equals = function (other, aUnionFind) {
        var i;
        if (!(other instanceof this.type)) {
            return false;
        }
        for (i = 0; i < this._fields.length; i++) {
            if (! baselib.equality.equals(this._fields[i],
                                          other._fields[i],
                                          aUnionFind)) {
                return false;
            }
        }
        return true;
    };

    Struct.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode(this.name);
        var i;
        k = baselib.hashes.hashMix(k);
        for (i = 0; i < this._fields.length; i++) {
            k += baselib.hashes.getEqualHashCode(this._fields[i], depth);
            k = baselib.hashes.hashMix(k);
        }
        return k;
    };


    Struct.prototype.type = Struct;


    //////////////////////////////////////////////////////////////////////


    var StructType = function (name,             // string
                               type,             // StructType
                               numberOfArgs,     // number
                               numberOfFields,   // number
                               firstField,
                               applyGuard,
                               constructor,
                               predicate, 
                               accessor,
                               mutator,
                               propertiesList) {
        this.name = name;
        this.type = type;
        this.numberOfArgs = numberOfArgs;
        this.numberOfFields = numberOfFields;
        this.firstField = firstField;

        this.applyGuard = applyGuard;
        this.constructor = constructor;
        this.predicate = predicate;
        this.accessor = accessor;
        this.mutator = mutator;
        this.propertiesList = propertiesList;
    };


    StructType.prototype.toString = function (cache) {
        return '#<struct-type:' + this.name + '>';
    };


    StructType.prototype.equals = function (other, aUnionFind) {
        return this === other;
    };

    StructType.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("StructType");
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.name);
        k = baselib.hashes.hashMix(k);
        return k;
    };




    // guard-function: array string (array -> value)





    // Default structure guard just calls the continuation argument.
    var DEFAULT_GUARD = function (args, name, k) { 
        return k(args); 
    };


    // The default parent type refers to the toplevel Struct.
    var DEFAULT_PARENT_TYPE = { type: Struct,
                                numberOfArgs: 0,
                                numberOfFields: 0,
                                firstField: 0,
                                applyGuard: DEFAULT_GUARD };



    // makeStructureType: string StructType number number boolean
    //                    guard-function -> StructType
    //
    // Creates a new structure type.

    var makeStructureType = function (theName,
                                      parentType, 
                                      initFieldCnt, 
                                      autoFieldCnt, 
                                      autoV, 
                                      guard,
                                      propertiesList) {


        // Defaults
        autoFieldCnt = autoFieldCnt || 0;
        parentType = parentType || DEFAULT_PARENT_TYPE;
        guard = guard || DEFAULT_GUARD;


        // RawConstructor creates a new struct type inheriting from
        // the parent, with no guard checks.
        var RawConstructor = function (name, args, structType) {
            var i;
            parentType.type.call(this, name, args, structType);
            for (i = 0; i < initFieldCnt; i++) {
                this._fields.push(args[i+parentType.numberOfArgs]);
            }
            for (i = 0; i < autoFieldCnt; i++) {
                this._fields.push(autoV);
            }
        };
        RawConstructor.prototype = baselib.heir(parentType.type.prototype);

        var theNameSymbol = 
            baselib.symbols.Symbol.makeInstance(theName);

        // Set type, necessary for equality checking
        RawConstructor.prototype.type = RawConstructor;


        var constructAfterGuard =  function (res) { 
            return new RawConstructor(theName, res, newType); 
        };

        // The structure type consists of the name, its constructor, a
        // record of how many argument it and its parent type contains,
        // the list of autofields, the guard, and functions corresponding
        // to the constructor, the predicate, the accessor, and mutators.
        var newType = new StructType(
            theName,
            RawConstructor,
            initFieldCnt + parentType.numberOfArgs,
            initFieldCnt + autoFieldCnt,
            parentType.firstField + parentType.numberOfFields,
            function (args, name, k) {
                return guard(args, name,
                             function (result) {
                                 var parentArgs = result.slice(0, parentType.numberOfArgs);
                                 var restArgs = result.slice(parentType.numberOfArgs);
                                 return parentType.applyGuard(
                                     parentArgs, name,
                                     function (parentRes) {
                                         return k( parentRes.concat(restArgs) ); });
                             });
            },
            // constructor
            function (args) {
                return newType.applyGuard(
                    args,
                    theNameSymbol,
                    constructAfterGuard);
            },

            // predicate
            function (x) { 
                return x instanceof RawConstructor; 
            },

            // accessor
            function (x, i) { return x._fields[i + this.firstField]; },

            // mutator
            function (x, i, v) { x._fields[i + this.firstField] = v; },

            // structure properties list
            propertiesList);
        return newType;
    };




    var StructTypeProperty = function(name, guards, supers) {
        this.name = name;
        this.guards = guards;
        this.supers = supers;
    };



    // supportsStructureTypeProperty: StructType StructureTypeProperty -> boolean
    // Produces true if the structure type provides a binding for the
    // given structure property.
    var supportsStructureTypeProperty = function(structType, property) {
        var propertiesList = structType.propertiesList;
        if (! propertiesList) {
            return false;
        }
        while (propertiesList !== baselib.lists.EMPTY) {
            if (propertiesList.first.first === property) {
                return true;
            }
            propertiesList = propertiesList.rest;
        }
        return false;
    };


    // lookupStructureTypeProperty: StructType StructureTypeProperty -> any
    // Returns the binding associated to this particular structure type propery.
    var lookupStructureTypeProperty = function(structType, property) {
        var propertiesList = structType.propertiesList;
        if (! propertiesList) {
            return undefined;
        }
        while (propertiesList !== baselib.lists.EMPTY) {
            if (propertiesList.first.first === property) {
                return propertiesList.first.rest;
            }
            propertiesList = propertiesList.rest;
        }
        return undefined;
    };


    // A structure type property for noting if an exception supports
    var propExnSrcloc = new StructTypeProperty("prop:exn:srcloc");



    var isStruct = baselib.makeClassPredicate(Struct);
    var isStructType = baselib.makeClassPredicate(StructType);
    var isStructTypeProperty = baselib.makeClassPredicate(StructTypeProperty);



    //////////////////////////////////////////////////////////////////////


    exports.StructType = StructType;
    exports.Struct = Struct;
    exports.makeStructureType = makeStructureType;

    exports.StructTypeProperty = StructTypeProperty;
    exports.supportsStructureTypeProperty = supportsStructureTypeProperty;
    exports.lookupStructureTypeProperty = lookupStructureTypeProperty;

    exports.propExnSrcloc = propExnSrcloc;

    exports.isStruct = isStruct;
    exports.isStructType = isStructType;
    exports.isStructTypeProperty = isStructTypeProperty;
}(this.plt.baselib, $));/*jslint vars: true, white: true, plusplus: false, maxerr: 50, indent: 4 */
(function(baselib) {
    'use strict';

    var exports = {};
    baselib.srclocs = exports;

    // (define-struct srcloc (source line column position span))
    var srcloc = baselib.structs.makeStructureType(
        'srcloc', false, 5, 0, false, false);
    
    var makeSrcloc = function() { 
        var args = [].slice.call(arguments);
        return srcloc.constructor(args);
    };

    var isSrcloc = srcloc.predicate;
    var srclocSource = function(x) { return srcloc.accessor(x, 0); };
    var srclocLine = function(x) { return srcloc.accessor(x, 1); };
    var srclocColumn = function(x) { return srcloc.accessor(x, 2); };
    var srclocPosition = function(x) { return srcloc.accessor(x, 3); };
    var srclocSpan = function(x) { return srcloc.accessor(x, 4); };

    //////////////////////////////////////////////////////////////////////
    exports.makeSrcloc = makeSrcloc;
    exports.isSrcloc = isSrcloc;
    exports.srclocSource = srclocSource;
    exports.srclocLine = srclocLine;
    exports.srclocColumn = srclocColumn;
    exports.srclocPosition = srclocPosition;
    exports.srclocSpan = srclocSpan;

}(this.plt.baselib));// Arity structure
/*jslint unparam: true, sub: true, vars: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    'use strict';
    var exports = {};
    baselib.ports = exports;


    // Output Ports
    var OutputPort = function () {};
    var isOutputPort = baselib.makeClassPredicate(OutputPort);


    var StandardOutputPort = function () {
        OutputPort.call(this);
    };
    StandardOutputPort.prototype = baselib.heir(OutputPort.prototype);
    StandardOutputPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };

    var StandardErrorPort = function () {
        OutputPort.call(this);
    };
    StandardErrorPort.prototype = baselib.heir(OutputPort.prototype);
    StandardErrorPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentErrorDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };





    var OutputStringPort = function () {
        this.buf = [];
    };
    OutputStringPort.prototype = baselib.heir(OutputPort.prototype);
    OutputStringPort.prototype.writeDomNode = function (MACHINE, v) {
        this.buf.push($(v).text());
    };
    OutputStringPort.prototype.getOutputString = function () {
        return this.buf.join('');
    };
    var isOutputStringPort = baselib.makeClassPredicate(OutputStringPort);




    // Input ports
    // Input Ports need to provide two things:
    //
    // readByte:
    // callWhenReady:

    var InputPort = function () {};
    InputPort.prototype.readByte = function(MACHINE) {
        return baselib.constants.EOF_VALUE;
    };
    InputPort.prototype.callWhenReady = function(MACHINE, k) {
        throw new Error("unimplemented");
    };
    var isInputPort = baselib.makeClassPredicate(InputPort);


    var StandardInputPort = function() {
        this.content = [];
        this.closed = false;
    };
    StandardInputPort.prototype = baselib.heir(InputPort.prototype);

    StandardInputPort.prototype.readByte = function(MACHINE) {
        if (this.content.length !== 0) {
            return this.content.shift();
        }
        return baselib.constants.EOF_VALUE;
    };

    StandardInputPort.prototype.callWhenReady = function(MACHINE, k) {
        if (this.content.length > 0) {
            return k();
        }
        if (this.closed) {
            return k();
        }
        var that = this;
        var textFieldDiv = $("<div>" +
                             "  <input class='readline' type='text' size='80%'/>" +
                             "  <input class='eofread' type='button' value='EOF'/>"+
                             "</div>");
        var readLine = textFieldDiv.find(".readline");
        var eofRead = textFieldDiv.find(".eofread");
        var cleanupAndContinue = function() {
            readLine.unbind('keypress');
            eofRead.unbind('click');
            textFieldDiv.remove();
            return k();
        };

        readLine.keypress(
            function(e) {
                var val, i;
                // On return, send the text content into that.content;
                if (e.which === 13) {
                    e.stopPropagation();
                    e.preventDefault();
                    val = readLine.val();
                    for (i = 0; i < val.length; i++) {
                        that.content.push(val.charCodeAt(i));
                    }
                    that.content.push('\n'.charCodeAt(0));
                    cleanupAndContinue();
                }
            });
        eofRead.click(
            function(e) {
                e.stopPropagation();
                e.preventDefault();
                that.closed = true;
                cleanupAndContinue();
            });
        MACHINE.params['currentDisplayer'](MACHINE, textFieldDiv.get(0));
        readLine.focus();
    };


    //////////////////////////////////////////////////////////////////////
    exports.OutputPort = OutputPort;
    exports.isOutputPort = isOutputPort;
    exports.StandardOutputPort = StandardOutputPort;
    exports.StandardErrorPort = StandardErrorPort;
    exports.OutputStringPort = OutputStringPort;
    exports.isOutputStringPort = isOutputStringPort;

    exports.InputPort = InputPort;
    exports.isInputPort = isInputPort;
    exports.StandardInputPort = StandardInputPort;


}(this.plt.baselib, $));/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Procedures

// For historical reasons, this module is called 'functions' instead of 'procedures'.
// This may change soon.

/*global plt*/

(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.functions = exports;
    
    // Procedure types: a procedure is either a Primitive or a Closure.

    // A Primitive is a function that's expected to return.  It is not
    // allowed to call into Closures.  Its caller is expected to pop off
    // its argument stack space.
    //






    // A Closure is a function that takes on more responsibilities: it is
    // responsible for popping off stack space before it finishes, and it
    // is also explicitly responsible for continuing the computation by 
    // popping off the control stack and doing the jump.  Because of this,
    // closures can do pretty much anything to the machine.

    // A closure consists of its free variables as well as a label
    // into its text segment.
    var Closure = function (label, arity, closedVals, displayName) {
        this.label = label;              // (MACHINE -> void)
        this.racketArity = arity;              // number
        this.closedVals = closedVals;    // arrayof number
        this.displayName = displayName;  // string
    };


    // Finalize the return from a closure.  This is a helper function
    // for those who implement Closures by hand.
    //
    // If used in the body of a Closure, it must be in tail
    // position.  This finishes the closure call, and does the following:
    //
    //     * Clears out the existing arguments off the stack frame
    //     * Sets up the return value
    //     * Jumps either to the single-value return point, or the multiple-value
    //       return point.
    //
    // I'd personally love for this to be a macro and avoid the
    // extra function call here.
    var finalizeClosureCall = function (MACHINE) {
        MACHINE.cbt--;
        var returnArgs = [].slice.call(arguments, 1);

        // clear out stack space
        MACHINE.e.length -= MACHINE.a;

        if (returnArgs.length === 1) {
            MACHINE.v = returnArgs[0];
            return MACHINE.c.pop().label(MACHINE);
        } else if (returnArgs.length === 0) {
            MACHINE.a = 0;
            return (MACHINE.c.pop().label.mvr || plt.runtime.si_context_expected_1)(MACHINE);
        } else {
            MACHINE.a = returnArgs.length;
            MACHINE.v = returnArgs.shift();
            MACHINE.e.push.apply(MACHINE.e, returnArgs.reverse());
            return (MACHINE.c.pop().label.mvr || plt.runtime.si_context_expected_1)(MACHINE);
        }
    };


    var isClosure = function (x) {
        return x instanceof Closure;
    };


    var isProcedure = function (x) {
        return (typeof (x) === 'function' ||
                x instanceof Closure);
    };








  
    var coersePrimitiveToJavaScript = function (v, MACHINE) {
        return function (succ, fail) {
            try {
                succ = succ || function () {};
                fail = fail || function () {};

                var oldArgcount = MACHINE.a, i;
                MACHINE.a = arguments.length - 2;
                for (i = 0; i < arguments.length - 2; i++) {
                    MACHINE.e.push(arguments[arguments.length - 1 - i]);
                }

                if (!(baselib.arity.isArityMatching(v.racketArity, MACHINE.a))) {
                    var msg = baselib.format.format("arity mismatch: ~s expected ~s arguments, but received ~s",
                                                    [v.displayName, v.racketArity, MACHINE.a]);
                    return fail(new baselib.exceptions.RacketError(
                        msg,
                        baselib.exceptions.makeExnFailContractArity(msg,
                                                                    MACHINE.captureContinuationMarks())));
                }

                var result = v(MACHINE);
                MACHINE.a = oldArgcount;
                for (i = 0; i < arguments.length - 2; i++) { 
                    MACHINE.e.pop();
                }
                succ(result);
            } catch (e) {
                fail(e);
            }
        };
    };

    var coerseClosureToJavaScript = function (v, MACHINE) {
        var f = function (succ, fail) {
            var args = [];
            var i;
            for (i = 0; i < arguments.length; i++) {
                args.push(arguments[i]);
            }

            MACHINE.exclusiveLock.acquire(
                "js-as-closure",
                function(releaseLock) {
                    succ = succ || function () {};
                    fail = fail || function () {};                    
                    if (!(baselib.arity.isArityMatching(v.racketArity, args.length - 2))) {
                        var msg = baselib.format.format(
                            "arity mismatch: ~s expected ~s argument(s) but received ~s",
                            [v.displayName, v.racketArity, args.length - 2]);
                        releaseLock();
                        return fail(new baselib.exceptions.RacketError(
                            msg,
                            baselib.exceptions.makeExnFailContractArity(msg,
                                                                        MACHINE.captureContinuationMarks())));
                    }

                    var oldVal = MACHINE.v;
                    var oldArgcount = MACHINE.a;
                    var oldProc = MACHINE.p;
                    var oldErrorHandler = MACHINE.params['currentErrorHandler'];

                    var afterGoodInvoke = function (MACHINE) { 
                        plt.runtime.PAUSE(
                            function (restart) {
                                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                                var returnValue = MACHINE.v;
                                MACHINE.v = oldVal;
                                MACHINE.a = oldArgcount;
                                MACHINE.p = oldProc;
                                succ(returnValue);
                            });
                    };
                    afterGoodInvoke.mvr = function (MACHINE) {
                        plt.runtime.PAUSE(
                            function (restart) {
                                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                                var returnValues = [MACHINE.v], i;
                                for (i = 0; i < MACHINE.a - 1; i++) {
                                    returnValues.push(MACHINE.e.pop());
                                }
                                MACHINE.v = oldVal;
                                MACHINE.a = oldArgcount;
                                MACHINE.p = oldProc;
                                succ.apply(null, returnValues);
                            });
                    };

                    MACHINE.c.push(
                        new baselib.frames.CallFrame(afterGoodInvoke, v));
                    MACHINE.a = args.length - 2;
                    var i;
                    for (i = 0; i < args.length - 2; i++) {
                        MACHINE.e.push(args[args.length - 1 - i]);
                    }
                    MACHINE.p = v;
                    MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
                        MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                        MACHINE.v = oldVal;
                        MACHINE.a = oldArgcount;
                        MACHINE.p = oldProc;
                        fail(e);
                    };  

                    MACHINE._trampoline(v.label, false, releaseLock);
                });
        };
        return f;
    };

    // coerseToJavaScript: racket function -> JavaScript function
    // Given a closure or primitive, produces an
    // asynchronous JavaScript function.
    // The function will run on the provided MACHINE.
    //
    // It assumes that it must begin its own trampoline.
    var asJavaScriptFunction = function (v, MACHINE) {
        MACHINE = MACHINE || plt.runtime.currentMachine;
        if (isClosure(v)) {
            return coerseClosureToJavaScript(v, MACHINE);
        } else {
            baselib.exceptions.raise(MACHINE,
                                     baselib.exceptions.makeExnFailContract(
                                         baselib.format.format(
                                             "Not a procedure: ~e",
                                             v),
                                         MACHINE.captureContinuationMarks()));
        }
    };


    // internallCallDuringPause: call a Racket procedure and get its results.
    // The use assumes the machine is in a running-but-paused state, where the
    // lock is still in effect.  The lock will continue to be in effect
    // after coming back from the internal call.
    var internalCallDuringPause = function (MACHINE, proc, success, fail) {
        var args = [];
        var i;
        for (i = 0; i < arguments.length; i++) {
            args.push(arguments[i]);
        }

        var i;
        var oldArgcount, oldVal, oldProc, oldErrorHandler, oldControlLength, oldEnvLength;
        if (! baselib.arity.isArityMatching(proc.racketArity, args.length - 4)) {
            var msg = baselib.format.format("arity mismatch: ~s expected ~s arguments, but received ~s",
                                            [proc.displayName, proc.racketArity, args.length - 4]);
            fail(baselib.exceptions.makeExnFailContractArity(msg,
                                                             MACHINE.captureContinuationMarks()));
        }

        if (! isClosure(proc)) {
            fail(baselib.exceptions.makeExnFail(
                baselib.format.format(
                    "Not a procedure: ~e",
                    proc),
                MACHINE.captureContinuationMarks()));

        }

        oldVal = MACHINE.v;
        oldArgcount = MACHINE.a;
        oldProc = MACHINE.p;
        oldControlLength = MACHINE.c.length;
        oldEnvLength = MACHINE.e.length;

        oldErrorHandler = MACHINE.params['currentErrorHandler'];
        var afterGoodInvoke = function (MACHINE) { 
            plt.runtime.PAUSE(function (restart) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                var returnValue = MACHINE.v;
                MACHINE.v = oldVal;
                MACHINE.a = oldArgcount;
                MACHINE.p = oldProc;
                success(returnValue);
            });
        };
        afterGoodInvoke.mvr = function (MACHINE) {
            plt.runtime.PAUSE(function (restart) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                var returnValues = [MACHINE.v];
                var i;
                for (i = 0; i < MACHINE.a - 1; i++) {
                    returnValues.push(MACHINE.e.pop());
                }
                MACHINE.v = oldVal;
                MACHINE.a = oldArgcount;
                MACHINE.p = oldProc;
                success.apply(null, returnValues);
            });
        };

        MACHINE.c.push(
            new baselib.frames.CallFrame(afterGoodInvoke, proc));
        MACHINE.a = args.length - 4;
        for (i = 0; i < args.length - 4; i++) {
            MACHINE.e.push(args[args.length - 1 - i]);
        }
        MACHINE.p = proc;
        MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
            MACHINE.v = oldVal;
            MACHINE.a = oldArgcount;
            MACHINE.p = oldProc;
            MACHINE.c.length = oldControlLength;
            MACHINE.e.length = oldEnvLength;
            fail(e);
        };
        MACHINE._trampoline(proc.label, 
                            false, 
                            function() {
                                // The lock should still being held, so we don't
                                // automatically unlock control.
                            });
    };







    var makeClosure = function (name, arity, f, closureArgs) {
        if (! closureArgs) { closureArgs = []; }
        return new Closure(f,
                           arity,
                           closureArgs,
                           name);
    };


    var makePrimitiveProcedure = function (name, arity, f) {
        var proc = makeClosure(name,
                               arity,
                               function(M) {
                                   M.cbt--;
                                   M.v = f(M);
                                   M.e.length -= M.a;
                                   return M.c.pop().label(M);
                               },
                               []);
        // Also, record the raw implementation of the function.
        proc._i = f;
        return proc;
    };








    var renameProcedure = function (f, name) {
        return makeClosure(name, f.racketArity, f.label, f.closedVals);
    };



    // Applying a procedure.
    // Assumptions: the procedure register has been assigned, as has
    // the argcount and environment.
    // Must be running in the context of a trampoline.
    var rawApply = function(M) {
        M.cbt--;
        if (baselib.arity.isArityMatching(M.p.racketArity, M.a)) {
            return M.p.label(M);
        } else {
            baselib.exceptions.raiseArityMismatchError(M, M.p, M.a);
        }
    };



    //////////////////////////////////////////////////////////////////////
    exports.Closure = Closure;
    exports.internalCallDuringPause = internalCallDuringPause;
    exports.finalizeClosureCall = finalizeClosureCall;

    exports.makePrimitiveProcedure = makePrimitiveProcedure;
    exports.makeClosure = makeClosure;

    exports.isClosure = isClosure;

    exports.isProcedure = isProcedure;


    exports.renameProcedure = renameProcedure;

    exports.asJavaScriptFunction = asJavaScriptFunction;
    exports.rawApply = rawApply;


}(this.plt.baselib, this.plt));/*jslint sub: true, vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*global plt*/

// Modules
(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.modules = exports;


    var ModuleRecord = function (name, label) {
        this.name = name;
        this.label = label;
        this.isInvoked = false;
        this.prefix = false;
        this.namespace = {};

        // JavaScript-implemented code will assign privateExports
        // with all of the exported identifiers.
        this.privateExports = {};
    };

    // Returns access to the names defined in the module.
    ModuleRecord.prototype.getNamespace = function () {
        return this.namespace;
    };

    ModuleRecord.prototype.finalizeModuleInvokation = function () {
        var i, len = this.prefix.names.length;
        for (i = 0; i < len; i++) {
            this.namespace[this.prefix.names[i]] = this.prefix[i];
        }
    };
    

    // External invokation of a module.
    ModuleRecord.prototype.invoke = function (MACHINE, succ, fail) {
        this._invoke(false, MACHINE, succ, fail);
    };

    // Internal invokation of a module.
    ModuleRecord.prototype.internalInvoke = function (MACHINE, succ, fail) {
        this._invoke(true, MACHINE, succ, fail);
    };

    // Private: general invokation of a module
    ModuleRecord.prototype._invoke = function (isInternal, MACHINE, succ, fail) {
        var that = this;
        MACHINE = MACHINE || plt.runtime.currentMachine;
        succ = succ || function () {};
        fail = fail || function () {};

        var oldErrorHandler = MACHINE.params['currentErrorHandler'];
        var afterGoodInvoke = function (MACHINE) { 
            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
            if (isInternal) { succ(); }
            else {
                throw new plt.runtime.HaltError(succ)
            }
        };

        if (this.isInvoked) {
            succ();
        } else {
            if (isInternal) {
                MACHINE.params['currentErrorHandler'] = function (MACHINE, anError) {
                    MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                    fail(MACHINE, anError);
                };
                MACHINE.c.push(new plt.baselib.frames.CallFrame(afterGoodInvoke, null));
                throw that.label;
            } else {
                MACHINE.exclusiveLock.acquire(
                    undefined,
                    function(release) {
                        MACHINE.params['currentErrorHandler'] = function (MACHINE, anError) {
                            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                            fail(MACHINE, anError);
                        };
                        MACHINE.c.push(new plt.baselib.frames.CallFrame(afterGoodInvoke, null));
                        MACHINE._trampoline(that.label, false, release);
                    });
            }
        }
    };
    


    exports.ModuleRecord = ModuleRecord;


}(this.plt.baselib, this.plt));/*global plt*/
/*jslint browser: true, unparam: true, vars: true, white: true, maxerr: 50, indent: 4 , plusplus: true */

// Continuation marks
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.contmarks = exports;


    var ContinuationMarkSet = function(kvlists) {
        this.kvlists = kvlists;
    };


    ContinuationMarkSet.prototype.shift = function() {
        this.kvlists.shift();
    };

    ContinuationMarkSet.prototype.toDomNode = function(params) {
        var dom = document.createElement("span");
        dom.appendChild(document.createTextNode('#<continuation-mark-set>'));
        return dom;
    };

    ContinuationMarkSet.prototype.toWrittenString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.toDisplayedString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.ref = function(key) {
        var i, j;
        var result = [];
        var kvlist;
        for (i = 0; i < this.kvlists.length; i++) {
            kvlist = this.kvlists[i];
            for (j = 0; j < kvlist.length; j++) {
                if (baselib.equality.equals(kvlist[j][0], key)) {
                    result.push(kvlist[j][1]);
                }
            }
        }
        return baselib.lists.arrayToList(result);
    };

    // Returns an approximate stack trace.
    // getContext: MACHINE -> (arrayof (U Procedure (Vector source line column position span)))
    ContinuationMarkSet.prototype.getContext = function(MACHINE) {
        var i, j;
        var result = [];
        var kvlist;

        var tracedAppKey = plt.runtime.getTracedAppKey(MACHINE);
        var tracedCalleeKey = plt.runtime.getTracedCalleeKey(MACHINE);
        var proc, locationVector;

        for (i = 0; i < this.kvlists.length; i++) {
            kvlist = this.kvlists[i];
            for (j = 0; j < kvlist.length; j++) {
                if (kvlist[j][0] === tracedAppKey) {
                    locationVector = kvlist[j][1];
                    result.push(locationVector);
                } else if (kvlist[j][0] === tracedCalleeKey) {
                    proc = kvlist[j][1];
                    if (proc !== null) {
                        result.push(proc);
                    }
                }
            }
        }
        return result;
    };


    var isContinuationMarkSet = baselib.makeClassPredicate(ContinuationMarkSet);





    // A continuation prompt tag labels a prompt frame.
    var ContinuationPromptTag = function(name) {
	this.name = name;         // String

    };


    var isContinuationPromptTag = baselib.makeClassPredicate(ContinuationPromptTag);

    var DEFAULT_CONTINUATION_PROMPT_TAG =
        new ContinuationPromptTag("default-continuation-prompt-tag");


    exports.ContinuationMarkSet = ContinuationMarkSet;
    exports.isContinuationMarkSet = isContinuationMarkSet;
    exports.ContinuationPromptTag = ContinuationPromptTag;

    exports.isContinuationPromptTag = isContinuationPromptTag;
    exports.DEFAULT_CONTINUATION_PROMPT_TAG = DEFAULT_CONTINUATION_PROMPT_TAG;
}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.arity = exports;



    var ArityAtLeast = baselib.structs.makeStructureType(
        'arity-at-least', false, 1, 0, false, false);


    // An arity is either a primitive number, an ArityAtLeast instance,
    // or a list of either primitive numbers or ArityAtLeast instances.



    var isArityAtLeast = ArityAtLeast.predicate;
    var arityAtLeastValue = function(x) { 
        var val = ArityAtLeast.accessor(x, 0);
        return val;
    };


    ArityAtLeast.type.prototype.toString = function() {
        return '#<arity-at-least ' + arityAtLeastValue(this) + '>';
    };



    // isArityMatching: arity natural -> boolean
    // Produces true if n satisfies the arity.
    var isArityMatching = function(arity, n) {
	if (typeof(arity) === 'number') {
	    return arity === n;
	} else if (isArityAtLeast(arity)) {
	    return n >= arityAtLeastValue(arity);
	} else {
	    while (arity !== baselib.lists.EMPTY) {
		if (typeof(arity.first) === 'number') {
		    if (arity.first === n) { return true; }
		} else if (isArityAtLeast(arity.first)) {
		    if (n >= arityAtLeastValue(arity.first)) { return true; }
		}
		arity = arity.rest;
	    }
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////

    exports.ArityAtLeast = ArityAtLeast;
    exports.makeArityAtLeast = function() { 
        var args = [].slice.call(arguments);
        return ArityAtLeast.constructor(args);
    };
    exports.isArityAtLeast = isArityAtLeast;
    exports.isArityMatching = isArityMatching;
    exports.arityAtLeastValue = arityAtLeastValue;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Structure types

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.inspectors = exports;


    var Inspector = function () {
    };
    var DEFAULT_INSPECTOR = new Inspector();

    Inspector.prototype.toString = function () {
        return "#<inspector>";
    };

    var isInspector = baselib.makeClassPredicate(Inspector);



    exports.Inspector = Inspector;
    exports.DEFAULT_INSPECTOR = DEFAULT_INSPECTOR;

    exports.isInspector = isInspector;


}(this.plt.baselib));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Exceptions

(function(baselib) {
    'use strict';
    var exceptions = {};
    baselib.exceptions = exceptions;



    var RacketError = function(message, racketError) {
        Error.call(this, message);
        this.message = message;
        this.racketError = racketError;
    };
    RacketError.prototype = baselib.heir(Error.prototype);
    var isRacketError = baselib.makeClassPredicate(RacketError);



    // (define-struct exn (message continuation-mark-set))
    var Exn = baselib.structs.makeStructureType(
        'exn', false, 2, 0, false, false);


    // (define-struct (exn:break exn) (continuation))
    var ExnBreak = baselib.structs.makeStructureType(
        'exn:break', Exn, 1, 0, false, false);


    var ExnFail = baselib.structs.makeStructureType(
        'exn:fail', Exn, 0, 0, false, false);

    var ExnFailContract = baselib.structs.makeStructureType(
        'exn:fail:contract', ExnFail, 0, 0, false, false);

    var ExnFailContractArity = baselib.structs.makeStructureType(
        'exn:fail:contract:arity', ExnFailContract, 0, 0, false, false);

    // exn:fail:contract (id)
    var ExnFailContractVariable = baselib.structs.makeStructureType(
        'exn:fail:contract:variable', ExnFailContract, 1, 0, false, false);

    var ExnFailContractDivisionByZero = baselib.structs.makeStructureType(
        'exn:fail:contract:divide-by-zero', ExnFailContract, 0, 0, false, false);





    var exceptionHandlerKey = new baselib.symbols.Symbol("exnh");





    //////////////////////////////////////////////////////////////////////

    // Raise error to the toplevel.

    // If the error is of an exception type, make sure e.message holds the string
    // value to allow integration with systems that don't recognize Racket error 
    // structures.
    var raise = function(MACHINE, e) { 
        if (isRacketError(e) && Exn.predicate(e.racketError)) {
            e.message = Exn.accessor(e.racketError, 0);
        } else if (Exn.predicate(e)) {
            e = new RacketError(Exn.accessor(e, 0), e);
        }

        if (typeof(window.console) !== 'undefined' &&
            typeof(window.console['log']) === 'function') {
            window.console.log(MACHINE);
            if (e['stack']) { window.console.log(e['stack']); }
            else { window.console.log(e); }
        } 
        throw e; 
    };


    var raiseFailure = function(MACHINE, msg) {
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFail.constructor([msg, contMarks]));
    };

    var raiseContractError = function(MACHINE, msg) {
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContract.constructor([msg, contMarks]));
    };



    var raiseUnboundToplevelError = function(MACHINE, name) {
        var message = baselib.format.format("Not bound: ~a", [name]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, 
              ExnFailContractVariable.constructor([message, 
                                                   contMarks, 
                                                   baselib.symbols.makeSymbol(name)])); 
    };


    var raiseArgumentTypeError = function(MACHINE, 
                                          callerName,
                                          expectedTypeName,
                                          argumentOffset,
                                          actualValue) {
        var message;
        var contMarks = MACHINE.captureContinuationMarks();
        if (argumentOffset !== undefined) {
            message = baselib.format.format(
                          "~a: expected ~a as argument ~e but received ~e",
                          [callerName,
                           expectedTypeName,
                           (argumentOffset + 1),
                           actualValue]);
            raise(MACHINE, ExnFailContract.constructor([message, contMarks]));
        } else {
            message = baselib.format.format(
                          "~a: expected ~a but received ~e",
                          [callerName,
                           expectedTypeName,
                           actualValue]);
            raise(MACHINE, ExnFailContract.constructor([message, contMarks]));
        }
    };

    var raiseContextExpectedValuesError = function(MACHINE, expected) {
        var message = baselib.format.format("expected ~e values, received ~e values",
                                            [expected, MACHINE.a]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContract.constructor([message, contMarks]));
    };

    var raiseArityMismatchError = function(MACHINE, proc, received) {
        var message = baselib.format.format("~a: expected ~e value(s), received ~e value(s)",
                                            [proc.displayName,
                                             proc.racketArity,
                                             received]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContractArity.constructor([message, contMarks]));
    };

    var raiseOperatorApplicationError = function(MACHINE, operator) {
        var message = baselib.format.format("not a procedure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, 
              ExnFailContract.constructor([message, contMarks]));
    };


    var raiseOperatorIsNotPrimitiveProcedure = function(MACHINE, operator) {
        var message = baselib.format.format("not a primitive procedure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor([message, contMarks]));
    };


    var raiseUnimplementedPrimitiveError = function(MACHINE, name) {
        var message = "unimplemented kernel procedure: " + name;
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor([message, contMarks]));
    };









    //////////////////////////////////////////////////////////////////////
    // Exports



    exceptions.RacketError = RacketError;
    exceptions.isRacketError = isRacketError;

    exceptions.Exn = Exn;
    exceptions.makeExn = function(msg, marks) { return Exn.constructor([msg, marks]); };
    exceptions.isExn = Exn.predicate;
    exceptions.exnMessage = function(exn) { return Exn.accessor(exn, 0); };
    exceptions.exnContMarks = function(exn) { return Exn.accessor(exn, 1); };
    exceptions.exnSetContMarks = function(exn, v) { Exn.mutator(exn, 1, v); };

    exceptions.ExnBreak = ExnBreak;
    exceptions.makeExnBreak = function(msg, marks) { return ExnBreak.constructor([msg, marks]); };
    exceptions.isExnBreak = ExnBreak.predicate;
    exceptions.exnBreakContinuation = 
        function(exn) { return ExnBreak.accessor(exn, 0); };

    exceptions.ExnFail = ExnFail;
    exceptions.makeExnFail = function(msg, marks) { return ExnFail.constructor([msg, marks]); };
    exceptions.isExnFail = ExnFail.predicate;

    exceptions.ExnFailContract = ExnFailContract;
    exceptions.makeExnFailContract = function(msg, marks) { return ExnFailContract.constructor([msg, marks]); };
    exceptions.isExnFailContract = ExnFailContract.predicate;

    exceptions.ExnFailContractArity = ExnFailContractArity;
    exceptions.makeExnFailContractArity = function(msg, marks) { return ExnFailContractArity.constructor([msg, marks]); };
    exceptions.isExnFailContractArity = ExnFailContractArity.predicate;

    exceptions.ExnFailContractVariable = ExnFailContractVariable;
    exceptions.makeExnFailContractVariable = function(msg, marks) { return ExnFailContractVariable.constructor([msg, marks]); };
    exceptions.isExnFailContractVariable = ExnFailContractVariable.predicate;
    exceptions.exnFailContractVariableId = 
        function(exn) { return ExnFailContractVariable.accessor(exn, 0); };


    exceptions.ExnFailContractDivisionByZero = ExnFailContractDivisionByZero;
    exceptions.makeExnFailContractDivisionByZero = 
        function(msg, marks) { return ExnFailContractDivisionByZero.constructor([msg, marks]); };
    exceptions.isExnFailContractDivisionByZero = ExnFailContractDivisionByZero.predicate;


    exceptions.exceptionHandlerKey = exceptionHandlerKey;




    exceptions.raise = raise;
    exceptions.raiseFailure = raiseFailure;
    exceptions.raiseContractError = raiseContractError;
    exceptions.raiseUnboundToplevelError = raiseUnboundToplevelError;
    exceptions.raiseArgumentTypeError = raiseArgumentTypeError;
    exceptions.raiseContextExpectedValuesError = raiseContextExpectedValuesError;
    exceptions.raiseArityMismatchError = raiseArityMismatchError;
    exceptions.raiseOperatorApplicationError = raiseOperatorApplicationError;
    exceptions.raiseOperatorIsNotPrimitiveProcedure = raiseOperatorIsNotPrimitiveProcedure;
    exceptions.raiseUnimplementedPrimitiveError = raiseUnimplementedPrimitiveError;


}(this.plt.baselib));/*jslint vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.readergraph = exports;


    var readerGraph = function (x, objectHash, n) {
        var i;
        if (typeof (x) === 'object' && objectHash.containsKey(x)) {
            return objectHash.get(x);
        }

        if (baselib.lists.isPair(x)) {
            var consPair = baselib.lists.makePair(x.first, x.rest);
            objectHash.put(x, consPair);
            consPair.first = readerGraph(x.first, objectHash, n + 1);
            consPair.rest = readerGraph(x.rest, objectHash, n + 1);
            return consPair;
        }

        if (baselib.vectors.isVector(x)) {
            var len = x.length();
            var aVector = baselib.vectors.makeVector(len, x.elts);
            objectHash.put(x, aVector); 
            for (i = 0; i < len; i++) {
                aVector.elts[i] = readerGraph(aVector.elts[i], objectHash, n + 1);
            }
            return aVector;
        }

        if (baselib.boxes.isBox(x)) {
            var aBox = baselib.boxes.makeBox(x.ref());
            objectHash.put(x, aBox);
            aBox.val = readerGraph(x.ref(), objectHash, n + 1);
            return aBox;
        }

        if (baselib.hashes.isHash(x)) {
            throw new Error("make-reader-graph of hash not implemented yet");
        }

        if (baselib.structs.isStruct(x)) {
            var aStruct = baselib.clone(x);
            objectHash.put(x, aStruct);
            for (i = 0; i < x._fields.length; i++) {
                x._fields[i] = readerGraph(x._fields[i], objectHash, n + 1);
            }
            return aStruct;
        }

        if (baselib.placeholders.isPlaceholder(x)) {
            return readerGraph(x.ref(), objectHash, n + 1);
        }

        return x;
    };

    exports.readerGraph = readerGraph;

}(this.plt.baselib));/*jslint vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Helper functions for argument checking.

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.check = exports;

    var EMPTY = baselib.lists.EMPTY;
    var isPair = baselib.lists.isPair;
    var makeLowLevelEqHash = baselib.hashes.makeLowLevelEqHash;


    //////////////////////////////////////////////////////////////////////

    // testArgument: (X -> boolean) X number string string -> boolean
    // Produces the argument value the predicate is true, and otherwise raises an error.
    var testArgument = function (MACHINE,
                                 expectedTypeName,
                                 predicate,                          
                                 val, 
                                 index, 
                                 callerName) {
        if (predicate(val)) {
            return val;
        } else {
            if (typeof(expectedTypeName) === 'function') { 
                expectedTypeName = expectedTypeName(); 
            }
            baselib.exceptions.raiseArgumentTypeError(MACHINE, 
                                                      callerName,
                                                      expectedTypeName,
                                                      index,
                                                      val);
        }
    };


    var makeCheckArgumentType = function (predicate, predicateName) {
        return function (MACHINE, callerName, position) {
            return testArgument(
                MACHINE,
                predicateName,
                predicate,
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };

    var makeCheckParameterizedArgumentType = function (parameterizedPredicate, 
                                                       parameterizedPredicateName) {
        return function (MACHINE, callerName, position) {
            var args = [], i;
            for (i = 3; i < arguments.length; i++) {
                args.push(arguments[i]);
            }
            return testArgument(
                MACHINE,
                function () { return parameterizedPredicateName.apply(null, args); },
                function (x) {
                    return parameterizedPredicate.apply(null, [x].concat(args));
                },
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };





    var makeCheckListofArgumentType = function (predicate, predicateName) {
        var listPredicate = function (x) {
            var seen = makeLowLevelEqHash();
            while (true) {
                if (x === EMPTY){
                    return true;
                }

                if (!isPair(x)) {
                    return false;
                }

                if(seen.containsKey(x)) {
                    // raise an error? we've got a cycle!
                    return false;
                }

                if (! predicate(x.first)) {
                    return false;
                }
                
                seen.put(x, true);
                x = x.rest;
            }
        };
        return function (MACHINE, callerName, position) {
            return testArgument(
                MACHINE,
                'list of ' + predicateName,
                listPredicate,
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };







    var testArity = function (MACHINE, callerName, observed, minimum, maximum) {
        if (observed < minimum || observed > maximum) {
            baselib.exceptions.raise(
                MACHINE, 
                baselib.exceptions.ExnFailContractArity.constructor(
                    [callerName + ": expected at least " + minimum
                     + " arguments "
                     + " but received " + observed,
                     MACHINE.captureContinuationMarks()]));
        }
    };




    var checkOutputPort = makeCheckArgumentType(
        baselib.ports.isOutputPort,
        'output port');

    var checkInputPort = makeCheckArgumentType(
        baselib.ports.isInputPort,
        'input port');

    var checkSymbol = makeCheckArgumentType(
        baselib.symbols.isSymbol,
        'symbol');

    var checkString = makeCheckArgumentType(
        baselib.strings.isString,
        'string');

    var checkSymbolOrString = makeCheckArgumentType(
        function(x) { return (baselib.symbols.isSymbol(x) || 
                              baselib.strings.isString(x)); },
        'symbol or string');

    var checkMutableString = makeCheckArgumentType(
        baselib.strings.isMutableString,
        'mutable string');

    var checkChar = makeCheckArgumentType(
        baselib.chars.isChar,
        'character');

    var checkProcedure = makeCheckArgumentType(
        baselib.functions.isProcedure,
        'procedure');

    var checkNumber = makeCheckArgumentType(
        baselib.numbers.isNumber,
        'number');

    var checkReal = makeCheckArgumentType(
        baselib.numbers.isReal,
        'real');

    var checkNatural = makeCheckArgumentType(
        baselib.numbers.isNatural,
        'natural');

    var checkByte = makeCheckArgumentType(
        baselib.numbers.isByte,
        'byte');

    var checkBytes = makeCheckArgumentType(
        baselib.bytes.isBytes,
        'bytes');

    var checkNaturalInRange = makeCheckParameterizedArgumentType(
        function (x, a, b) {
            if (! baselib.numbers.isNatural(x)) { return false; }
            return (baselib.numbers.lessThanOrEqual(a, x) &&
                    baselib.numbers.lessThan(x, b));
        },
        function (a, b) {
            return baselib.format.format('natural between ~a and ~a', [a, b]);
        });

    var checkInteger = makeCheckArgumentType(
        baselib.numbers.isInteger,
        'integer');

    var checkRational = makeCheckArgumentType(
        baselib.numbers.isRational,
        'rational');

    var checkNonNegativeReal = makeCheckArgumentType(
        baselib.numbers.isNonNegativeReal,
        'non-negative real');

    var checkPair = makeCheckArgumentType(
        baselib.lists.isPair,
        'pair');

    var checkList = makeCheckArgumentType(
        baselib.lists.isList,
        'list');

    var checkVector = makeCheckArgumentType(
        baselib.vectors.isVector,
        'vector');

    var checkBoolean = makeCheckArgumentType(
        function (x) { return x === true || x === false; },
        'boolean');

    var checkBox = makeCheckArgumentType(
        baselib.boxes.isBox,
        'box');

    var checkMutableBox = makeCheckArgumentType(
        baselib.boxes.isMutableBox,
        'mutable box');

    var checkInspector = makeCheckArgumentType(
        baselib.inspectors.isInspector,
        'inspector');


    var checkPlaceholder = makeCheckArgumentType(
        baselib.placeholders.isPlaceholder,
        'placeholder');


    var checkSrcloc = makeCheckArgumentType(
        baselib.srclocs.isSrcloc,
        'srcloc');

    var checkContinuationMarkSet = makeCheckArgumentType(
        baselib.contmarks.isContinuationMarkSet,
        'continuation mark set');

    var checkContinuationPromptTag = makeCheckArgumentType(
        baselib.contmarks.isContinuationPromptTag,
        'continuation prompt tag');

    var checkExn = makeCheckArgumentType(
        baselib.exceptions.isExn,
        'exn');

    var checkHash = makeCheckArgumentType(
        baselib.hashes.isHash,
        'hash');
    var checkHasheq = makeCheckArgumentType(
        baselib.hashes.isHasheq,
        'hash');
    var checkHasheqv = makeCheckArgumentType(
        baselib.hashes.isHasheqv,
        'hash');
    var checkMutableHash = makeCheckArgumentType(
        function(x) { return baselib.hashes.isHash(x) && ! x.isImmutable()},
        'mutable hash');
    var checkImmutableHash = makeCheckArgumentType(
        function(x) { return baselib.hashes.isHash(x) && x.isImmutable()},
        'immutable hash');






    //////////////////////////////////////////////////////////////////////


    exports.testArgument = testArgument;
    exports.testArity = testArity;
    exports.makeCheckArgumentType = makeCheckArgumentType;
    exports.makeCheckParameterizedArgumentType = makeCheckParameterizedArgumentType;
    exports.makeCheckListofArgumentType = makeCheckListofArgumentType;
    exports.checkOutputPort = checkOutputPort;
    exports.checkInputPort = checkInputPort;
    exports.checkSymbol = checkSymbol;
    exports.checkString = checkString;
    exports.checkSymbolOrString = checkSymbolOrString;
    exports.checkMutableString = checkMutableString;
    exports.checkChar = checkChar;
    exports.checkProcedure = checkProcedure;
    exports.checkNumber = checkNumber;
    exports.checkReal = checkReal;
    exports.checkNonNegativeReal = checkNonNegativeReal;
    exports.checkNatural = checkNatural;
    exports.checkNaturalInRange = checkNaturalInRange;
    exports.checkByte = checkByte;
    exports.checkBytes = checkBytes;
    exports.checkInteger = checkInteger;
    exports.checkRational = checkRational;
    exports.checkPair = checkPair;
    exports.checkList = checkList;
    exports.checkVector = checkVector;
    exports.checkBox = checkBox;
    exports.checkMutableBox = checkMutableBox;
    exports.checkInspector = checkInspector;
    exports.checkByte = checkByte;
    exports.checkBoolean = checkBoolean;
    exports.checkPlaceholder = checkPlaceholder;
    exports.checkSrcloc = checkSrcloc;
    exports.checkContinuationMarkSet = checkContinuationMarkSet;
    exports.checkContinuationPromptTag = checkContinuationPromptTag;
    exports.checkExn = checkExn;
    exports.checkHash = checkHash;
    exports.checkImmutableHash = checkImmutableHash;
    exports.checkMutableHash = checkMutableHash;

}(this.plt.baselib));
/*global plt*/
/*jslint unparam: true, sub: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.primitives = exports;


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;

    var isProcedure = baselib.functions.isProcedure;
    var isReal = baselib.numbers.isReal;
    var isInexact = baselib.numbers.isInexact;
    var isComplex = baselib.numbers.isComplex;
    var isRational = baselib.numbers.isRational;
    var isBytes = baselib.bytes.isBytes;

    var isNatural = baselib.numbers.isNatural;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var isChar = baselib.chars.isChar;
    var isVector = baselib.vectors.isVector;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var isBox = baselib.boxes.isBox;
    var isStruct = baselib.structs.isStruct;
    var isStructType = baselib.structs.isStructType;
    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var makeFloat = baselib.numbers.makeFloat;
    var makeComplex = baselib.numbers.makeComplex;
    var makeComplexPolar = baselib.numbers.makeComplexPolar;

    var makeSymbol = baselib.symbols.makeSymbol;

    var makeBox = baselib.boxes.makeBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;

    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;


    // Other helpers
    var withArguments = baselib.withArguments;
    var toDomNode = baselib.format.toDomNode;



    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseContractError = baselib.exceptions.raiseContractError;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;

    var testArgument = baselib.check.testArgument;

    var checkOutputPort = baselib.check.checkOutputPort;
    var checkInputPort = baselib.check.checkInputPort;
    var checkString = baselib.check.checkString;
    var checkSymbolOrString = baselib.check.checkSymbolOrString;
    var checkMutableString = baselib.check.checkMutableString;
    var checkSymbol = baselib.check.checkSymbol;
    var checkByte = baselib.check.checkByte;
    var checkChar = baselib.check.checkChar;
    var checkProcedure = baselib.check.checkProcedure;
    var checkNumber = baselib.check.checkNumber;
    var checkReal = baselib.check.checkReal;
    var checkNonNegativeReal = baselib.check.checkNonNegativeReal;
    var checkNatural = baselib.check.checkNatural;
    var checkNaturalInRange = baselib.check.checkNaturalInRange;
    var checkInteger = baselib.check.checkInteger;
    var checkIntegerForChar = baselib.check.makeCheckArgumentType(
        function(x) {
            return (baselib.numbers.isInteger(x) &&
                    ((baselib.numbers.lessThanOrEqual(0, x) &&
                      baselib.numbers.lessThanOrEqual(x, 55295))
                     ||
                     (baselib.numbers.lessThanOrEqual(57344, x) &&
                      baselib.numbers.lessThanOrEqual(x, 1114111))));
        },
        'integer'
    );
    var checkRational = baselib.check.checkRational;
    var checkPair = baselib.check.checkPair;
    var checkCaarPair = baselib.check.makeCheckArgumentType(
	function(x) {
	    return isPair(x) && isPair(x.first);
	},
	'caarable value');
    var checkCadrPair = baselib.check.makeCheckArgumentType(
	function(x) {
	    return isPair(x) && isPair(x.first);
	},
	'cadrable value');
    var checkList = baselib.check.checkList;
    var checkListofChars = baselib.check.makeCheckListofArgumentType(isChar, 'character');
    var checkListofPairs = baselib.check.makeCheckListofArgumentType(isPair, 'pair');
    var checkVector = baselib.check.checkVector;
    var checkBox = baselib.check.checkBox;
    var checkMutableBox = baselib.check.checkMutableBox;
    var checkInspector = baselib.check.checkInspector;
    var checkPlaceholder = baselib.check.checkPlaceholder;
    var checkSrcloc = baselib.check.checkSrcloc;
    var checkContinuationPromptTag = baselib.check.checkContinuationPromptTag;
    var checkContinuationMarkSet = baselib.check.checkContinuationMarkSet;
    var checkExn = baselib.check.checkExn;
    var checkHash = baselib.check.checkHash;
    var checkMutableHash = baselib.check.checkMutableHash;
    var checkImmutableHash = baselib.check.checkImmutableHash;
    var checkAny = baselib.check.makeCheckArgumentType(
        function(x) { return true; },
        'any');
    //////////////////////////////////////////////////////////////////////





    // Primitives are the set of primitive values.  Not all primitives
    // are coded here; several of them (including call/cc) are injected by
    // the bootstrapping code in compiler/boostrapped-primitives.rkt
    var Primitives = {};

    var installPrimitiveProcedure = function (name, arity, f) {
        Primitives[name] = makePrimitiveProcedure(name, arity, f);
    };

    var installPrimitiveClosure = function (name, arity, f) {
        Primitives[name] = makeClosure(name, arity, f, []);
    };


    var installPrimitiveConstant = function (name, v) {
        Primitives[name] = v;
    };



    installPrimitiveConstant('pi', baselib.numbers.pi);
    installPrimitiveConstant('e', baselib.numbers.e);
    installPrimitiveConstant('null', NULL);
    installPrimitiveConstant('true', true);
    installPrimitiveConstant('false', false);
    installPrimitiveConstant('eof', baselib.constants.EOF_VALUE);


    // The parameter keys here must be uninterned symbols, so we explicitly
    // call the symbol constructor here.
    installPrimitiveConstant('exception-handler-key',
                             new baselib.symbols.Symbol("exnh"));
    installPrimitiveConstant('parameterization-key',
                             new baselib.symbols.Symbol("paramz"));
    installPrimitiveConstant('break-enabled-key',
                             new baselib.symbols.Symbol("break-on?"));


    var gensymCounter = 0;
    installPrimitiveProcedure(
        'gensym',
        makeList(0, 1),
        function(M) {
            var baseName = "g";
            if (M.a === 1) {
                baseName = checkSymbolOrString(M, 'gensym', 0).toString();
            }
            gensymCounter++;
            return new baselib.symbols.Symbol(baseName + gensymCounter);
        });


    installPrimitiveProcedure(
        'display',
        makeList(1, 2),
        function (M) {
            var firstArg = M.e[M.e.length - 1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'display', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'display'));
            return VOID;
        });

    installPrimitiveProcedure(
        'write',
        makeList(1, 2),
        function (M) {
            var firstArg = M.e[M.e.length - 1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'write', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'write'));
            return VOID;
        });

    installPrimitiveProcedure(
        'write-byte',
        makeList(1, 2),
        function (M) {
            var firstArg = checkByte(M, 'write-byte', 0);
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'display', 1);
            }
            outputPort.writeDomNode(M, toDomNode(String.fromCharCode(firstArg), 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'newline', makeList(0, 1),
        function (M) {
            var outputPort = M.params.currentOutputPort;
            if (M.a === 1) {
                outputPort = checkOutputPort(M, 'newline', 1);
            }
            outputPort.writeDomNode(M, toDomNode("\n", 'display'));
            return VOID;
        });

    installPrimitiveProcedure(
        'displayln',
        makeList(1, 2),
        function (M){
            var firstArg = M.e[M.e.length-1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'displayln', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'display'));
            outputPort.writeDomNode(M, toDomNode("\n", 'display'));
            return VOID;
        });



    installPrimitiveProcedure(
        'format',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, formatString;
            formatString = checkString(M, 'format', 0).toString();
            for(i = 1; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            return baselib.format.format(formatString, args, 'format');
        });


    installPrimitiveProcedure(
        'printf',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, formatString, result, outputPort;
            formatString = checkString(M, 'printf', 0).toString();
            for(i = 1; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort = M.params.currentOutputPort;
            outputPort.writeDomNode(M, toDomNode(result, 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'fprintf',
        baselib.arity.makeArityAtLeast(2),
        function (M) {
            var args = [], i, formatString, outputPort, result;
            outputPort = checkOutputPort(M, 'fprintf', 0);
            formatString = checkString(M, 'fprintf', 1).toString();
            for(i = 2; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort.writeDomNode(M, toDomNode(result, 'display'));
            return VOID;
        });



    installPrimitiveProcedure(
        'current-print',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentPrint'] =
                    checkProcedure(M, 'current-print', 0);
                return VOID;
            } else {
                return M.params['currentPrint'];
            }
        });


    installPrimitiveProcedure(
        'current-print-mode',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['print-mode'] = checkString(M, 'print-mode', 0);
                return VOID;
            } else {
                return M.params['print-mode'];
            }
        });


    installPrimitiveProcedure(
        'current-output-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentOutputPort'] =
                    checkOutputPort(M, 'current-output-port', 0);
                return VOID;
            } else {
                return M.params['currentOutputPort'];
            }
        });



    installPrimitiveProcedure(
        'current-error-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentErrorPort'] =
                    checkOutputPort(M, 'current-output-port', 0);
                return VOID;
            } else {
                return M.params['currentOutputPort'];
            }
        });



    installPrimitiveProcedure(
        'current-input-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentInputPort'] =
                    checkInputPort(M, 'current-input-port', 0);
                return VOID;
            } else {
                return M.params['currentInputPort'];
            }
        });



    installPrimitiveClosure(
        'read-byte',
        makeList(0, 1),
        function(M) {
            var inputPort = M.params['currentInputPort'];
            if (M.a === 1) {
                inputPort = checkInputPort(M, 'read-byte', 0);
            }
            plt.runtime.PAUSE(function(restart) {
                inputPort.callWhenReady(M, function() {
                    restart(function(MACHINE) {
                        plt.runtime.finalizeClosureCall(MACHINE,
                                                        inputPort.readByte(MACHINE));
                    });
                });
            });
        });



    installPrimitiveProcedure(
        '=',
        baselib.arity.makeArityAtLeast(2),
        function (M) {
	    var i;
            var firstArg = checkNumber(M, '=', 0), secondArg;
            for (i = 1; i < M.a; i++) {
                secondArg = checkNumber(M, '=', i);
                if (! (baselib.numbers.equals(firstArg, secondArg))) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        '=~',
        3,
        function (M) {
            var x = checkReal(M, '=~', 0);
            var y = checkReal(M, '=~', 1);
            var range = checkNonNegativeReal(M, '=~', 2);
            return baselib.numbers.lessThanOrEqual(
                baselib.numbers.abs(baselib.numbers.subtract(x, y)),
                range);
        });



    var makeChainingBinop = function (predicate, name) {
        return function (M) {
            var firstArg = checkNumber(M, name, 0), secondArg, i;
            for (i = 1; i < M.a; i++) {
                secondArg = checkNumber(M, name, i);
                if (! (predicate(firstArg, secondArg))) {
                    return false;
                }
                firstArg = secondArg;
            }
            return true;
        };
    };

    installPrimitiveProcedure(
        '<',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThan, '<'));


    installPrimitiveProcedure(
        '>',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThan, '>'));


    installPrimitiveProcedure(
        '<=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThanOrEqual, '<='));


    installPrimitiveProcedure(
        '>=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThanOrEqual, '>='));


    installPrimitiveProcedure(
        '+',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = 0;
            var i = 0;
            for (i = 0; i < M.a; i++) {
                result = baselib.numbers.add(
                    result,
                    checkNumber(M, '+', i));
            }
            return result;
        });


    installPrimitiveProcedure(
        '*',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = 1;
            var i = 0;
            for (i=0; i < M.a; i++) {
                result = baselib.numbers.multiply(
                    result,
                    checkNumber(M, '*', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        '-',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            if (M.a === 1) {
                return baselib.numbers.subtract(
                    0,
                    checkNumber(M, '-', 0));
            }
            var result = checkNumber(M, '-', 0), i;
            for (i = 1; i < M.a; i++) {
                result = baselib.numbers.subtract(
                    result,
                    checkNumber(M, '-', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        '/',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var result = checkNumber(M, '/', 0), i;
            for (i = 1; i < M.a; i++) {
                result = baselib.numbers.divide(
                    result,
                    checkNumber(M, '/', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        'add1',
        1,
        function (M) {
            var firstArg = checkNumber(M, 'add1', 0);
            return baselib.numbers.add(firstArg, 1);
        });


    installPrimitiveProcedure(
        'sub1',
        1,
        function (M) {
            var firstArg = checkNumber(M, 'sub1', 0);
            return baselib.numbers.subtract(firstArg, 1);
        });


    installPrimitiveProcedure(
        'zero?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return baselib.numbers.equals(firstArg, 0);
        });


    installPrimitiveProcedure(
        'cons',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return makePair(firstArg, secondArg);
        });


    installPrimitiveProcedure(
        'list',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = NULL, i;
            for (i = 0; i < M.a; i++) {
                result = makePair(M.e[M.e.length - (M.a - i)],
                                  result);
            }
            return result;
        });

    installPrimitiveProcedure(
        'list*',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var result = checkList(M, 'list*', M.a - 1), i;
            for (i = M.a - 2; i >= 0; i--) {
                result = makePair(M.e[M.e.length - 1 - i],
                                  result);
            }
            return result;
        });


    installPrimitiveProcedure(
        'list-ref',
        2,
        function (M) {
            var lst = checkList(M, 'list-ref', 0);
            var index = checkNaturalInRange(M, 'list-ref', 1,
                                            0, baselib.lists.length(lst));
            return baselib.lists.listRef(lst, baselib.numbers.toFixnum(index));
        });

    installPrimitiveProcedure(
        'unsafe-car',
        1,
        function (M) {
            var firstArg = checkAny(M, 'unsafe-car', 0);
            return firstArg.first;
        });

    installPrimitiveProcedure(
        'car',
        1,
        function (M) {
            var firstArg = checkPair(M, 'car', 0);
            return firstArg.first;
        });

    installPrimitiveProcedure(
        'caar',
        1,
        function (M) {
            var firstArg = checkCaarPair(M, 'caar', 0);
            return firstArg.first.first;
        });
    installPrimitiveProcedure(
        'cadr',
        1,
        function (M) {
            var firstArg = checkCadrPair(M, 'cadr', 0);
            return firstArg.first.rest;
        });

    installPrimitiveProcedure(
        'unsafe-cdr',
        1,
        function (M) {
            var firstArg = checkAny(M, 'unsafe-cdr', 0);
            return firstArg.rest;
        });

    installPrimitiveProcedure(
        'cdr',
        1,
        function (M) {
            var firstArg = checkPair(M, 'cdr', 0);
            return firstArg.rest;
        });

    installPrimitiveProcedure(
        'pair?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isPair(firstArg);
        });


    installPrimitiveProcedure(
        'list?',
        1,
        function (M) {
            return isList(M.e[M.e.length -1]);
        });


    installPrimitiveProcedure(
        'set-car!',
        2,
        function (M) {
            var firstArg = checkPair(M, 'set-car!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.first = secondArg;
            return VOID;
        });


    installPrimitiveProcedure(
        'set-cdr!',
        2,
        function (M) {
            var firstArg = checkPair(M, 'set-car!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.rest = secondArg;
            return VOID;
        });

    installPrimitiveProcedure(
        'not',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return (firstArg === false);
        });


    installPrimitiveProcedure(
        'null?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return firstArg === NULL;
        });


    installPrimitiveProcedure(
        'vector?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isVector(firstArg);
        });

    installPrimitiveProcedure(
        'vector',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var i;
            var result = [];
            for (i = 0; i < M.a; i++) {
                result.push(M.e[M.e.length-1-i]);
            }
            var newVector = makeVector(result.length, result);
            return newVector;
        });


    installPrimitiveProcedure(
        'make-vector',
        makeList(1, 2),
        function (M) {
            var value = 0;
            var length = baselib.numbers.toFixnum(
                checkNatural(M, 'make-vector', 0));
            if (M.a === 2) {
                value = M.e[M.e.length - 2];
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return makeVector(arr.length, arr);
        });

    installPrimitiveProcedure(
        'vector->list',
        1,
        function (M) {
            var elts = checkVector(M, 'vector->list', 0).elts;
            var i;
            var result = NULL;
            for (i = 0; i < elts.length; i++) {
                result = makePair(elts[elts.length - 1 - i], result);
            }
            return result;
        });

    installPrimitiveProcedure(
        'list->vector',
        1,
        function (M) {
            var firstArg = checkList(M, 'list->vector', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first);
                firstArg = firstArg.rest;
            }
            return makeVector(result.length, result);
        });


    installPrimitiveProcedure(
        'vector-ref',
        2,
        function (M) {
            var elts = checkVector(M, 'vector-ref', 0).elts;
            var index = M.e[M.e.length-2];
            return elts[index];
        });


    installPrimitiveProcedure(
        'vector-set!',
        3,
        function (M) {
            var elts = checkVector(M, 'vector-set!', 0).elts;
            // FIXME: check out-of-bounds vector
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'vector-set!', 1,
                                    0, elts.length));
            var val = M.e[M.e.length - 1 - 2];
            elts[index] = val;
            return VOID;
        });


    installPrimitiveProcedure(
        'vector-length',
        1,
        function (M) {
            return checkVector(M, 'vector-length', 0).elts.length;
        });



    installPrimitiveProcedure(
        'make-string',
        makeList(1, 2),
        function (M) {
            var value = String.fromCharCode(0);
            var length = baselib.numbers.toFixnum(
                checkNatural(M, 'make-string', 0));
            if (M.a === 2) {
                value = checkChar(M, 'make-string', 1).val;
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return baselib.strings.makeMutableString(arr);
        });

    installPrimitiveProcedure(
        'substring',
        makeList(2, 3),
        function(M) {
            var str = checkString(M, 'substring', 0).toString();
            var start = baselib.numbers.toFixnum(checkNatural(M, 'substring', 1));
            var end = str.length;
            if (M.a === 3) {
                end = baselib.numbers.toFixnum(checkNatural(M, 'substring', 2));
            }
            return baselib.strings.makeMutableString((str.substring(start, end)).split(""));
        });

    installPrimitiveProcedure(
        'string-copy',
        1,
        function(M) {
            var str = checkString(M, 'substring', 0).toString();
            return baselib.strings.makeMutableString(str.substring(0, str.length).split(""));
        });


    installPrimitiveProcedure(
        'list->string',
        1,
        function (M) {
            var firstArg = checkListofChars(M, 'list->string', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first.val);
                firstArg = firstArg.rest;
            }
            return result.join('');
        });


    installPrimitiveProcedure(
        'string',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var i;
            var chars = [];
            for (i = 0; i < M.a; i++) {
                chars.push(checkChar(M, 'string', i).val);
            }
            return chars.join('');
        });


    installPrimitiveProcedure(
        'string->list',
        1,
        function (M) {
            var str = checkString(M, 'string->list', 0).toString();
            var i;
            var result = NULL;
            for (i = str.length - 1; i >= 0; i--) {
                result = makePair(baselib.chars.makeChar(str.charAt(i)), result);
            }
            return result;
        });



    installPrimitiveProcedure(
        'string-set!',
        3,
        function (M) {
            var str = checkMutableString(M, 'string-set!', 0);
            var k = checkNatural(M, 'string-set!', 1);
            var ch = checkChar(M, 'string-set!', 2);
	    str.set(baselib.numbers.toFixnum(k), ch.val);
            return VOID;
        });





    installPrimitiveProcedure(
        'symbol?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isSymbol(firstArg);
        });

    installPrimitiveProcedure(
        'symbol->string',
        1,
        function (M) {
            var firstArg = checkSymbol(M, 'symbol->string', 0);
            return firstArg.toString();
        });


    installPrimitiveProcedure(
        'string=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if (s !== checkString(M, 'string=?', i).toString()) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string<=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string<=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s <= checkString(M, 'string<=?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string<?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string<?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s < checkString(M, 'string<?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string>=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string>=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s >= checkString(M, 'string>=?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string>?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string>?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s > checkString(M, 'string>?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-ci=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if (s !== checkString(M, 'string-ci=?', i).toString().toUpperCase()) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-ci<=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci<=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s <= checkString(M, 'string-ci<=?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci<?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci<?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s < checkString(M, 'string-ci<?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci>=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci>=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s >= checkString(M, 'string-ci>=?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci>?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci>?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s > checkString(M, 'string-ci>?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-append',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var buffer = [];
            var i;
            for (i = 0; i < M.a; i++) {
                buffer.push(checkString(M, 'string-append', i).toString());
            }
            return buffer.join('');
        });

    installPrimitiveProcedure(
        'string-length',
        1,
        function (M) {
            var firstArg = checkString(M, 'string-length', 0).toString();
            return firstArg.length;
        });


    installPrimitiveProcedure(
        'string-ref',
        2,
        function (M) {
            var firstArg = checkString(M, 'string-ref', 0).toString();
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'string-ref', 1,
                                    0, firstArg.length));
            return baselib.chars.makeChar(firstArg.charAt(index));
        });



    installPrimitiveProcedure(
        'string?',
        1,
        function (M) {
            return isString(M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'number->string',
        1,
        function (M) {
            return checkNumber(M, 'number->string', 0).toString();
        });


    installPrimitiveProcedure(
        'string->symbol',
        1,
        function (M) {
            return makeSymbol(checkString(M, 'string->symbol', 0).toString());
        });


    installPrimitiveProcedure(
        'string->number',
        1,
        function (M) {
            return baselib.numbers.fromString(
                checkString(M, 'string->number', 0).toString());
        });


    installPrimitiveProcedure(
        'boolean?',
        1,
        function(M) {
            var v = M.e[M.e.length - 1];
            return (v === true || v === false);
        });


    installPrimitiveProcedure(
        'char?',
        1,
        function(M) {
            return isChar(M.e[M.e.length -1 ]);
        });


    var makeCharComparator = function(name, cmp) {
        return function(M) {
            var s = checkChar(M, name, 0).val;
	    var i;
            for (i = 1; i < M.a; i++) {
                if (!(cmp(s, checkChar(M, name, i).val))) {
                    return false;
                }
            }
            return true;
        };
    };

    installPrimitiveProcedure(
        'char>?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char>?',
                           function(x, y) {
                               return x > y;
                           }));

    installPrimitiveProcedure(
        'char>=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char>=?',
                           function(x, y) {
                               return x >= y;
                           }));

    installPrimitiveProcedure(
        'char<?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char<?',
                           function(x, y) {
                               return x < y;
                           }));

    installPrimitiveProcedure(
        'char<=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char<=?',
                           function(x, y) {
                               return x <= y;
                           }));

    installPrimitiveProcedure(
        'char=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char=?',
                           function(x, y) {
                               return x === y;
                           }));

    installPrimitiveProcedure(
        'char-ci>?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci>?',
                           function(x, y) {
                               return x.toUpperCase() > y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci>=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci>=?',
                           function(x, y) {
                               return x.toUpperCase() >= y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci<?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci<?',
                           function(x, y) {
                               return x.toUpperCase() < y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci<=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci<=?',
                           function(x, y) {
                               return x.toUpperCase() <= y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci=?',
                           function(x, y) {
                               return x.toUpperCase() === y.toUpperCase();
                           }));



    installPrimitiveProcedure(
        'char->integer',
        1,
        function(M) {
            return checkChar(M, 'char->integer', 0).val.charCodeAt(0);
        });

    installPrimitiveProcedure(
        'integer->char',
        1,
        function(M) {
            var ch = baselib.numbers.toFixnum(checkIntegerForChar(M, 'integer->char', 0));
            return baselib.chars.makeChar(String.fromCharCode(ch));
        });

    installPrimitiveProcedure(
        'char-upcase',
        1,
        function(M) {
            var ch = checkChar(M, 'char=?', 0).val;
            return baselib.chars.makeChar(ch.toUpperCase());
        });

    installPrimitiveProcedure(
        'char-downcase',
        1,
        function(M) {
            var ch = checkChar(M, 'char=?', 0).val;
            return baselib.chars.makeChar(ch.toLowerCase());
        });

    installPrimitiveProcedure(
        'char-numeric?',
        1,
        function(M) {
            var val = checkChar(M, 'char-numeric?', 0).val;
            return val >= '0' && val <= '9';
        });

    installPrimitiveProcedure(
        'char-alphabetic?',
        1,
        function(M) {
            var val = checkChar(M, 'char-alphabetic?', 0).val;
            return ((val >= 'a' && val <= 'z') ||
                    (val >= 'A' && val <= 'Z'));
        });

    var whitespaceRegexp = new RegExp("^\\s*$");
    installPrimitiveProcedure(
        'char-whitespace?',
        1,
        function(M) {
            var val = checkChar(M, 'char-whitespace?', 0).val;
            return val.match(whitespaceRegexp ? true : false);
      });


    installPrimitiveProcedure(
        'char-upper-case?',
        1,
        function(M) {
            var val = checkChar(M, 'char-upper-case?', 0).val;
            return val === val.toUpperCase();
      });

    installPrimitiveProcedure(
        'char-lower-case?',
        1,
        function(M) {
            var val = checkChar(M, 'char-lower-case?', 0).val;
            return val === val.toLowerCase();
      });


    installPrimitiveProcedure(
        'box',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return makeBox(firstArg);
        });

    installPrimitiveProcedure(
        'unbox',
        1,
        function (M) {
            var firstArg = checkBox(M, 'unbox', 0);
            return firstArg.ref();
        });

    installPrimitiveProcedure(
        'set-box!',
        2,
        function (M) {
            var firstArg = checkMutableBox(M, 'set-box!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.set(secondArg);
            return VOID;
        });

    installPrimitiveProcedure(
        'void',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            return VOID;
        });


    installPrimitiveProcedure(
        'random',
        baselib.lists.makeList(0, 1),
        function (M) {
            if (M.a === 0) {
                return makeFloat(Math.random());
            } else {
                var n = checkNatural(M, 'random', 0);
                return Math.floor(Math.random() * baselib.numbers.toFixnum(n));
            }
        });


    installPrimitiveProcedure(
        'eq?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return firstArg === secondArg;
        });

    installPrimitiveProcedure(
        'eqv?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return baselib.equality.eqv(firstArg, secondArg);
        });



    installPrimitiveProcedure(
        'equal?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return equals(firstArg, secondArg);
        });


    // This definition of apply will take precedence over the
    // implementation of apply in the boostrapped-primitives.rkt,
    // since it provides nicer error handling.
    var applyImplementation = function (M) {
        if(--M.cbt < 0) {
            throw applyImplementation;
        }
        var proc = checkProcedure(M, 'apply', 0);
        M.e.pop();
        M.a--;
        checkList(M, 'apply', M.a - 1);
        M.spliceListIntoStack(M.a - 1);
        M.p = proc;
        if (baselib.arity.isArityMatching(proc.racketArity, M.a)) {
            return proc.label(M);
        } else {
            raiseArityMismatchError(M, proc, M.a);
        }
    };

    installPrimitiveClosure(
        'apply',
        baselib.arity.makeArityAtLeast(2),
        applyImplementation);


    // FIXME: The definition of call-with-values is in
    // bootstrapped-primitives.rkt.  We may want to replace it with an
    // explicitly defined one here.





    installPrimitiveProcedure(
        'procedure?',
        1,
        function (M) {
            return isProcedure(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'procedure-arity-includes?',
        2,
        function (M) {
            var proc = checkProcedure(M, 'procedure-arity-includes?', 0);
            var a = checkNatural(M, 'procedure-arity-includes?', 1);
            return baselib.arity.isArityMatching(proc.racketArity, a);
        });

    installPrimitiveProcedure(
        'procedure-arity',
        1,
        function (M) {
            var proc = checkProcedure(M, 'procedure-arity-includes?', 0);
            return proc.racketArity;
        });


    installPrimitiveProcedure(
        'procedure-rename',
        2,
        function (M) {
            var proc = checkProcedure(M, 'procedure-rename', 0);
            var name = checkSymbol(M, 'procedure-rename', 1);
            return baselib.functions.renameProcedure(proc, name);
        });



    installPrimitiveProcedure(
        'member',
        2,
        function (M) {
            var x = M.e[M.e.length-1];
            var lst = M.e[M.e.length-2];
            while (true) {
                if (lst === NULL) {
                    return false;
                }
                if (! isPair(lst)) {
                    raiseArgumentTypeError(M,
                                           'member',
                                           'list',
                                           1,
                                           M.e[M.e.length - 1 - 1]);
                }
                if (equals(x, (lst.first))) {
                    return lst;
                }
                lst = lst.rest;
            }
        });


    installPrimitiveProcedure(
        'reverse',
        1,
        function (M) {
            var rev = NULL;
            var lst = M.e[M.e.length-1];
            while(lst !== NULL) {
                rev = makePair(testArgument(M, 'pair', isPair, lst, 0, 'reverse').first,
                               rev);
                lst = lst.rest;
            }
            return rev;
        });

    installPrimitiveProcedure(
        'void?',
        1,
        function(M) {
            return M.e[M.e.length -1] === VOID;
        });


    installPrimitiveProcedure(
        'box?',
        1,
        function(M) {
            return isBox(M.e[M.e.length -1]);
        });


    installPrimitiveProcedure(
        'eof-object?',
        1,
        function(M) {
            return M.e[M.e.length -1] === baselib.constants.EOF_VALUE;
        });

    installPrimitiveProcedure(
	'number?',
	1,
	function(M) {
	    return isNumber(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'real?',
	1,
	function(M) {
	    return isReal(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'inexact?',
	1,
	function(M) {
	    return isInexact(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'complex?',
	1,
	function(M) {
	    return isComplex(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
        'bytes?',
        1,
        function(M) {
            return isBytes(M.e[M.e.length-1]);
        });

    installPrimitiveProcedure(
	'byte?',
	1,
	function(M) {
	    var v = M.e[M.e.length - 1];
            if(!isNatural(v)) { return false; }
            v = baselib.numbers.toFixnum(v);
            return v >= 0 && v < 256;
	});

    installPrimitiveProcedure(
	'rational?',
	1,
	function(M) {
	    return isRational(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
        'even?',
        1,
        function(M) {
            var n = checkInteger(M, 'even?', 0);
            return baselib.numbers.equals(0, baselib.numbers.modulo(n, 2));
        });

    installPrimitiveProcedure(
        'odd?',
        1,
        function(M) {
            var n = checkInteger(M, 'odd?', 0);
            return baselib.numbers.equals(1, baselib.numbers.modulo(n, 2));
        });


    installPrimitiveProcedure(
        'positive?',
        1,
        function(M) {
            var n = checkReal(M, 'positive?', 0);
            return baselib.numbers.greaterThan(n, 0);
        });

    installPrimitiveProcedure(
        'negative?',
        1,
        function(M) {
            var n = checkReal(M, 'negative?', 0);
            return baselib.numbers.lessThan(n, 0);
        });


    installPrimitiveProcedure(
        'inexact->exact',
        1,
        function (M) {
            return baselib.numbers.toExact(
                checkNumber(M, 'inexact->exact', 0));
        });

    installPrimitiveProcedure(
        'exact->inexact',
        1,
        function (M) {
            return baselib.numbers.toInexact(
                checkNumber(M, 'exact->inexact', 0));
        });

    installPrimitiveProcedure(
        'abs',
        1,
        function (M) {
            return baselib.numbers.abs(
                checkNumber(M, 'abs', 0));
        });

    installPrimitiveProcedure(
        'acos',
        1,
        function (M) {
            return baselib.numbers.acos(
                checkNumber(M, 'acos', 0));
        });


    installPrimitiveProcedure(
        'asin',
        1,
        function (M) {
            return baselib.numbers.asin(
                checkNumber(M, 'asin', 0));
        });

    installPrimitiveProcedure(
        'sin',
        1,
        function (M) {
            return baselib.numbers.sin(
                checkNumber(M, 'sin', 0));
        });



    installPrimitiveProcedure(
        'sinh',
        1,
        function (M) {
            return baselib.numbers.sinh(
                checkNumber(M, 'sinh', 0));
        });


    installPrimitiveProcedure(
        'tan',
        1,
        function (M) {
            return baselib.numbers.tan(
                checkNumber(M, 'tan', 0));
        });


    installPrimitiveProcedure(
        'atan',
        makeList(1, 2),
        function (M) {
            if (M.a === 1) {
                return baselib.numbers.atan(
                    checkNumber(M, 'atan', 0));
            } else {
                return makeFloat(
                    Math.atan2(
                        baselib.numbers.toFixnum(checkNumber(M, 'atan', 0)),
                        baselib.numbers.toFixnum(checkNumber(M, 'atan', 1))));
            }
        });


    installPrimitiveProcedure(
        'angle',
        1,
        function (M) {
            return baselib.numbers.angle(
                checkNumber(M, 'angle', 0));
        });

    installPrimitiveProcedure(
        'magnitude',
        1,
        function (M) {
            return baselib.numbers.magnitude(
                checkNumber(M, 'magnitude', 0));
        });

    installPrimitiveProcedure(
        'conjugate',
        1,
        function (M) {
            return baselib.numbers.conjugate(
                checkNumber(M, 'conjugate', 0));
        });




    installPrimitiveProcedure(
        'cos',
        1,
        function (M) {
            return baselib.numbers.cos(
                checkNumber(M, 'cos', 0));
        });


    installPrimitiveProcedure(
        'cosh',
        1,
        function (M) {
            return baselib.numbers.cosh(
                checkNumber(M, 'cosh', 0));
        });

    installPrimitiveProcedure(
        'gcd',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, x;
            for (i = 0; i < M.a; i++) {
                args.push(checkNumber(M, 'gcd', i));
            }
            x = args.shift();
            return baselib.numbers.gcd(x, args);
        });

    installPrimitiveProcedure(
        'lcm',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, x;
            for (i = 0; i < M.a; i++) {
                args.push(checkNumber(M, 'lcm', i));
            }
            x = args.shift();
            return baselib.numbers.lcm(x, args);
        });




    installPrimitiveProcedure(
        'exp',
        1,
        function (M) {
            return baselib.numbers.exp(
                checkNumber(M, 'exp', 0));
        });


    installPrimitiveProcedure(
        'expt',
        2,
        function (M) {
            return baselib.numbers.expt(
                checkNumber(M, 'expt', 0),
                checkNumber(M, 'expt', 1));
        });

    installPrimitiveProcedure(
        'exact?',
        1,
        function (M) {
            return baselib.numbers.isExact(
                checkNumber(M, 'exact?', 0));
        });


    installPrimitiveProcedure(
        'integer?',
        1,
        function (M) {
            return baselib.numbers.isInteger(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'exact-integer?',
        1,
        function (M) {
            return (baselib.numbers.isInteger(M.e[M.e.length - 1]) &&
                    baselib.numbers.isExact(M.e[M.e.length - 1]));
        });

    installPrimitiveProcedure(
        'exact-nonnegative-integer?',
        1,
        function (M) {
            return isNatural(M.e[M.e.length - 1]);
        });



    installPrimitiveProcedure(
        'imag-part',
        1,
        function (M) {
            return baselib.numbers.imaginaryPart(
                checkNumber(M, 'imag-part', 0));
        });


    installPrimitiveProcedure(
        'real-part',
        1,
        function (M) {
            return baselib.numbers.realPart(
                checkNumber(M, 'real-part', 0));
        });


    installPrimitiveProcedure(
        'make-polar',
        2,
        function (M) {
            return makeComplexPolar(
                checkReal(M, 'make-polar', 0),
                checkReal(M, 'make-polar', 1));
        });


    installPrimitiveProcedure(
        'make-rectangular',
        2,
        function (M) {
            return makeComplex(
                checkReal(M, 'make-rectangular', 0),
                checkReal(M, 'make-rectangular', 1));
        });

    installPrimitiveProcedure(
        'modulo',
        2,
        function (M) {
            return baselib.numbers.modulo(
                checkInteger(M, 'modulo', 0),
                checkInteger(M, 'modulo', 1));
        });


    installPrimitiveProcedure(
        'remainder',
        2,
        function (M) {
            return baselib.numbers.remainder(
                checkInteger(M, 'remainder', 0),
                checkInteger(M, 'remainder', 1));
        });


    installPrimitiveProcedure(
        'quotient',
        2,
        function (M) {
            return baselib.numbers.quotient(
                checkInteger(M, 'quotient', 0),
                checkInteger(M, 'quotient', 1));
        });



    installPrimitiveProcedure(
        'floor',
        1,
        function (M) {
            return baselib.numbers.floor(
                checkReal(M, 'floor', 0));
        });


    installPrimitiveProcedure(
        'ceiling',
        1,
        function (M) {
            return baselib.numbers.ceiling(
                checkReal(M, 'ceiling', 0));
        });


    installPrimitiveProcedure(
        'round',
        1,
        function (M) {
            return baselib.numbers.round(
                checkReal(M, 'round', 0));
        });


    installPrimitiveProcedure(
        'truncate',
        1,
        function (M) {
            var n = checkReal(M, 'truncate', 0);
            if (baselib.numbers.lessThan(n, 0)) {
                return baselib.numbers.ceiling(n);
            } else {
                return baselib.numbers.floor(n);
            }
        });


    installPrimitiveProcedure(
        'numerator',
        1,
        function (M) {
            return baselib.numbers.numerator(
                checkRational(M, 'numerator', 0));
        });


    installPrimitiveProcedure(
        'denominator',
        1,
        function (M) {
            return baselib.numbers.denominator(
                checkRational(M, 'denominator', 0));
        });


    installPrimitiveProcedure(
        'log',
        1,
        function (M) {
            return baselib.numbers.log(
                checkNumber(M, 'log', 0));
        });


    installPrimitiveProcedure(
        'sqr',
        1,
        function (M) {
            return baselib.numbers.sqr(
                checkNumber(M, 'sqr', 0));
        });




    installPrimitiveProcedure(
        'sqrt',
        1,
        function (M) {
            return baselib.numbers.sqrt(
                checkNumber(M, 'sqrt', 0));
        });



    installPrimitiveProcedure(
        'integer-sqrt',
        1,
        function (M) {
            return baselib.numbers.integerSqrt(
                checkInteger(M, 'integer-sqrt', 0));
        });



    installPrimitiveProcedure(
        'sgn',
        1,
        function (M) {
            return baselib.numbers.sign(
                checkInteger(M, 'sgn', 0));
        });


    installPrimitiveProcedure(
        'min',
        baselib.arity.makeArityAtLeast(1),
        function(M) {
            var i;
            var next;
            var currentMin = checkReal(M, 'min', 0);
            for (i = 1; i < M.a; i++) {
                next = checkReal(M, 'min', i);
                if (baselib.numbers.lessThan(next, currentMin)) {
                    currentMin = next;
                }
            }
            return currentMin;
        });

    installPrimitiveProcedure(
        'max',
        baselib.arity.makeArityAtLeast(1),
        function(M) {
            var i;
            var next;
            var currentMax = checkReal(M, 'min', 0);
            for (i = 1; i < M.a; i++) {
                next = checkReal(M, 'min', i);
                if (baselib.numbers.greaterThan(next, currentMax)) {
                    currentMax = next;
                }
            }
            return currentMax;
        });






    installPrimitiveProcedure(
        'error',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
	    var i;
            if (M.a === 1) {
                var sym = checkSymbol(M, 'error', 1);
                raise(M, baselib.exceptions.makeExnFail(sym.toString(),
                                                        M.captureContinuationMarks()));
            }

            if (isString(M.e[M.e.length - 1])) {
                var vs = [];
                for (i = 1; i < M.a; i++) {
                    vs.push(baselib.format.format("~e", [M.e[M.e.length - 1 - i]]));
                }
                raise(M, baselib.exceptions.makeExnFail(M.e[M.e.length - 1].toString() +
                                                        ": " +
                                                        vs.join(' '),
                                                        M.captureContinuationMarks()));
            }

            if (isSymbol(M.e[M.e.length - 1])) {
                var fmtString = checkString(M, 'error', 1);
                var args = [M.e[M.e.length - 1]];
                for (i = 2; i < M.a; i++) {
                    args.push(M.e[M.e.length - 1 - i]);
                }
                raise(M, baselib.exceptions.makeExnFail(
                    baselib.format.format('~s: ' + fmtString.toString(),
                                          args),
                    M.captureContinuationMarks()));
            }

            // Fall-through
            raiseArgumentTypeError(M, 'error', 'symbol or string', 0, M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'raise',
        makeList(1, 2),
        function(M) {
            var v = M.e[M.e.length - 1];
            // At the moment, not using the continuation barrier yet.
            // var withBarrier = M.e[M.e.length - 2];
            raise(M, v);
        });



    installPrimitiveProcedure(
        'raise-mismatch-error',
        3,
        function (M) {
            var name = checkSymbol(M, 'raise-mismatch-error', 0);
            var message = checkString(M, 'raise-mismatch-error', 0);
            var val = M.e[M.e.length - 1 - 2];
            raise(M, baselib.exceptions.makeExnFail(
		baselib.format.format("~a: ~a~e",
                                      [name,
                                       message,
                                       val]),
                M.captureContinuationMarks()));
        });


    installPrimitiveProcedure(
        'raise-type-error',
        baselib.arity.makeArityAtLeast(3),
        function (M) {
            var name = checkSymbol(M, 'raise-type-error', 0);
            var expected = checkString(M, 'raise-type-error', 1);
            if (M.a === 3) {
                raiseArgumentTypeError(M,
                                       name,
                                       expected,
                                       undefined,
                                       M.e[M.e.length - 1 - 2]);
            } else {
                raiseArgumentTypeError(M,
                                       name,
                                       expected,
                                       checkNatural(M, 'raise-type-error', 2),
                                       M.e[M.e.length - 1 - 2]);
            }
        });



    installPrimitiveProcedure(
        'make-exn',
        2,
        function(M) {
            var message = checkString(M, 'make-exn', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn', 1);
            return baselib.exceptions.makeExn(message, marks);
        });


    installPrimitiveConstant(
        'struct:exn:fail',
        baselib.exceptions.ExnFail);


    installPrimitiveConstant(
        'prop:exn:srclocs',
        baselib.structs.propExnSrcloc);


    installPrimitiveProcedure(
        'make-exn:fail',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail', 1);
            return baselib.exceptions.makeExnFail(message, marks);
        });


    installPrimitiveProcedure(
        'make-exn:fail:contract',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract', 1);
            return baselib.exceptions.makeExnFailContract(message, marks);
        });


    installPrimitiveProcedure(
        'make-exn:fail:contract:arity',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract:arity', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract:arity', 1);
            return baselib.exceptions.makeExnFailContractArity(message, marks);
        });

    installPrimitiveProcedure(
        'make-exn:fail:contract:variable',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract:variable', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract:variable', 1);
            return baselib.exceptions.makeExnFailContractVariable(message, marks);
        });

    installPrimitiveProcedure(
        'make-exn:fail:contract:divide-by-zero',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract:divide-by-zero', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract:divide-by-zero', 1);
            return baselib.exceptions.makeExnFailContractDivisionByZero(message, marks);
        });

    installPrimitiveProcedure(
        'exn-message',
        1,
        function(M) {
            var exn = checkExn(M, 'exn-message', 0);
            return baselib.exceptions.exnMessage(exn);
        });

    installPrimitiveProcedure(
        'exn-continuation-marks',
        1,
        function(M) {
            var exn = checkExn(M, 'exn-continuation-marks', 0);
            return baselib.exceptions.exnContMarks(exn);
        });


    installPrimitiveProcedure(
        'current-continuation-marks',
        makeList(0, 1),
        function(M) {
            var promptTag;
            if (M.a === 1) {
                promptTag = checkContinuationPromptTag(M, 'current-continuation-marks', 0);
            }
            var contMarks = M.captureContinuationMarks(promptTag);
            // The continuation marks shouldn't capture the record of the call to
            // current-continuation-marks itself.
            contMarks.shift();
            return contMarks;
        });

    installPrimitiveClosure(
        'make-struct-type',
        makeList(4, 5, 6, 7, 8, 9, 10, 11),
        function (M) {
            withArguments(
                M,
                4,
                [false,
                 NULL,
                 false,
                 false,
                 NULL,
                 false,
                 false],
                function (name,
                          superType,
                          initFieldCount,
                          autoFieldCount,
                          autoV,
                          props,
                          inspector,  // FIXME: currently ignored
                          procSpec,   // FIXME: currently ignored
                          immutables, // FIXME: currently ignored
                          guard,      // FIXME: currently ignored
                          constructorName
                         ) {
                    var structType = baselib.structs.makeStructureType(
                        name,
                        superType,
                        initFieldCount,
                        autoFieldCount,
                        autoV,
                        //inspector,
                        //procSpec,
                        //immutables,
                        guard,
                        props);

                    var constructorValue =
                        makePrimitiveProcedure(
                            constructorName,
                            initFieldCount + (superType ? superType.numberOfArgs : 0),
                            function (M) {
                                var args = M.e.slice(M.e.length - M.a).reverse();
                                return structType.constructor(args);
                            });

                    var predicateValue =
                        makePrimitiveProcedure(
                            name.toString() + "?",
                            1,
                            function (M) {
                                return structType.predicate(M.e[M.e.length - 1]);
                            });

                    var accessorValue =
                        makePrimitiveProcedure(
                            name.toString() + "-accessor",
                            2,
                            function (M) {
                                return structType.accessor(
                                    M.e[M.e.length - 1],
                                    baselib.numbers.toFixnum(M.e[M.e.length - 2]));
                            });
                    accessorValue.structType = structType;

                    var mutatorValue =
                        makePrimitiveProcedure(
                            name.toString() + "-mutator",
                            3,
                            function (M) {
                                return structType.mutator(
                                    M.e[M.e.length - 1],
                                    baselib.numbers.toFixnum(M.e[M.e.length - 2]),
                                    M.e[M.e.length - 3]);
                            });
                    mutatorValue.structType = structType;


                    finalizeClosureCall(M,
                                        structType,
                                        constructorValue,
                                        predicateValue,
                                        accessorValue,
                                        mutatorValue);
                });
        });

    installPrimitiveProcedure(
        'struct?',
        1,
        function(M) {
            return isStruct(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'struct-type?',
        1,
        function(M) {
            return isStructType(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'current-inspector',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentInspector'] =
                    checkInspector(M, 'current-inspector', 0);
                return VOID;
            } else {
                return M.params['currentInspector'];
            }
        }
    );


    installPrimitiveProcedure(
        'make-struct-field-accessor',
        makeList(2, 3),
        function (M){
            var structType = M.e[M.e.length - 1].structType;
            var index = M.e[M.e.length - 2];
            var name;
            if (M.a === 3) {
                name = structType.name + "-" + M.e[M.e.length - 3].toString();
            } else {
                name = structType.name + "-" + 'field' + index;
            }
            var checkStruct = baselib.check.makeCheckArgumentType(structType.predicate,
                                                                  structType.name);
            return makePrimitiveProcedure(
                name,
                1,
                function (M) {
                    var aStruct = checkStruct(M, name, 0);
                    return structType.accessor(
                        aStruct,
                        baselib.numbers.toFixnum(index));
                });
        });


    installPrimitiveProcedure(
        'make-struct-field-mutator',
        makeList(2, 3),
        function (M){
            var structType = M.e[M.e.length - 1].structType;
            var index = M.e[M.e.length - 2];
            var name;
            if (M.a === 3) {
                name = "set-" + structType.name + "-" + M.e[M.e.length - 3].toString() + "!";
            } else {
                name = "set-" + structType.name + "-" + 'field' + index + "!";
            }
            var checkStruct = baselib.check.makeCheckArgumentType(structType.predicate,
                                                                  structType.name);
            return makePrimitiveProcedure(
                name,
                2,
                function (M) {
                    var aStruct = checkStruct(M, name, 0);
                    structType.mutator(
                        aStruct,
                        baselib.numbers.toFixnum(index),
                        M.e[M.e.length - 2]);
                    return VOID;
                });
        });


    installPrimitiveProcedure(
        'make-placeholder',
        1,
        function(M) {
            var v = M.e[M.e.length - 1];
            return baselib.placeholders.makePlaceholder(v);
        });


    installPrimitiveProcedure(
        'placeholder-set!',
        2,
        function(M) {
            var placeholder = checkPlaceholder(M, 'placeholder-set!', 0);
            var val = M.e[M.e.length - 2];
            placeholder.set(val);
            return VOID;
        });


    installPrimitiveProcedure(
        'make-reader-graph',
        1,
        function(M) {
            var x = M.e[M.e.length - 1];
            return baselib.readergraph.readerGraph(x,
                                                   baselib.hashes.makeLowLevelEqHash(),
                                                   0);
        });




    installPrimitiveProcedure(
        'srcloc',
        5,
        function(M) {
            var source = M.e[M.e.length - 1];
            var line = checkNatural(M, 'srcloc', 1);
            var column = checkNatural(M, 'srcloc', 2);
            var position = checkNatural(M, 'srcloc', 3);
            var span = checkNatural(M, 'srcloc', 4);
            return baselib.srclocs.makeSrcloc(source, line, column, position, span);
        });

    installPrimitiveProcedure(
        'make-srcloc',
        5,
        function(M) {
            var source = M.e[M.e.length - 1];
            var line = checkNatural(M, 'make-srcloc', 1);
            var column = checkNatural(M, 'make-srcloc', 2);
            var position = checkNatural(M, 'make-srcloc', 3);
            var span = checkNatural(M, 'make-srcloc', 4);
            return baselib.srclocs.makeSrcloc(source, line, column, position, span);
        });

    installPrimitiveProcedure(
        'srcloc?',
        1,
        function(M) {
            return baselib.srclocs.isSrcloc(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'srcloc-source',
        1,
        function(M) {
            return baselib.srclocs.srclocSource(checkSrcloc(M, 'srcloc-source', 0));
        });

    installPrimitiveProcedure(
        'srcloc-line',
        1,
        function(M) {
            return baselib.srclocs.srclocLine(checkSrcloc(M, 'srcloc-line', 0));
        });

    installPrimitiveProcedure(
        'srcloc-column',
        1,
        function(M) {
            return baselib.srclocs.srclocColumn(checkSrcloc(M, 'srcloc-column', 0));
        });


    installPrimitiveProcedure(
        'srcloc-position',
        1,
        function(M) {
            return baselib.srclocs.srclocPosition(checkSrcloc(M, 'srcloc-position', 0));
        });


    installPrimitiveProcedure(
        'srcloc-span',
        1,
        function(M) {
            return baselib.srclocs.srclocSpan(checkSrcloc(M, 'srcloc-span', 0));
        });



    installPrimitiveProcedure(
        'make-continuation-prompt-tag',
        makeList(0, 1),
        function(M) {
            var sym;
            if (M.a === 1) {
                sym = checkSymbol(M, "make-continuation-prompt-tag", 0);
                return new baselib.contmarks.ContinuationPromptTag(sym.toString());
            }
            return new baselib.contmarks.ContinuationPromptTag(undefined);
        });

    installPrimitiveProcedure(
        'continuation-prompt-tag?',
        1,
        function(M) {
            return baselib.contmarks.isContinuationPromptTag(M.e[M.e.length - 1]);
        });



    installPrimitiveProcedure(
        'default-continuation-prompt-tag',
        0,
        function(M) {
            return baselib.contmarks.DEFAULT_CONTINUATION_PROMPT_TAG;
        });

    installPrimitiveProcedure(
        'current-inexact-milliseconds',
        0,
        function(M) {
            return makeFloat((new Date()).valueOf());
        });


    installPrimitiveProcedure(
        'current-seconds',
        0,
        function() {
            return Math.floor( (new Date()).getTime() / 1000 );
        });


    // initializeHash: (listof pair) WhalesongHashtable -> WhalesongHashtable
    var initializeHash = function(lst, hash) {
	while (lst !== NULL) {
	    hash.put(lst.first.first, lst.first.rest);
	    lst = lst.rest;
	}
	return hash;
    };

    var initializeImmutableHash = function(lst, hash) {
	while (lst !== NULL) {
	    hash = hash.functionalPut(lst.first.first, lst.first.rest);
	    lst = lst.rest;
	}
	return hash;
    };


    installPrimitiveProcedure(
        'hash?',
        1,
        function(M) {
            return baselib.hashes.isHash(checkAny(M, 'hash?', 0));
        });
    installPrimitiveProcedure(
        'hash-equal?',
        1,
        function(M) {
            return baselib.hashes.isHashEqual(checkAny(M, 'hash-equal?', 0));
        });
    installPrimitiveProcedure(
        'hash-eq?',
        1,
        function(M) {
            return baselib.hashes.isHashEq(checkAny(M, 'hash-eq?', 0));
        });
    installPrimitiveProcedure(
        'hash-eqv?',
        1,
        function(M) {
            return baselib.hashes.isHashEqv(checkAny(M, 'hash-eqv?', 0));
        });


    installPrimitiveProcedure(
        'make-hasheq',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheq', 0);
            }
            return initializeHash(lst, plt.baselib.hashes.makeEqHashtable());
        });

    installPrimitiveProcedure(
        'make-hasheqv',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheqv', 0);
            }
            return initializeHash(lst, plt.baselib.hashes.makeEqvHashtable());
        });

    installPrimitiveProcedure(
        'make-hash',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hash', 0);
            }
            return initializeHash(lst, plt.baselib.hashes.makeEqualHashtable());
        });

    installPrimitiveProcedure(
        'hash-copy',
        1,
        function(M) {
            var hash = checkMutableHash(M, 'hash-copy', 0);
            return hash.clone();
        });
    
    installPrimitiveProcedure(
        'hash-count',
        1,
        function(M) {
            return checkHash(M, 'hash-count', 0).size();
        });

    installPrimitiveProcedure(
        'hash',
        baselib.arity.makeArityAtLeast(0),
        function(M) {
            var lst = NULL, i;
            for(i = 0; i < M.a; i+=2) {
                if (i+1 < M.a) {
                    lst = makePair(makePair(checkAny(M, 'hash', i), checkAny(M, 'hash', i + 1)),
                                   lst);
                } else {
                    raiseContractError(
                        M,
                        baselib.format.format(
                            "hash: key does not have a value (i.e., an odd number of arguments were provided): ~e",
                            [checkAny(M, 'hash', i)]));
                }
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqualHashtable());
        });

    installPrimitiveProcedure(
        'hasheq',
        baselib.arity.makeArityAtLeast(0),
        function(M) {
            var lst = NULL, i;
            for(i = 0; i < M.a; i+=2) {
                if (i+1 < M.a) {
                    lst = makePair(makePair(checkAny(M, 'hasheq', i), checkAny(M, 'hasheq', i + 1)),
                                   lst);
                } else {
                    raiseContractError(
                        M,
                        baselib.format.format(
                            "hasheq: key does not have a value (i.e., an odd number of arguments were provided): ~e",
                            [checkAny(M, 'hasheq', i)]));
                }
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqHashtable());
        });

    installPrimitiveProcedure(
        'hasheqv',
        baselib.arity.makeArityAtLeast(0),
        function(M) {
            var lst = NULL, i;
            for(i = 0; i < M.a; i+=2) {
                if (i+1 < M.a) {
                    lst = makePair(makePair(checkAny(M, 'hasheqv', i), checkAny(M, 'hasheqv', i + 1)),
                                   lst);
                } else {
                    raiseContractError(
                        M,
                        baselib.format.format(
                            "hasheqv: key does not have a value (i.e., an odd number of arguments were provided): ~e",
                            [checkAny(M, 'hasheqv', i)]));
                }
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqvHashtable());
        });

    installPrimitiveProcedure(
        'make-immutable-hasheq',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheq', 0);
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqHashtable());
        });

    installPrimitiveProcedure(
        'make-immutable-hasheqv',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheqv', 0);
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqvHashtable());
        });

    installPrimitiveProcedure(
        'make-immutable-hash',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hash', 0);
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqualHashtable());
        });

    installPrimitiveClosure(
        'hash-ref',
        makeList(2, 3),
        function(M) {
            var hash = checkHash(M, 'hash-ref', 0);
            var key = checkAny(M, 'hash-ref', 1);
            var thunkOrFailVal;
            if (M.a === 3) {
                thunkOrFailVal = checkAny(M, 'hash-ref', 2);
            }
            if (hash.containsKey(key)) {
                finalizeClosureCall(M, hash.get(key));
            } else {
                if (M.a === 2) {
                    raiseContractError(
                        M,
                        baselib.format.format("hash-ref: no value found for key: ~e",
                                           [key]));
                } else {
                    if (isProcedure(thunkOrFailVal)) {
                        M.p = thunkOrFailVal;
                        M.e.length -= M.a;
                        M.a = 0;
                        baselib.functions.rawApply(M);
                    } else {
                        finalizeClosureCall(M, thunkOrFailVal);
                    }
                }
            }
        });

    installPrimitiveProcedure(
        'hash-has-key?',
        2,
        function(M) {
            var hash = checkHash(M, 'hash-ref', 0);
            var key = checkAny(M, 'hash-ref', 1);
            return hash.containsKey(key);
        });

    installPrimitiveProcedure(
        'hash-set!',
        3,
        function(M){ 
            var hash = checkMutableHash(M, 'hash-set!', 0);
            var key = checkAny(M, 'hash-set!', 1);
            var value = checkAny(M, 'hash-set!', 2);
            hash.put(key, value);
            return VOID;
        });

    installPrimitiveProcedure(
        'hash-set',
        3,
        function(M){ 
            var hash = checkImmutableHash(M, 'hash-set', 0);
            var key = checkAny(M, 'hash-set', 1);
            var value = checkAny(M, 'hash-set', 2);
            return hash.functionalPut(key, value);
        });


    installPrimitiveProcedure(
        'hash-remove!',
        2,
        function(M){ 
            var hash = checkMutableHash(M, 'hash-remove!', 0);
            var key = checkAny(M, 'hash-remove!', 1);
            hash.remove(key);
            return VOID;
        });


    installPrimitiveProcedure(
        'hash-remove',
        2,
        function(M){ 
            var hash = checkImmutableHash(M, 'hash-remove', 0);
            var key = checkAny(M, 'hash-remove', 1);
            return hash.functionalRemove(key);
        });

    installPrimitiveProcedure(
        'hash-keys',
        1,
        function(M) {
            var hash = checkHash(M, 'hash-keys', 0);
            return baselib.lists.arrayToList(hash.keys());
        });

    installPrimitiveProcedure(
        'hash-values',
        1,
        function(M) {
            var hash = checkHash(M, 'hash-keys', 0);
            return baselib.lists.arrayToList(hash.values());
        });

    installPrimitiveProcedure(
        'hash-has-key?',
        2,
        function(M){
            var hash = checkHash(M, 'hash-set!', 0);
            var key = checkAny(M, 'hash-set!', 1);
            return hash.containsKey(key);
        });

    installPrimitiveProcedure(
        'equal-hash-code',
        1,
        function(M) {
            return baselib.hashes.getEqualHashCode(checkAny(M, 'equal-hash-code', 0));
        });




    exports['Primitives'] = Primitives;
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure;
    exports['installPrimitiveClosure'] = installPrimitiveClosure;
    exports['installPrimitiveConstant'] = installPrimitiveConstant;

}(this.plt.baselib));
/*jslint browser: true, undef: true, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// runtime.js: the main runtime library for whalesong.
//

// All of the values here are namespaced under "plt.runtime".
/*global $*/
(function(plt, baselib) {
    'use strict';
    var runtime = {};
    plt.runtime = runtime;



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;
    var isNatural = baselib.numbers.isNatural;
    var isReal = baselib.numbers.isReal;
    var isPair = baselib.lists.isPair;
    var isCaarPair = function(x) { return isPair(x) && isPair(x.first); };
    var isList = baselib.lists.isList;
    var isVector = baselib.vectors.isVector;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var isPath = baselib.paths.isPath;

    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var NEGATIVE_ZERO = baselib.numbers.negative_zero;
    var INF = baselib.numbers.inf;
    var NEGATIVE_INF = baselib.numbers.negative_inf;
    var NAN = baselib.numbers.nan;

    var makeFloat = baselib.numbers.makeFloat;
    var makeRational = baselib.numbers.makeRational;
    var makeBignum = baselib.numbers.makeBignum;
    var makeComplex = baselib.numbers.makeComplex;


    var makeSymbol = baselib.symbols.makeSymbol;
    var makePath = baselib.paths.makePath;
    var makeBytes = baselib.bytes.makeBytes;

    var makeBox = baselib.boxes.makeBox;
    var isBox = baselib.boxes.isBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;
    var makeChar = baselib.chars.makeChar;

    var makeStructureType = baselib.structs.makeStructureType;


    var Struct = baselib.structs.Struct;
    var StructType = baselib.structs.StructType;

    var Closure = baselib.functions.Closure;
    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;

    var ContinuationPromptTag = baselib.contmarks.ContinuationPromptTag;


    // Other helpers
    var heir = baselib.heir;
    var makeClassPredicate = baselib.makeClassPredicate;
    var toDomNode = baselib.format.toDomNode;
    var toWrittenString = baselib.format.toWrittenString;
    var toDisplayedString = baselib.format.toDisplayedString;



    // Frame structures.
    var Frame = baselib.frames.Frame;
    var CallFrame = baselib.frames.CallFrame;
    var PromptFrame = baselib.frames.PromptFrame;

    // Module structure
    var ModuleRecord = baselib.modules.ModuleRecord;



    // Ports
    var isOutputPort = baselib.ports.isOutputPort;
    var StandardOutputPort = baselib.ports.StandardOutputPort;
    var StandardErrorPort = baselib.ports.StandardErrorPort;
    var StandardInputPort = baselib.ports.StandardInputPort;
    var isOutputStringPort = baselib.ports.isOutputStringPort;




    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseUnboundToplevelError = baselib.exceptions.raiseUnboundToplevelError;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseContextExpectedValuesError = baselib.exceptions.raiseContextExpectedValuesError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;
    var raiseOperatorApplicationError = baselib.exceptions.raiseOperatorApplicationError;
    var raiseOperatorIsNotPrimitiveProcedure = baselib.exceptions.raiseOperatorIsNotPrimitiveProcedure;
    var raiseUnimplementedPrimitiveError = baselib.exceptions.raiseUnimplementedPrimitiveError;


    var ArityAtLeast = baselib.arity.ArityAtLeast;
    var makeArityAtLeast = baselib.arity.makeArityAtLeast;
    var isArityMatching = baselib.arity.isArityMatching;


    var testArgument = baselib.check.testArgument;
    var testArity = baselib.check.testArity;
    var makeCheckArgumentType = baselib.check.makeCheckArgumentType;


    var Primitives = baselib.primitives.Primitives;
    var installPrimitiveProcedure = baselib.primitives.installPrimitiveProcedure;



    // This value used to be dynamically determined, but something on iOS5
    // breaks badly when I try this.
    // We're very conservative now.
     var STACK_LIMIT_ESTIMATE = 200;



    //////////////////////////////////////////////////////////////////////



    var defaultCurrentPrintImplementation = function (MACHINE) {
        if(--MACHINE.cbt < 0) {
            throw defaultCurrentPrintImplementation;
        }
        var oldArgcount = MACHINE.a;

	var elt = MACHINE.e[MACHINE.e.length - 1];
	var outputPort =
	    MACHINE.params.currentOutputPort;
	if (elt !== VOID) {
	    outputPort.writeDomNode(
                MACHINE,
                toDomNode(elt, MACHINE.params['print-mode']));
	    outputPort.writeDomNode(MACHINE, toDomNode("\n", 'display'));
	}
        MACHINE.a = oldArgcount;
        return finalizeClosureCall(MACHINE, VOID);
    };
    var defaultCurrentPrint = makeClosure(
	"default-printer",
	1,
	defaultCurrentPrintImplementation);



    //////////////////////////////////////////////////////////////////////

    // Exclusive Locks.  Even though JavaScript is a single-threaded
    // evaluator, we still have a need to create exclusive regions
    // of evaluation, since we might inadvertantly access some state
    // with two computations, with use of setTimeout.
    var ExclusiveLock = function() {
        this.locked = false;  // (U false string)
        this.waiters = [];
    };

    // makeRandomNonce: -> string
    // Creates a randomly-generated nonce.
    ExclusiveLock.makeRandomNonce = function() {
        var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
        var LEN = 32;
        var result = [];
        var i;
        for (i = 0; i < LEN; i++) {
            result.push(chars.charAt(Math.floor(Math.random() * chars.length)));
        }
        return result.join('');
    };

    ExclusiveLock.prototype.acquire = function(id, onAcquire) {
        var that = this;
        if (!id) {
            id = ExclusiveLock.makeRandomNonce();
        }

        var alreadyReleased = false;

        if (this.locked === false) {
            this.locked = id;
            onAcquire.call(
                that,
                // releaseLock
                function() {
                    var waiter;
                    if (alreadyReleased) {
                        throw new Error(
                            "Internal error: trying to release the lock, but already released");
                    }
                    if (that.locked === false) {
                        throw new Error(
                            "Internal error: trying to unlock the lock, but already unlocked");
                    }
                    that.locked = false;
                    alreadyReleased = true;
                    if (that.waiters.length > 0) {
                        waiter = that.waiters.shift();
                        setTimeout(
                            function() {
                                that.acquire(waiter.id, waiter.onAcquire);
                            },
                            0);
                    }
                });
        } else {
            this.waiters.push({ id: id,
                                onAcquire: onAcquire } );
        }
    };
    //////////////////////////////////////////////////////////////////////





    //////////////////////////////////////////////////////////////////////]
    // The MACHINE

    var Machine = function() {
	this.cbt = STACK_LIMIT_ESTIMATE;  // calls before trampoline
	this.v = undefined;         // value register
	this.p = undefined;        // procedure register
	this.a = undefined;           // argument count
	this.e = [];                // environment
	this.c = [];            // control: Arrayof (U Frame CallFrame PromptFrame)
	this.running = false;
	this.modules = {};     // String -> ModuleRecord
        this.mainModules = []; // Arrayof String
	this.params = {

            // print-as-expression: boolean
            'print-as-expression' : false,

            // print-mode: (one-of "write" "print" "constructor")
            'print-mode' : 'write',


	    // currentDisplayer: DomNode -> Void
	    // currentDisplayer is responsible for displaying to the browser.
	    'currentDisplayer': function(MACHINE, domNode) {
		$(domNode).appendTo(document.body);
	    },

	    // currentErrorDisplayer: DomNode -> Void
	    // currentErrorDisplayer is responsible for displaying errors to the browser.
	    'currentErrorDisplayer': function(MACHINE, domNode) {
                $(domNode).appendTo(document.body);
	    },

            'currentInspector': baselib.inspectors.DEFAULT_INSPECTOR,

	    'currentOutputPort': new StandardOutputPort(),
	    'currentErrorPort': new StandardErrorPort(),
            'currentInputPort': new StandardInputPort(),
	    'currentSuccessHandler': function(MACHINE) {},
	    'currentErrorHandler': function(MACHINE, exn) {
                MACHINE.params.currentErrorDisplayer(
                    MACHINE,
                    toDomNode(exn, MACHINE.params['print-mode']));
            },

	    'currentNamespace': {},

	    // These parameters control how often
	    // control yields back to the browser
	    // for response.  The implementation is a
	    // simple PID controller.
	    //
	    // To tune this, adjust desiredYieldsPerSecond.
	    // Do no touch numBouncesBeforeYield or
	    // maxNumBouncesBeforeYield, because those
	    // are adjusted automatically by the
	    // recomputeMaxNumBouncesBeforeYield
	    // procedure.
	    'desiredYieldsPerSecond': 5,
	    'numBouncesBeforeYield': 2000,   // self-adjusting
	    'maxNumBouncesBeforeYield': 2000, // self-adjusting

	    'currentPrint': defaultCurrentPrint


	};
	this.primitives = Primitives;
        this.exclusiveLock = new ExclusiveLock();
    };


    // Try to get the continuation mark key used for procedure application tracing.
    var getTracedAppKey = function(MACHINE) {
        if (MACHINE.modules['whalesong/lang/private/traced-app.rkt']) {
            return MACHINE.modules['whalesong/lang/private/traced-app.rkt'].namespace['traced-app-key'];
        }
        return undefined;
    };

    var getTracedCalleeKey = function(MACHINE) {
        if (MACHINE.modules['whalesong/lang/private/traced-app.rkt']) {
            return MACHINE.modules['whalesong/lang/private/traced-app.rkt'].namespace['traced-callee-key'];
        }
        return undefined;
    };



    // captureControl implements the continuation-capturing part of
    // call/cc.  It grabs the control frames up to (but not including) the
    // prompt tagged by the given tag.
    Machine.prototype.captureControl = function(skip, tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.c.length - 1 - skip; i >= 0; i--) {
	    if (MACHINE.c[i].tag === tag) {
		return MACHINE.c.slice(i + 1,
					     MACHINE.c.length - skip);
	    }
	}
	raise(MACHINE, new Error("captureControl: unable to find tag " + tag));
    };



    // restoreControl clears the control stack (up to, but not including the
    // prompt tagged by tag), and then appends the rest of the control frames.
    // At the moment, the rest of the control frames is assumed to be in the
    // top of the environment.
    Machine.prototype.restoreControl = function(tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.c.length - 1; i >= 0; i--) {
	    if (MACHINE.c[i].tag === tag) {
		MACHINE.c =
		    MACHINE.c.slice(0, i+1).concat(
			MACHINE.e[MACHINE.e.length - 1]);
		return;
	    }
	}
	raise(MACHINE, new Error("restoreControl: unable to find tag " + tag));

    };


    // Splices the list argument in the environment.  Adjusts MACHINE.a
    // appropriately.
    Machine.prototype.spliceListIntoStack = function(depth) {
	var MACHINE = this;
	var lst = MACHINE.e[MACHINE.e.length - 1 - depth];
	var vals = [];
	while(lst !== NULL) {
	    vals.push(lst.first);
	    lst = lst.rest;
	}
	vals.reverse();
	MACHINE.e.splice.apply(MACHINE.e,
				 [MACHINE.e.length - 1 - depth, 1].concat(vals));
	MACHINE.a = MACHINE.a + vals.length - 1;
    };


    // Unsplices a list from the MACHINE stack.
    Machine.prototype.unspliceRestFromStack = function(depth, length) {
	var MACHINE = this;
	var lst = NULL;
	var i;
	for (i = 0; i < length; i++) {
	    lst = makePair(MACHINE.e[MACHINE.e.length - depth - length + i],
                           lst);
	}
	MACHINE.e.splice(MACHINE.e.length - depth - length,
			   length,
			   lst);
	MACHINE.a = MACHINE.a - length + 1;
    };


    // Save the continuation mark on the top control frame.
    Machine.prototype.installContinuationMarkEntry = function(key, value) {
        var frame = this.c[this.c.length - 1];
        var marks = frame.marks;
        var i;
        for (i = 0; i < marks.length; i++) {
            if (key === marks[i][0]) {
                marks[i][1] = value;
                return;
            }
        }
        marks.push([key, value]);
    };


    Machine.prototype.captureContinuationMarks = function(promptTag) {
        var kvLists = [];
        var i;
        var control = this.c;
        var tracedCalleeKey = getTracedCalleeKey(this);
        for (i = control.length-1; i >= 0; i--) {
            if (promptTag !== null &&
                control[i] instanceof PromptFrame && control[i].tag === promptTag) {
                break;
            }
            if (control[i].marks.length !== 0) {
                kvLists.push(control[i].marks);
            }

            if (tracedCalleeKey !== null &&
                control[i] instanceof CallFrame &&
                control[i].p !== null) {
                kvLists.push([[tracedCalleeKey, control[i].p]]);
            }
        }
        return new baselib.contmarks.ContinuationMarkSet(kvLists);
    };






    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // The toplevel trampoline.
    //
    //
    // trampoline: MACHINE (MACHINE -> void) -> void
    //
    // All evaluation in Racketland happens in the context of this
    // trampoline.
    //
    var recomputeMaxNumBouncesBeforeYield;

    var scheduleTrampoline = function(MACHINE, f, release) {
        setTimeout(
	    function() {
                MACHINE._trampoline(f, false, release);
            },
            0);
    };

    // Creates a restarting function, that reschedules f in a context
    // with the old argcount in place.
    // Meant to be used only by the trampoline.
    var makeRestartFunction = function(MACHINE, release, pauseLock) {
        var oldArgcount = MACHINE.a;
        return function(f) {
            pauseLock.acquire(
                undefined,
                function(pauseReleaseLock) {
                    MACHINE.a = oldArgcount;
                    MACHINE._trampoline(f, false, release);
                    pauseReleaseLock();
                });
        };
    };


    // These are exception values that are treated specially in the context
    // of the trampoline.

    var HaltError = function(onHalt) {
        // onHalt: MACHINE -> void
        this.onHalt = onHalt || function(MACHINE) {};
    };


    var Pause = function(onPause) {
        // onPause: MACHINE -> void
        this.onPause = onPause || function(MACHINE) {};
    };

    var PAUSE = function(onPause) {
        throw(new Pause(onPause));
    };


    // WARNING WARNING WARNING
    //
    // Make sure to get an exclusive lock before jumping into trampoline.
    // Otherwise, Bad Things will happen.
    //
    // e.g. machine.lock.acquire('id', function(release) { machine.trampoline... release();});
    Machine.prototype.trampoline = function(initialJump, noJumpingOff) {
        var that = this;

        that.exclusiveLock.acquire(
            'trampoline',
            function(release) {
                that._trampoline(initialJump, noJumpingOff, release);
            });
    };

    Machine.prototype._trampoline = function(initialJump, noJumpingOff, release) {
        var that = this;
        var thunk = initialJump;
        var startTime = (new Date()).valueOf();
        that.cbt = STACK_LIMIT_ESTIMATE;
        that.params.numBouncesBeforeYield =
            that.params.maxNumBouncesBeforeYield;
        that.running = true;

        while(true) {
            try {
                thunk(that);
                break;
            } catch (e) {
                // There are a few kinds of things that can get thrown
                // during racket evaluation:
                //
                // functions: this gets thrown if the Racket code
                // realizes that the number of bounces has grown too
                // large.  The thrown function represents a restarter
                // function.  The running flag remains true.
                //
                // Pause: causes the machine evaluation to pause, with
                // the expectation that it will restart momentarily.
                // The running flag on the machine will remain true.
                //
                // HaltError: causes evaluation to immediately halt.
                // We schedule the onHalt function of the HaltError to
                // call afterwards.  The running flag on the machine
                // is set to false.
                //
                // Everything else: otherwise, we send the exception value
                // to the current error handler and exit.
                // The running flag is set to false.
                if (typeof(e) === 'function') {
                    thunk = e;
                    that.cbt = STACK_LIMIT_ESTIMATE;


                    // If we're running an a model that prohibits
                    // jumping off the trampoline, continue.
                    if (noJumpingOff) {
                        continue;
                    }

                    if (that.params.numBouncesBeforeYield-- < 0) {
                        recomputeMaxNumBouncesBeforeYield(
                            that,
                            (new Date()).valueOf() - startTime);
                        scheduleTrampoline(that, thunk, release);
                        return;
                    }
                } else if (e instanceof Pause) {
                    var pauseLock = new ExclusiveLock();
                    var oldArgcount = that.a;
                    var restarted = false;
                    var restart = function(f) {
                        pauseLock.acquire(
                            undefined,
                            function(releasePauseLock) {
                                restarted = true;
                                that.a = oldArgcount;
                                that._trampoline(f, false, release);
                                releasePauseLock();
                            });
                    };
                    var internalCall = function(proc, success, fail) {
                        var i;
                        if (restarted) {
                            return;
                        }
                        var args = [];
                        for (i = 3; i < arguments.length; i++) {
                            args.push(arguments[i]);
                        }
                        pauseLock.acquire(
                            undefined,
                            function(release) {
                                var newSuccess = function() {
                                    success.apply(null, arguments);
                                    release();
                                };
                                var newFail = function() {
                                    fail.apply(null, arguments);
                                    release();
                                };
                                baselib.functions.internalCallDuringPause.apply(
                                    null, [that, proc, newSuccess, newFail].concat(args));
                            });
                    };
                    e.onPause(restart, internalCall);
                    return;
                } else if (e instanceof HaltError) {
                    that.running = false;
                    e.onHalt(that);
                    release();
                    return;
                } else {
                    // General error condition: just exit out
                    // of the trampoline and call the current error handler.
                    that.running = false;
                    that.params.currentErrorHandler(that, e);
                    release();
                    return;
                }
            }
        }
        that.running = false;
        that.params.currentSuccessHandler(that);
        release();
        return;

    };


    // recomputeGas: state number -> number
    recomputeMaxNumBouncesBeforeYield = function(MACHINE, observedDelay) {
	// We'd like to see a delay of DESIRED_DELAY_BETWEEN_BOUNCES so
	// that we get MACHINE.params.desiredYieldsPerSecond bounces per
	// second.
	var DESIRED_DELAY_BETWEEN_BOUNCES =
	    (1000 / MACHINE.params.desiredYieldsPerSecond);
	var ALPHA = 50;
	var delta = (ALPHA * ((DESIRED_DELAY_BETWEEN_BOUNCES -
			       observedDelay) /
			      DESIRED_DELAY_BETWEEN_BOUNCES));
	MACHINE.params.maxNumBouncesBeforeYield =
            Math.max(MACHINE.params.maxNumBouncesBeforeYield + delta,
                     1);
    };










    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////









    // There is a single, distinguished default continuation prompt tag
    // that's used to wrap around toplevel prompts.
    var DEFAULT_CONTINUATION_PROMPT_TAG =
        baselib.contmarks.DEFAULT_CONTINUATION_PROMPT_TAG;








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    var VariableReference = function(prefix, pos) {
        this.prefix = prefix;
        this.pos = pos;
    };








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Implementation of the ready function.  This will fire off when
    // setReadyTrue is called.
    var ready, setReadyTrue, setReadyFalse;
    (function() {
        var runtimeIsReady = true;
        var readyWaiters = [];
        var notifyWaiter = function(w) {
            w();
        };

        ready = function(f) {
            if (runtimeIsReady) {
                notifyWaiter(f);
            } else {
                readyWaiters.push(f);
            }
        };

        setReadyTrue = function() {
            runtimeIsReady = true;
            while(runtimeIsReady && readyWaiters.length > 0) {
                notifyWaiter(readyWaiters.shift());
            }
        };

        setReadyFalse = function() {
            runtimeIsReady = false;
        };

    }());


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Executes all programs that have been labeled as a main module
    var invokeMains = function(machine, succ, fail) {
        runtime.ready(function () {
            if (window.console && window.console.log) {
                window.console.log("invoking main modules");
            }
            setReadyFalse();
            machine = machine || runtime.currentMachine;
            succ = succ || function() {};
            fail = fail || function() {};
            var mainModules = machine.mainModules.slice();
            var loop = function() {
                if (mainModules.length > 0) {
                    var nextModule = mainModules.shift();
                    nextModule.invoke(machine, loop, fail);
                } else {
                    setReadyTrue();
                    succ();
                }
            };
            setTimeout(loop, 0);
        });
    };

    // Looks up a name in any of the machine's main modules.
    var lookupInMains = function(name, machine) {
        var i;
        machine = machine || runtime.currentMachine;
        for (i = 0; i < machine.mainModules.length; i++) {
            var ns = machine.mainModules[i].getNamespace();
            if(ns.hasOwnProperty(name)) {
                return ns[name];
            }
        }
    };



    var checkClosureAndArity = function(M) {
        if(!(M.p instanceof Closure)){
            raiseOperatorApplicationError(M,M.p);
        }
        if(!isArityMatching(M.p.racketArity,M.a)) {
            raiseArityMismatchError(M,M.p,M.a);
        }
    };

    var checkPrimitiveArity = function(M) {
        if(!isArityMatching(M.p.racketArity,M.a)) {
            raiseArityMismatchError(M,M.p,M.a);
        }
    };


    //////////////////////////////////////////////////////////////////////
    // Superinstructions to try to reduce code size.
    var si_context_expected = function(n) {
        if (n === 1) { return si_context_expected_1; }
        var f = function(M) { raiseContextExpectedValuesError(M, n); };
        return f;
    };
    var si_context_expected_1 = function(M) { raiseContextExpectedValuesError(M, 1); }








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Exports
    var exports = runtime;
    exports['currentMachine'] = new Machine();
    exports['invokeMains'] = invokeMains;
    exports['lookupInMains'] = lookupInMains;


    // installing new primitives
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure;
    exports['makePrimitiveProcedure'] = makePrimitiveProcedure;
    exports['Primitives'] = Primitives;

    exports['ready'] = ready;
    // Private: the runtime library will set this flag to true when
    // the library has finished loading.
    exports['setReadyTrue'] = setReadyTrue;
    exports['setReadyFalse'] = setReadyFalse;

    exports['Machine'] = Machine;
    exports['Frame'] = Frame;
    exports['CallFrame'] = CallFrame;
    exports['PromptFrame'] = PromptFrame;
    exports['Closure'] = Closure;
    exports['ModuleRecord'] = ModuleRecord;
    exports['VariableReference'] = VariableReference;
    exports['ContinuationPromptTag'] = ContinuationPromptTag;
    exports['DEFAULT_CONTINUATION_PROMPT_TAG'] =
	DEFAULT_CONTINUATION_PROMPT_TAG;
    exports['NULL'] = NULL;
    exports['VOID'] = VOID;

    exports['NEGATIVE_ZERO'] = NEGATIVE_ZERO;
    exports['INF'] = INF;
    exports['NEGATIVE_INF'] = NEGATIVE_INF;
    exports['NAN'] = NAN;





    exports['testArgument'] = testArgument;
    exports['testArity'] = testArity;
    exports['makeCheckArgumentType'] = makeCheckArgumentType;


    exports['raise'] = raise;
    exports['raiseUnboundToplevelError'] = raiseUnboundToplevelError;
    exports['raiseArgumentTypeError'] = raiseArgumentTypeError;
    exports['raiseContextExpectedValuesError'] = raiseContextExpectedValuesError;
    exports['raiseArityMismatchError'] = raiseArityMismatchError;
    exports['raiseOperatorApplicationError'] = raiseOperatorApplicationError;
    exports['raiseOperatorIsNotPrimitiveProcedure'] = raiseOperatorIsNotPrimitiveProcedure;
    exports['raiseUnimplementedPrimitiveError'] = raiseUnimplementedPrimitiveError;


    exports['finalizeClosureCall'] = finalizeClosureCall;


    //////////////////////////////////////////////////////////////////////


    // Type constructors

    // numbers
    exports['makeList'] = makeList;
    exports['makePair'] = makePair;
    exports['makeChar'] = makeChar;
    exports['makeVector'] = makeVector;
    exports['makeBox'] = makeBox;
    exports['makeFloat'] = makeFloat;
    exports['makeRational'] = makeRational;
    exports['makeBignum'] = makeBignum;
    exports['makeComplex'] = makeComplex;
    exports['makeSymbol'] = makeSymbol;
    exports['makePath'] = makePath;
    exports['makeBytes'] = makeBytes;


    exports['checkPair'] = baselib.check.checkPair;
    exports['checkNumber'] = baselib.check.checkNumber;
    exports['checkString'] = baselib.check.checkString;



    // Type predicates
    exports['isPair'] = isPair;
    exports['isCaarPair'] = isCaarPair;
    exports['isList'] = isList;
    exports['isVector'] = isVector;
    exports['isOutputPort'] = isOutputPort;
    exports['isOutputStringPort'] = isOutputStringPort;
    exports['isBox'] = isBox;
    exports['isString'] = isString;
    exports['isSymbol'] = isSymbol;
    exports['isPath'] = isPath;
    exports['isNumber'] = isNumber;
    exports['isNatural'] = isNatural;
    exports['isReal'] = isReal;
    exports['isProcedure'] = plt.baselib.functions.isProcedure;
    exports['equals'] = equals;

    exports['toDomNode'] = toDomNode;
    exports['toWrittenString'] = toWrittenString;
    exports['toDisplayedString'] = toDisplayedString;

    exports['ArityAtLeast'] = ArityAtLeast;
    exports['makeArityAtLeast'] = makeArityAtLeast;
    exports['isArityMatching'] = isArityMatching;

    exports['heir'] = heir;
    exports['makeClassPredicate'] = makeClassPredicate;

    exports['PAUSE'] = PAUSE;
    exports['HaltError'] = HaltError;



    exports['makeStructureType'] = makeStructureType;
    exports['Struct'] = Struct;
    exports['StructType'] = StructType;

    exports['getTracedAppKey'] = getTracedAppKey;
    exports['getTracedCalleeKey'] = getTracedCalleeKey;

    exports['si_context_expected'] = si_context_expected;
    exports['si_context_expected_1'] = si_context_expected_1;
    exports['checkClosureAndArity'] = checkClosureAndArity;
    exports['checkPrimitiveArity'] = checkPrimitiveArity;

}(this.plt, this.plt.baselib));
(function(M, SUCCESS, FAIL, PARAMS) {(function(M, success, fail, params) {
var param;
var RT = plt.runtime;


var _328=function(M){if(--M.cbt<0){throw _328;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_336)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _329=function(M){if(--M.cbt<0){throw _329;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_345)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _315=function(M){if(--M.cbt<0){throw _315;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_316,2,[],"length-iter");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return(_316)(M);};

var _261=function(M){
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_266,M.p));
return((M.p).label)(M);};

var _53=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_7,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_56,M.p));
return((M.p).label)(M);};

var _65=function(M){if(--M.cbt<0){throw _65;}
M.e.length-=M.a;
return(_66)(M);};


var _101=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_61,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _75=function(M){
if(M.v===false){return(_73)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _58=function(M){if(--M.cbt<0){throw _58;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_59,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_59)(M);};

var _63=function(M){if(--M.cbt<0){throw _63;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_109)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _62=function(M){if(--M.cbt<0){throw _62;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_105)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _60=function(M){if(--M.cbt<0){throw _60;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_93)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _303=function(M){if(--M.cbt<0){throw _303;}
M.e.length-=M.a;
return(_304)(M);};

var _301=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_305)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _22=function(M){
M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_6,1,[],"first-tuple");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_29,M.p));
return(_6)(M);};

var _226=function(M){
M.c.push(new RT.PromptFrame(_228,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_225,1,[],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _177=function(M){if(--M.cbt<0){throw _177;}
M.e.length-=M.a;
return(_178)(M);};

var _249=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_243)(M);};

var _318=function(M){if(--M.cbt<0){throw _318;}
M.e.length-=M.a;
return(_319)(M);};

var _323=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_316,2,[],"length-iter");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"add1"));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _317=function(M){
M.c.push(new RT.PromptFrame(_319,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_315,1,[],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _263=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_257)(M);};


var _45=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_5,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _27=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_31,M.p));
return((M.p).label)(M);};


var _2=function(M){if(--M.cbt<0){throw _2;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_3)(M);};

var _7=function(M){if(--M.cbt<0){throw _7;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_53)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5=function(M){if(--M.cbt<0){throw _5;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_43)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _307=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_301)(M);};

var _305=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-5],0,"caar")).first.first;
M.p=M.primitives["equal?"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_307)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _302=function(M){
M.c.push(new RT.PromptFrame(_304,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_301,2,undefined,"assoc");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _279=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_273)(M);};

var _277=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-5],0,"caar")).first.first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_279)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _225=function(M){if(--M.cbt<0){throw _225;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _120=function(M){
M.c.push(new RT.PromptFrame(_122,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([M.primitives["and"],false,false]);M.e[M.e.length-1].names=["and",false,false];
M.v=new RT.Closure(_113,2,[M.e[M.e.length-1]],"do-it");
M.e[M.e.length-1][2]=M.v;
M.v=new RT.Closure(_114,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][1]=M.v;
M.v=new RT.Closure(_119,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _209=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_211)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _196=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_200,M.p));
return((M.p).label)(M);};

var _191=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_195,M.p));
return((M.p).label)(M);};

var _181=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_172,1,[],"some-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_190,M.p));
return(_172)(M);};

var _176=function(M){
M.c.push(new RT.PromptFrame(_178,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([M.primitives["or"],false,false]);M.e[M.e.length-1].names=["or",false,false];
M.v=new RT.Closure(_169,2,[M.e[M.e.length-1]],"do-it");
M.e[M.e.length-1][2]=M.v;
M.v=new RT.Closure(_170,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][1]=M.v;
M.v=new RT.Closure(_175,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _247=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.primitives["eqv?"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_249)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _289=function(M){if(--M.cbt<0){throw _289;}
M.e.length-=M.a;
return(_290)(M);};

var _287=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_291)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _288=function(M){
M.c.push(new RT.PromptFrame(_290,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_287,2,undefined,"assv");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _231=function(M){if(--M.cbt<0){throw _231;}
M.e.length-=M.a;
return(_232)(M);};

var _230=function(M){
M.c.push(new RT.PromptFrame(_232,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_229,2,undefined,"memq");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _9=function(M){if(--M.cbt<0){throw _9;}
M.e.length-=M.a;
return(_10)(M);};


var _43=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_45)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _3=function(M){if(--M.cbt<0){throw _3;}
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_4,1,[],"all-empty?");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_21,M.p));
return(_4)(M);};

var _1=function(M){if(--M.cbt<0){throw _1;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2,2,[],"do-it");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_2)(M);};

var _6=function(M){if(--M.cbt<0){throw _6;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_49)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4=function(M){if(--M.cbt<0){throw _4;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_37)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _275=function(M){if(--M.cbt<0){throw _275;}
M.e.length-=M.a;
return(_276)(M);};

var _273=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_277)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _274=function(M){
M.c.push(new RT.PromptFrame(_276,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_273,2,undefined,"assq");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _163=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_118,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_166,M.p));
return((M.p).label)(M);};

var _119=function(M){if(--M.cbt<0){throw _119;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _215=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_173,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_218,M.p));
return((M.p).label)(M);};


var _186=function(M){
M.e.length+=2;
if (M.e[M.e.length-3][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_173,1,[],"first-tuple");
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_193,M.p));
return(_173)(M);};

var _183=function(M){
if(M.v===false){return(_181)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _169=function(M){if(--M.cbt<0){throw _169;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _17=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_5,1,[],"some-empty?");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_26,M.p));
return(_5)(M);};

var _235=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_229)(M);};

var _259=function(M){if(--M.cbt<0){throw _259;}
M.e.length-=M.a;
return(_260)(M);};


var _257=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_261)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _105=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_62,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_108,M.p));
return((M.p).label)(M);};

var _245=function(M){if(--M.cbt<0){throw _245;}
M.e.length-=M.a;
return(_246)(M);};

var _243=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_247)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _244=function(M){
M.c.push(new RT.PromptFrame(_246,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_243,2,undefined,"memv");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _57=function(M){if(--M.cbt<0){throw _57;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_58,2,[],"do-it");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_58)(M);};

var _147=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_149)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_115,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _140=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_144,M.p));
return((M.p).label)(M);};

var _130=function(M){
M.e.length+=2;
if (M.e[M.e.length-3][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_117,1,[],"first-tuple");
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_137,M.p));
return(_117)(M);};

var _125=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_116,1,[],"some-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_134,M.p));
return(_116)(M);};


var _205=function(M){
M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _203=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_205)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_171,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};



var _170=function(M){if(--M.cbt<0){throw _170;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_171,1,[],"all-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_185,M.p));
return(_171)(M);};

var _175=function(M){if(--M.cbt<0){throw _175;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _172=function(M){if(--M.cbt<0){throw _172;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_209)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _19=function(M){
if(M.v===false){return(_17)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _233=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_235)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _229=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_233)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _219=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_174,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_222,M.p));
return((M.p).label)(M);};

var _32=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_36,M.p));
return((M.p).label)(M);};

var _24=function(M){
if(M.v===false){return(_22)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("map");
M.e[M.e.length-2]="all lists must have the same size";
M.p=M.primitives["error"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _227=function(M){if(--M.cbt<0){throw _227;}
M.e.length-=M.a;
return(_228)(M);};

var _8=function(M){
M.c.push(new RT.PromptFrame(_10,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_1,(RT.makeArityAtLeast(1)),[],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _155=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_116,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _132=function(M){
if(M.v===false){return(_130)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("andmap");
M.e[M.e.length-2]="all lists must have the same size";
M.p=M.primitives["error"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _127=function(M){
if(M.v===false){return(_125)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _211=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_172,1,[],"some-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _188=function(M){
if(M.v===false){return(_186)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("ormap");
M.e[M.e.length-2]="all lists must have the same size";
M.p=M.primitives["error"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _174=function(M){if(--M.cbt<0){throw _174;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_219)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _173=function(M){if(--M.cbt<0){throw _173;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_215)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _171=function(M){if(--M.cbt<0){throw _171;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_203)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _365=function(M){
M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.c.pop();
return(M.p)(M);};

var _366=function(M){
M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _352=function(M){if(--M.cbt<0){throw _352;}
RT.Primitives["call-with-values"]=RT.Primitives["call-with-values"]||M.v;
RT.Primitives["call/cc"]=RT.Primitives["call/cc"]||new RT.Closure(_callCCEntry,1,[],"call/cc");
RT.Primitives["call-with-current-continuation"]=RT.Primitives["call-with-current-continuation"]||new RT.Closure(_callCCEntry,1,[],"call/cc");
return(_363)(M);};

var _341=function(M){if(--M.cbt<0){throw _341;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return(_329)(M);};

var _260=function(M){if(--M.cbt<0){throw _260;}
RT.Primitives["memf"]=RT.Primitives["memf"]||M.v;
return(_274)(M);};

var _232=function(M){if(--M.cbt<0){throw _232;}
RT.Primitives["memq"]=RT.Primitives["memq"]||M.v;
return(_244)(M);};

var _222=function(M){if(--M.cbt<0){throw _222;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _190=function(M){if(--M.cbt<0){throw _190;}
return(_188)(M);};

var _162=function(M){if(--M.cbt<0){throw _162;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _137=function(M){if(--M.cbt<0){throw _137;}
return(_135)(M);};

var _66=function(M){if(--M.cbt<0){throw _66;}
RT.Primitives["for-each"]=RT.Primitives["for-each"]||M.v;
return(_120)(M);};

var _90=function(M){if(--M.cbt<0){throw _90;}
return(_88)(M);};

var _77=function(M){if(--M.cbt<0){throw _77;}
return(_75)(M);};

var _36=function(M){if(--M.cbt<0){throw _36;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _99=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_101)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _83=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_87,M.p));
return((M.p).label)(M);};

var _78=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_62,1,[],"first-tuple");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_85,M.p));
return(_62)(M);};



var _153=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_155)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _135=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_139,M.p));
return((M.p).label)(M);};


var _114=function(M){if(--M.cbt<0){throw _114;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_115,1,[],"all-empty?");
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_129,M.p));
return(_115)(M);};

var _117=function(M){if(--M.cbt<0){throw _117;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_159)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _367=function(M){
RT.Primitives["apply"]=RT.Primitives["apply"]||new RT.Closure(_368,(RT.makeArityAtLeast(2)),[],"apply");
};

var _363=function(M){
RT.Primitives["values"]=RT.Primitives["values"]||new RT.Closure(_364,(RT.makeArityAtLeast(0)),[],"values");
return(_367)(M);};

var _callCCEntry=function(M){if(--M.cbt<0){throw _callCCEntry;}
M.p=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-1]=M.captureControl(0,RT.DEFAULT_CONTINUATION_PROMPT_TAG);
M.e[M.e.length-2]=M.e.slice(0, M.e.length-3);
M.e[M.e.length-3]=new RT.Closure(_callCCClosureEntry,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"call/cc");
M.e.length-=2;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+0),0);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _319=function(M){if(--M.cbt<0){throw _319;}
RT.Primitives["length"]=RT.Primitives["length"]||M.v;
return(_330)(M);};

var _266=function(M){if(--M.cbt<0){throw _266;}
if(M.v===false){return(_263)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _178=function(M){if(--M.cbt<0){throw _178;}
RT.Primitives["ormap"]=RT.Primitives["ormap"]||M.v;
return(_226)(M);};

var _200=function(M){if(--M.cbt<0){throw _200;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _195=function(M){if(--M.cbt<0){throw _195;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_174,1,[],"rest-lists");
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_198,M.p));
return(_174)(M);};

var _122=function(M){if(--M.cbt<0){throw _122;}
RT.Primitives["andmap"]=RT.Primitives["andmap"]||M.v;
return(_176)(M);};

var _139=function(M){if(--M.cbt<0){throw _139;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_118,1,[],"rest-lists");
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_142,M.p));
return(_118)(M);};

var _108=function(M){if(--M.cbt<0){throw _108;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _87=function(M){if(--M.cbt<0){throw _87;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_59,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_63,1,[],"rest-lists");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_90,M.p));
return(_63)(M);};

var _56=function(M){if(--M.cbt<0){throw _56;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _34=function(M){if(--M.cbt<0){throw _34;}
return(_32)(M);};

var _350=function(M){
M.c.push(new RT.PromptFrame(_352,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_349,2,[],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _331=function(M){if(--M.cbt<0){throw _331;}
M.e.length-=M.a;
return(_332)(M);};

var _338=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_329,2,[],"append-2");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_328,1,[],"append-many");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_341,M.p));
return((M.p).label)(M);};

var _327=function(M){if(--M.cbt<0){throw _327;}
M.unspliceRestFromStack(0,M.a);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_328,1,[],"append-many");
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return(_328)(M);};

var _293=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_287)(M);};

var _258=function(M){
M.c.push(new RT.PromptFrame(_260,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_257,3,undefined,"memf");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _39=function(M){
M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _95=function(M){
M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _86=function(M){if(--M.cbt<0){throw _86;}
M.e.length-=(M.a-1);
return(_87)(M);};

var _80=function(M){
if(M.v===false){return(_78)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("for-each");
M.e[M.e.length-2]="all lists must have the same size";
M.p=M.primitives["error"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _121=function(M){if(--M.cbt<0){throw _121;}
M.e.length-=M.a;
return(_122)(M);};

var _159=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_117,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_162,M.p));
return((M.p).label)(M);};

var _149=function(M){
M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _113=function(M){if(--M.cbt<0){throw _113;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _118=function(M){if(--M.cbt<0){throw _118;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_163)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _116=function(M){if(--M.cbt<0){throw _116;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_153)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _115=function(M){if(--M.cbt<0){throw _115;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_147)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _368=function(M){if(--M.cbt<0){throw _368;}
M.p=M.e[M.e.length-1];
M.e.pop();
M.a=(M.a-1);
M.spliceListIntoStack((M.a-1));
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+0),0);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _360=function(M){
return(_363)(M);};

var _332=function(M){if(--M.cbt<0){throw _332;}
RT.Primitives["append"]=RT.Primitives["append"]||M.v;
return(_350)(M);};

var _304=function(M){if(--M.cbt<0){throw _304;}
RT.Primitives["assoc"]=RT.Primitives["assoc"]||M.v;
return(_317)(M);};

var _290=function(M){if(--M.cbt<0){throw _290;}
RT.Primitives["assv"]=RT.Primitives["assv"]||M.v;
return(_302)(M);};

var _228=function(M){if(--M.cbt<0){throw _228;}
RT.Primitives["caar"]=RT.Primitives["caar"]||M.v;
return(_230)(M);};

var _218=function(M){if(--M.cbt<0){throw _218;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _185=function(M){if(--M.cbt<0){throw _185;}
return(_183)(M);};

var _166=function(M){if(--M.cbt<0){throw _166;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _134=function(M){if(--M.cbt<0){throw _134;}
return(_132)(M);};

var _112=function(M){if(--M.cbt<0){throw _112;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _85=function(M){if(--M.cbt<0){throw _85;}
return(_83)(M);};

var _52=function(M){if(--M.cbt<0){throw _52;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _31=function(M){if(--M.cbt<0){throw _31;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_3,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_7,1,[],"rest-lists");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_34,M.p));
return(_7)(M);};

var _21=function(M){if(--M.cbt<0){throw _21;}
return(_19)(M);};

var _354=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _349=function(M){if(--M.cbt<0){throw _349;}
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_356,M.p));
return((M.p).label)(M);};

var _345=function(M){
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_329,2,[],"append-2");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_348,M.p));
return((M.p).label)(M);};

var _336=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_338)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _330=function(M){
M.c.push(new RT.PromptFrame(_332,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_327,(RT.makeArityAtLeast(0)),[],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _291=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-5],0,"caar")).first.first;
M.p=M.primitives["eqv?"];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_293)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _316=function(M){if(--M.cbt<0){throw _316;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_323)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _49=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_6,1,[],"first-tuple");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_52,M.p));
return((M.p).label)(M);};

var _37=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_39)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_4,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _109=function(M){
M.e.length+=2;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.pop();
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_63,1,[],"rest-lists");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_112,M.p));
return((M.p).label)(M);};

var _93=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_95)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_60,1,[],"all-empty?");
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _88=function(M){
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _73=function(M){
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_61,1,[],"some-empty?");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_82,M.p));
return(_61)(M);};

var _59=function(M){if(--M.cbt<0){throw _59;}
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_60,1,[],"all-empty?");
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_77,M.p));
return(_60)(M);};

var _64=function(M){
M.c.push(new RT.PromptFrame(_66,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=new RT.Closure(_57,(RT.makeArityAtLeast(1)),[],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _61=function(M){if(--M.cbt<0){throw _61;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_99)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _371=function(M){
return(_8)(M);};

var _364=function(M){if(--M.cbt<0){throw _364;}
if(M.a===1){return(_366)(M);}else{if(M.a===0){return(_365)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.c.pop();
return(M.p)(M);}}};

var _callCCClosureEntry=function(M){if(--M.cbt<0){throw _callCCClosureEntry;}
M.v=M.e[M.e.length-1];
M.e.push.apply(M.e,M.p.closedVals);
M.restoreControl(RT.DEFAULT_CONTINUATION_PROMPT_TAG);
M.e=M.e[M.e.length-2].slice(0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _356=function(M){if(--M.cbt<0){throw _356;}
M.a=1;
return(_357)(M);};

var _348=function(M){if(--M.cbt<0){throw _348;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _276=function(M){if(--M.cbt<0){throw _276;}
RT.Primitives["assq"]=RT.Primitives["assq"]||M.v;
return(_288)(M);};

var _246=function(M){if(--M.cbt<0){throw _246;}
RT.Primitives["memv"]=RT.Primitives["memv"]||M.v;
return(_258)(M);};

var _198=function(M){if(--M.cbt<0){throw _198;}
return(_196)(M);};

var _193=function(M){if(--M.cbt<0){throw _193;}
return(_191)(M);};

var _144=function(M){if(--M.cbt<0){throw _144;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _142=function(M){if(--M.cbt<0){throw _142;}
return(_140)(M);};

var _129=function(M){if(--M.cbt<0){throw _129;}
return(_127)(M);};

var _82=function(M){if(--M.cbt<0){throw _82;}
return(_80)(M);};

var _10=function(M){if(--M.cbt<0){throw _10;}
RT.Primitives["map"]=RT.Primitives["map"]||M.v;
return(_64)(M);};

var _29=function(M){if(--M.cbt<0){throw _29;}
return(_27)(M);};

var _26=function(M){if(--M.cbt<0){throw _26;}
return(_24)(M);};

var _351=function(M){if(--M.cbt<0){throw _351;}
M.e.length-=M.a;
return(_352)(M);};

var _357=function(M){if(--M.cbt<0){throw _357;}
if(M.a===0){return(_354)(M);}else{M.e.push(M.v);
return(_354)(M);}};

_10.mvr=_9;
_87.mvr=_86;
_66.mvr=_65;
_122.mvr=_121;
_178.mvr=_177;
_228.mvr=_227;
_232.mvr=_231;
_246.mvr=_245;
_260.mvr=_259;
_276.mvr=_275;
_290.mvr=_289;
_304.mvr=_303;
_319.mvr=_318;
_332.mvr=_331;
_356.mvr=_357;
_352.mvr=_351;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_371, true); })(M, function() { SUCCESS(); }, FAIL, PARAMS);})(plt.runtime.currentMachine,
function(){ plt.runtime.setReadyTrue(); },
function(){},
{});

// ** Visiting <MainModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _946=function(M){if(--M.cbt<0){throw _946;}
M.e.length-=(M.a-1);
return(_945)(M);};

var _544=function(M){if(--M.cbt<0){throw _544;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1933,69,15,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1936,69,18,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]=" <div id='problem_area'> ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=" </div>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_546,M.p));
return((M.p).label)(M);};

var _536=function(M){if(--M.cbt<0){throw _536;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=" </div>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_538,M.p));
return((M.p).label)(M);};

var _925=function(M){if(--M.cbt<0){throw _925;}
M.e.length-=(M.a-1);
return(_924)(M);};

var _488=function(M){if(--M.cbt<0){throw _488;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4442,147,4,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4455,147,17,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4458,147,20,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_490,M.p));
return((M.p).label)(M);};

var _476=function(M){if(--M.cbt<0){throw _476;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _895=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-14];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_896)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_896)(M);}};

var _893=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-15];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_894)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_894)(M);}};

var _888=function(M){
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_435,1,[],"check-answer");
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18162,463,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_892,M.p));
return((M.p).label)(M);};

var _884=function(M){
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_433,0,[M.e[M.e.length-7],M.e[M.e.length-5]],"problem-description");
M.e.length+=1;
M.v=new RT.Closure(_434,0,[M.e[M.e.length-8],M.e[M.e.length-6],M.e[M.e.length-5]],"hints");
M.a=1;
if(M.a===0){return(_887)(M);}else{M.e.push(M.v);
return(_887)(M);}};

var _699=function(M){
M.e.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7197,214,6,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][74];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _869=function(M){if(--M.cbt<0){throw _869;}
M.e.length-=(M.a-1);
return(_870)(M);};



var _836=function(M){if(--M.cbt<0){throw _836;}
M.e.length-=(M.a-1);
return(_837)(M);};


var _813=function(M){
M.c.pop();
M.e[M.e.length-32]="px; position:relative; width:50px; background-color: green;";
M.e[M.e.length-33]="\n";
M.e[M.e.length-34]="                                      ";
M.e[M.e.length-35]="border-right: solid; border-width: 1px;}";
M.e[M.e.length-36]="\n";
M.e[M.e.length-37]="#streak_bar_right{float:left; height: ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",10088,291,55,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_421,1,[],"id");
M.v=30;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_817,M.p));
return((M.p).label)(M);};


var _803=function(M){
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _794=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8092,248,8,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][42];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_797,M.p));
return((M.p).label)(M);};

var _784=function(M){
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7852,238,12,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][83];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _775=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7706,235,8,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
if (M.e[M.e.length-4][84]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[84]); }
M.e[M.e.length-1]=M.e[M.e.length-4][84];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7721,235,23,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][87]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_783,M.p));
return((M.p).label)(M);};

var _761=function(M){
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7317,219,6,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][83];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _966=function(M){if(--M.cbt<0){throw _966;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.v=".$$";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_968,M.p));
return((M.p).label)(M);};

var _947=function(M){if(--M.cbt<0){throw _947;}
return(_945)(M);};

var _911=function(M){if(--M.cbt<0){throw _911;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _723=function(M){
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7129,212,9,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][81]);
M.v="Error: Unknown state in 'on-answer-button'";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_758,M.p));
return((M.p).label)(M);};

var _1092=function(M){
if(M.modules["root/utilities/random.rkt"].isInvoked!==false){return(_1094)(M);}else{M.c.push(new RT.CallFrame(_1094,M.p));
return(M.modules["root/utilities/random.rkt"].label)(M);}};

var _1086=function(M){
if(M.modules["root/lang/primitives.rkt"].isInvoked!==false){return(_1088)(M);}else{M.c.push(new RT.CallFrame(_1088,M.p));
return(M.modules["root/lang/primitives.rkt"].label)(M);}};

var _1080=function(M){
if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_1082)(M);}else{M.c.push(new RT.CallFrame(_1082,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _825=function(M){if(--M.cbt<0){throw _825;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _771=function(M){if(--M.cbt<0){throw _771;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7537,230,4,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][51]);
M.v="Get another hint";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_773,M.p));
return((M.p).label)(M);};

var _756=function(M){if(--M.cbt<0){throw _756;}
M.c.pop();
return(_699)(M);};

var _1030=function(M){
M.c.pop();
return(_1029)(M);};

var _614=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3311,115,2,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3324,115,15,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3327,115,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#mc";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_616,M.p));
return((M.p).label)(M);};

var _606=function(M){
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3131,110,2,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3144,110,15,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3147,110,18,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_label_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_608,M.p));
return((M.p).label)(M);};

var _598=function(M){
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2973,105,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2986,105,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2989,105,18,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_600,M.p));
return((M.p).label)(M);};


var _983=function(M){
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21199,549,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_987,M.p));
return(_449)(M);};

var _620=function(M){if(--M.cbt<0){throw _620;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3358,116,2,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3371,116,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3374,116,18,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_622,M.p));
return((M.p).label)(M);};



var _950=function(M){
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _523=function(M){
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1362,48,4,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5][33];
if (M.e[M.e.length-5][36]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[36]); }
M.e[M.e.length-2]=M.e[M.e.length-5][36];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _558=function(M){if(--M.cbt<0){throw _558;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="block";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _540=function(M){if(--M.cbt<0){throw _540;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _534=function(M){if(--M.cbt<0){throw _534;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1746,65,15,84]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1749,65,18,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]=" <div id='exercise_title'> ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1788,65,57,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-9][3]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[3]); }
M.e[M.e.length-1]=M.e[M.e.length-9][3];
if (M.e[M.e.length-9][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[45]); }
M.v=M.e[M.e.length-9][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_536,M.p));
return((M.p).label)(M);};

var _512=function(M){if(--M.cbt<0){throw _512;}
M.e[M.e.length-6]=M.v;
M.c.pop();
M.v="' />";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_514,M.p));
return((M.p).label)(M);};

var _1260=function(M){if(--M.cbt<0){throw _1260;}
M.c.push(new RT.PromptFrame(_1262,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_463,0,[M.e[M.e.length-1]],"power-all-kinds-exercise");
M.e[M.e.length-1][119]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _441=function(M){if(--M.cbt<0){throw _441;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18852,484,4,150]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18858,484,10,83]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-14][44];
M.e[M.e.length-1]="The sum of ";
M.e[M.e.length-2]=M.e[M.e.length-13][0];
M.e[M.e.length-3]=" and ";
M.e[M.e.length-4]=M.e[M.e.length-12][0];
M.e[M.e.length-5]=" is the same as the sum of ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18917,484,69,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-6]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-13][0],0,"sub1"), 1);
M.c.pop();
M.e[M.e.length-7]=" and ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18931,484,83,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-8]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12][0],0,"add1"));
M.c.pop();
M.v=".";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_932,M.p));
return((M.p).label)(M);};

var _1244=function(M){if(--M.cbt<0){throw _1244;}
M.c.pop();
M.e[M.e.length-1][97]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _894=function(M){
M.e[M.e.length-1]=M.v;
M.v=new RT.Closure(_437,0,[M.e[M.e.length-18],M.e[M.e.length-14]],"...at-exercises.rkt:467:57");
M.a=1;
if(M.a===0){return(_895)(M);}else{M.e.push(M.v);
return(_895)(M);}};

var _891=function(M){if(--M.cbt<0){throw _891;}
M.e.length-=(M.a-1);
return(_892)(M);};

var _887=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_888)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_888)(M);}};

var _883=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_884)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_884)(M);}};











var _799=function(M){
M.v=(M.e[M.e.length-1]===RT.makeSymbol("shown"));
if(M.v===false){return(_803)(M);}else{M.e[M.e.length-2][0]=RT.makeSymbol("hidden");
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8295,256,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][53];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _790=function(M){if(--M.cbt<0){throw _790;}
M.e.length-=(M.a-1);
return(_791)(M);};


var _774=function(M){
M.v=RT.VOID;
return(_775)(M);};

var _1134=function(M){
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("html");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=RT.makeSymbol("css");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=RT.makeSymbol("show");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=RT.makeSymbol("get");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-7]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("html");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-8]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=RT.makeSymbol("css");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-9]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=RT.makeSymbol("show");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-10]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=RT.makeSymbol("get");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1136,M.p));
return((M.p).label)(M);};

var _1124=function(M){
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.length+=17;
M.e[M.e.length-17]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=M.e[M.e.length-19];
M.e[M.e.length-3]=M.e[M.e.length-20];
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("title");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=RT.makeSymbol("summary");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=RT.makeSymbol("new-problem!");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=RT.makeSymbol("problem-description");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-7]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=4;
M.e[M.e.length-3]=RT.makeSymbol("hints");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-8]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=5;
M.e[M.e.length-3]=RT.makeSymbol("check-answer");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-9]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=6;
M.e[M.e.length-3]=RT.makeSymbol("answer-type");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-10]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("title");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-11]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=RT.makeSymbol("summary");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-12]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=RT.makeSymbol("new-problem!");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-13]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=RT.makeSymbol("problem-description");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-14]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=4;
M.e[M.e.length-3]=RT.makeSymbol("hints");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-15]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=5;
M.e[M.e.length-3]=RT.makeSymbol("check-answer");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-16]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=6;
M.e[M.e.length-3]=RT.makeSymbol("answer-type");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-17];
M.e[M.e.length-17]=M.v;
M.a=17;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1126,M.p));
return((M.p).label)(M);};

var _964=function(M){if(--M.cbt<0){throw _964;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19815,514,21,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-12][44];
M.e[M.e.length-1]="$$a^";
M.e[M.e.length-2]=M.e[M.e.length-10][0];
M.e[M.e.length-3]=" = a ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-12][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19840,514,46,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-14][108];
M.e[M.e.length-1]="\\cdot a";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19868,514,74,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12][0],0,"sub1"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_966,M.p));
return((M.p).label)(M);};

var _934=function(M){if(--M.cbt<0){throw _934;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.NULL));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _907=function(M){if(--M.cbt<0){throw _907;}
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1095=function(M){
if(M.modules["root/utilities/string.rkt"].isInvoked!==false){return(_1097)(M);}else{M.c.push(new RT.CallFrame(_1097,M.p));
return(M.modules["root/utilities/string.rkt"].label)(M);}};

var _1089=function(M){
if(M.modules["root/lang/do.rkt"].isInvoked!==false){return(_1091)(M);}else{M.c.push(new RT.CallFrame(_1091,M.p));
return(M.modules["root/lang/do.rkt"].label)(M);}};

var _711=function(M){
M.v=M.e[M.e.length-1];
M.v=false;
return(_712)(M);};

var _700=function(M){
M.v=(M.e[M.e.length-1]===RT.makeSymbol("next"));
if(M.v===false){return(_723)(M);}else{M.e[M.e.length-2][0]=RT.makeSymbol("check");
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6462,199,21,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][70]);
M.v="Check Answer";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_726,M.p));
return((M.p).label)(M);}};

var _1078=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _823=function(M){if(--M.cbt<0){throw _823;}
M.e[M.e.length-172]=M.v;
M.c.pop();
M.e[M.e.length-173]="' value='Get Hint'/>";
M.e[M.e.length-174]="\n";
M.e[M.e.length-175]="<p></p>";
M.e[M.e.length-176]="\n";
M.e[M.e.length-177]="<div>Beware: Getting a hint will reset your streak</div>";
M.e[M.e.length-178]="\n";
M.e[M.e.length-179]="</div>";
M.e[M.e.length-180]="\n";
M.e[M.e.length-181]="</div>";
M.e[M.e.length-182]="\n";
M.v="</div>";
M.p=M.e[M.e.length-183];
M.e[M.e.length-183]=M.v;
M.a=183;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_825,M.p));
return((M.p).label)(M);};

var _666=function(M){
M.v="none";
return(_667)(M);};

var _768=function(M){if(--M.cbt<0){throw _768;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2][28]=0;
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7513,229,4,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][74];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_771,M.p));
return((M.p).label)(M);};

var _754=function(M){if(--M.cbt<0){throw _754;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7071,210,21,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][69];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_756,M.p));
return((M.p).label)(M);};

var _1029=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21711,566,12,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][113];
M.e[M.e.length-1]=2;
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1034,M.p));
return((M.p).label)(M);};

var _613=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3266,114,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push("There are only 5 radio buttons.");
M.p=M.e[M.e.length-2][55];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
return(_614)(M);};

var _605=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3086,109,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push("There are only 3 answer labels.");
M.p=M.e[M.e.length-2][55];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
return(_606)(M);};

var _597=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2928,104,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push("There are only 3 answer fields.");
M.p=M.e[M.e.length-2][55];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
return(_598)(M);};


var _982=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_983)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_983)(M);}};

var _618=function(M){if(--M.cbt<0){throw _618;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_620,M.p));
return((M.p).label)(M);};



var _957=function(M){
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19719,513,15,329]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19725,513,21,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7][44]);
M.v="The power $a^n$ is $a$ multiplied with itself $n$ times.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_964,M.p));
return((M.p).label)(M);};

var _570=function(M){if(--M.cbt<0){throw _570;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="append";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2413,85,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2416,85,18,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]=" <div> ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=" </div>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_572,M.p));
return((M.p).label)(M);};

var _554=function(M){if(--M.cbt<0){throw _554;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="none";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _538=function(M){if(--M.cbt<0){throw _538;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_540,M.p));
return((M.p).label)(M);};

var _518=function(M){if(--M.cbt<0){throw _518;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="appendTo";
M.v=M.e[M.e.length-4][35];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _510=function(M){if(--M.cbt<0){throw _510;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3843,130,17,165]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-11][44];
M.e[M.e.length-1]="<input id='answer_input_";
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]="' type='text' value=''";
M.e[M.e.length-4]="\n";
M.e[M.e.length-5]="onkeyup='";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-11][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3944,131,38,59]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
if (M.e[M.e.length-13][64]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-13].names[64]); }
M.e[M.e.length-2]=M.e[M.e.length-13][64];
M.e[M.e.length-1]=RT.makeSymbol("on-keyup/answer-input");
M.v="event.keyCode";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_512,M.p));
return((M.p).label)(M);};


var _486=function(M){if(--M.cbt<0){throw _486;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_488,M.p));
return((M.p).label)(M);};

var _439=function(M){if(--M.cbt<0){throw _439;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18660,476,12,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(10);
M.p=M.e[M.e.length-4][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18685,477,12,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(10);
M.p=M.e[M.e.length-4][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.c.pop();
M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1212=function(M){if(--M.cbt<0){throw _1212;}
M.c.push(new RT.PromptFrame(_1214,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_415,0,[M.e[M.e.length-1]],"on-hint-button");
M.e[M.e.length-1][85]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _436=function(M){if(--M.cbt<0){throw _436;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18375,467,46,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][131]);
M.v=M.e[M.e.length-2][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1195=function(M){if(--M.cbt<0){throw _1195;}
M.c.push(new RT.PromptFrame(_1197,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_408,1,[M.e[M.e.length-1]],"change-answer-button-text");
M.e[M.e.length-1][70]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1191=function(M){if(--M.cbt<0){throw _1191;}
M.c.push(new RT.PromptFrame(_1193,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_406,0,[M.e[M.e.length-1]],"hide-answer-inputs-and-labels");
M.e[M.e.length-1][68]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _873=function(M){if(--M.cbt<0){throw _873;}
M.e.length-=(M.a-1);
return(_874)(M);};



var _1157=function(M){if(--M.cbt<0){throw _1157;}
M.c.push(new RT.PromptFrame(_1159,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_389,1,[M.e[M.e.length-1]],"update-problem-area");
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _842=function(M){
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15199,388,6,58]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15205,388,12,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15226,389,12,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][99];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15237,389,23,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"-"), 1);
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15247,389,33,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_845,M.p));
return((M.p).label)(M);};

var _1213=function(M){if(--M.cbt<0){throw _1213;}
M.e.length-=(M.a-1);
return(_1214)(M);};

var _828=function(M){if(--M.cbt<0){throw _828;}
M.e.length-=(M.a-1);
return(_829)(M);};



var _1182=function(M){if(--M.cbt<0){throw _1182;}
M.e.length-=(M.a-1);
return(_1183)(M);};

var _1061=function(M){if(--M.cbt<0){throw _1061;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _795=function(M){
M.e.push(M.e[M.e.length-1][0]);
M.v=(M.e[M.e.length-1]===RT.makeSymbol("hidden"));
if(M.v===false){return(_799)(M);}else{M.e[M.e.length-2][0]=RT.makeSymbol("shown");
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8218,253,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][52];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _778=function(M){if(--M.cbt<0){throw _778;}
M.e.length-=(M.a-1);
return(_779)(M);};

var _999=function(M){if(--M.cbt<0){throw _999;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-22][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21010,543,99,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-23][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21016,543,105,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-21][0],0,"-"));
M.c.pop();
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"sub1"), 1);
M.e.pop();
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1001,M.p));
return((M.p).label)(M);};

var _995=function(M){if(--M.cbt<0){throw _995;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20765,541,10,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-17][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-16][0];
M.e[M.e.length-3]="^{";
M.e[M.e.length-4]=M.e[M.e.length-15][0];
M.e[M.e.length-5]="} = \\frac{1}{";
M.e[M.e.length-6]=M.e[M.e.length-16][0];
M.e[M.e.length-7]="^{";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-17][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20806,541,51,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-8]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-15][0],0,"-"));
M.c.pop();
M.v="}}.$$";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_997,M.p));
return((M.p).label)(M);};

var _974=function(M){if(--M.cbt<0){throw _974;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20007,516,21,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-14][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-13][0];
M.e[M.e.length-3]="^";
M.e[M.e.length-4]=M.e[M.e.length-12][0];
M.e[M.e.length-5]=" = ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20033,516,47,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-15][0];
M.e[M.e.length-2]=M.e[M.e.length-14][0];
M.p=M.e[M.e.length-16][109];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-6]=M.v;
M.c.pop();
M.v=".$$";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_976,M.p));
return((M.p).label)(M);};

var _962=function(M){if(--M.cbt<0){throw _962;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.NULL));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _932=function(M){if(--M.cbt<0){throw _932;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18952,485,10,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-12][44];
M.e[M.e.length-1]="The sum ";
M.e[M.e.length-2]=M.e[M.e.length-11][0];
M.e[M.e.length-3]=" + ";
M.e[M.e.length-4]=M.e[M.e.length-10][0];
M.e[M.e.length-5]=" is equal to ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-12][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18992,485,50,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-6]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-11][0],0,"+"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10][0],1,"+"));
M.c.pop();
M.v=".";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_934,M.p));
return((M.p).label)(M);};

var _905=function(M){if(--M.cbt<0){throw _905;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-3];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17813,448,19,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][105]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_907,M.p));
return((M.p).label)(M);};

var _898=function(M){if(--M.cbt<0){throw _898;}
M.c.pop();
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _709=function(M){
M.e[M.e.length-3][0]=RT.makeSymbol("check");
M.v=M.e[M.e.length-3];
M.e[M.e.length-4][28]=0;
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6358,196,27,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][73]);
M.v=RT.makeSymbol("sad");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_722,M.p));
return((M.p).label)(M);};

var _864=function(M){if(--M.cbt<0){throw _864;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16037,410,76,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-10][130]);
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_866,M.p));
return((M.p).label)(M);};

var _1083=function(M){
if(M.modules["whalesong/js.rkt"].isInvoked!==false){return(_1085)(M);}else{M.c.push(new RT.CallFrame(_1085,M.p));
return(M.modules["whalesong/js.rkt"].label)(M);}};

var _837=function(M){if(--M.cbt<0){throw _837;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14934,377,5,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][56];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _821=function(M){if(--M.cbt<0){throw _821;}
M.e[M.e.length-156]=M.v;
M.c.pop();
M.e[M.e.length-157]="' value='Check Answer'/>";
M.e[M.e.length-158]="\n";
M.e[M.e.length-159]="    ";
M.e[M.e.length-160]="<div><img id='sad' style='display: none;' src='../pics/face-sad.gif'/></div>";
M.e[M.e.length-161]="\n";
M.e[M.e.length-162]="    ";
M.e[M.e.length-163]="<div><img id='happy' style='display: none;' src='../pics/face-happy.gif'/></div>";
M.e[M.e.length-164]="\n";
M.e[M.e.length-165]="</div>";
M.e[M.e.length-166]="\n";
M.e[M.e.length-167]="<div id='help_area'>";
M.e[M.e.length-168]="\n";
M.e[M.e.length-169]="<div id='help_area_title'>Need help?</div>";
M.e[M.e.length-170]="\n";
M.e[M.e.length-171]="<input id='hint_button' type='button' onclick='storeProxy();";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14206,349,77,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-185][92]);
M.v=RT.makeSymbol("on-hint-button");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_823,M.p));
return((M.p).label)(M);};

var _673=function(M){
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _783=function(M){if(--M.cbt<0){throw _783;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,">="))));
M.e.length-=2;
M.c.pop();
if(M.v===false){return(_780)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7749,236,12,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
if (M.e[M.e.length-4][84]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[84]); }
M.e[M.e.length-1]=M.e[M.e.length-4][84];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7763,236,26,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][87]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_787,M.p));
return((M.p).label)(M);}};

var _766=function(M){if(--M.cbt<0){throw _766;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_768,M.p));
return((M.p).label)(M);};

var _752=function(M){if(--M.cbt<0){throw _752;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7033,209,21,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][47];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_754,M.p));
return((M.p).label)(M);};

var _748=function(M){if(--M.cbt<0){throw _748;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6935,207,21,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][80];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_750,M.p));
return((M.p).label)(M);};

var _632=function(M){
M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1019=function(M){
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22513,588,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_1023,M.p));
return(_454)(M);};

var _1016=function(M){
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.v=new RT.Closure(_457,1,[M.e[M.e.length-10],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_1018)(M);}else{M.e.push(M.v);
return(_1018)(M);}};

var _688=function(M){if(--M.cbt<0){throw _688;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_690,M.p));
return((M.p).label)(M);};


var _986=function(M){if(--M.cbt<0){throw _986;}
M.e.length-=(M.a-1);
return(_985)(M);};

var _616=function(M){if(--M.cbt<0){throw _616;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_618,M.p));
return((M.p).label)(M);};




var _566=function(M){if(--M.cbt<0){throw _566;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _550=function(M){if(--M.cbt<0){throw _550;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1989,70,2,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][40];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _514=function(M){if(--M.cbt<0){throw _514;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _508=function(M){if(--M.cbt<0){throw _508;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_510,M.p));
return((M.p).label)(M);};

var _487=function(M){if(--M.cbt<0){throw _487;}
M.e.length-=(M.a-1);
return(_488)(M);};

var _440=function(M){if(--M.cbt<0){throw _440;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18738,480,4,87]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Calculate the sum.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]=" + ";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v=" = \\ ?$$ </div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _438=function(M){if(--M.cbt<0){throw _438;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_439,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_440,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_441,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.v=new RT.Closure(_442,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_921)(M);}else{M.e.push(M.v);
return(_921)(M);}};

var _1238=function(M){if(--M.cbt<0){throw _1238;}
M.c.push(new RT.PromptFrame(_1246,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_426,3,[M.e[M.e.length-1]],"insert-at");
M.e[M.e.length-1][99]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1270=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1302,M.p));
return((M.p).label)(M);};

var _1222=function(M){if(--M.cbt<0){throw _1222;}
M.c.push(new RT.PromptFrame(_1224,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_418,1,[M.e[M.e.length-1]],"call-plt-thunk");
M.e[M.e.length-1][92]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1203=function(M){if(--M.cbt<0){throw _1203;}
M.c.push(new RT.PromptFrame(_1205,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push(RT.makeSymbol("next"));
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.v=new RT.Closure(_412,0,[M.e[M.e.length-2],M.e[M.e.length-1]],"on-answer-button");
M.e.pop();
M.e[M.e.length-1][79]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1261=function(M){if(--M.cbt<0){throw _1261;}
M.e.length-=(M.a-1);
return(_1262)(M);};

var _1189=function(M){if(--M.cbt<0){throw _1189;}
M.c.push(new RT.PromptFrame(_1191,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_405,0,[M.e[M.e.length-1]],"hide-multiple-choice-radio-buttons");
M.e[M.e.length-1][67]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1183=function(M){if(--M.cbt<0){throw _1183;}
M.c.push(new RT.PromptFrame(_1185,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_402,0,[M.e[M.e.length-1]],"clear-answer-input");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1237=function(M){if(--M.cbt<0){throw _1237;}
M.e.length-=(M.a-1);
return(_1238)(M);};

var _1165=function(M){if(--M.cbt<0){throw _1165;}
M.c.push(new RT.PromptFrame(_1167,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_393,1,[M.e[M.e.length-1]],"append-to-hint-area");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1159=function(M){if(--M.cbt<0){throw _1159;}
M.c.push(new RT.PromptFrame(_1161,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_390,0,[M.e[M.e.length-1]],"hide-hint-area");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1141=function(M){if(--M.cbt<0){throw _1141;}
M.c.push(new RT.PromptFrame(_1143,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_382,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"append-to-body");
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_1126=RT.si_context_expected(17);

var _1196=function(M){if(--M.cbt<0){throw _1196;}
M.e.length-=(M.a-1);
return(_1197)(M);};

var _1109=function(M){if(--M.cbt<0){throw _1109;}
M.c.push(new RT.PromptFrame(_1111,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_378,1,[M.e[M.e.length-1]],"hide");
M.e[M.e.length-1][126]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1101=function(M){if(--M.cbt<0){throw _1101;}
M.c.push(new RT.PromptFrame(_1103,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_374,1,[M.e[M.e.length-1]],"shuffle");
M.e[M.e.length-1][130]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1069=function(M){if(--M.cbt<0){throw _1069;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1059=function(M){if(--M.cbt<0){throw _1059;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-4][111];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.c.pop();
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23030,601,8,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23031,601,9,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][5]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-4][5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23054,601,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-6][118];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1061,M.p));
return((M.p).label)(M);};

var _1158=function(M){if(--M.cbt<0){throw _1158;}
M.e.length-=(M.a-1);
return(_1159)(M);};

var _1027=function(M){if(--M.cbt<0){throw _1027;}
M.e[M.e.length-6][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21675,565,10,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],0,"="),0)));
M.c.pop();
if(M.v===false){return(_1028)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21683,565,18,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
M.c.push(new RT.CallFrame(_1032,M.p));
return(_454)(M);}};

var _997=function(M){if(--M.cbt<0){throw _997;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20828,542,10,201]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=12;
M.e[M.e.length-12]=M.e[M.e.length-20][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-19][0];
M.e[M.e.length-3]="^{";
M.e[M.e.length-4]=M.e[M.e.length-18][0];
M.e[M.e.length-5]="} = \\frac{1}{";
M.e[M.e.length-6]=M.e[M.e.length-19][0];
M.e[M.e.length-7]="^{";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-20][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20869,542,51,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-8]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-18][0],0,"-"));
M.c.pop();
M.e[M.e.length-9]="}} = \\frac{1}{";
M.e[M.e.length-10]=M.e[M.e.length-19][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-20][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20893,542,75,130]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-22][108];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-22][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20987,543,76,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-24][44];
M.e[M.e.length-1]="\\cdot ";
M.v=M.e[M.e.length-23][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_999,M.p));
return((M.p).label)(M);};

var _993=function(M){if(--M.cbt<0){throw _993;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20708,540,10,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-13][44];
M.e[M.e.length-1]="$$a^{";
M.e[M.e.length-2]=M.e[M.e.length-11][0];
M.e[M.e.length-3]="} = \\frac{1}{a^";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20744,540,46,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-11][0],0,"-"));
M.c.pop();
M.v="}.$$";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_995,M.p));
return((M.p).label)(M);};

var _972=function(M){if(--M.cbt<0){throw _972;}
M.e[M.e.length-8]=M.v;
M.c.pop();
M.v=".$$";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_974,M.p));
return((M.p).label)(M);};

var _960=function(M){if(--M.cbt<0){throw _960;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19674,512,21,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-7][0];
M.v="^0 = 1.$$";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_962,M.p));
return((M.p).label)(M);};

var _926=function(M){if(--M.cbt<0){throw _926;}
return(_924)(M);};

var _902=function(M){if(--M.cbt<0){throw _902;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-9][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.c.pop();
M.p=M.e[M.e.length-8][88];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17759,446,14,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4][0]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.c.pop();
M.v=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17783,447,14,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][104]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_905,M.p));
return((M.p).label)(M);};

var _892=function(M){if(--M.cbt<0){throw _892;}
M.c.pop();
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18179,464,2,234]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-16][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-16].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-16][1];
M.e[M.e.length-1]="Antideriviative";
M.e[M.e.length-2]="Antiderivatives of powers.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-16][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18346,467,17,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18][100];
M.v=new RT.Closure(_436,0,[M.e[M.e.length-18],M.e[M.e.length-15]],"...at-exercises.rkt:467:41");
M.a=1;
if(M.a===0){return(_893)(M);}else{M.e.push(M.v);
return(_893)(M);}};

var _712=function(M){
if(M.v===false){return(_709)(M);}else{M.e[M.e.length-3][0]=RT.makeSymbol("next");
M.v=M.e[M.e.length-3];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6054,190,48,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4][28]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][28],0,"+"), 1);
M.c.pop();
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6103,191,27,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][70]);
M.v="Correct! Next Question...";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_718,M.p));
return((M.p).label)(M);}};

var _862=function(M){if(--M.cbt<0){throw _862;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-8][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15986,410,25,75]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][99];
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16011,410,50,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-8];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_864,M.p));
return((M.p).label)(M);};

var _855=function(M){if(--M.cbt<0){throw _855;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15846,408,24,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][102];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15858,408,36,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15863,408,41,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-10][87]);
M.v=M.e[M.e.length-8][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_857,M.p));
return((M.p).label)(M);};

var _835=function(M){if(--M.cbt<0){throw _835;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-2][62];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _819=function(M){if(--M.cbt<0){throw _819;}
M.e[M.e.length-118]=M.v;
M.c.pop();
M.e[M.e.length-119]="'>Show ScratchPad</a>";
M.e[M.e.length-120]="\n";
M.e[M.e.length-121]="\n";
M.e[M.e.length-122]="<div id='answer_area'>";
M.e[M.e.length-123]="\n";
M.e[M.e.length-124]="    ";
M.e[M.e.length-125]="<div id='answer_area_title'>Answer</div>";
M.e[M.e.length-126]="\n";
M.e[M.e.length-127]="    ";
M.e[M.e.length-128]="<div><div id='answer_input_label_1'>a</div><input id='answer_input_1' type='text' value='7' /></div>";
M.e[M.e.length-129]="\n";
M.e[M.e.length-130]="    ";
M.e[M.e.length-131]="<div><div id='answer_input_label_2'>b</div><input id='answer_input_2' type='text' value='8' /></div>";
M.e[M.e.length-132]="\n";
M.e[M.e.length-133]="    ";
M.e[M.e.length-134]="<div><div id='answer_input_label_3'>c</div><input id='answer_input_3' type='text' value='9' /></div>";
M.e[M.e.length-135]="\n";
M.e[M.e.length-136]="    ";
M.e[M.e.length-137]="<div><input id=\"mc0\" type=\"radio\" name=\"mc\" value=\"0\" checked=\"\"/> <span id=\"mc0_val\">Foo0<br/></span>";
M.e[M.e.length-138]="\n";
M.e[M.e.length-139]="         ";
M.e[M.e.length-140]="<input id=\"mc1\" type=\"radio\" name=\"mc\" value=\"1\"/>            <span id=\"mc1_val\">Foo1<br/></span>";
M.e[M.e.length-141]="\n";
M.e[M.e.length-142]="         ";
M.e[M.e.length-143]="<input id=\"mc2\" type=\"radio\" name=\"mc\" value=\"2\"/>            <span id=\"mc2_val\">Foo2<br/></span>";
M.e[M.e.length-144]="\n";
M.e[M.e.length-145]="         ";
M.e[M.e.length-146]="<input id=\"mc3\" type=\"radio\" name=\"mc\" value=\"3\"/>            <span id=\"mc3_val\">Foo3<br/></span>";
M.e[M.e.length-147]="\n";
M.e[M.e.length-148]="         ";
M.e[M.e.length-149]="<input id=\"mc4\" type=\"radio\" name=\"mc\" value=\"4\"/>            <span id=\"mc4_val\">Foo4<br/></span>";
M.e[M.e.length-150]="\n";
M.e[M.e.length-151]="    ";
M.e[M.e.length-152]="</div>";
M.e[M.e.length-153]="\n";
M.e[M.e.length-154]="    ";
M.e[M.e.length-155]="<input id='answer_button' type='button' onclick='";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",13753,343,70,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-185][92]);
M.v=RT.makeSymbol("on-answer-button");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_821,M.p));
return((M.p).label)(M);};

var _817=function(M){if(--M.cbt<0){throw _817;}
M.e[M.e.length-38]=M.v;
M.c.pop();
M.e[M.e.length-39]="px; position:relative; width:50px; background-color: red;}";
M.e[M.e.length-40]="\n";
M.e[M.e.length-41]="#streak_bar_current{position:absolute; left: 5px; bottom: 5px; color: white; display: inline; z-index: 1;}";
M.e[M.e.length-42]="\n";
M.e[M.e.length-43]="#title_spacer{height: 20px; clear:both;}";
M.e[M.e.length-44]="\n";
M.e[M.e.length-45]="#problem_and_answer_area{}";
M.e[M.e.length-46]="\n";
M.e[M.e.length-47]="#problem_and_hint_area{float: left;}";
M.e[M.e.length-48]="\n";
M.e[M.e.length-49]="#problem_area{padding-left: 50px;}";
M.e[M.e.length-50]="\n";
M.e[M.e.length-51]="#hint_area{padding-left: 50px; margin-top: 10px; border: 1px;}";
M.e[M.e.length-52]="\n";
M.e[M.e.length-53]="#answer_and_help_area{float: right; width: 300px;}";
M.e[M.e.length-54]="\n";
M.e[M.e.length-55]="#scratchpad_toggle{ text-decoration: underline; color: dodgerblue;}";
M.e[M.e.length-56]="\n";
M.e[M.e.length-57]="#answer_area{border: 1px; border-style: solid; border-color: black; background-color: lightblue; padding: 10px;}";
M.e[M.e.length-58]="\n";
M.e[M.e.length-59]="#answer_area_title{position:relative; font-size:large; margin-bottom: 10px; }";
M.e[M.e.length-60]="\n";
M.e[M.e.length-61]="#answer_input_1{margin-bottom: 10px}";
M.e[M.e.length-62]="\n";
M.e[M.e.length-63]="#answer_input_2{margin-bottom: 10px; display: inline;}";
M.e[M.e.length-64]="\n";
M.e[M.e.length-65]="#answer_input_3{margin-bottom: 10px; display: inline;}";
M.e[M.e.length-66]="\n";
M.e[M.e.length-67]="#answer_input_label_1{display: inline; margin-right: 5px;}";
M.e[M.e.length-68]="\n";
M.e[M.e.length-69]="#answer_input_label_2{display: inline; margin-right: 5px;}";
M.e[M.e.length-70]="\n";
M.e[M.e.length-71]="#answer_input_label_3{display: inline; margin-right: 5px;}";
M.e[M.e.length-72]="\n";
M.e[M.e.length-73]="#help_area{border: 1px; border-style: solid; border-color: black; background-color: lightblue; padding: 10px; margin-top: 15px;}";
M.e[M.e.length-74]="\n";
M.e[M.e.length-75]="#help_area_title{position:relative; font-size:large; margin-bottom: 10px;}";
M.e[M.e.length-76]="\n";
M.e[M.e.length-77]="</style>";
M.e[M.e.length-78]="\n";
M.e[M.e.length-79]="<div id='title_area'>";
M.e[M.e.length-80]="\n";
M.e[M.e.length-81]="<div id='exercise_title'>Addition</div>";
M.e[M.e.length-82]="\n";
M.e[M.e.length-83]="<div id='streak_bar_area'>";
M.e[M.e.length-84]="\n";
M.e[M.e.length-85]="<div id='streak_bar'>";
M.e[M.e.length-86]="\n";
M.e[M.e.length-87]="<div id='streak_bar_current'>0</div>";
M.e[M.e.length-88]="\n";
M.e[M.e.length-89]="<div id='streak_bar_left'>  </div>";
M.e[M.e.length-90]="\n";
M.e[M.e.length-91]="<div id='streak_bar_right'> </div>";
M.e[M.e.length-92]="\n";
M.e[M.e.length-93]="</div>";
M.e[M.e.length-94]="\n";
M.e[M.e.length-95]="<div>Streak...</div>";
M.e[M.e.length-96]="\n";
M.e[M.e.length-97]="</div>";
M.e[M.e.length-98]="\n";
M.e[M.e.length-99]="</div>";
M.e[M.e.length-100]="\n";
M.e[M.e.length-101]="<div id='title_spacer'></div>";
M.e[M.e.length-102]="\n";
M.e[M.e.length-103]="<div id='problem_and_answer_area'>";
M.e[M.e.length-104]="\n";
M.e[M.e.length-105]="<div id='problem_and_hint_area'>";
M.e[M.e.length-106]="\n";
M.e[M.e.length-107]="<div id='scratchpad'><div></div></div>";
M.e[M.e.length-108]="\n";
M.e[M.e.length-109]="<div id='problem_area'>1+2=?</div>";
M.e[M.e.length-110]="\n";
M.e[M.e.length-111]="<div id='hint_area'>Hints are displayed here</div>";
M.e[M.e.length-112]="\n";
M.e[M.e.length-113]="</div>";
M.e[M.e.length-114]="\n";
M.e[M.e.length-115]="<div id='answer_and_help_area'>";
M.e[M.e.length-116]="\n";
M.e[M.e.length-117]="<a id='scratchpad_toggle' onclick='";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",12501,330,52,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-185][92]);
M.v=RT.makeSymbol("on-toggle-scratchpad");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_819,M.p));
return((M.p).label)(M);};

var _779=function(M){if(--M.cbt<0){throw _779;}
M.c.pop();
return(_775)(M);};

var _758=function(M){if(--M.cbt<0){throw _758;}
M.c.pop();
return(_699)(M);};

var _750=function(M){if(--M.cbt<0){throw _750;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6975,208,21,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][51]);
M.v="Get Hint";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_752,M.p));
return((M.p).label)(M);};

var _746=function(M){if(--M.cbt<0){throw _746;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_748,M.p));
return((M.p).label)(M);};

var _1028=function(M){
M.v=M.e[M.e.length-1];
M.v=RT.VOID;
return(_1029)(M);};

var _1021=function(M){
M.c.pop();
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22530,589,2,182]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-17][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-17].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-17][1];
M.e[M.e.length-1]="Square of binomial";
M.e[M.e.length-2]="Square a binomial.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-17][97];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1018=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_1019)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_1019)(M);}};

var _1015=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_1016)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_1016)(M);}};

var _686=function(M){if(--M.cbt<0){throw _686;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="width";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5487,176,55,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][76];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5492,176,60,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][77];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5497,176,65,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(297, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],1,"-"));
M.c.pop();
M.v=297;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_688,M.p));
return((M.p).label)(M);};

var _680=function(M){if(--M.cbt<0){throw _680;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_682,M.p));
return((M.p).label)(M);};


var _985=function(M){
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21216,550,2,182]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Powers with negative exponents";
M.e[M.e.length-2]="Powers with natural exponents.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _630=function(M){if(--M.cbt<0){throw _630;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3516,120,11,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3521,120,16,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-4][60];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.c.pop();
if(M.v===false){return(_632)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _610=function(M){if(--M.cbt<0){throw _610;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _582=function(M){if(--M.cbt<0){throw _582;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="inline";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_584,M.p));
return((M.p).label)(M);};

var _564=function(M){if(--M.cbt<0){throw _564;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_566,M.p));
return((M.p).label)(M);};

var _548=function(M){if(--M.cbt<0){throw _548;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_550,M.p));
return((M.p).label)(M);};



var _504=function(M){if(--M.cbt<0){throw _504;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _496=function(M){if(--M.cbt<0){throw _496;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_498,M.p));
return((M.p).label)(M);};

var _377=function(M){if(--M.cbt<0){throw _377;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4393,146,4,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4406,146,17,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4409,146,20,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#mc";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_484,M.p));
return((M.p).label)(M);};


var _1301=function(M){if(--M.cbt<0){throw _1301;}
M.e.length-=(M.a-1);
return(_1302)(M);};

var _1230=function(M){if(--M.cbt<0){throw _1230;}
M.c.push(new RT.PromptFrame(_1238,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14796,372,2,332]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
if (M.e[M.e.length-5][18]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[18]); }
M.e[M.e.length-4]=M.e[M.e.length-5][18];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14813,373,3,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" <foo>...</foo> ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1240,M.p));
return((M.p).label)(M);};


var _437=function(M){if(--M.cbt<0){throw _437;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18392,467,63,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][98];
M.e[M.e.length-1]=M.e[M.e.length-4][131];
M.v=M.e[M.e.length-3][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _433=function(M){if(--M.cbt<0){throw _433;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17866,451,4,106]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="<div>What is the antiderivative of various powers.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-6][0];
M.v="  ?$$ </div>";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1253=function(M){if(--M.cbt<0){throw _1253;}
M.e.length-=(M.a-1);
return(_1254)(M);};

var _1181=function(M){if(--M.cbt<0){throw _1181;}
M.c.push(new RT.PromptFrame(_1183,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_401,0,[M.e[M.e.length-1]],"get-multiple-choice");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1173=function(M){if(--M.cbt<0){throw _1173;}
M.c.push(new RT.PromptFrame(_1175,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_397,1,[M.e[M.e.length-1]],"show-answer-field");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1167=function(M){if(--M.cbt<0){throw _1167;}
M.c.push(new RT.PromptFrame(_1169,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_394,1,[M.e[M.e.length-1]],"change-hint-button-text");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1223=function(M){if(--M.cbt<0){throw _1223;}
M.e.length-=(M.a-1);
return(_1224)(M);};


var _1211=function(M){if(--M.cbt<0){throw _1211;}
M.e.length-=(M.a-1);
return(_1212)(M);};

var _1129=function(M){if(--M.cbt<0){throw _1129;}
M.c.push(new RT.PromptFrame(_1139,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=0;
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1117=function(M){if(--M.cbt<0){throw _1117;}
M.c.push(new RT.PromptFrame(_1119,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("exercise");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=7;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("exercise");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1123,M.p));
return((M.p).label)(M);};

var _1107=function(M){if(--M.cbt<0){throw _1107;}
M.c.push(new RT.PromptFrame(_1109,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_377,1,[M.e[M.e.length-1]],"hide");
M.e[M.e.length-1][127]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _466=function(M){if(--M.cbt<0){throw _466;}
M.mainModules.push(M.modules["root/stxmat-exercises.rkt"]);
};

var _1170=function(M){if(--M.cbt<0){throw _1170;}
M.e.length-=(M.a-1);
return(_1171)(M);};

var _1054=function(M){if(--M.cbt<0){throw _1054;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23428,609,6,115]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-15][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-15].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-15][1];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1034=function(M){if(--M.cbt<0){throw _1034;}
M.e[M.e.length-5][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21750,567,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-4][0]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],1,"*"));
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21772,568,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-3][0]=plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6][0],1,"*")), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5][0],2,"*"));
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21796,569,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2][0]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5][0],1,"*"));
M.c.pop();
M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1005=function(M){if(--M.cbt<0){throw _1005;}
M.e[M.e.length-5]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.makePair(M.e[M.e.length-5],RT.NULL)))));
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _772=function(M){if(--M.cbt<0){throw _772;}
M.e.length-=(M.a-1);
return(_773)(M);};

var _987=function(M){if(--M.cbt<0){throw _987;}
return(_985)(M);};

var _970=function(M){if(--M.cbt<0){throw _970;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-18][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19972,515,90,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-16][0],0,"sub1"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_972,M.p));
return((M.p).label)(M);};

var _749=function(M){if(--M.cbt<0){throw _749;}
M.e.length-=(M.a-1);
return(_750)(M);};

var _741=function(M){if(--M.cbt<0){throw _741;}
M.e.length-=(M.a-1);
return(_742)(M);};


var _878=function(M){if(--M.cbt<0){throw _878;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _872=function(M){if(--M.cbt<0){throw _872;}
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16310,416,11,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-7][83];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _859=function(M){if(--M.cbt<0){throw _859;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15928,409,31,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15936,409,39,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][87]);
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_862,M.p));
return((M.p).label)(M);};

var _851=function(M){if(--M.cbt<0){throw _851;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]=new RT.Closure(_428,0,[M.e[M.e.length-8],M.e[M.e.length-10],M.e[M.e.length-9],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"...at-exercises.rkt:406:7");
M.v=new RT.Closure(_430,0,[M.e[M.e.length-8],M.e[M.e.length-5]],"...at-exercises.rkt:417:7");
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _833=function(M){if(--M.cbt<0){throw _833;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_835,M.p));
return((M.p).label)(M);};


var _815=function(M){if(--M.cbt<0){throw _815;}
M.e[M.e.length-31]=M.v;
return(_813)(M);};

var _672=function(M){
M.v="none";
return(_673)(M);};

var _777=function(M){if(--M.cbt<0){throw _777;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7680,234,6,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][48];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_779,M.p));
return((M.p).label)(M);};



var _744=function(M){if(--M.cbt<0){throw _744;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_746,M.p));
return((M.p).label)(M);};

var _740=function(M){if(--M.cbt<0){throw _740;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6805,205,21,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_742,M.p));
return((M.p).label)(M);};

var _732=function(M){if(--M.cbt<0){throw _732;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6624,202,21,94]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][46]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6668,203,22,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6669,203,23,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][6]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[6]); }
M.e[M.e.length-1]=M.e[M.e.length-5][6];
if (M.e[M.e.length-5][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[45]); }
M.v=M.e[M.e.length-5][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_734,M.p));
return((M.p).label)(M);};

var _722=function(M){if(--M.cbt<0){throw _722;}
M.c.pop();
return(_708)(M);};

var _714=function(M){if(--M.cbt<0){throw _714;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_716,M.p));
return((M.p).label)(M);};

var _696=function(M){if(--M.cbt<0){throw _696;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _684=function(M){if(--M.cbt<0){throw _684;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5436,176,4,115]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5449,176,17,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][34]);
M.v="#streak_bar_right";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_686,M.p));
return((M.p).label)(M);};

var _678=function(M){if(--M.cbt<0){throw _678;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="width";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5387,175,55,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][76];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5392,175,60,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][77];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.v=297;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_680,M.p));
return((M.p).label)(M);};

var _665=function(M){if(--M.cbt<0){throw _665;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5014,167,19,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===RT.makeSymbol("happy"));
M.c.pop();
if(M.v===false){return(_666)(M);}else{M.v="inline";
return(_667)(M);}};

var _651=function(M){if(--M.cbt<0){throw _651;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="focus";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _628=function(M){if(--M.cbt<0){throw _628;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="val";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_630,M.p));
return((M.p).label)(M);};


var _608=function(M){if(--M.cbt<0){throw _608;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_610,M.p));
return((M.p).label)(M);};

var _592=function(M){if(--M.cbt<0){throw _592;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2789,97,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2802,97,15,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#scratchpad_toggle";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_594,M.p));
return((M.p).label)(M);};

var _578=function(M){if(--M.cbt<0){throw _578;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="val";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _562=function(M){if(--M.cbt<0){throw _562;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="replaceWith";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2274,81,15,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2277,81,18,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" <div id='hint_area'> </div>";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_564,M.p));
return((M.p).label)(M);};




var _1268=function(M){if(--M.cbt<0){throw _1268;}
M.c.push(new RT.PromptFrame(_1304,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][121];
M.p=M.e[M.e.length-1][122];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1308,M.p));
return((M.p).label)(M);};

var _492=function(M){if(--M.cbt<0){throw _492;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _474=function(M){if(--M.cbt<0){throw _474;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"+"), M.e[M.e.length-2]);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-7][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15502,397,54,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.c.pop();
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_476,M.p));
return((M.p).label)(M);};

var _373=function(M){if(--M.cbt<0){throw _373;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18128,461,4,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-1]="$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]="$";
M.p=M.e[M.e.length-4][72];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _1267=function(M){if(--M.cbt<0){throw _1267;}
M.e.length-=(M.a-1);
return(_1268)(M);};

var _431=function(M){if(--M.cbt<0){throw _431;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(RT.makePair(RT.makePair("1",RT.makePair("x",RT.makePair(RT.makePair("0",RT.makePair("2x",RT.makePair("\\frac{1}{2}x",RT.makePair("\\frac{1}{2}x^2",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x",RT.makePair("\\frac{1}{2}x^2",RT.makePair(RT.makePair("1",RT.makePair("x^2",RT.makePair("\\frac{1}{2}x",RT.makePair("\\frac{1}{2}x^1",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^2",RT.makePair("\\frac{1}{3}x^3",RT.makePair(RT.makePair("2x",RT.makePair("x^3",RT.makePair("\\frac{1}{2}x^2",RT.makePair("\\frac{1}{3}x^2",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^3",RT.makePair("\\frac{1}{4}x^4",RT.makePair(RT.makePair("3x^2",RT.makePair("x^4",RT.makePair("\\frac{1}{3}x^3",RT.makePair("\\frac{1}{4}x^3",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^4",RT.makePair("\\frac{1}{5}x^5",RT.makePair(RT.makePair("4x^3",RT.makePair("x^5",RT.makePair("\\frac{1}{4}x^4",RT.makePair("\\frac{1}{5}x^4",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^5",RT.makePair("\\frac{1}{6}x^6",RT.makePair(RT.makePair("5x^4",RT.makePair("x^6",RT.makePair("\\frac{1}{5}x^5",RT.makePair("\\frac{1}{6}x^5",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^6",RT.makePair("\\frac{1}{7}x^7",RT.makePair(RT.makePair("6x^5",RT.makePair("x^7",RT.makePair("\\frac{1}{6}x^6",RT.makePair("\\frac{1}{7}x^6",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^{-2}",RT.makePair("-x^{-1}=\\frac{-1}{x}",RT.makePair(RT.makePair("x^{-1}=\\frac{1}{x}",RT.makePair("\\frac{1}{-3}x^{-3}",RT.makePair("x^{-1}",RT.makePair("-2x",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^{-3}",RT.makePair("\\frac{-1}{2}x^{-2}",RT.makePair(RT.makePair("\\frac{1}{-4}x^{-4}=\\frac{-4}{x^4}",RT.makePair("\\frac{1}{-3}x^{-3}=\\frac{-1}{3x^{-3}}",RT.makePair("-3x^{-2}",RT.makePair("-3x^{-4}",RT.NULL)))),RT.NULL))),RT.makePair(RT.makePair("x^{-1} = \\frac{1}{x}",RT.makePair("\\ln(x)",RT.makePair(RT.makePair("\\log(x)",RT.makePair("\\frac{1}{-2}x^{-2}",RT.makePair("x^{-2}",RT.makePair("1",RT.NULL)))),RT.NULL))),RT.NULL)))))))))));
M.e.push("uninitialized");
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push("uninitialized");
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push("uninitialized");
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.v=new RT.Closure(_432,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.a=1;
if(M.a===0){return(_883)(M);}else{M.e.push(M.v);
return(_883)(M);}};

var _1245=function(M){if(--M.cbt<0){throw _1245;}
M.e.length-=(M.a-1);
return(_1246)(M);};



var _430=function(M){if(--M.cbt<0){throw _430;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16346,418,9,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16363,418,26,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][61];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_878,M.p));
return((M.p).label)(M);};

var _1215=function(M){if(--M.cbt<0){throw _1215;}
M.e.length-=(M.a-1);
return(_1216)(M);};

var _424=function(M){if(--M.cbt<0){throw _424;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14891,376,5,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][54];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_837,M.p));
return((M.p).label)(M);};

var _1200=function(M){if(--M.cbt<0){throw _1200;}
M.e.length-=(M.a-1);
return(_1201)(M);};

var _1194=function(M){if(--M.cbt<0){throw _1194;}
M.e.length-=(M.a-1);
return(_1195)(M);};

var _1190=function(M){if(--M.cbt<0){throw _1190;}
M.e.length-=(M.a-1);
return(_1191)(M);};

var _1180=function(M){if(--M.cbt<0){throw _1180;}
M.e.length-=(M.a-1);
return(_1181)(M);};

var _418=function(M){if(--M.cbt<0){throw _418;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8544,265,2,96]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-1]="storeProxy();(~a)(~a,~a)";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8579,265,37,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][91]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8593,265,51,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.p=M.e[M.e.length-7][93];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_808,M.p));
return((M.p).label)(M);};

var _1166=function(M){if(--M.cbt<0){throw _1166;}
M.e.length-=(M.a-1);
return(_1167)(M);};

var _1156=function(M){if(--M.cbt<0){throw _1156;}
M.e.length-=(M.a-1);
return(_1157)(M);};

var _1148=function(M){if(--M.cbt<0){throw _1148;}
M.e.length-=(M.a-1);
return(_1149)(M);};

var _770=function(M){if(--M.cbt<0){throw _770;}
M.e.length-=(M.a-1);
return(_771)(M);};

var _976=function(M){if(--M.cbt<0){throw _976;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL))));
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _968=function(M){if(--M.cbt<0){throw _968;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19903,515,21,82]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-16][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-15][0];
M.e[M.e.length-3]="^";
M.e[M.e.length-4]=M.e[M.e.length-14][0];
M.e[M.e.length-5]=" = ";
M.e[M.e.length-6]=M.e[M.e.length-15][0];
M.e[M.e.length-7]=" ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-16][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19932,515,50,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-18][108];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-18][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19949,515,67,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-20][44];
M.e[M.e.length-1]="\\cdot ";
M.v=M.e[M.e.length-19][0];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_970,M.p));
return((M.p).label)(M);};

var _747=function(M){if(--M.cbt<0){throw _747;}
M.e.length-=(M.a-1);
return(_748)(M);};

var _739=function(M){if(--M.cbt<0){throw _739;}
M.e.length-=(M.a-1);
return(_740)(M);};

var _731=function(M){if(--M.cbt<0){throw _731;}
M.e.length-=(M.a-1);
return(_732)(M);};

var _874=function(M){if(--M.cbt<0){throw _874;}
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16182,413,23,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][71];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16213,413,54,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.p=M.e[M.e.length-6][88];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _870=function(M){if(--M.cbt<0){throw _870;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16285,415,11,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-7][40];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_872,M.p));
return((M.p).label)(M);};

var _857=function(M){if(--M.cbt<0){throw _857;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.pop();
M.c.pop();
M.v=M.primitives["values"];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_859,M.p));
return((M.p).label)(M);};

var _849=function(M){if(--M.cbt<0){throw _849;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15723,405,7,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][44]);
M.v=" {foo: bar;} ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_851,M.p));
return((M.p).label)(M);};

var _829=function(M){if(--M.cbt<0){throw _829;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14636,366,5,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][56]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _812=function(M){if(--M.cbt<0){throw _812;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]="function(v){return v;}";
M.e[M.e.length-4]="function(v){return v;}";
M.p=M.e[M.e.length-189][59];
M.a=4;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.e[M.e.length-10]=M.v;
M.c.pop();
M.e[M.e.length-11]=";};";
M.e[M.e.length-12]="\n";
M.e[M.e.length-13]="</script>";
M.e[M.e.length-14]="\n";
M.e[M.e.length-15]="<style>";
M.e[M.e.length-16]="\n";
M.e[M.e.length-17]="#scratchpad { padding-left: 30px; overflow: hidden; display: inline; }";
M.e[M.e.length-18]="\n";
M.e[M.e.length-19]="#scratchpad svg { position: absolute; z-index: 1; min-height: 350px; width: 50%; height: 85%;}";
M.e[M.e.length-20]="\n";
M.e[M.e.length-21]="\n";
M.e[M.e.length-22]="#exercise_title{font-size: xx-large; display: inline; height:";
M.e[M.e.length-23]=35;
M.e[M.e.length-24]="}";
M.e[M.e.length-25]="\n";
M.e[M.e.length-26]="#streak_bar_area{float:right; position: relative;}";
M.e[M.e.length-27]="\n";
M.e[M.e.length-28]="#streak_bar{float:left; position:relative; border:1px; border-color: black; border-style: solid;}";
M.e[M.e.length-29]="\n";
M.e[M.e.length-30]="#streak_bar_left {float:left; height: ";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",9869,289,55,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_421,1,[],"id");
M.v=30;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
M.c.push(new RT.CallFrame(_815,M.p));
return(_421)(M);};

var _667=function(M){
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_669,M.p));
return((M.p).label)(M);};

var _773=function(M){if(--M.cbt<0){throw _773;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7603,231,21,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2][84]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][84],0,"+"), 1);
M.c.pop();
M.v=RT.VOID;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7631,232,10,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-3][84]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[84]); }
M.e[M.e.length-1]=M.e[M.e.length-3][84];
M.p=M.e[M.e.length-3][86];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
if(M.v===false){return(_774)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7656,233,6,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][49];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_777,M.p));
return((M.p).label)(M);}};


var _646=function(M){if(--M.cbt<0){throw _646;}
M.e.length-=(M.a-1);
return(_647)(M);};

var _742=function(M){if(--M.cbt<0){throw _742;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6858,206,21,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6859,206,22,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][22]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[22]); }
M.e[M.e.length-1]=M.e[M.e.length-4][22];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6872,206,35,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][9]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-5][9];
if (M.e[M.e.length-5][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[45]); }
M.v=M.e[M.e.length-5][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_744,M.p));
return((M.p).label)(M);};

var _738=function(M){if(--M.cbt<0){throw _738;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6740,204,21,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-3][63];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_740,M.p));
return((M.p).label)(M);};

var _730=function(M){if(--M.cbt<0){throw _730;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_732,M.p));
return((M.p).label)(M);};

var _720=function(M){if(--M.cbt<0){throw _720;}
M.c.pop();
return(_708)(M);};

var _707=function(M){if(--M.cbt<0){throw _707;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-1];
if(M.v===false){return(_711)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5880,187,34,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5881,187,35,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-6][8]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[8]); }
M.e[M.e.length-1]=M.e[M.e.length-6][8];
if (M.e[M.e.length-6][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[45]); }
M.v=M.e[M.e.length-6][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_714,M.p));
return((M.p).label)(M);}};

var _694=function(M){if(--M.cbt<0){throw _694;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5602,177,50,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]="<span>";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5620,177,68,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-9][28]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[28]); }
M.e[M.e.length-1]=M.e[M.e.length-9][28];
M.p=M.e[M.e.length-9][78];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v="</span>";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_696,M.p));
return((M.p).label)(M);};

var _682=function(M){if(--M.cbt<0){throw _682;}
M.c.pop();
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_684,M.p));
return((M.p).label)(M);};

var _671=function(M){if(--M.cbt<0){throw _671;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5113,169,19,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===RT.makeSymbol("sad"));
M.c.pop();
if(M.v===false){return(_672)(M);}else{M.v="inline";
return(_673)(M);}};

var _661=function(M){if(--M.cbt<0){throw _661;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4898,163,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="<br/>";
M.p=M.e[M.e.length-6][72];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _647=function(M){if(--M.cbt<0){throw _647;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4591,152,2,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][66];
M.a=0;
RT.checkClosureAndArity(M);
M.e.pop();
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _624=function(M){if(--M.cbt<0){throw _624;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _602=function(M){if(--M.cbt<0){throw _602;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="show";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _590=function(M){if(--M.cbt<0){throw _590;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="css";
M.e[M.e.length-3]="display";
M.v="none";
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_592,M.p));
return((M.p).label)(M);};

var _574=function(M){if(--M.cbt<0){throw _574;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1302=function(M){if(--M.cbt<0){throw _1302;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1294=function(M){if(--M.cbt<0){throw _1294;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1296,M.p));
return((M.p).label)(M);};

var _1286=function(M){if(--M.cbt<0){throw _1286;}
M.e[M.e.length-7]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24089,632,6,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][63];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1288,M.p));
return((M.p).label)(M);};

var _1278=function(M){if(--M.cbt<0){throw _1278;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23953,628,6,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][43];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1280,M.p));
return((M.p).label)(M);};


var _502=function(M){if(--M.cbt<0){throw _502;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_504,M.p));
return((M.p).label)(M);};

var _484=function(M){if(--M.cbt<0){throw _484;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_486,M.p));
return((M.p).label)(M);};

var _1250=function(M){if(--M.cbt<0){throw _1250;}
M.c.push(new RT.PromptFrame(_1252,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_438,0,[M.e[M.e.length-1]],"addition-exercise");
M.e[M.e.length-1][106]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1310=function(M){if(--M.cbt<0){throw _1310;}
M.e.length-=(M.a-1);
return(_1311)(M);};






var _1259=function(M){if(--M.cbt<0){throw _1259;}
M.e.length-=(M.a-1);
return(_1260)(M);};

var _1251=function(M){if(--M.cbt<0){throw _1251;}
M.e.length-=(M.a-1);
return(_1252)(M);};


var _1163=function(M){if(--M.cbt<0){throw _1163;}
M.c.push(new RT.PromptFrame(_1165,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_392,0,[M.e[M.e.length-1]],"clear-hint-area");
M.e[M.e.length-1][49]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1155=function(M){if(--M.cbt<0){throw _1155;}
M.c.push(new RT.PromptFrame(_1157,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_388,0,[M.e[M.e.length-1]],"update-exercise-title");
M.e[M.e.length-1][43]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1149=function(M){if(--M.cbt<0){throw _1149;}
M.c.push(new RT.PromptFrame(_1151,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_385,0,[M.e[M.e.length-1]],"run-mathjax");
M.e[M.e.length-1][40]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_1136=RT.si_context_expected(11);

var _422=function(M){if(--M.cbt<0){throw _422;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14609,365,5,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][54]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_829,M.p));
return((M.p).label)(M);};

var _1113=function(M){if(--M.cbt<0){throw _1113;}
M.c.push(new RT.PromptFrame(_1115,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_380,1,[M.e[M.e.length-1]],"clear");
M.e[M.e.length-1][124]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1105=function(M){if(--M.cbt<0){throw _1105;}
M.c.push(new RT.PromptFrame(_1107,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_376,1,[M.e[M.e.length-1]],"...at-exercises.rkt:379:10");
M.e[M.e.length-1][128]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _420=function(M){if(--M.cbt<0){throw _420;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8848,272,2,5579]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][30]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8938,275,5,5487]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=183;
M.e[M.e.length-183]=M.e[M.e.length-185][44];
M.e[M.e.length-1]="<script>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="function Proxy() {}";
M.e[M.e.length-4]="\n";
M.e[M.e.length-5]="Proxy.prototype.jsEval = function(expr) { return eval(expr); };";
M.e[M.e.length-6]="\n";
M.e[M.e.length-7]="var proxy = new Proxy();";
M.e[M.e.length-8]="\n";
M.e[M.e.length-9]="var storeProxy = function(){";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-185][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",9177,280,45,84]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-1]="(~a)(~a,~a,proxy)";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-189][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",9205,280,73,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-189][91]);
M.v="store-js-proxy";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_812,M.p));
return((M.p).label)(M);};

var _1073=function(M){if(--M.cbt<0){throw _1073;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1046=function(M){if(--M.cbt<0){throw _1046;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_459,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_460,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_461,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_462,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23375,608,26,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-9][9]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-9][9];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23397,608,48,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-9][0];
M.p=M.e[M.e.length-11][118];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1054,M.p));
return((M.p).label)(M);};

var _1040=function(M){if(--M.cbt<0){throw _1040;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22302,581,10,70]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-19][44];
M.e[M.e.length-1]=" $$ = ";
M.e[M.e.length-2]=M.e[M.e.length-18][0];
M.e[M.e.length-3]="^2\\cdot x^2 + 2\\cdot(";
M.e[M.e.length-4]=M.e[M.e.length-18][0];
M.e[M.e.length-5]="x)\\cdot ";
M.e[M.e.length-6]=M.e[M.e.length-17][0];
M.e[M.e.length-7]=" + ";
M.e[M.e.length-8]=M.e[M.e.length-17][0];
M.v="^2$$";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1042,M.p));
return((M.p).label)(M);};

var _1023=function(M){if(--M.cbt<0){throw _1023;}
return(_1021)(M);};

var _1001=function(M){if(--M.cbt<0){throw _1001;}
M.e[M.e.length-11]=M.v;
M.c.pop();
M.v="}. $$";
M.p=M.e[M.e.length-12];
M.e[M.e.length-12]=M.v;
M.a=12;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1003,M.p));
return((M.p).label)(M);};


var _757=function(M){if(--M.cbt<0){throw _757;}
M.e.length-=(M.a-1);
return(_758)(M);};


var _737=function(M){if(--M.cbt<0){throw _737;}
M.e.length-=(M.a-1);
return(_738)(M);};


var _725=function(M){if(--M.cbt<0){throw _725;}
M.e.length-=(M.a-1);
return(_726)(M);};

var _868=function(M){if(--M.cbt<0){throw _868;}
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16074,411,11,199]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-10][32];
M.e[M.e.length-1]=new RT.Closure(_429,2,[M.e[M.e.length-10],M.e[M.e.length-6]],"...at-exercises.rkt:411:21");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_870,M.p));
return((M.p).label)(M);};


var _845=function(M){if(--M.cbt<0){throw _845;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _683=function(M){if(--M.cbt<0){throw _683;}
M.e.length-=(M.a-1);
return(_684)(M);};

var _810=function(M){if(--M.cbt<0){throw _810;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]="function(v){return v;}";
M.e[M.e.length-4]="function(v){return v;}";
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][59];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _808=function(M){if(--M.cbt<0){throw _808;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]="function(v){return v;}";
M.e[M.e.length-4]="function(v){return v;}";
M.p=M.e[M.e.length-5][59];
M.a=4;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _409=function(M){if(--M.cbt<0){throw _409;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4834,162,2,92]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4847,162,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4850,162,18,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][44];
M.e[M.e.length-1]="#mc";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v="_val";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_659,M.p));
return((M.p).label)(M);};


var _402=function(M){if(--M.cbt<0){throw _402;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4013,132,2,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][124];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _736=function(M){if(--M.cbt<0){throw _736;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_738,M.p));
return((M.p).label)(M);};

var _728=function(M){if(--M.cbt<0){throw _728;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6560,201,21,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6561,201,22,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][5]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-4][5];
if (M.e[M.e.length-4][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[45]); }
M.v=M.e[M.e.length-4][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_730,M.p));
return((M.p).label)(M);};

var _718=function(M){if(--M.cbt<0){throw _718;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6186,192,27,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][73]);
M.v=RT.makeSymbol("happy");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_720,M.p));
return((M.p).label)(M);};

var _705=function(M){if(--M.cbt<0){throw _705;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_707,M.p));
return((M.p).label)(M);};

var _692=function(M){if(--M.cbt<0){throw _692;}
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5556,177,4,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5569,177,17,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#streak_bar_current";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_694,M.p));
return((M.p).label)(M);};


var _669=function(M){if(--M.cbt<0){throw _669;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5053,168,2,94]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5066,168,15,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#sad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_671,M.p));
return((M.p).label)(M);};

var _659=function(M){if(--M.cbt<0){throw _659;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_661,M.p));
return((M.p).label)(M);};

var _637=function(M){if(--M.cbt<0){throw _637;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-2][62];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _622=function(M){if(--M.cbt<0){throw _622;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_624,M.p));
return((M.p).label)(M);};


var _600=function(M){if(--M.cbt<0){throw _600;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_602,M.p));
return((M.p).label)(M);};

var _586=function(M){if(--M.cbt<0){throw _586;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.v="Hide ScratchPad";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _572=function(M){if(--M.cbt<0){throw _572;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_574,M.p));
return((M.p).label)(M);};

var _1311=function(M){if(--M.cbt<0){throw _1311;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1300=function(M){if(--M.cbt<0){throw _1300;}
M.e[M.e.length-12]=M.v;
M.c.pop();
M.p=M.e[M.e.length-13][120];
M.a=12;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=12;
M.a=1;
M.c.pop();
if(M.a===0){return(_1270)(M);}else{M.e.push(M.v);
return(_1270)(M);}};

var _1292=function(M){if(--M.cbt<0){throw _1292;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1294,M.p));
return((M.p).label)(M);};

var _1284=function(M){if(--M.cbt<0){throw _1284;}
M.e[M.e.length-6]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24064,631,6,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][79];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1286,M.p));
return((M.p).label)(M);};

var _1276=function(M){if(--M.cbt<0){throw _1276;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23931,627,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][94];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1278,M.p));
return((M.p).label)(M);};

var _1266=function(M){if(--M.cbt<0){throw _1266;}
M.c.pop();
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1258=function(M){if(--M.cbt<0){throw _1258;}
M.c.push(new RT.PromptFrame(_1260,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_458,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"combine-exercises");
M.e[M.e.length-1][115]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _482=function(M){if(--M.cbt<0){throw _482;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-2][62];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1242=function(M){if(--M.cbt<0){throw _1242;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]=new RT.Closure(_424,0,[M.e[M.e.length-5]],"...at-exercises.rkt:375:3");
M.v=new RT.Closure(_425,0,[M.e[M.e.length-5]],"...at-exercises.rkt:378:3");
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1244,M.p));
return((M.p).label)(M);};

var _1228=function(M){if(--M.cbt<0){throw _1228;}
M.c.push(new RT.PromptFrame(_1230,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14514,361,2,248]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
if (M.e[M.e.length-5][18]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[18]); }
M.e[M.e.length-4]=M.e[M.e.length-5][18];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14531,362,3,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" <foo>...</foo> ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1232,M.p));
return((M.p).label)(M);};

var _1226=function(M){if(--M.cbt<0){throw _1226;}
M.c.push(new RT.PromptFrame(_1228,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_420,0,[M.e[M.e.length-1]],"generate-body");
M.e[M.e.length-1][94]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1210=function(M){if(--M.cbt<0){throw _1210;}
M.c.push(new RT.PromptFrame(_1212,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_414,0,[M.e[M.e.length-1]],"reset-hint-index");
M.e[M.e.length-1][80]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1201=function(M){if(--M.cbt<0){throw _1201;}
M.c.push(new RT.PromptFrame(_1203,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_411,0,[M.e[M.e.length-1]],"update-streak-bar");
M.e[M.e.length-1][74]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1193=function(M){if(--M.cbt<0){throw _1193;}
M.c.push(new RT.PromptFrame(_1195,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_407,0,[M.e[M.e.length-1]],"set-focus-to-answer-input");
M.e[M.e.length-1][69]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1257=function(M){if(--M.cbt<0){throw _1257;}
M.e.length-=(M.a-1);
return(_1258)(M);};

var _1249=function(M){if(--M.cbt<0){throw _1249;}
M.e.length-=(M.a-1);
return(_1250)(M);};

var _1171=function(M){if(--M.cbt<0){throw _1171;}
M.c.push(new RT.PromptFrame(_1173,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_396,0,[M.e[M.e.length-1]],"hide-scratchpad");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1227=function(M){if(--M.cbt<0){throw _1227;}
M.e.length-=(M.a-1);
return(_1228)(M);};

var _1147=function(M){if(--M.cbt<0){throw _1147;}
M.c.push(new RT.PromptFrame(_1149,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_384,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"call-proxy");
M.e[M.e.length-1][38]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1209=function(M){if(--M.cbt<0){throw _1209;}
M.e.length-=(M.a-1);
return(_1210)(M);};

_1123=RT.si_context_expected(5);

var _1115=function(M){if(--M.cbt<0){throw _1115;}
M.c.push(new RT.PromptFrame(_1117,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_381,1,[M.e[M.e.length-1]],"...at-exercises.rkt:37:12");
M.e[M.e.length-1][123]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1188=function(M){if(--M.cbt<0){throw _1188;}
M.e.length-=(M.a-1);
return(_1189)(M);};

var _1099=function(M){if(--M.cbt<0){throw _1099;}
M.c.push(new RT.PromptFrame(_1101,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_373,1,[M.e[M.e.length-1]],"$wrap");
M.e[M.e.length-1][131]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1174=function(M){if(--M.cbt<0){throw _1174;}
M.e.length-=(M.a-1);
return(_1175)(M);};

var _1164=function(M){if(--M.cbt<0){throw _1164;}
M.e.length-=(M.a-1);
return(_1165)(M);};

var _1154=function(M){if(--M.cbt<0){throw _1154;}
M.e.length-=(M.a-1);
return(_1155)(M);};

var _1146=function(M){if(--M.cbt<0){throw _1146;}
M.e.length-=(M.a-1);
return(_1147)(M);};

var _1140=function(M){if(--M.cbt<0){throw _1140;}
M.e.length-=(M.a-1);
return(_1141)(M);};

var _1128=function(M){if(--M.cbt<0){throw _1128;}
M.e.length-=(M.a-1);
return(_1129)(M);};

var _755=function(M){if(--M.cbt<0){throw _755;}
M.e.length-=(M.a-1);
return(_756)(M);};

var _1114=function(M){if(--M.cbt<0){throw _1114;}
M.e.length-=(M.a-1);
return(_1115)(M);};

var _1106=function(M){if(--M.cbt<0){throw _1106;}
M.e.length-=(M.a-1);
return(_1107)(M);};

var _1098=function(M){if(--M.cbt<0){throw _1098;}
M.e.length-=(M.a-1);
return(_1099)(M);};

var _721=function(M){if(--M.cbt<0){throw _721;}
M.e.length-=(M.a-1);
return(_722)(M);};

var _866=function(M){if(--M.cbt<0){throw _866;}
M.c.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_868,M.p));
return((M.p).label)(M);};






var _797=function(M){if(--M.cbt<0){throw _797;}
M.c.pop();
M.e[M.e.length-2][0]=true;
M.v=RT.VOID;
return(_795)(M);};





var _734=function(M){if(--M.cbt<0){throw _734;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_736,M.p));
return((M.p).label)(M);};

var _726=function(M){if(--M.cbt<0){throw _726;}
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",6526,200,21,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][73]);
M.v=RT.makeSymbol("none");
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_728,M.p));
return((M.p).label)(M);};

var _716=function(M){if(--M.cbt<0){throw _716;}
M.c.pop();
return(_712)(M);};

var _703=function(M){if(--M.cbt<0){throw _703;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_705,M.p));
return((M.p).label)(M);};

var _690=function(M){if(--M.cbt<0){throw _690;}
M.c.pop();
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_692,M.p));
return((M.p).label)(M);};

var _453=function(M){if(--M.cbt<0){throw _453;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(1);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(2);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21544,559,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],1,"*"));
M.c.pop();
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21566,560,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.multiply(plt.baselib.numbers.multiply(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],1,"*")), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],2,"*"));
M.c.pop();
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21590,561,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.multiply(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],0,"*"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],1,"*"));
M.c.pop();
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_454,0,undefined,"new-problem!");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_455,0,[M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6]],"problem-description");
M.e.length+=1;
M.v=new RT.Closure(_456,0,[M.e[M.e.length-9],M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.a=1;
if(M.a===0){return(_1015)(M);}else{M.e.push(M.v);
return(_1015)(M);}};


var _655=function(M){if(--M.cbt<0){throw _655;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="val";
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _635=function(M){if(--M.cbt<0){throw _635;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="val";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_637,M.p));
return((M.p).label)(M);};


var _450=function(M){if(--M.cbt<0){throw _450;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20518,535,4,91]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Calculate the power.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]="^{";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v="} = \\ ?$$ </div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _594=function(M){if(--M.cbt<0){throw _594;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]="html";
M.v="Show ScratchPad";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _584=function(M){if(--M.cbt<0){throw _584;}
M.c.pop();
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2638,93,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2651,93,15,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#scratchpad_toggle";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_586,M.p));
return((M.p).label)(M);};


var _1308=function(M){if(--M.cbt<0){throw _1308;}
M.a=1;
return(_1309)(M);};

var _1298=function(M){if(--M.cbt<0){throw _1298;}
M.e[M.e.length-11]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24242,636,6,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][40];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1300,M.p));
return((M.p).label)(M);};

var _1290=function(M){if(--M.cbt<0){throw _1290;}
M.e[M.e.length-9]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24154,634,6,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24155,634,7,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-14][22]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[22]); }
M.e[M.e.length-1]=M.e[M.e.length-14][22];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-14][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24168,634,20,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-15][9]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-15].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-15][9];
M.v=M.e[M.e.length-15][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1292,M.p));
return((M.p).label)(M);};

var _1282=function(M){if(--M.cbt<0){throw _1282;}
M.e[M.e.length-5]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24021,630,6,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][67];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1284,M.p));
return((M.p).label)(M);};

var _1274=function(M){if(--M.cbt<0){throw _1274;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1276,M.p));
return((M.p).label)(M);};

var _1264=function(M){if(--M.cbt<0){throw _1264;}
M.c.push(new RT.PromptFrame(_1268,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][121];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23844,625,0,412]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=12;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23850,625,6,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-13][41]);
M.v="storeProxy();";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1272,M.p));
return((M.p).label)(M);};

var _1256=function(M){if(--M.cbt<0){throw _1256;}
M.c.push(new RT.PromptFrame(_1258,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_453,0,[M.e[M.e.length-1]],"squaring-binomial-exercise");
M.e[M.e.length-1][112]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1248=function(M){if(--M.cbt<0){throw _1248;}
M.c.push(new RT.PromptFrame(_1250,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_431,0,[M.e[M.e.length-1]],"antiderivative-of-power-exercise");
M.e[M.e.length-1][103]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1236=function(M){if(--M.cbt<0){throw _1236;}
M.c.pop();
M.e[M.e.length-1][95]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1232=function(M){if(--M.cbt<0){throw _1232;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14563,363,3,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" {foo: bar;} ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1234,M.p));
return((M.p).label)(M);};

var _1220=function(M){if(--M.cbt<0){throw _1220;}
M.c.push(new RT.PromptFrame(_1222,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_417,1,[M.e[M.e.length-1]],"plt-function");
M.e[M.e.length-1][91]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1216=function(M){if(--M.cbt<0){throw _1216;}
M.c.push(new RT.PromptFrame(_1220,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v="function(v){return v;}";
M.e[M.e.length-1][90]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1208=function(M){if(--M.cbt<0){throw _1208;}
M.c.push(new RT.PromptFrame(_1210,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=-1;
M.e[M.e.length-1][84]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1197=function(M){if(--M.cbt<0){throw _1197;}
M.c.push(new RT.PromptFrame(_1199,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_409,2,[M.e[M.e.length-1]],"change-multiple-choice-text");
M.e[M.e.length-1][71]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1187=function(M){if(--M.cbt<0){throw _1187;}
M.c.push(new RT.PromptFrame(_1189,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_404,0,[M.e[M.e.length-1]],"hide-answer-inputs");
M.e[M.e.length-1][66]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1179=function(M){if(--M.cbt<0){throw _1179;}
M.c.push(new RT.PromptFrame(_1181,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_400,1,[M.e[M.e.length-1]],"get-answer-field");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1169=function(M){if(--M.cbt<0){throw _1169;}
M.c.push(new RT.PromptFrame(_1171,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_395,0,[M.e[M.e.length-1]],"show-scratchpad");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1161=function(M){if(--M.cbt<0){throw _1161;}
M.c.push(new RT.PromptFrame(_1163,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_391,0,[M.e[M.e.length-1]],"show-hint-area");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1153=function(M){if(--M.cbt<0){throw _1153;}
M.c.push(new RT.PromptFrame(_1155,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_387,1,[M.e[M.e.length-1]],"js-eval");
M.e[M.e.length-1][41]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1151=function(M){if(--M.cbt<0){throw _1151;}
M.c.push(new RT.PromptFrame(_1153,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_386,0,[M.e[M.e.length-1]],"create-scratchpad");
M.e[M.e.length-1][42]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1143=function(M){if(--M.cbt<0){throw _1143;}
M.c.push(new RT.PromptFrame(_1145,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=RT.makeSymbol("uninitialized");
M.e[M.e.length-1][36]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1204=function(M){if(--M.cbt<0){throw _1204;}
M.e.length-=(M.a-1);
return(_1205)(M);};

var _1119=function(M){if(--M.cbt<0){throw _1119;}
M.c.push(new RT.PromptFrame(_1129,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("answer");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=4;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("answer");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1133,M.p));
return((M.p).label)(M);};

var _1111=function(M){if(--M.cbt<0){throw _1111;}
M.c.push(new RT.PromptFrame(_1113,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_379,1,[M.e[M.e.length-1]],"hide");
M.e[M.e.length-1][125]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1178=function(M){if(--M.cbt<0){throw _1178;}
M.e.length-=(M.a-1);
return(_1179)(M);};

var _1065=function(M){if(--M.cbt<0){throw _1065;}
M.p=M.v;
M.c.pop();
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1044=function(M){if(--M.cbt<0){throw _1044;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL))));
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1042=function(M){if(--M.cbt<0){throw _1042;}
M.e[M.e.length-3]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22383,582,10,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-17][44];
M.e[M.e.length-1]=" $$ = ";
M.e[M.e.length-2]=M.e[M.e.length-14][0];
M.e[M.e.length-3]="x^2 + ";
M.e[M.e.length-4]=M.e[M.e.length-13][0];
M.e[M.e.length-5]="x + ";
M.e[M.e.length-6]=M.e[M.e.length-12][0];
M.v="$$";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1044,M.p));
return((M.p).label)(M);};

var _1032=function(M){if(--M.cbt<0){throw _1032;}
return(_1030)(M);};

var _1138=function(M){if(--M.cbt<0){throw _1138;}
M.e.length-=(M.a-1);
return(_1139)(M);};

var _1135=function(M){if(--M.cbt<0){throw _1135;}
if((M.a-11)===0){return(_1131)(M);}else{RT.si_context_expected(11)(M);
}};

var _753=function(M){if(--M.cbt<0){throw _753;}
M.e.length-=(M.a-1);
return(_754)(M);};

var _1118=function(M){if(--M.cbt<0){throw _1118;}
M.e.length-=(M.a-1);
return(_1119)(M);};

var _1110=function(M){if(--M.cbt<0){throw _1110;}
M.e.length-=(M.a-1);
return(_1111)(M);};

var _1102=function(M){if(--M.cbt<0){throw _1102;}
M.e.length-=(M.a-1);
return(_1103)(M);};

var _1093=function(M){if(--M.cbt<0){throw _1093;}
M.e.length-=(M.a-1);
return(_1094)(M);};

var _717=function(M){if(--M.cbt<0){throw _717;}
M.e.length-=(M.a-1);
return(_718)(M);};

var _1088=function(M){if(--M.cbt<0){throw _1088;}
if((M.modules["root/lang/do.rkt"]!==undefined)!==false){return(_1089)(M);}else{return(_1091)(M);}};

var _1085=function(M){if(--M.cbt<0){throw _1085;}
if((M.modules["root/lang/primitives.rkt"]!==undefined)!==false){return(_1086)(M);}else{return(_1088)(M);}};

var _691=function(M){if(--M.cbt<0){throw _691;}
M.e.length-=(M.a-1);
return(_692)(M);};



var _791=function(M){if(--M.cbt<0){throw _791;}
M.c.pop();
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7945,241,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][40];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _462=function(M){if(--M.cbt<0){throw _462;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23295,607,8,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23296,607,9,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][8]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[8]); }
M.e[M.e.length-1]=M.e[M.e.length-5][8];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23319,607,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-7][118];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1073,M.p));
return((M.p).label)(M);};

var _460=function(M){if(--M.cbt<0){throw _460;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23124,603,8,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23125,603,9,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][6]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[6]); }
M.e[M.e.length-1]=M.e[M.e.length-4][6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23155,603,39,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-6][118];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1065,M.p));
return((M.p).label)(M);};


var _1031=function(M){if(--M.cbt<0){throw _1031;}
M.e.length-=(M.a-1);
return(_1030)(M);};







var _591=function(M){if(--M.cbt<0){throw _591;}
M.e.length-=(M.a-1);
return(_592)(M);};




var _449=function(M){if(--M.cbt<0){throw _449;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20408,531,12,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20413,531,17,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(3);
M.p=M.e[M.e.length-5][111];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-3][0]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.pop();
M.c.pop();
M.v=M.e[M.e.length-2];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20449,532,12,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20455,532,18,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(4);
M.p=M.e[M.e.length-5][111];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2][0]=plt.baselib.numbers.subtract(-1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"-"));
M.e.pop();
M.c.pop();
M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1312=function(M){
return(_464)(M);};

var _1304=function(M){if(--M.cbt<0){throw _1304;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/stxmat-exercises.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _1296=function(M){if(--M.cbt<0){throw _1296;}
M.e[M.e.length-10]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24216,635,6,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][74];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1298,M.p));
return((M.p).label)(M);};

var _1288=function(M){if(--M.cbt<0){throw _1288;}
M.e[M.e.length-8]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",24116,633,6,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1290,M.p));
return((M.p).label)(M);};

var _1280=function(M){if(--M.cbt<0){throw _1280;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23983,629,6,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-13][68];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1282,M.p));
return((M.p).label)(M);};

var _1272=function(M){if(--M.cbt<0){throw _1272;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23882,626,6,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-13][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23883,626,7,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-14][5]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[5]); }
M.e[M.e.length-1]=M.e[M.e.length-14][5];
M.v=M.e[M.e.length-14][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1274,M.p));
return((M.p).label)(M);};

var _1262=function(M){if(--M.cbt<0){throw _1262;}
M.c.push(new RT.PromptFrame(_1264,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23792,619,2,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][103];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1266,M.p));
return((M.p).label)(M);};

var _1254=function(M){if(--M.cbt<0){throw _1254;}
M.c.push(new RT.PromptFrame(_1256,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_448,0,[M.e[M.e.length-1]],"power2-exercise");
M.e[M.e.length-1][110]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1246=function(M){if(--M.cbt<0){throw _1246;}
M.c.push(new RT.PromptFrame(_1248,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_427,2,[M.e[M.e.length-1]],"multiple-choice-answer");
M.e[M.e.length-1][100]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1240=function(M){if(--M.cbt<0){throw _1240;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14845,374,3,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v=" {foo: bar;} ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1242,M.p));
return((M.p).label)(M);};

var _1234=function(M){if(--M.cbt<0){throw _1234;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.e[M.e.length-3]=new RT.Closure(_422,0,[M.e[M.e.length-5]],"...at-exercises.rkt:364:3");
M.v=new RT.Closure(_423,0,[M.e[M.e.length-5]],"...at-exercises.rkt:367:3");
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1236,M.p));
return((M.p).label)(M);};

var _1224=function(M){if(--M.cbt<0){throw _1224;}
M.c.push(new RT.PromptFrame(_1226,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_419,2,[M.e[M.e.length-1]],"call-plt-function1");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1214=function(M){if(--M.cbt<0){throw _1214;}
M.c.push(new RT.PromptFrame(_1216,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("hidden");
M.e[M.e.length-2]=false;
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.v=new RT.Closure(_416,0,[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"on-toggle-scratchpad");
M.e.length-=2;
M.e[M.e.length-1][89]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1205=function(M){if(--M.cbt<0){throw _1205;}
M.c.push(new RT.PromptFrame(_1208,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_413,1,[M.e[M.e.length-1]],"on-keyup/answer-input");
M.e[M.e.length-1][82]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1199=function(M){if(--M.cbt<0){throw _1199;}
M.c.push(new RT.PromptFrame(_1201,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_410,1,[M.e[M.e.length-1]],"face");
M.e[M.e.length-1][73]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1185=function(M){if(--M.cbt<0){throw _1185;}
M.c.push(new RT.PromptFrame(_1187,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_403,0,[M.e[M.e.length-1]],"hide-answer-labels");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1177=function(M){if(--M.cbt<0){throw _1177;}
M.c.push(new RT.PromptFrame(_1179,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_399,1,[M.e[M.e.length-1]],"show-multiple-choice-radio-button");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1175=function(M){if(--M.cbt<0){throw _1175;}
M.c.push(new RT.PromptFrame(_1177,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_398,1,[M.e[M.e.length-1]],"show-answer-label");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1225=function(M){if(--M.cbt<0){throw _1225;}
M.e.length-=(M.a-1);
return(_1226)(M);};

var _1145=function(M){if(--M.cbt<0){throw _1145;}
M.c.push(new RT.PromptFrame(_1147,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_383,1,[M.e[M.e.length-1]],"store-js-proxy");
M.e[M.e.length-1][37]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1139=function(M){if(--M.cbt<0){throw _1139;}
M.c.push(new RT.PromptFrame(_1141,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=0;
M.e[M.e.length-1][29]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_1133=RT.si_context_expected(5);

var _1198=function(M){if(--M.cbt<0){throw _1198;}
M.e.length-=(M.a-1);
return(_1199)(M);};

var _1186=function(M){if(--M.cbt<0){throw _1186;}
M.e.length-=(M.a-1);
return(_1187)(M);};

var _1103=function(M){if(--M.cbt<0){throw _1103;}
M.c.push(new RT.PromptFrame(_1105,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_375,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][129]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1172=function(M){if(--M.cbt<0){throw _1172;}
M.e.length-=(M.a-1);
return(_1173)(M);};

var _1162=function(M){if(--M.cbt<0){throw _1162;}
M.e.length-=(M.a-1);
return(_1163)(M);};

var _1038=function(M){if(--M.cbt<0){throw _1038;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22198,580,10,93]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=13;
M.e[M.e.length-13]=M.e[M.e.length-23][44];
M.e[M.e.length-1]=" $$(";
M.e[M.e.length-2]=M.e[M.e.length-22][0];
M.e[M.e.length-3]="\\cdot x + ";
M.e[M.e.length-4]=M.e[M.e.length-21][0];
M.e[M.e.length-5]=")^2 = (";
M.e[M.e.length-6]=M.e[M.e.length-22][0];
M.e[M.e.length-7]="\\cdot x)^2 + 2\\cdot(";
M.e[M.e.length-8]=M.e[M.e.length-22][0];
M.e[M.e.length-9]="x)\\cdot ";
M.e[M.e.length-10]=M.e[M.e.length-21][0];
M.e[M.e.length-11]=" + ";
M.e[M.e.length-12]=M.e[M.e.length-21][0];
M.v="^2 $$";
M.p=M.e[M.e.length-13];
M.e[M.e.length-13]=M.v;
M.a=13;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1040,M.p));
return((M.p).label)(M);};

var _1144=function(M){if(--M.cbt<0){throw _1144;}
M.e.length-=(M.a-1);
return(_1145)(M);};

var _1003=function(M){if(--M.cbt<0){throw _1003;}
M.e[M.e.length-4]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21040,544,10,95]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=9;
M.e[M.e.length-9]=M.e[M.e.length-17][44];
M.e[M.e.length-1]="$$";
M.e[M.e.length-2]=M.e[M.e.length-16][0];
M.e[M.e.length-3]="^{";
M.e[M.e.length-4]=M.e[M.e.length-15][0];
M.e[M.e.length-5]="} = \\frac{1}{";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-17][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21075,544,45,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-18][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-19][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21083,544,53,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-17][0],0,"-"));
M.c.pop();
M.p=M.e[M.e.length-19][109];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-6]=M.v;
M.c.pop();
M.e[M.e.length-7]="}.$$ Enter the result as $1/";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-17][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21118,544,88,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-18][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-19][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21126,544,96,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2]=plt.baselib.numbers.subtract(0, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-17][0],0,"-"));
M.c.pop();
M.p=M.e[M.e.length-19][109];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-8]=M.v;
M.c.pop();
M.v="$.";
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1005,M.p));
return((M.p).label)(M);};

var _1132=function(M){if(--M.cbt<0){throw _1132;}
if((M.a-5)===0){return(_1134)(M);}else{RT.si_context_expected(5)(M);
}};

var _1125=function(M){if(--M.cbt<0){throw _1125;}
if((M.a-17)===0){return(_1121)(M);}else{RT.si_context_expected(17)(M);
}};

var _1112=function(M){if(--M.cbt<0){throw _1112;}
M.e.length-=(M.a-1);
return(_1113)(M);};

var _1104=function(M){if(--M.cbt<0){throw _1104;}
M.e.length-=(M.a-1);
return(_1105)(M);};

var _1096=function(M){if(--M.cbt<0){throw _1096;}
M.e.length-=(M.a-1);
return(_1097)(M);};

var _1094=function(M){if(--M.cbt<0){throw _1094;}
if((M.modules["root/utilities/string.rkt"]!==undefined)!==false){return(_1095)(M);}else{return(_1097)(M);}};

var _1091=function(M){if(--M.cbt<0){throw _1091;}
if((M.modules["root/utilities/random.rkt"]!==undefined)!==false){return(_1092)(M);}else{return(_1094)(M);}};

var _1084=function(M){if(--M.cbt<0){throw _1084;}
M.e.length-=(M.a-1);
return(_1085)(M);};

var _1081=function(M){if(--M.cbt<0){throw _1081;}
M.e.length-=(M.a-1);
return(_1082)(M);};

var _465=function(M){if(--M.cbt<0){throw _465;}
M.e.length-=M.a;
return(_466)(M);};



var _787=function(M){if(--M.cbt<0){throw _787;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
M.c.pop();
if(M.v===false){return(_784)(M);}else{M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7791,237,12,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][50]);
M.v="There are no more hints.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _461=function(M){if(--M.cbt<0){throw _461;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23211,605,8,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23212,605,9,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-4][7]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[7]); }
M.e[M.e.length-1]=M.e[M.e.length-4][7];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23228,605,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-6][118];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1069,M.p));
return((M.p).label)(M);};

var _459=function(M){if(--M.cbt<0){throw _459;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22999,600,22,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23007,600,30,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][117]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1059,M.p));
return((M.p).label)(M);};

var _406=function(M){if(--M.cbt<0){throw _406;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4568,151,2,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][65];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_647,M.p));
return((M.p).label)(M);};

var _405=function(M){if(--M.cbt<0){throw _405;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4495,148,2,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][127];
M.v=RT.makePair(0,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.NULL)))));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _619=function(M){if(--M.cbt<0){throw _619;}
M.e.length-=(M.a-1);
return(_620)(M);};

var _457=function(M){if(--M.cbt<0){throw _457;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22478,586,4,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-5][0],RT.makePair(M.e[M.e.length-4][0],RT.makePair(M.e[M.e.length-3][0],RT.NULL)));
M.p=M.e[M.e.length-6][114];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _456=function(M){if(--M.cbt<0){throw _456;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22017,577,4,423]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-10][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22023,577,10,164]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-13][44];
M.e[M.e.length-1]="First use the rule:  $(s+t)^2=s^2+2\\cdot s\\cdot t+t^2$ <br/>";
M.e[M.e.length-2]="\n";
M.v="Second use the rule: $(a\\cdot s)^2=a^2\\cdot s^2$";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1038,M.p));
return((M.p).label)(M);};



var _583=function(M){if(--M.cbt<0){throw _583;}
M.e.length-=(M.a-1);
return(_584)(M);};



var _448=function(M){if(--M.cbt<0){throw _448;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_449,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"new-problem!");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_450,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_451,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.v=new RT.Closure(_452,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_982)(M);}else{M.e.push(M.v);
return(_982)(M);}};

var _549=function(M){if(--M.cbt<0){throw _549;}
M.e.length-=(M.a-1);
return(_550)(M);};



var _388=function(M){if(--M.cbt<0){throw _388;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1682,64,2,149]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1695,64,15,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#exercise_title";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_534,M.p));
return((M.p).label)(M);};

var _384=function(M){if(--M.cbt<0){throw _384;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1339,47,10,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-2][36]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-2][36];
M.p=M.e[M.e.length-2][39];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
if(M.v===false){return(_523)(M);}else{M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _446=function(M){if(--M.cbt<0){throw _446;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19589,511,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1][0],0,"="),0)));
M.c.pop();
if(M.v===false){return(_957)(M);}else{M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19597,511,15,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19603,511,21,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][44]);
M.v="The power $a^0$ is defined to be $1$.";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_960,M.p));
return((M.p).label)(M);}};


var _379=function(M){if(--M.cbt<0){throw _379;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4093,136,4,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4106,136,17,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4109,136,20,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_label_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_502,M.p));
return((M.p).label)(M);};

var _498=function(M){if(--M.cbt<0){throw _498;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v="hide";
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _442=function(M){if(--M.cbt<0){throw _442;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19040,488,4,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19043,488,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][0],0,"+"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],1,"+"));
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _480=function(M){if(--M.cbt<0){throw _480;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_482,M.p));
return((M.p).label)(M);};

var _1303=function(M){if(--M.cbt<0){throw _1303;}
M.e.length-=(M.a-1);
return(_1304)(M);};





var _1263=function(M){if(--M.cbt<0){throw _1263;}
M.e.length-=(M.a-1);
return(_1264)(M);};

var _1255=function(M){if(--M.cbt<0){throw _1255;}
M.e.length-=(M.a-1);
return(_1256)(M);};

var _1247=function(M){if(--M.cbt<0){throw _1247;}
M.e.length-=(M.a-1);
return(_1248)(M);};


var _1229=function(M){if(--M.cbt<0){throw _1229;}
M.e.length-=(M.a-1);
return(_1230)(M);};

var _1221=function(M){if(--M.cbt<0){throw _1221;}
M.e.length-=(M.a-1);
return(_1222)(M);};

var _1219=function(M){if(--M.cbt<0){throw _1219;}
M.e.length-=(M.a-1);
return(_1220)(M);};

var _1207=function(M){if(--M.cbt<0){throw _1207;}
M.e.length-=(M.a-1);
return(_1208)(M);};

var _1202=function(M){if(--M.cbt<0){throw _1202;}
M.e.length-=(M.a-1);
return(_1203)(M);};

var _1192=function(M){if(--M.cbt<0){throw _1192;}
M.e.length-=(M.a-1);
return(_1193)(M);};

var _1184=function(M){if(--M.cbt<0){throw _1184;}
M.e.length-=(M.a-1);
return(_1185)(M);};

var _1176=function(M){if(--M.cbt<0){throw _1176;}
M.e.length-=(M.a-1);
return(_1177)(M);};

var _1168=function(M){if(--M.cbt<0){throw _1168;}
M.e.length-=(M.a-1);
return(_1169)(M);};

var _1160=function(M){if(--M.cbt<0){throw _1160;}
M.e.length-=(M.a-1);
return(_1161)(M);};

var _1152=function(M){if(--M.cbt<0){throw _1152;}
M.e.length-=(M.a-1);
return(_1153)(M);};

var _1150=function(M){if(--M.cbt<0){throw _1150;}
M.e.length-=(M.a-1);
return(_1151)(M);};

var _1142=function(M){if(--M.cbt<0){throw _1142;}
M.e.length-=(M.a-1);
return(_1143)(M);};

var _413=function(M){if(--M.cbt<0){throw _413;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7265,217,6,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"="),13)));
M.c.pop();
if(M.v===false){return(_761)(M);}else{M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7292,218,6,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][79];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1122=function(M){if(--M.cbt<0){throw _1122;}
if((M.a-5)===0){return(_1124)(M);}else{RT.si_context_expected(5)(M);
}};

var _1116=function(M){if(--M.cbt<0){throw _1116;}
M.e.length-=(M.a-1);
return(_1117)(M);};

var _1108=function(M){if(--M.cbt<0){throw _1108;}
M.e.length-=(M.a-1);
return(_1109)(M);};

var _1100=function(M){if(--M.cbt<0){throw _1100;}
M.e.length-=(M.a-1);
return(_1101)(M);};

var _1097=function(M){if(--M.cbt<0){throw _1097;}
M.e.push([M.params.currentNamespace["struct:exercise"]||M.primitives["struct:exercise"],M.params.currentNamespace["make-exercise"]||M.primitives["make-exercise"],M.params.currentNamespace["exercise?"]||M.primitives["exercise?"],M.params.currentNamespace["exercise-title"]||M.primitives["exercise-title"],M.params.currentNamespace["exercise-summary"]||M.primitives["exercise-summary"],M.params.currentNamespace["exercise-new-problem!"]||M.primitives["exercise-new-problem!"],M.params.currentNamespace["exercise-problem-description"]||M.primitives["exercise-problem-description"],M.params.currentNamespace["exercise-hints"]||M.primitives["exercise-hints"],M.params.currentNamespace["exercise-check-answer"]||M.primitives["exercise-check-answer"],M.params.currentNamespace["exercise-answer-type"]||M.primitives["exercise-answer-type"],M.params.currentNamespace["set-exercise-title!"]||M.primitives["set-exercise-title!"],M.params.currentNamespace["set-exercise-summary!"]||M.primitives["set-exercise-summary!"],M.params.currentNamespace["set-exercise-new-problem!!"]||M.primitives["set-exercise-new-problem!!"],M.params.currentNamespace["set-exercise-problem-description!"]||M.primitives["set-exercise-problem-description!"],M.params.currentNamespace["set-exercise-hints!"]||M.primitives["set-exercise-hints!"],M.params.currentNamespace["set-exercise-check-answer!"]||M.primitives["set-exercise-check-answer!"],M.params.currentNamespace["set-exercise-answer-type!"]||M.primitives["set-exercise-answer-type!"],M.params.currentNamespace["struct:answer"]||M.primitives["struct:answer"],M.params.currentNamespace["make-answer"]||M.primitives["make-answer"],M.params.currentNamespace["answer?"]||M.primitives["answer?"],M.params.currentNamespace["answer-html"]||M.primitives["answer-html"],M.params.currentNamespace["answer-css"]||M.primitives["answer-css"],M.params.currentNamespace["answer-show"]||M.primitives["answer-show"],M.params.currentNamespace["answer-get"]||M.primitives["answer-get"],M.params.currentNamespace["set-answer-html!"]||M.primitives["set-answer-html!"],M.params.currentNamespace["set-answer-css!"]||M.primitives["set-answer-css!"],M.params.currentNamespace["set-answer-show!"]||M.primitives["set-answer-show!"],M.params.currentNamespace["set-answer-get!"]||M.primitives["set-answer-get!"],M.params.currentNamespace["streak-current"]||M.primitives["streak-current"],M.params.currentNamespace["streak-max"]||M.primitives["streak-max"],M.params.currentNamespace["append-to-body"]||M.primitives["append-to-body"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.modules["whalesong/lang/private/map.rkt"].namespace["for-each2"],M.modules["whalesong/js/main.rkt"].namespace["call-method3.5"],M.modules["whalesong/js/main.rkt"].namespace["$4.7"],M.modules["whalesong/js/main.rkt"].namespace["body2.3"],M.params.currentNamespace["js-proxy"]||M.primitives["js-proxy"],M.params.currentNamespace["store-js-proxy"]||M.primitives["store-js-proxy"],M.params.currentNamespace["call-proxy"]||M.primitives["call-proxy"],M.primitives["symbol?"],M.params.currentNamespace["run-mathjax"]||M.primitives["run-mathjax"],M.params.currentNamespace["js-eval"]||M.primitives["js-eval"],M.params.currentNamespace["create-scratchpad"]||M.primitives["create-scratchpad"],M.params.currentNamespace["update-exercise-title"]||M.primitives["update-exercise-title"],M.modules["root/utilities/string.rkt"].namespace["stringify"],M.params.currentNamespace["current-exercise"]||M.primitives["current-exercise"],M.params.currentNamespace["update-problem-area"]||M.primitives["update-problem-area"],M.params.currentNamespace["hide-hint-area"]||M.primitives["hide-hint-area"],M.params.currentNamespace["show-hint-area"]||M.primitives["show-hint-area"],M.params.currentNamespace["clear-hint-area"]||M.primitives["clear-hint-area"],M.params.currentNamespace["append-to-hint-area"]||M.primitives["append-to-hint-area"],M.params.currentNamespace["change-hint-button-text"]||M.primitives["change-hint-button-text"],M.params.currentNamespace["show-scratchpad"]||M.primitives["show-scratchpad"],M.params.currentNamespace["hide-scratchpad"]||M.primitives["hide-scratchpad"],M.params.currentNamespace["show-answer-field"]||M.primitives["show-answer-field"],M.primitives["error"],M.params.currentNamespace["show-answer-label"]||M.primitives["show-answer-label"],M.params.currentNamespace["show-multiple-choice-radio-button"]||M.primitives["show-multiple-choice-radio-button"],M.params.currentNamespace["get-answer-field"]||M.primitives["get-answer-field"],M.primitives["format"],M.primitives["string?"],M.params.currentNamespace["get-multiple-choice"]||M.primitives["get-multiple-choice"],M.primitives["string->number"],M.params.currentNamespace["clear-answer-input"]||M.primitives["clear-answer-input"],M.params.currentNamespace["call-plt-function1"]||M.primitives["call-plt-function1"],M.params.currentNamespace["hide-answer-labels"]||M.primitives["hide-answer-labels"],M.params.currentNamespace["hide-answer-inputs"]||M.primitives["hide-answer-inputs"],M.params.currentNamespace["hide-multiple-choice-radio-buttons"]||M.primitives["hide-multiple-choice-radio-buttons"],M.params.currentNamespace["hide-answer-inputs-and-labels"]||M.primitives["hide-answer-inputs-and-labels"],M.params.currentNamespace["set-focus-to-answer-input"]||M.primitives["set-focus-to-answer-input"],M.params.currentNamespace["change-answer-button-text"]||M.primitives["change-answer-button-text"],M.params.currentNamespace["change-multiple-choice-text"]||M.primitives["change-multiple-choice-text"],M.primitives["string-append"],M.params.currentNamespace["face"]||M.primitives["face"],M.params.currentNamespace["update-streak-bar"]||M.primitives["update-streak-bar"],M.primitives["quotient"],M.modules["root/lang/primitives.rkt"].namespace["max"],M.modules["root/lang/primitives.rkt"].namespace["min"],M.primitives["number->string"],M.params.currentNamespace["on-answer-button"]||M.primitives["on-answer-button"],M.params.currentNamespace["reset-hint-index"]||M.primitives["reset-hint-index"],M.modules["whalesong/js/main.rkt"].namespace["alert1.1"],M.params.currentNamespace["on-keyup/answer-input"]||M.primitives["on-keyup/answer-input"],M.primitives["void"],M.params.currentNamespace["hint-index"]||M.primitives["hint-index"],M.params.currentNamespace["on-hint-button"]||M.primitives["on-hint-button"],M.primitives["zero?"],M.primitives["length"],M.primitives["list-ref"],M.params.currentNamespace["on-toggle-scratchpad"]||M.primitives["on-toggle-scratchpad"],M.params.currentNamespace["js-identity"]||M.primitives["js-identity"],M.params.currentNamespace["plt-function"]||M.primitives["plt-function"],M.params.currentNamespace["call-plt-thunk"]||M.primitives["call-plt-thunk"],M.primitives["symbol->string"],M.params.currentNamespace["generate-body"]||M.primitives["generate-body"],M.params.currentNamespace["number-answer"]||M.primitives["number-answer"],M.modules["root/utilities/string.rkt"].namespace["string-trim-both"],M.params.currentNamespace["three-number-answer"]||M.primitives["three-number-answer"],M.modules["whalesong/lang/private/map.rkt"].namespace["map2"],M.params.currentNamespace["insert-at"]||M.primitives["insert-at"],M.params.currentNamespace["multiple-choice-answer"]||M.primitives["multiple-choice-answer"],M.primitives["random"],M.modules["whalesong/lang/private/list.rkt"].namespace["build-list"],M.params.currentNamespace["antiderivative-of-power-exercise"]||M.primitives["antiderivative-of-power-exercise"],M.modules["root/lang/primitives.rkt"].namespace["cadr"],M.modules["root/lang/primitives.rkt"].namespace["caddr"],M.params.currentNamespace["addition-exercise"]||M.primitives["addition-exercise"],M.params.currentNamespace["power1-exercise"]||M.primitives["power1-exercise"],M.modules["root/utilities/string.rkt"].namespace["string-append-n"],M.primitives["expt"],M.params.currentNamespace["power2-exercise"]||M.primitives["power2-exercise"],M.primitives["random"],M.params.currentNamespace["squaring-binomial-exercise"]||M.primitives["squaring-binomial-exercise"],M.modules["root/utilities/random.rkt"].namespace["random-in-interval"],M.primitives["equal?"],M.params.currentNamespace["combine-exercises"]||M.primitives["combine-exercises"],M.modules["whalesong/lang/private/map.rkt"].namespace["map2"],M.primitives["length"],M.primitives["list-ref"],M.params.currentNamespace["power-all-kinds-exercise"]||M.primitives["power-all-kinds-exercise"],M.primitives["void"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["struct:exercise","make-exercise","exercise?","exercise-title","exercise-summary","exercise-new-problem!","exercise-problem-description","exercise-hints","exercise-check-answer","exercise-answer-type","set-exercise-title!","set-exercise-summary!","set-exercise-new-problem!!","set-exercise-problem-description!","set-exercise-hints!","set-exercise-check-answer!","set-exercise-answer-type!","struct:answer","make-answer","answer?","answer-html","answer-css","answer-show","answer-get","set-answer-html!","set-answer-css!","set-answer-show!","set-answer-get!","streak-current","streak-max","append-to-body","traced-app-key","for-each2","call-method3.5","$4.7","body2.3","js-proxy","store-js-proxy","call-proxy","symbol?","run-mathjax","js-eval","create-scratchpad","update-exercise-title","stringify","current-exercise","update-problem-area","hide-hint-area","show-hint-area","clear-hint-area","append-to-hint-area","change-hint-button-text","show-scratchpad","hide-scratchpad","show-answer-field","error","show-answer-label","show-multiple-choice-radio-button","get-answer-field","format","string?","get-multiple-choice","string->number","clear-answer-input","call-plt-function1","hide-answer-labels","hide-answer-inputs","hide-multiple-choice-radio-buttons","hide-answer-inputs-and-labels","set-focus-to-answer-input","change-answer-button-text","change-multiple-choice-text","string-append","face","update-streak-bar","quotient","max","min","number->string","on-answer-button","reset-hint-index","alert1.1","on-keyup/answer-input","void","hint-index","on-hint-button","zero?","length","list-ref","on-toggle-scratchpad","js-identity","plt-function","call-plt-thunk","symbol->string","generate-body","number-answer","string-trim-both","three-number-answer","map2","insert-at","multiple-choice-answer","random","build-list","antiderivative-of-power-exercise","cadr","caddr","addition-exercise","power1-exercise","string-append-n","expt","power2-exercise","random","squaring-binomial-exercise","random-in-interval","equal?","combine-exercises","map2","length","list-ref","power-all-kinds-exercise","void","print-values","run-tests",false,false,false,false,false,false,false,false,false,false];
M.modules["root/stxmat-exercises.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_1099,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_372,1,[M.e[M.e.length-1]],"...at-exercises.rkt:597:18");
M.e[M.e.length-1][132]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1090=function(M){if(--M.cbt<0){throw _1090;}
M.e.length-=(M.a-1);
return(_1091)(M);};

var _1087=function(M){if(--M.cbt<0){throw _1087;}
M.e.length-=(M.a-1);
return(_1088)(M);};

var _1082=function(M){if(--M.cbt<0){throw _1082;}
if((M.modules["whalesong/js.rkt"]!==undefined)!==false){return(_1083)(M);}else{return(_1085)(M);}};

var _1079=function(M){
M.modules["root/stxmat-exercises.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_1080)(M);}else{return(_1082)(M);}};

var _463=function(M){if(--M.cbt<0){throw _463;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",23585,613,2,113]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][115];
M.e[M.e.length-1]="Powers";
M.e[M.e.length-2]="Combines all power exercises";
M.e[M.e.length-3]=M.e[M.e.length-5][107];
M.v=M.e[M.e.length-5][110];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _458=function(M){if(--M.cbt<0){throw _458;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22876,597,13,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][116];
M.e[M.e.length-1]=M.e[M.e.length-4][132];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1046,M.p));
return((M.p).label)(M);};


var _404=function(M){if(--M.cbt<0){throw _404;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4298,142,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][126];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _1022=function(M){if(--M.cbt<0){throw _1022;}
M.e.length-=(M.a-1);
return(_1021)(M);};

var _455=function(M){if(--M.cbt<0){throw _455;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21845,572,4,145]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Rewrite to the form $a\\cdot x^2 + b\\cdot x + c$.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div>$$( ";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]="\\cdot x + ";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v=")^2 = ?$$</div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _454=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21639,564,12,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][113];
M.e[M.e.length-1]=2;
M.v=6;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1027,M.p));
return((M.p).label)(M);};



var _395=function(M){if(--M.cbt<0){throw _395;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2579,92,2,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2592,92,15,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#scratchpad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_582,M.p));
return((M.p).label)(M);};

var _452=function(M){if(--M.cbt<0){throw _452;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21174,547,4,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",21177,547,7,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.e[M.e.length-2]=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-7][109];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _451=function(M){if(--M.cbt<0){throw _451;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20636,539,4,500]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20642,539,10,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][44]);
M.v="Use the formula: $$a^{-n} = \\frac{1}{a^n}$$";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_993,M.p));
return((M.p).label)(M);};

var _391=function(M){if(--M.cbt<0){throw _391;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2129,77,2,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2142,77,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_558,M.p));
return((M.p).label)(M);};



var _387=function(M){if(--M.cbt<0){throw _387;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1582,57,2,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][38];
M.e[M.e.length-1]="jsEval";
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _383=function(M){if(--M.cbt<0){throw _383;}
M.e.push.apply(M.e,M.p.closedVals);
M.e[M.e.length-1][36]=M.e[M.e.length-2];
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _444=function(M){
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19334,500,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(5);
M.p=M.e[M.e.length-5][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-3][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19358,501,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(5);
M.p=M.e[M.e.length-5][101];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2][0]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19388,502,10,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3][0],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][0],1,"=")))&&(plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2][0],1,"="),0)));
M.c.pop();
if(M.v===false){return(_950)(M);}else{M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19404,503,6,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
M.e.length-=4;
M.c[M.c.length-1].p=M.p;
return(_444)(M);}};

var _443=function(M){if(--M.cbt<0){throw _443;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(0);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_444,0,undefined,"new-problem!");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]];
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_445,0,[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3]],"problem-description");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_446,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4]],"hints");
M.e.length+=1;
M.v=new RT.Closure(_447,1,[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]],"check-answer");
M.a=1;
if(M.a===0){return(_942)(M);}else{M.e.push(M.v);
return(_942)(M);}};

var _378=function(M){if(--M.cbt<0){throw _378;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4238,141,4,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4251,141,17,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4254,141,20,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][44];
M.e[M.e.length-1]="#answer_input_";
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_496,M.p));
return((M.p).label)(M);};



var _375=function(M){if(--M.cbt<0){throw _375;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15399,394,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===RT.NULL);
M.c.pop();
if(M.v===false){return(_471)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _374=function(M){if(--M.cbt<0){throw _374;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15522,398,4,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][129];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1131=function(M){
M.e.splice(M.e.length-(10+5),5);
M.e[M.e.length-11][17]=M.v;
M.e[M.e.length-11][18]=M.e[M.e.length-1];
M.e[M.e.length-11][19]=M.e[M.e.length-2];
M.e[M.e.length-11][20]=M.e[M.e.length-3];
M.e[M.e.length-11][21]=M.e[M.e.length-4];
M.e[M.e.length-11][22]=M.e[M.e.length-5];
M.e[M.e.length-11][23]=M.e[M.e.length-6];
M.e[M.e.length-11][24]=M.e[M.e.length-7];
M.e[M.e.length-11][25]=M.e[M.e.length-8];
M.e[M.e.length-11][26]=M.e[M.e.length-9];
M.e[M.e.length-11][27]=M.e[M.e.length-10];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _445=function(M){if(--M.cbt<0){throw _445;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19460,506,4,89]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-10][44];
M.e[M.e.length-1]="<div>Calculate the power.</div>";
M.e[M.e.length-2]="\n";
M.e[M.e.length-3]="<div> $$";
M.e[M.e.length-4]=M.e[M.e.length-9][0];
M.e[M.e.length-5]="^";
M.e[M.e.length-6]=M.e[M.e.length-8][0];
M.v=" = \\ ?$$ </div>";
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _435=function(M){if(--M.cbt<0){throw _435;}
M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _434=function(M){if(--M.cbt<0){throw _434;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17999,455,4,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",18005,455,10,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-9][44];
M.e[M.e.length-1]="The antiderivative of $";
M.e[M.e.length-2]=M.e[M.e.length-8][0];
M.e[M.e.length-3]="$ is $";
M.e[M.e.length-4]=M.e[M.e.length-7][0];
M.v="$";
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_911,M.p));
return((M.p).label)(M);};

var _432=function(M){if(--M.cbt<0){throw _432;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17694,445,14,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17714,445,34,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",17722,445,42,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][87]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_902,M.p));
return((M.p).label)(M);};

var _871=function(M){if(--M.cbt<0){throw _871;}
M.e.length-=(M.a-1);
return(_872)(M);};

var _429=function(M){if(--M.cbt<0){throw _429;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",16121,412,23,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][57]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_874,M.p));
return((M.p).label)(M);};


var _428=function(M){if(--M.cbt<0){throw _428;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15796,407,29,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-5];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_855,M.p));
return((M.p).label)(M);};

var _426=function(M){if(--M.cbt<0){throw _426;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15164,386,6,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][86];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
if(M.v===false){return(_842)(M);}else{M.v=RT.makePair(M.e[M.e.length-3],M.e[M.e.length-4]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _425=function(M){if(--M.cbt<0){throw _425;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14993,379,5,133]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][98];
M.e[M.e.length-1]=M.e[M.e.length-3][128];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _423=function(M){if(--M.cbt<0){throw _423;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14673,367,14,87]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14704,368,15,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][96]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",14738,369,16,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][58]);
M.v=1;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_833,M.p));
return((M.p).label)(M);};


var _421=function(M){if(--M.cbt<0){throw _421;}
M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _419=function(M){if(--M.cbt<0){throw _419;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8683,267,2,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=5;
M.e[M.e.length-1]="storeProxy();(~a)(~a,~a,~a)";
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8721,267,40,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][91]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8735,267,54,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8]);
M.p=M.e[M.e.length-8][93];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_810,M.p));
return((M.p).label)(M);};

var _417=function(M){if(--M.cbt<0){throw _417;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",8405,262,2,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]="plt.baselib.functions.asJavaScriptFunction( plt.runtime.lookupInMains(\"~a\") )";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=M.e[M.e.length-3][59];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _796=function(M){if(--M.cbt<0){throw _796;}
M.e.length-=(M.a-1);
return(_797)(M);};

var _416=function(M){if(--M.cbt<0){throw _416;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2][0];
if(M.v===false){return(_794)(M);}else{M.v=RT.VOID;
return(_795)(M);}};

var _776=function(M){if(--M.cbt<0){throw _776;}
M.e.length-=(M.a-1);
return(_777)(M);};


var _415=function(M){if(--M.cbt<0){throw _415;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7443,227,15,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7444,227,16,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-3][7]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[7]); }
M.e[M.e.length-1]=M.e[M.e.length-3][7];
if (M.e[M.e.length-3][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[45]); }
M.v=M.e[M.e.length-3][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_766,M.p));
return((M.p).label)(M);};

var _751=function(M){if(--M.cbt<0){throw _751;}
M.e.length-=(M.a-1);
return(_752)(M);};



var _727=function(M){if(--M.cbt<0){throw _727;}
M.e.length-=(M.a-1);
return(_728)(M);};

var _719=function(M){if(--M.cbt<0){throw _719;}
M.e.length-=(M.a-1);
return(_720)(M);};



var _412=function(M){if(--M.cbt<0){throw _412;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][0]);
M.v=(M.e[M.e.length-1]===RT.makeSymbol("check"));
if(M.v===false){return(_700)(M);}else{M.v=M.e[M.e.length-1];
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5789,186,30,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5790,186,31,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-5][23]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[23]); }
M.e[M.e.length-1]=M.e[M.e.length-5][23];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5802,186,43,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
if (M.e[M.e.length-6][9]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[9]); }
M.e[M.e.length-1]=M.e[M.e.length-6][9];
if (M.e[M.e.length-6][45]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[45]); }
M.v=M.e[M.e.length-6][45];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_703,M.p));
return((M.p).label)(M);}};



var _411=function(M){if(--M.cbt<0){throw _411;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5281,174,26,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5291,174,36,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.multiply(297, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4][28],1,"*"));
M.c.pop();
M.e[M.e.length-2]=10;
M.p=M.e[M.e.length-4][75];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5336,175,4,95]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",5349,175,17,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6][34]);
M.v="#streak_bar_left";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_678,M.p));
return((M.p).label)(M);};

var _668=function(M){if(--M.cbt<0){throw _668;}
M.e.length-=(M.a-1);
return(_669)(M);};

var _410=function(M){if(--M.cbt<0){throw _410;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4952,166,2,98]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4965,166,15,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#happy";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_665,M.p));
return((M.p).label)(M);};

var _408=function(M){if(--M.cbt<0){throw _408;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4741,159,2,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4754,159,15,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#answer_button";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_655,M.p));
return((M.p).label)(M);};

var _407=function(M){if(--M.cbt<0){throw _407;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4653,156,2,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4666,156,15,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][34]);
M.v="#answer_input_1";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_651,M.p));
return((M.p).label)(M);};

var _403=function(M){if(--M.cbt<0){throw _403;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",4159,137,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][125];
M.v=RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL)));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _401=function(M){if(--M.cbt<0){throw _401;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3656,125,2,51]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3672,125,18,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3685,125,31,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v=":checked";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_635,M.p));
return((M.p).label)(M);};

var _400=function(M){if(--M.cbt<0){throw _400;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3449,119,11,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3462,119,24,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3465,119,27,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]="#answer_input_~a";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.p=M.e[M.e.length-7][59];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_628,M.p));
return((M.p).label)(M);};


var _399=function(M){if(--M.cbt<0){throw _399;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3251,113,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(0,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<="),4)));
M.c.pop();
if(M.v===false){return(_613)(M);}else{M.v=RT.VOID;
return(_614)(M);}};

var _398=function(M){if(--M.cbt<0){throw _398;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3071,108,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<="),3)));
M.c.pop();
if(M.v===false){return(_605)(M);}else{M.v=RT.VOID;
return(_606)(M);}};


var _397=function(M){if(--M.cbt<0){throw _397;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2913,103,10,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<="),3)));
M.c.pop();
if(M.v===false){return(_597)(M);}else{M.v=RT.VOID;
return(_598)(M);}};

var _396=function(M){if(--M.cbt<0){throw _396;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2732,96,2,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2745,96,15,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#scratchpad";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_590,M.p));
return((M.p).label)(M);};

var _394=function(M){if(--M.cbt<0){throw _394;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2491,88,2,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2504,88,15,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#hint_button";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_578,M.p));
return((M.p).label)(M);};

var _393=function(M){if(--M.cbt<0){throw _393;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2358,84,2,90]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2371,84,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_570,M.p));
return((M.p).label)(M);};

var _392=function(M){if(--M.cbt<0){throw _392;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2214,80,2,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2227,80,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_562,M.p));
return((M.p).label)(M);};

var _390=function(M){if(--M.cbt<0){throw _390;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2046,74,2,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",2059,74,15,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5][34]);
M.v="#hint_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_554,M.p));
return((M.p).label)(M);};

var _389=function(M){if(--M.cbt<0){throw _389;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1870,68,2,116]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1883,68,15,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v="#problem_area";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_544,M.p));
return((M.p).label)(M);};


var _386=function(M){if(--M.cbt<0){throw _386;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1516,54,2,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][41]);
M.v="Scratchpad('#scratchpad');";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _382=function(M){if(--M.cbt<0){throw _382;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",991,37,2,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][32];
M.e[M.e.length-1]=M.e[M.e.length-3][123];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _381=function(M){if(--M.cbt<0){throw _381;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1015,37,26,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1028,37,39,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_518,M.p));
return((M.p).label)(M);};

var _380=function(M){if(--M.cbt<0){throw _380;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3763,129,4,246]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][33];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3776,129,17,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4][34]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",3779,129,20,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][44];
M.e[M.e.length-1]="#answer_input_";
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_508,M.p));
return((M.p).label)(M);};





var _372=function(M){if(--M.cbt<0){throw _372;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",22900,597,37,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1309=function(M){if(--M.cbt<0){throw _1309;}
if(M.a===0){return(_1306)(M);}else{M.e.push(M.v);
return(_1306)(M);}};

var _1121=function(M){
M.e.splice(M.e.length-(16+5),5);
M.e[M.e.length-17][0]=M.v;
M.e[M.e.length-17][1]=M.e[M.e.length-1];
M.e[M.e.length-17][2]=M.e[M.e.length-2];
M.e[M.e.length-17][3]=M.e[M.e.length-3];
M.e[M.e.length-17][4]=M.e[M.e.length-4];
M.e[M.e.length-17][5]=M.e[M.e.length-5];
M.e[M.e.length-17][6]=M.e[M.e.length-6];
M.e[M.e.length-17][7]=M.e[M.e.length-7];
M.e[M.e.length-17][8]=M.e[M.e.length-8];
M.e[M.e.length-17][9]=M.e[M.e.length-9];
M.e[M.e.length-17][10]=M.e[M.e.length-10];
M.e[M.e.length-17][11]=M.e[M.e.length-11];
M.e[M.e.length-17][12]=M.e[M.e.length-12];
M.e[M.e.length-17][13]=M.e[M.e.length-13];
M.e[M.e.length-17][14]=M.e[M.e.length-14];
M.e[M.e.length-17][15]=M.e[M.e.length-15];
M.e[M.e.length-17][16]=M.e[M.e.length-16];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _447=function(M){if(--M.cbt<0){throw _447;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20086,519,4,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20089,519,7,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.e[M.e.length-2]=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-7][109];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.c.pop();
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _427=function(M){if(--M.cbt<0){throw _427;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-1]="uninialized";
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]="uninialized";
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.e[M.e.length-3]="uninialized";
M.e[M.e.length-3]=[M.e[M.e.length-3]];
M.v=M.e[M.e.length-4][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15667,403,6,720]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=4;
if (M.e[M.e.length-8][18]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[18]); }
M.e[M.e.length-4]=M.e[M.e.length-8][18];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-8][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15687,404,7,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8][44]);
M.v=" <foo>...</foo> ";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_849,M.p));
return((M.p).label)(M);};

var _780=function(M){
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7885,240,10,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][50]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",7906,240,31,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
if (M.e[M.e.length-5][84]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[84]); }
M.e[M.e.length-2]=M.e[M.e.length-5][84];
M.p=M.e[M.e.length-5][88];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_791,M.p));
return((M.p).label)(M);};

var _414=function(M){if(--M.cbt<0){throw _414;}
M.e.push.apply(M.e,M.p.closedVals);
M.e[M.e.length-1][84]=-1;
M.v=RT.VOID;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _708=function(M){
M.e.pop();
return(_699)(M);};

var _385=function(M){if(--M.cbt<0){throw _385;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",1428,51,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][41]);
M.v="MathJax.Hub.Queue(['Typeset',MathJax.Hub]);";
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _376=function(M){if(--M.cbt<0){throw _376;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15022,380,12,83]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15051,381,13,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][96]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15083,382,14,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][58]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_480,M.p));
return((M.p).label)(M);};

var _943=function(M){
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20111,521,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_947,M.p));
return(_444)(M);};

var _921=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_922)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_922)(M);}};

var _942=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_943)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_943)(M);}};


var _924=function(M){
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19079,491,2,156]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Addition";
M.e[M.e.length-2]="Sums of one digit numbers.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _490=function(M){if(--M.cbt<0){throw _490;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_492,M.p));
return((M.p).label)(M);};

var _471=function(M){
M.v=M.e[M.e.length-1][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15433,396,10,82]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][129];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15439,396,16,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.c.pop();
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15464,397,16,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][99];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15475,397,27,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15483,397,35,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-9][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",15486,397,38,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][87]);
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_474,M.p));
return((M.p).label)(M);};

var _1306=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1311,M.p));
return((M.p).label)(M);};

var _945=function(M){
M.c.pop();
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",20128,522,2,181]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=7;
if (M.e[M.e.length-14][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[1]); }
M.e[M.e.length-7]=M.e[M.e.length-14][1];
M.e[M.e.length-1]="Powers with natural exponents";
M.e[M.e.length-2]="Powers with natural exponents.";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.v=M.e[M.e.length-14][95];
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _546=function(M){if(--M.cbt<0){throw _546;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_548,M.p));
return((M.p).label)(M);};


var _922=function(M){
M.e[M.e.length-1]=M.v;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-7][31];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>",19062,490,2,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4];
M.a=0;
M.c.push(new RT.CallFrame(_926,M.p));
return(_439)(M);};

var _1252=function(M){if(--M.cbt<0){throw _1252;}
M.c.push(new RT.PromptFrame(_1254,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_443,0,[M.e[M.e.length-1]],"power1-exercise");
M.e[M.e.length-1][107]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _464=function(M){
M.c.push(new RT.PromptFrame(_466,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/stxmat-exercises.rkt"]=new RT.ModuleRecord("stxmat-exercises",_1079);
return(_1078)(M);};

var _896=function(M){
M.v=M.v;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_898,M.p));
return((M.p).label)(M);};

_488.mvr=_487;
_550.mvr=_549;
_584.mvr=_583;
_592.mvr=_591;
_620.mvr=_619;
_647.mvr=_646;
_669.mvr=_668;
_684.mvr=_683;
_692.mvr=_691;
_718.mvr=_717;
_720.mvr=_719;
_722.mvr=_721;
_726.mvr=_725;
_728.mvr=_727;
_732.mvr=_731;
_738.mvr=_737;
_740.mvr=_739;
_742.mvr=_741;
_748.mvr=_747;
_750.mvr=_749;
_752.mvr=_751;
_754.mvr=_753;
_756.mvr=_755;
_758.mvr=_757;
_771.mvr=_770;
_773.mvr=_772;
_777.mvr=_776;
_779.mvr=_778;
_791.mvr=_790;
_797.mvr=_796;
_829.mvr=_828;
_837.mvr=_836;
_870.mvr=_869;
_872.mvr=_871;
_874.mvr=_873;
_892.mvr=_891;
_926.mvr=_925;
_947.mvr=_946;
_987.mvr=_986;
_1023.mvr=_1022;
_1032.mvr=_1031;
_1082.mvr=_1081;
_1085.mvr=_1084;
_1088.mvr=_1087;
_1091.mvr=_1090;
_1094.mvr=_1093;
_1097.mvr=_1096;
_1099.mvr=_1098;
_1101.mvr=_1100;
_1103.mvr=_1102;
_1105.mvr=_1104;
_1107.mvr=_1106;
_1109.mvr=_1108;
_1111.mvr=_1110;
_1113.mvr=_1112;
_1115.mvr=_1114;
_1117.mvr=_1116;
_1123.mvr=_1122;
_1126.mvr=_1125;
_1119.mvr=_1118;
_1133.mvr=_1132;
_1136.mvr=_1135;
_1129.mvr=_1128;
_1139.mvr=_1138;
_1141.mvr=_1140;
_1143.mvr=_1142;
_1145.mvr=_1144;
_1147.mvr=_1146;
_1149.mvr=_1148;
_1151.mvr=_1150;
_1153.mvr=_1152;
_1155.mvr=_1154;
_1157.mvr=_1156;
_1159.mvr=_1158;
_1161.mvr=_1160;
_1163.mvr=_1162;
_1165.mvr=_1164;
_1167.mvr=_1166;
_1169.mvr=_1168;
_1171.mvr=_1170;
_1173.mvr=_1172;
_1175.mvr=_1174;
_1177.mvr=_1176;
_1179.mvr=_1178;
_1181.mvr=_1180;
_1183.mvr=_1182;
_1185.mvr=_1184;
_1187.mvr=_1186;
_1189.mvr=_1188;
_1191.mvr=_1190;
_1193.mvr=_1192;
_1195.mvr=_1194;
_1197.mvr=_1196;
_1199.mvr=_1198;
_1201.mvr=_1200;
_1203.mvr=_1202;
_1205.mvr=_1204;
_1208.mvr=_1207;
_1210.mvr=_1209;
_1212.mvr=_1211;
_1214.mvr=_1213;
_1216.mvr=_1215;
_1220.mvr=_1219;
_1222.mvr=_1221;
_1224.mvr=_1223;
_1226.mvr=_1225;
_1228.mvr=_1227;
_1230.mvr=_1229;
_1238.mvr=_1237;
_1246.mvr=_1245;
_1248.mvr=_1247;
_1250.mvr=_1249;
_1252.mvr=_1251;
_1254.mvr=_1253;
_1256.mvr=_1255;
_1258.mvr=_1257;
_1260.mvr=_1259;
_1262.mvr=_1261;
_1264.mvr=_1263;
_1302.mvr=_1301;
_1268.mvr=_1267;
_1308.mvr=_1309;
_1311.mvr=_1310;
_1304.mvr=_1303;
_466.mvr=_465;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_1312, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<MainModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<MainModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/stxmat-exercises.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/js.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _1317=function(M){
M.modules["whalesong/js.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_1318)(M);}else{return(_1320)(M);}};

var _1322=function(M){if(--M.cbt<0){throw _1322;}
M.e.length-=(M.a-1);
return(_1323)(M);};

var _1318=function(M){
if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_1320)(M);}else{M.c.push(new RT.CallFrame(_1320,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _1313=function(M){
M.c.push(new RT.PromptFrame(_1315,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/js.rkt"]=new RT.ModuleRecord("js",_1317);
return(_1316)(M);};

var _1323=function(M){if(--M.cbt<0){throw _1323;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/js.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/js.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _1321=function(M){
if(M.modules["whalesong/js/main.rkt"].isInvoked!==false){return(_1323)(M);}else{M.c.push(new RT.CallFrame(_1323,M.p));
return(M.modules["whalesong/js/main.rkt"].label)(M);}};

var _1316=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1315=function(M){if(--M.cbt<0){throw _1315;}
};

var _1320=function(M){if(--M.cbt<0){throw _1320;}
if((M.modules["whalesong/js/main.rkt"]!==undefined)!==false){return(_1321)(M);}else{return(_1323)(M);}};

var _1314=function(M){if(--M.cbt<0){throw _1314;}
M.e.length-=M.a;
return(_1315)(M);};

var _1324=function(M){
return(_1313)(M);};

var _1319=function(M){if(--M.cbt<0){throw _1319;}
M.e.length-=(M.a-1);
return(_1320)(M);};

_1320.mvr=_1319;
_1323.mvr=_1322;
_1315.mvr=_1314;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_1324, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/js.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/js.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/js/main.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/js/main.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/js/main.rkt"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){/*jslint devel: true, browser: false, unparam: true, sub: true, windows: false, vars: true, white: true, maxerr: 50, indent: 4 */

/*global $,plt,EXPORTS,document,window*/
(function() {
    "use strict";

    var VOID = plt.baselib.constants.VOID_VALUE;
    var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;
    var makeCheckArgumentType = plt.baselib.check.makeCheckArgumentType;
    var checkSymbolOrString = plt.baselib.check.checkSymbolOrString;
    var checkString = plt.baselib.check.checkString;
    var checkAny = makeCheckArgumentType(function(x) { return true; },
                                         "any");

    var isJsString = function(x) { return typeof(x) === 'string'; };
    var checkJsString = makeCheckArgumentType(isJsString, 'JavaScript string');



    var isJsNumber = function(x) { return typeof(x) === 'number'; };
    var checkNumber = plt.baselib.check.checkNumber;
    var checkJsNumber = makeCheckArgumentType(isJsNumber, 'JavaScript number');


    EXPORTS['alert'] =
        makePrimitiveProcedure(
            'alert',
            1,
            function(MACHINE) {
                var elt = MACHINE.e[MACHINE.e.length - 1];
                alert(String(elt));
                return VOID;
            });


    EXPORTS['body'] = $(document.body);

    EXPORTS['$'] =
        makePrimitiveProcedure(
            '$',
            1,
            function(MACHINE) {
                var obj = MACHINE.e[MACHINE.e.length - 1];
                return $(obj);
            });

    EXPORTS['call-method'] = 
        makePrimitiveProcedure(
            'call-method',
            plt.baselib.arity.makeArityAtLeast(2),
            function(MACHINE) {
                var obj = MACHINE.e[MACHINE.e.length - 1];
                var methodName = MACHINE.e[MACHINE.e.length - 2];
                var args = [], i;
                for (i = 0; i < MACHINE.a - 2; i = i+1) {
                    args.push(MACHINE.e[MACHINE.e.length -1 - 2 - i]);
                }
                var result = obj[methodName].apply(obj, args);
                return result;
            });


    EXPORTS['window'] = window;


    EXPORTS['get-attr'] =
        makePrimitiveProcedure(
            'get-attr',
            plt.baselib.arity.makeArityAtLeast(2),
            function(MACHINE) {
                var obj = checkAny(MACHINE, 'get-attr', 0), attr, i;
                for (i = 1; i < MACHINE.a; i = i + 1) {
                    attr = checkSymbolOrString(MACHINE, 'get-attr', i).toString();
                    obj = obj[attr];
                }
                return obj;
            });


    EXPORTS['set-attr!'] =
        makePrimitiveProcedure(
            'set-attr!',
            3,
            function(MACHINE) {
                var obj = checkAny(MACHINE, 'set-attr!', 0);
                var attr = checkSymbolOrString(MACHINE, 'set-attr!', 1).toString();
                var val = checkAny(MACHINE, 'set-attr!', 2);
                obj[attr] = val;
                return VOID;
            });

    EXPORTS['js-string?'] = 
        makePrimitiveProcedure(
            'js-string?',
            1,
            function(MACHINE) {
                return typeof(checkAny(MACHINE, 'js-string?', 0)) === 'string';
            });

    EXPORTS['string->js-string'] =
        makePrimitiveProcedure(
            'string->js-string',
            1,
            function(MACHINE) {
                return checkString(MACHINE, 'string->js-string', 0).toString();
            });

    EXPORTS['js-string->string'] =
        makePrimitiveProcedure(
            'js-string->string',
            1,
            function(MACHINE) {
                return checkJsString(MACHINE, 'string->js-string', 0);
            });




    EXPORTS['js-number?'] = 
        makePrimitiveProcedure(
            'js-number?',
            1,
            function(MACHINE) {
                return isJsNumber(checkAny(MACHINE, 'js-string?', 0));
            });    
    EXPORTS['js-number->number'] = 
        makePrimitiveProcedure(
            'js-number->number',
            1,
            function(MACHINE) {
                return plt.baselib.numbers.makeFloat(checkJsNumber(MACHINE, 'js-string?', 0));
            });    

    EXPORTS['number->js-number'] = 
        makePrimitiveProcedure(
            'number->js-number',
            1,
            function(MACHINE) {
                return plt.baselib.numbers.toFixnum(checkNumber(MACHINE, 'js-string?', 0));
            });    


    EXPORTS['js-null?'] = 
        makePrimitiveProcedure(
            'js-null?',
            1,
            function(MACHINE) {
                return checkAny(MACHINE, 'js-null?', 0) === null;
            });    

    EXPORTS['js-null'] = null;



    // Javascript-specific extensions.  A small experiment.
    EXPORTS['viewport-width'] = 
        makePrimitiveProcedure(
            'viewport-width',
            0,
            function(MACHINE) {
                return $(window).width();
            });

    EXPORTS['viewport-height'] = 
        makePrimitiveProcedure(
            'viewport-height',
            0,
            function(MACHINE) {
                return $(window).height();
            });


    EXPORTS['in-javascript-context?'] =
        makePrimitiveProcedure(
            'in-javascript-context?',
            0,
            function(MACHINE) {
                return true;
            });
}());})(M, exports);
             modrec.namespace["$4.7"] = exports["$"];
modrec.namespace["alert1.1"] = exports["alert"];
modrec.namespace["body2.3"] = exports["body"];
modrec.namespace["call-method3.5"] = exports["call-method"];
modrec.namespace["get-attr6.11"] = exports["get-attr"];
modrec.namespace["in-javascript-context?16.31"] = exports["in-javascript-context?"];
modrec.namespace["js-null18.35"] = exports["js-null"];
modrec.namespace["js-null?17.33"] = exports["js-null?"];
modrec.namespace["js-number->number13.25"] = exports["js-number->number"];
modrec.namespace["js-number?11.21"] = exports["js-number?"];
modrec.namespace["js-string->string10.19"] = exports["js-string->string"];
modrec.namespace["js-string?8.15"] = exports["js-string?"];
modrec.namespace["number->js-number12.23"] = exports["number->js-number"];
modrec.namespace["set-attr!7.13"] = exports["set-attr!"];
modrec.namespace["string->js-string9.17"] = exports["string->js-string"];
modrec.namespace["viewport-height15.29"] = exports["viewport-height"];
modrec.namespace["viewport-width14.27"] = exports["viewport-width"];
modrec.namespace["window5.9"] = exports["window"];

             modrec.privateExports = exports;
             return M.c.pop().label(M);
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/base.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _1354=function(M){
if(M.modules["whalesong/lang/private/hash.rkt"].isInvoked!==false){return(_1356)(M);}else{M.c.push(new RT.CallFrame(_1356,M.p));
return(M.modules["whalesong/lang/private/hash.rkt"].label)(M);}};

var _1351=function(M){
if(M.modules["whalesong/lang/private/map.rkt"].isInvoked!==false){return(_1353)(M);}else{M.c.push(new RT.CallFrame(_1353,M.p));
return(M.modules["whalesong/lang/private/map.rkt"].label)(M);}};

var _1348=function(M){
if(M.modules["whalesong/lang/private/list.rkt"].isInvoked!==false){return(_1350)(M);}else{M.c.push(new RT.CallFrame(_1350,M.p));
return(M.modules["whalesong/lang/private/list.rkt"].label)(M);}};

var _1357=function(M){
if(M.modules["whalesong/lang/list.rkt"].isInvoked!==false){return(_1359)(M);}else{M.c.push(new RT.CallFrame(_1359,M.p));
return(M.modules["whalesong/lang/list.rkt"].label)(M);}};

var _1363=function(M){
if(M.modules["collects/racket/private/modbeg.rkt"].isInvoked!==false){return(_1365)(M);}else{M.c.push(new RT.CallFrame(_1365,M.p));
return(M.modules["collects/racket/private/modbeg.rkt"].label)(M);}};

var _1360=function(M){
if(M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked!==false){return(_1362)(M);}else{M.c.push(new RT.CallFrame(_1362,M.p));
return(M.modules["whalesong/lang/private/qq-and-or.rkt"].label)(M);}};

var _1345=function(M){if(--M.cbt<0){throw _1345;}
};

var _1365=function(M){if(--M.cbt<0){throw _1365;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/base.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/base.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _1362=function(M){if(--M.cbt<0){throw _1362;}
if((M.modules["collects/racket/private/modbeg.rkt"]!==undefined)!==false){return(_1363)(M);}else{return(_1365)(M);}};

var _1355=function(M){if(--M.cbt<0){throw _1355;}
M.e.length-=(M.a-1);
return(_1356)(M);};

var _1364=function(M){if(--M.cbt<0){throw _1364;}
M.e.length-=(M.a-1);
return(_1365)(M);};

var _1346=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1343=function(M){
M.c.push(new RT.PromptFrame(_1345,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/base.rkt"]=new RT.ModuleRecord("base",_1347);
return(_1346)(M);};

var _1349=function(M){if(--M.cbt<0){throw _1349;}
M.e.length-=(M.a-1);
return(_1350)(M);};

var _1358=function(M){if(--M.cbt<0){throw _1358;}
M.e.length-=(M.a-1);
return(_1359)(M);};

var _1344=function(M){if(--M.cbt<0){throw _1344;}
M.e.length-=M.a;
return(_1345)(M);};

var _1352=function(M){if(--M.cbt<0){throw _1352;}
M.e.length-=(M.a-1);
return(_1353)(M);};

var _1350=function(M){if(--M.cbt<0){throw _1350;}
if((M.modules["whalesong/lang/private/map.rkt"]!==undefined)!==false){return(_1351)(M);}else{return(_1353)(M);}};

var _1356=function(M){if(--M.cbt<0){throw _1356;}
if((M.modules["whalesong/lang/list.rkt"]!==undefined)!==false){return(_1357)(M);}else{return(_1359)(M);}};

var _1353=function(M){if(--M.cbt<0){throw _1353;}
if((M.modules["whalesong/lang/private/hash.rkt"]!==undefined)!==false){return(_1354)(M);}else{return(_1356)(M);}};

var _1347=function(M){
M.modules["whalesong/lang/base.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/private/list.rkt"]!==undefined)!==false){return(_1348)(M);}else{return(_1350)(M);}};

var _1366=function(M){
return(_1343)(M);};

var _1361=function(M){if(--M.cbt<0){throw _1361;}
M.e.length-=(M.a-1);
return(_1362)(M);};

var _1359=function(M){if(--M.cbt<0){throw _1359;}
if((M.modules["whalesong/lang/private/qq-and-or.rkt"]!==undefined)!==false){return(_1360)(M);}else{return(_1362)(M);}};

_1350.mvr=_1349;
_1353.mvr=_1352;
_1356.mvr=_1355;
_1359.mvr=_1358;
_1362.mvr=_1361;
_1365.mvr=_1364;
_1345.mvr=_1344;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_1366, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/base.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/base.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/qq-and-or.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _1370=function(M){if(--M.cbt<0){throw _1370;}
};

var _1376=function(M){
M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["qq-append"]||M.primitives["qq-append"]]);M.e[M.e.length-1].names=["qq-append"];
M.modules["whalesong/lang/private/qq-and-or.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_1378,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1367,2,[],"qq-append");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1367=function(M){if(--M.cbt<0){throw _1367;}
M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_1371)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.primitives["append"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1379=function(M){
return(_1368)(M);};

var _1369=function(M){if(--M.cbt<0){throw _1369;}
M.e.length-=M.a;
return(_1370)(M);};

var _1368=function(M){
M.c.push(new RT.PromptFrame(_1370,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/qq-and-or.rkt"]=new RT.ModuleRecord("qq-and-or",_1376);
return(_1375)(M);};

var _1377=function(M){if(--M.cbt<0){throw _1377;}
M.e.length-=(M.a-1);
return(_1378)(M);};

var _1371=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("unquote-splicing");
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=M.e[M.e.length-4];
M.p=M.primitives["raise-type-error"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1378=function(M){if(--M.cbt<0){throw _1378;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/qq-and-or.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _1375=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_1378.mvr=_1377;
_1370.mvr=_1369;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_1379, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/qq-and-or.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/qq-and-or.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Applications/Racket v5.2.1/collects/racket/private/modbeg.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _1391=function(M){if(--M.cbt<0){throw _1391;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["collects/racket/private/modbeg.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _1390=function(M){if(--M.cbt<0){throw _1390;}
M.e.length-=(M.a-1);
return(_1391)(M);};

var _1384=function(M){if(--M.cbt<0){throw _1384;}
M.e.length-=(M.a-1);
return(_1385)(M);};

var _1388=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1381=function(M){
M.c.push(new RT.PromptFrame(_1383,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["collects/racket/private/modbeg.rkt"]=new RT.ModuleRecord("modbeg",_1389);
return(_1388)(M);};

var _1383=function(M){if(--M.cbt<0){throw _1383;}
};

var _1385=function(M){if(--M.cbt<0){throw _1385;}
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1382=function(M){if(--M.cbt<0){throw _1382;}
M.e.length-=M.a;
return(_1383)(M);};

var _1392=function(M){
return(_1381)(M);};

var _1389=function(M){
M.modules["collects/racket/private/modbeg.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["print-values"]||M.primitives["print-values"]]);M.e[M.e.length-1].names=["print-values"];
M.modules["collects/racket/private/modbeg.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_1391,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1380,(RT.makeArityAtLeast(0)),[],"print-values");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1380=function(M){if(--M.cbt<0){throw _1380;}
M.unspliceRestFromStack(0,M.a);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["for-each"];
M.p=M.primitives["current-print"];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1385,M.p));
return((M.p).label)(M);};

_1385.mvr=_1384;
_1391.mvr=_1390;
_1383.mvr=_1382;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_1392, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Applications/Racket v5.2.1/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Applications/Racket v5.2.1/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/list.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2007=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1439,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return(_1439)(M);};

var _1996=function(M){
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1998)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2003,M.p));
return((M.p).label)(M);}};

var _1985=function(M){
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1987)(M);}else{M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1993,M.p));
return((M.p).label)(M);}};

var _1981=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][16];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1943=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1948,M.p));
return((M.p).label)(M);};

var _1936=function(M){
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_1981)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1926=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][16];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1901=function(M){
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_1926)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1883=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][16];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1869=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-10][49];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1852=function(M){
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_1877)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1820=function(M){
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-11][50];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2293=function(M){if(--M.cbt<0){throw _2293;}
M.e.length-=(M.a-1);
return(_2294)(M);};

var _2285=function(M){if(--M.cbt<0){throw _2285;}
M.e.length-=(M.a-1);
return(_2286)(M);};

var _1785=function(M){
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_1834)(M);}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1767=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-10][51];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1754=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1762,M.p));
return((M.p).label)(M);};

var _1747=function(M){
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_1775)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2245=function(M){if(--M.cbt<0){throw _2245;}
M.e.length-=(M.a-1);
return(_2246)(M);};

var _1724=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.p=M.e[M.e.length-4][14];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_1725)(M);};

var _2229=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][64];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2226=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("compose");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2227)(M);};

var _2221=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2222)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1486)(M);}};

var _2214=function(M){
M.e.length+=4;
M.e[M.e.length-1]=RT.makeSymbol("compose1");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.p=M.e[M.e.length-5][1];
M.a=4;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
return(_2215)(M);};

var _2212=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("compose1");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2213)(M);};

var _2205=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2206)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1481)(M);}};

var _2204=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2205)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1480)(M);}};

var _1654=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][59];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-7][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-6][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1657)(M);}else{M.e[M.e.length-2]=new RT.Closure(_1422,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:371:28");
return(_1656)(M);}};

var _2189=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("build-string");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2190)(M);};

var _1621=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][60];
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-7]);
M.p=M.e[M.e.length-7][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-6][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1624)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-7][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-6][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1626)(M);}else{M.e[M.e.length-2]=new RT.Closure(_1417,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:384:34");
return(_1623)(M);}}};

var _1614=function(M){
M.e.length+=1;
M.e.length+=1;
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-4],M.e[M.e.length-5]);
M.p=M.e[M.e.length-3][32];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2183=function(M){
if(M.v===false){return(_2180)(M);}else{M.v=RT.VOID;
return(_2181)(M);}};

_2335=RT.si_context_expected(2);

var _2325=function(M){if(--M.cbt<0){throw _2325;}
M.c.push(new RT.PromptFrame(_2327,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1476,2,[M.e[M.e.length-1]],"build-string");
M.e[M.e.length-1][37]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2319=function(M){if(--M.cbt<0){throw _2319;}
M.c.push(new RT.PromptFrame(_2321,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_1471,3,[M.e[M.e.length-3]],"...private/list.rkt:252:4");
M.e[M.e.length-2]=new RT.Closure(_1473,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:258:4");
M.v=new RT.Closure(_1470,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldr");
M.e.length-=2;
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2155=function(M){if(--M.cbt<0){throw _2155;}
M.e.length-=(M.a-1);
return(_2156)(M);};

var _2298=function(M){if(--M.cbt<0){throw _2298;}
M.c.push(new RT.PromptFrame(_2300,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1454,2,[M.e[M.e.length-1]],"findf");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2138=function(M){if(--M.cbt<0){throw _2138;}
M.e.length-=(M.a-1);
return(_2139)(M);};

var _2278=function(M){if(--M.cbt<0){throw _2278;}
M.c.push(new RT.PromptFrame(_2280,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1437,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2274=function(M){if(--M.cbt<0){throw _2274;}
M.c.push(new RT.PromptFrame(_2276,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1435,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2262=function(M){if(--M.cbt<0){throw _2262;}
M.c.push(new RT.PromptFrame(_2264,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1429,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2254=function(M){if(--M.cbt<0){throw _2254;}
M.c.push(new RT.PromptFrame(_2256,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1425,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2250=function(M){if(--M.cbt<0){throw _2250;}
M.c.push(new RT.PromptFrame(_2252,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1421,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2242=function(M){if(--M.cbt<0){throw _2242;}
M.c.push(new RT.PromptFrame(_2244,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1405,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2088=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1460)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1461)(M);}};

var _1459=function(M){if(--M.cbt<0){throw _1459;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2088)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1460)(M);}};

var _2333=function(M){
M.e.splice(M.e.length-(1+1),1);
M.e.splice(M.e.length-(1+1),1);
M.e[M.e.length-2][42]=M.v;
M.e[M.e.length-2][43]=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2310=function(M){
M.e.splice(M.e.length-(3+1),1);
M.e.splice(M.e.length-(3+1),1);
M.e.splice(M.e.length-(3+1),1);
M.e.splice(M.e.length-(3+1),1);
M.e[M.e.length-4][18]=M.v;
M.e[M.e.length-4][19]=M.e[M.e.length-1];
M.e[M.e.length-4][20]=M.e[M.e.length-2];
M.e[M.e.length-4][21]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1993=function(M){if(--M.cbt<0){throw _1993;}
if(M.v===false){return(_1990)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1962=function(M){if(--M.cbt<0){throw _1962;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1965,M.p));
return((M.p).label)(M);};

var _1946=function(M){if(--M.cbt<0){throw _1946;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_1943)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1911=function(M){if(--M.cbt<0){throw _1911;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-6][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1908)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2040=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_1447,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return(_1447)(M);};

var _2033=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2034)(M);};

var _1443=function(M){if(--M.cbt<0){throw _1443;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][0];
M.e[M.e.length-1]=RT.makeSymbol("remq");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.primitives["eq?"];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2025=function(M){
M.v=false;
return(_2026)(M);};

var _1788=function(M){if(--M.cbt<0){throw _1788;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1790)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1795,M.p));
return((M.p).label)(M);}};

var _2011=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2016,M.p));
return((M.p).label)(M);};

var _2006=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2007)(M);};

var _1990=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][46];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1975=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][16];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _1918=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-10][48];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _1887=function(M){
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_1932)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2334=function(M){if(--M.cbt<0){throw _2334;}
if((M.a-2)===0){return(_2333)(M);}else{RT.si_context_expected(2)(M);
}};

var _2324=function(M){if(--M.cbt<0){throw _2324;}
M.e.length-=(M.a-1);
return(_2325)(M);};

var _1845=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1850,M.p));
return((M.p).label)(M);};

var _1834=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][16];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2301=function(M){if(--M.cbt<0){throw _2301;}
M.e.length-=(M.a-1);
return(_2302)(M);};

var _2291=function(M){if(--M.cbt<0){throw _2291;}
M.e.length-=(M.a-1);
return(_2292)(M);};

var _2283=function(M){if(--M.cbt<0){throw _2283;}
M.e.length-=(M.a-1);
return(_2284)(M);};

var _1775=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][16];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2269=function(M){if(--M.cbt<0){throw _2269;}
M.e.length-=(M.a-1);
return(_2270)(M);};

var _2261=function(M){if(--M.cbt<0){throw _2261;}
M.e.length-=(M.a-1);
return(_2262)(M);};

var _2253=function(M){if(--M.cbt<0){throw _2253;}
M.e.length-=(M.a-1);
return(_2254)(M);};

var _2243=function(M){if(--M.cbt<0){throw _2243;}
M.e.length-=(M.a-1);
return(_2244)(M);};

var _2234=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2228=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("compose");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2229)(M);};

var _1708=function(M){
M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2220=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2221)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1485)(M);}};

var _2213=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2214)(M);}else{M.v=RT.VOID;
return(_2215)(M);}};

var _2211=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2212)(M);}else{M.v=RT.VOID;
return(_2213)(M);}};

var _1672=function(M){
M.e.length+=2;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1675,M.p));
return((M.p).label)(M);};

var _1666=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2201=function(M){
if(M.v===false){return(_2198)(M);}else{M.v=RT.VOID;
return(_2199)(M);}};

var _1420=function(M){if(--M.cbt<0){throw _1420;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1650,M.p));
return((M.p).label)(M);};

var _2192=function(M){
if(M.v===false){return(_2189)(M);}else{M.v=RT.VOID;
return(_2190)(M);}};

var _2181=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-3][35];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=0;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2182=function(M){
M.v=false;
return(_2183)(M);};

var _2331=function(M){if(--M.cbt<0){throw _2331;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/list.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2323=function(M){if(--M.cbt<0){throw _2323;}
M.c.push(new RT.PromptFrame(_2325,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1475,2,[M.e[M.e.length-1]],"build-vector");
M.e[M.e.length-1][33]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2317=function(M){if(--M.cbt<0){throw _2317;}
M.c.push(new RT.PromptFrame(_2319,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_1467,3,[M.e[M.e.length-3]],"...private/list.rkt:239:4");
M.e[M.e.length-2]=new RT.Closure(_1469,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:243:4");
M.v=new RT.Closure(_1466,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldl");
M.e.length-=2;
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1472=function(M){if(--M.cbt<0){throw _1472;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2160)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2296=function(M){if(--M.cbt<0){throw _2296;}
M.c.push(new RT.PromptFrame(_2298,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1453,2,[M.e[M.e.length-1]],"memf");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2276=function(M){if(--M.cbt<0){throw _2276;}
M.c.push(new RT.PromptFrame(_2278,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1436,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2272=function(M){if(--M.cbt<0){throw _2272;}
M.c.push(new RT.PromptFrame(_2274,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1434,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2260=function(M){if(--M.cbt<0){throw _2260;}
M.c.push(new RT.PromptFrame(_2262,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1428,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2252=function(M){if(--M.cbt<0){throw _2252;}
M.c.push(new RT.PromptFrame(_2254,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1424,3,[M.e[M.e.length-1]],"recr");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2248=function(M){if(--M.cbt<0){throw _2248;}
M.c.push(new RT.PromptFrame(_2250,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1416,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2240=function(M){if(--M.cbt<0){throw _2240;}
M.c.push(new RT.PromptFrame(_2242,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1394,2,[M.e[M.e.length-1]],"simple-compose");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2163=function(M){if(--M.cbt<0){throw _2163;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2139=function(M){if(--M.cbt<0){throw _2139;}
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1468,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_1468)(M);};

var _2126=function(M){if(--M.cbt<0){throw _2126;}
M.e[M.e.length-1]=M.v;
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-9][52];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.v=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2129,M.p));
return((M.p).label)(M);};

var _2110=function(M){if(--M.cbt<0){throw _2110;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1464,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2112,M.p));
return((M.p).label)(M);};

var _1965=function(M){if(--M.cbt<0){throw _1965;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_1967)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][16];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1960=function(M){if(--M.cbt<0){throw _1960;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_1957)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1939=function(M){if(--M.cbt<0){throw _1939;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1941)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1946,M.p));
return((M.p).label)(M);}};

var _1904=function(M){if(--M.cbt<0){throw _1904;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1906)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1911,M.p));
return((M.p).label)(M);}};

var _1890=function(M){if(--M.cbt<0){throw _1890;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1892)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1897,M.p));
return((M.p).label)(M);}};

var _1855=function(M){if(--M.cbt<0){throw _1855;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1857)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1862,M.p));
return((M.p).label)(M);}};

var _1445=function(M){if(--M.cbt<0){throw _1445;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2033)(M);}else{M.v=RT.VOID;
return(_2034)(M);}};

var _1804=function(M){if(--M.cbt<0){throw _1804;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1806)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1811,M.p));
return((M.p).label)(M);}};

var _1765=function(M){if(--M.cbt<0){throw _1765;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_1767)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][16];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1757=function(M){if(--M.cbt<0){throw _1757;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1760,M.p));
return((M.p).label)(M);};

var _1723=function(M){if(--M.cbt<0){throw _1723;}
return(_1721)(M);};

var _1705=function(M){if(--M.cbt<0){throw _1705;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1687=function(M){if(--M.cbt<0){throw _1687;}
M.e[M.e.length-3]=M.v;
M.p=M.e[M.e.length-4][36];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][56];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1668=function(M){if(--M.cbt<0){throw _1668;}
M.a=1;
return(_1669)(M);};

var _1637=function(M){if(--M.cbt<0){throw _1637;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1603=function(M){if(--M.cbt<0){throw _1603;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1572=function(M){if(--M.cbt<0){throw _1572;}
return(_1570)(M);};

var _1545=function(M){if(--M.cbt<0){throw _1545;}
M.a=1;
return(_1546)(M);};

var _1521=function(M){if(--M.cbt<0){throw _1521;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1877=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][16];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2330=function(M){if(--M.cbt<0){throw _2330;}
M.e.length-=(M.a-1);
return(_2331)(M);};

var _2322=function(M){if(--M.cbt<0){throw _2322;}
M.e.length-=(M.a-1);
return(_2323)(M);};

var _2316=function(M){if(--M.cbt<0){throw _2316;}
M.e.length-=(M.a-1);
return(_2317)(M);};

var _1838=function(M){
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_1883)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2299=function(M){if(--M.cbt<0){throw _2299;}
M.e.length-=(M.a-1);
return(_2300)(M);};

var _2289=function(M){if(--M.cbt<0){throw _2289;}
M.e.length-=(M.a-1);
return(_2290)(M);};

var _2281=function(M){if(--M.cbt<0){throw _2281;}
M.e.length-=(M.a-1);
return(_2282)(M);};

var _2277=function(M){if(--M.cbt<0){throw _2277;}
M.e.length-=(M.a-1);
return(_2278)(M);};

var _2267=function(M){if(--M.cbt<0){throw _2267;}
M.e.length-=(M.a-1);
return(_2268)(M);};

var _2259=function(M){if(--M.cbt<0){throw _2259;}
M.e.length-=(M.a-1);
return(_2260)(M);};

var _2251=function(M){if(--M.cbt<0){throw _2251;}
M.e.length-=(M.a-1);
return(_2252)(M);};

var _2241=function(M){if(--M.cbt<0){throw _2241;}
M.e.length-=(M.a-1);
return(_2242)(M);};

var _2236=function(M){
if(M.modules["whalesong/lang/unsafe/ops.rkt"].isInvoked!==false){return(_2238)(M);}else{M.c.push(new RT.CallFrame(_2238,M.p));
return(M.modules["whalesong/lang/unsafe/ops.rkt"].label)(M);}};

var _1721=function(M){
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-3][26]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1727,M.p));
return((M.p).label)(M);};



var _1656=function(M){
M.e.pop();
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2210=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("compose1");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2211)(M);};

var _1481=function(M){if(--M.cbt<0){throw _1481;}
M.v=M.primitives["values"];
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2199=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2200=function(M){
M.v=false;
return(_2201)(M);};


var _2191=function(M){
M.v=false;
return(_2192)(M);};

var _2180=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("build-vector");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2181)(M);};

var _2179=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2182)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2183)(M);}};

var _2329=function(M){if(--M.cbt<0){throw _2329;}
M.c.push(new RT.PromptFrame(_2331,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=1;
M.e.length+=4;
M.e[M.e.length-1]=new RT.Closure(_1479,1,[M.e[M.e.length-6]],"...private/list.rkt:394:12");
M.e[M.e.length-2]=new RT.Closure(_1480,2,[M.e[M.e.length-6]],"...private/list.rkt:396:12");
M.e[M.e.length-3]=new RT.Closure(_1481,0,[],"...private/list.rkt:403:12");
M.e[M.e.length-4]=new RT.Closure(_1482,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...private/list.rkt:404:12");
M.e[M.e.length-5]=new RT.Closure(_1478,RT.makePair(1,RT.makePair(2,RT.makePair(0,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"compose1");
M.e.length-=4;
M.e.length+=1;
M.e.length+=4;
M.e[M.e.length-1]=new RT.Closure(_1484,1,[M.e[M.e.length-7]],"...private/list.rkt:394:12");
M.e[M.e.length-2]=new RT.Closure(_1485,2,[M.e[M.e.length-7]],"...private/list.rkt:396:12");
M.e[M.e.length-3]=new RT.Closure(_1486,0,[],"...private/list.rkt:403:12");
M.e[M.e.length-4]=new RT.Closure(_1487,(RT.makeArityAtLeast(1)),[M.e[M.e.length-7]],"...private/list.rkt:404:12");
M.e[M.e.length-5]=new RT.Closure(_1483,RT.makePair(1,RT.makePair(2,RT.makePair(0,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"compose");
M.e.length-=4;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2335,M.p));
return((M.p).label)(M);};

var _2321=function(M){if(--M.cbt<0){throw _2321;}
M.c.push(new RT.PromptFrame(_2323,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1474,2,[M.e[M.e.length-1]],"filter");
M.e[M.e.length-1][31]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2315=function(M){if(--M.cbt<0){throw _2315;}
M.c.push(new RT.PromptFrame(_2317,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1465,5,[M.e[M.e.length-1]],"check-fold");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2294=function(M){if(--M.cbt<0){throw _2294;}
M.c.push(new RT.PromptFrame(_2296,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1452,2,[M.e[M.e.length-1]],"remv*");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1565=function(M){if(--M.cbt<0){throw _1565;}
M.e.length-=(M.a-1);
return(_1564)(M);};


var _2270=function(M){if(--M.cbt<0){throw _2270;}
M.c.push(new RT.PromptFrame(_2272,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1433,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][49]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2115=function(M){if(--M.cbt<0){throw _2115;}
M.e.length-=(M.a-1);
return(_2114)(M);};


var _2246=function(M){if(--M.cbt<0){throw _2246;}
M.c.push(new RT.PromptFrame(_2248,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1415,2,[M.e[M.e.length-1]],"pipeline*");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2167=function(M){if(--M.cbt<0){throw _2167;}
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2156=function(M){if(--M.cbt<0){throw _2156;}
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1472,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_1472)(M);};

var _1493=function(M){if(--M.cbt<0){throw _1493;}
M.e.length-=(M.a-1);
return(_1492)(M);};

var _2120=function(M){if(--M.cbt<0){throw _2120;}
return(_2118)(M);};

var _2053=function(M){if(--M.cbt<0){throw _2053;}
if(M.v===false){return(_2050)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1446,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1452=function(M){if(--M.cbt<0){throw _1452;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][9];
M.e[M.e.length-1]=RT.makeSymbol("remv*");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-5][8];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1953=function(M){if(--M.cbt<0){throw _1953;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1955)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1960,M.p));
return((M.p).label)(M);}};

var _1916=function(M){if(--M.cbt<0){throw _1916;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_1918)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][16];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1899=function(M){if(--M.cbt<0){throw _1899;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1901)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1904,M.p));
return((M.p).label)(M);}};

var _1867=function(M){if(--M.cbt<0){throw _1867;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_1869)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][16];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1850=function(M){if(--M.cbt<0){throw _1850;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1852)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1855,M.p));
return((M.p).label)(M);}};

var _1449=function(M){if(--M.cbt<0){throw _1449;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][9];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-5][3];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1799=function(M){if(--M.cbt<0){throw _1799;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1801)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1804,M.p));
return((M.p).label)(M);}};

var _1762=function(M){if(--M.cbt<0){throw _1762;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1765,M.p));
return((M.p).label)(M);};

var _1750=function(M){if(--M.cbt<0){throw _1750;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1752)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-5][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1757,M.p));
return((M.p).label)(M);}};

var _1740=function(M){if(--M.cbt<0){throw _1740;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1743,M.p));
return((M.p).label)(M);};

var _1715=function(M){if(--M.cbt<0){throw _1715;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1703=function(M){if(--M.cbt<0){throw _1703;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1705,M.p));
return((M.p).label)(M);};

var _1681=function(M){if(--M.cbt<0){throw _1681;}
M.e[M.e.length-3]=M.v;
M.p=M.e[M.e.length-4][39];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][57];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"add1"));
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1662=function(M){if(--M.cbt<0){throw _1662;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1633=function(M){if(--M.cbt<0){throw _1633;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1596=function(M){if(--M.cbt<0){throw _1596;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1566=function(M){if(--M.cbt<0){throw _1566;}
return(_1564)(M);};

var _1535=function(M){if(--M.cbt<0){throw _1535;}
M.a=1;
return(_1536)(M);};

var _1494=function(M){if(--M.cbt<0){throw _1494;}
return(_1492)(M);};

var _2328=function(M){if(--M.cbt<0){throw _2328;}
M.e.length-=(M.a-1);
return(_2329)(M);};

var _2320=function(M){if(--M.cbt<0){throw _2320;}
M.e.length-=(M.a-1);
return(_2321)(M);};

var _2314=function(M){if(--M.cbt<0){throw _2314;}
M.e.length-=(M.a-1);
return(_2315)(M);};

var _2311=function(M){if(--M.cbt<0){throw _2311;}
if((M.a-4)===0){return(_2310)(M);}else{RT.si_context_expected(4)(M);
}};

var _2297=function(M){if(--M.cbt<0){throw _2297;}
M.e.length-=(M.a-1);
return(_2298)(M);};

var _2287=function(M){if(--M.cbt<0){throw _2287;}
M.e.length-=(M.a-1);
return(_2288)(M);};

var _2279=function(M){if(--M.cbt<0){throw _2279;}
M.e.length-=(M.a-1);
return(_2280)(M);};

var _2275=function(M){if(--M.cbt<0){throw _2275;}
M.e.length-=(M.a-1);
return(_2276)(M);};

var _2265=function(M){if(--M.cbt<0){throw _2265;}
M.e.length-=(M.a-1);
return(_2266)(M);};

var _2257=function(M){if(--M.cbt<0){throw _2257;}
M.e.length-=(M.a-1);
return(_2258)(M);};

var _2249=function(M){if(--M.cbt<0){throw _2249;}
M.e.length-=(M.a-1);
return(_2250)(M);};

var _2239=function(M){if(--M.cbt<0){throw _2239;}
M.e.length-=(M.a-1);
return(_2240)(M);};

var _2238=function(M){if(--M.cbt<0){throw _2238;}
M.e.push([M.params.currentNamespace["do-remove"]||M.primitives["do-remove"],M.primitives["raise-type-error"],M.params.currentNamespace["remove"]||M.primitives["remove"],M.primitives["equal?"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.params.currentNamespace["remq"]||M.primitives["remq"],M.params.currentNamespace["remv"]||M.primitives["remv"],M.primitives["eqv?"],M.params.currentNamespace["do-remove*"]||M.primitives["do-remove*"],M.params.currentNamespace["remove*"]||M.primitives["remove*"],M.params.currentNamespace["remq*"]||M.primitives["remq*"],M.params.currentNamespace["remv*"]||M.primitives["remv*"],M.params.currentNamespace["memf"]||M.primitives["memf"],M.primitives["raise-mismatch-error"],M.params.currentNamespace["findf"]||M.primitives["findf"],M.params.currentNamespace["bad-list"]||M.primitives["bad-list"],M.params.currentNamespace["bad-item"]||M.primitives["bad-item"],M.params.currentNamespace["assq"]||M.primitives["assq"],M.params.currentNamespace["assv"]||M.primitives["assv"],M.params.currentNamespace["assoc"]||M.primitives["assoc"],M.params.currentNamespace["assf"]||M.primitives["assf"],M.modules["whalesong/lang/unsafe/ops.rkt"].namespace["unsafe-car1.1"],M.modules["whalesong/lang/unsafe/ops.rkt"].namespace["unsafe-cdr2.3"],M.params.currentNamespace["mapadd"]||M.primitives["mapadd"],M.params.currentNamespace["check-fold"]||M.primitives["check-fold"],M.primitives["length"],M.primitives["format"],M.params.currentNamespace["foldl"]||M.primitives["foldl"],M.primitives["map"],M.params.currentNamespace["foldr"]||M.primitives["foldr"],M.params.currentNamespace["filter"]||M.primitives["filter"],M.primitives["reverse"],M.params.currentNamespace["build-vector"]||M.primitives["build-vector"],M.primitives["exact-nonnegative-integer?"],M.primitives["make-vector"],M.primitives["vector-set!"],M.params.currentNamespace["build-string"]||M.primitives["build-string"],M.primitives["make-string"],M.primitives["string-set!"],M.params.currentNamespace["build-list"]||M.primitives["build-list"],M.primitives["zero?"],M.params.currentNamespace["compose1"]||M.primitives["compose1"],M.params.currentNamespace["compose"]||M.primitives["compose"],M.primitives["procedure-arity"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["do-remove","raise-type-error","remove","equal?","procedure?","procedure-arity-includes?","remq","remv","eqv?","do-remove*","remove*","remq*","remv*","memf","raise-mismatch-error","findf","bad-list","bad-item","assq","assv","assoc","assf","unsafe-car1.1","unsafe-cdr2.3","mapadd","check-fold","length","format","foldl","map","foldr","filter","reverse","build-vector","exact-nonnegative-integer?","make-vector","vector-set!","build-string","make-string","string-set!","build-list","zero?","compose1","compose","procedure-arity",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/private/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2240,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1393,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2235=function(M){
M.modules["whalesong/lang/private/list.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/unsafe/ops.rkt"]!==undefined)!==false){return(_2236)(M);}else{return(_2238)(M);}};

var _1487=function(M){if(--M.cbt<0){throw _1487;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=0;
M.v=RT.NULL;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1486=function(M){if(--M.cbt<0){throw _1486;}
M.v=M.primitives["values"];
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1693=function(M){
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1678=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1681,M.p));
return((M.p).label)(M);};

var _1482=function(M){if(--M.cbt<0){throw _1482;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][63];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=0;
M.v=RT.NULL;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2198=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("build-list");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2199)(M);};

var _2197=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2200)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2201)(M);}};

var _1477=function(M){if(--M.cbt<0){throw _1477;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][34];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2196)(M);}else{M.v=RT.VOID;
return(_2197)(M);}};

var _2188=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2191)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2192)(M);}};

var _1536=function(M){if(--M.cbt<0){throw _1536;}
if(M.a===0){return(_1533)(M);}else{M.e.push(M.v);
return(_1533)(M);}};

var _2178=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("build-vector");
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2179)(M);};

var _2337=function(M){
return(_1488)(M);};

var _1414=function(M){if(--M.cbt<0){throw _1414;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1611,M.p));
return((M.p).label)(M);};

_2312=RT.si_context_expected(4);

var _1470=function(M){if(--M.cbt<0){throw _1470;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2153)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1471)(M);}};

var _2292=function(M){if(--M.cbt<0){throw _2292;}
M.c.push(new RT.PromptFrame(_2294,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1451,2,[M.e[M.e.length-1]],"remq*");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2290=function(M){if(--M.cbt<0){throw _2290;}
M.c.push(new RT.PromptFrame(_2292,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_1449,2,[M.e[M.e.length-3]],"...private/list.rkt:98:4");
M.e[M.e.length-2]=new RT.Closure(_1450,3,[M.e[M.e.length-3]],"...private/list.rkt:99:4");
M.v=new RT.Closure(_1448,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove*");
M.e.length-=2;
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2128=function(M){if(--M.cbt<0){throw _2128;}
M.e.length-=(M.a-1);
return(_2129)(M);};

var _2268=function(M){if(--M.cbt<0){throw _2268;}
M.c.push(new RT.PromptFrame(_2270,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1432,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1404=function(M){if(--M.cbt<0){throw _1404;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1559,M.p));
return((M.p).label)(M);};

var _2244=function(M){if(--M.cbt<0){throw _2244;}
M.c.push(new RT.PromptFrame(_2246,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1409,2,[M.e[M.e.length-1]],"simple-compose");
M.e[M.e.length-1][62]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1399=function(M){if(--M.cbt<0){throw _1399;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1529,M.p));
return((M.p).label)(M);};

var _2150=function(M){if(--M.cbt<0){throw _2150;}
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2135=function(M){if(--M.cbt<0){throw _2135;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.pop();
M.p=M.e[M.e.length-7][27];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=M.e[M.e.length-5][14];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2116=function(M){if(--M.cbt<0){throw _2116;}
return(_2114)(M);};

var _2049=function(M){if(--M.cbt<0){throw _2049;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1453=function(M){if(--M.cbt<0){throw _1453;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2074)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2075)(M);}};

var _1948=function(M){if(--M.cbt<0){throw _1948;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1950)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1953,M.p));
return((M.p).label)(M);}};

var _1913=function(M){if(--M.cbt<0){throw _1913;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1916,M.p));
return((M.p).label)(M);};

var _1897=function(M){if(--M.cbt<0){throw _1897;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-4][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1894)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1864=function(M){if(--M.cbt<0){throw _1864;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1867,M.p));
return((M.p).label)(M);};

var _1848=function(M){if(--M.cbt<0){throw _1848;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-4][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1845)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1818=function(M){if(--M.cbt<0){throw _1818;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_1820)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-8][16];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+11),11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1797=function(M){if(--M.cbt<0){throw _1797;}
if(M.v===false){return(_1792)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1760=function(M){if(--M.cbt<0){throw _1760;}
M.e.pop();
if(M.v===false){return(_1754)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1745=function(M){if(--M.cbt<0){throw _1745;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1747)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1750,M.p));
return((M.p).label)(M);}};

var _1733=function(M){if(--M.cbt<0){throw _1733;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1735)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-3][22]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1740,M.p));
return((M.p).label)(M);}};

var _1713=function(M){if(--M.cbt<0){throw _1713;}
M.e[M.e.length-2]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1715,M.p));
return((M.p).label)(M);};

var _1701=function(M){if(--M.cbt<0){throw _1701;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1703,M.p));
return((M.p).label)(M);};

var _1677=function(M){if(--M.cbt<0){throw _1677;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1650=function(M){if(--M.cbt<0){throw _1650;}
M.a=1;
return(_1651)(M);};

var _1611=function(M){if(--M.cbt<0){throw _1611;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1588=function(M){if(--M.cbt<0){throw _1588;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1559=function(M){if(--M.cbt<0){throw _1559;}
M.a=1;
return(_1560)(M);};

var _1529=function(M){if(--M.cbt<0){throw _1529;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1514=function(M){if(--M.cbt<0){throw _1514;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2326=function(M){if(--M.cbt<0){throw _2326;}
M.e.length-=(M.a-1);
return(_2327)(M);};

var _2318=function(M){if(--M.cbt<0){throw _2318;}
M.e.length-=(M.a-1);
return(_2319)(M);};


var _2305=function(M){if(--M.cbt<0){throw _2305;}
M.e.length-=(M.a-1);
return(_2306)(M);};

var _2295=function(M){if(--M.cbt<0){throw _2295;}
M.e.length-=(M.a-1);
return(_2296)(M);};



var _2273=function(M){if(--M.cbt<0){throw _2273;}
M.e.length-=(M.a-1);
return(_2274)(M);};

var _2263=function(M){if(--M.cbt<0){throw _2263;}
M.e.length-=(M.a-1);
return(_2264)(M);};

var _2255=function(M){if(--M.cbt<0){throw _2255;}
M.e.length-=(M.a-1);
return(_2256)(M);};

var _2247=function(M){if(--M.cbt<0){throw _2247;}
M.e.length-=(M.a-1);
return(_2248)(M);};


var _2237=function(M){if(--M.cbt<0){throw _2237;}
M.e.length-=(M.a-1);
return(_2238)(M);};

var _1722=function(M){if(--M.cbt<0){throw _1722;}
M.e.length-=(M.a-1);
return(_1721)(M);};

var _1425=function(M){if(--M.cbt<0){throw _1425;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){return(_1678)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _1692=function(M){
M.v=M.e[M.e.length-7];
return(_1693)(M);};


var _1424=function(M){if(--M.cbt<0){throw _1424;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][41];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_1672)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _2196=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("build-list");
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2197)(M);};

var _1419=function(M){if(--M.cbt<0){throw _1419;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.e.push(M.e[M.e.length-1]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1643,M.p));
return((M.p).label)(M);};

var _2187=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("build-string");
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2188)(M);};

var _1476=function(M){if(--M.cbt<0){throw _1476;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][34];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2187)(M);}else{M.v=RT.VOID;
return(_2188)(M);}};


var _1475=function(M){if(--M.cbt<0){throw _1475;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][34];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2178)(M);}else{M.v=RT.VOID;
return(_2179)(M);}};

var _1474=function(M){if(--M.cbt<0){throw _1474;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2172)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2173)(M);}};

var _2166=function(M){if(--M.cbt<0){throw _2166;}
M.e.length-=(M.a-1);
return(_2167)(M);};

var _2302=function(M){if(--M.cbt<0){throw _2302;}
M.c.push(new RT.PromptFrame(_2304,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1456,3,[M.e[M.e.length-1]],"bad-item");
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2149=function(M){if(--M.cbt<0){throw _2149;}
M.e.length-=(M.a-1);
return(_2150)(M);};

var _2288=function(M){if(--M.cbt<0){throw _2288;}
M.c.push(new RT.PromptFrame(_2290,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1445,4,[M.e[M.e.length-1]],"do-remove*");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2282=function(M){if(--M.cbt<0){throw _2282;}
M.c.push(new RT.PromptFrame(_2284,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_1441,2,[M.e[M.e.length-3]],"...private/list.rkt:68:4");
M.e[M.e.length-2]=new RT.Closure(_1442,3,[M.e[M.e.length-3]],"...private/list.rkt:69:4");
M.v=new RT.Closure(_1440,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove");
M.e.length-=2;
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2119=function(M){if(--M.cbt<0){throw _2119;}
M.e.length-=(M.a-1);
return(_2118)(M);};

var _2266=function(M){if(--M.cbt<0){throw _2266;}
M.c.push(new RT.PromptFrame(_2268,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1431,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2258=function(M){if(--M.cbt<0){throw _2258;}
M.c.push(new RT.PromptFrame(_2260,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1427,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1400=function(M){if(--M.cbt<0){throw _1400;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(M.e[M.e.length-2]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1535,M.p));
return((M.p).label)(M);};

var _1490=function(M){if(--M.cbt<0){throw _1490;}
};

var _2146=function(M){if(--M.cbt<0){throw _2146;}
M.e[M.e.length-2]=M.v;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2133=function(M){if(--M.cbt<0){throw _2133;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=plt.baselib.numbers.add(2, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"+"));
M.e.pop();
M.p=M.e[M.e.length-4][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2130)(M);}else{M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2112=function(M){if(--M.cbt<0){throw _2112;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2018=function(M){if(--M.cbt<0){throw _2018;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2016=function(M){if(--M.cbt<0){throw _2016;}
if(M.v===false){return(_2013)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1473=function(M){if(--M.cbt<0){throw _1473;}
M.unspliceRestFromStack(3,(M.a-3));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][25];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2167,M.p));
return((M.p).label)(M);};

var _1469=function(M){if(--M.cbt<0){throw _1469;}
M.unspliceRestFromStack(3,(M.a-3));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][25];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2150,M.p));
return((M.p).label)(M);};

var _1466=function(M){if(--M.cbt<0){throw _1466;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2136)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1467)(M);}};

var _1862=function(M){if(--M.cbt<0){throw _1862;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1859)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1841=function(M){if(--M.cbt<0){throw _1841;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1843)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-4][22]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1848,M.p));
return((M.p).label)(M);}};

var _1815=function(M){if(--M.cbt<0){throw _1815;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.e.push(M.e[M.e.length-6][23]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1818,M.p));
return((M.p).label)(M);};

var _1795=function(M){if(--M.cbt<0){throw _1795;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1797,M.p));
return((M.p).label)(M);};

var _1440=function(M){if(--M.cbt<0){throw _1440;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2019)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1441)(M);}};

var _1743=function(M){if(--M.cbt<0){throw _1743;}
M.e.pop();
if(M.v===false){return(_1737)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1727=function(M){if(--M.cbt<0){throw _1727;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){return(_1724)(M);}else{M.v=RT.VOID;
return(_1725)(M);}};

var _1711=function(M){if(--M.cbt<0){throw _1711;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1713,M.p));
return((M.p).label)(M);};

var _1695=function(M){if(--M.cbt<0){throw _1695;}
if(M.v===false){return(_1692)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1693)(M);}};

var _1675=function(M){if(--M.cbt<0){throw _1675;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][58];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"add1"));
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1677,M.p));
return((M.p).label)(M);};

var _1643=function(M){if(--M.cbt<0){throw _1643;}
M.a=1;
return(_1644)(M);};

var _1607=function(M){if(--M.cbt<0){throw _1607;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1577=function(M){if(--M.cbt<0){throw _1577;}
M.e[M.e.length-1]=M.v;
return(_1575)(M);};

var _1552=function(M){if(--M.cbt<0){throw _1552;}
M.a=1;
return(_1553)(M);};

var _1525=function(M){if(--M.cbt<0){throw _1525;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1500=function(M){if(--M.cbt<0){throw _1500;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _2303=function(M){if(--M.cbt<0){throw _2303;}
M.e.length-=(M.a-1);
return(_2304)(M);};




var _2271=function(M){if(--M.cbt<0){throw _2271;}
M.e.length-=(M.a-1);
return(_2272)(M);};






var _1489=function(M){if(--M.cbt<0){throw _1489;}
M.e.length-=M.a;
return(_1490)(M);};


var _1669=function(M){if(--M.cbt<0){throw _1669;}
if(M.a===0){return(_1666)(M);}else{M.e.push(M.v);
return(_1666)(M);}};

var _1483=function(M){if(--M.cbt<0){throw _1483;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2220)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1484)(M);}};



var _1478=function(M){if(--M.cbt<0){throw _1478;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2204)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1479)(M);}};

var _1421=function(M){if(--M.cbt<0){throw _1421;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1654)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1406=function(M){if(--M.cbt<0){throw _1406;}
M.v=new RT.Closure(_1407,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"...private/list.rkt:355:6");
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1553=function(M){if(--M.cbt<0){throw _1553;}
if(M.a===0){return(_1550)(M);}else{M.e.push(M.v);
return(_1550)(M);}};

var _1415=function(M){if(--M.cbt<0){throw _1415;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-4][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-3][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1614)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][59];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _1411=function(M){if(--M.cbt<0){throw _1411;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1599)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1412)(M);}};

var _1413=function(M){if(--M.cbt<0){throw _1413;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1607,M.p));
return((M.p).label)(M);};


var _1407=function(M){if(--M.cbt<0){throw _1407;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1408,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return(_1408)(M);};


var _1468=function(M){if(--M.cbt<0){throw _1468;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2143)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _1464=function(M){if(--M.cbt<0){throw _1464;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2107)(M);}else{M.v=RT.makePair(M.e[M.e.length-2],RT.NULL);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1463=function(M){if(--M.cbt<0){throw _1463;}
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1464,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return(_1464)(M);};

var _1462=function(M){if(--M.cbt<0){throw _1462;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2100)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2101)(M);}};

var _1461=function(M){if(--M.cbt<0){throw _1461;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2094)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2095)(M);}};

var _1456=function(M){if(--M.cbt<0){throw _1456;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=" in ";
M.e[M.e.length-5]=M.e[M.e.length-9];
M.p=M.e[M.e.length-6][14];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1455=function(M){if(--M.cbt<0){throw _1455;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][14];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1454=function(M){if(--M.cbt<0){throw _1454;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2080)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2081)(M);}};

var _1480=function(M){if(--M.cbt<0){throw _1480;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2210)(M);}else{M.v=RT.VOID;
return(_2211)(M);}};

var _1451=function(M){if(--M.cbt<0){throw _1451;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][9];
M.e[M.e.length-1]=RT.makeSymbol("remq*");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.primitives["eq?"];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1450=function(M){if(--M.cbt<0){throw _1450;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2064)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2065)(M);}};


var _1446=function(M){if(--M.cbt<0){throw _1446;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2040)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1460=function(M){if(--M.cbt<0){throw _1460;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][49];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1444=function(M){if(--M.cbt<0){throw _1444;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][0];
M.e[M.e.length-1]=RT.makeSymbol("remv");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-5][8];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1442=function(M){if(--M.cbt<0){throw _1442;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2025)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2026)(M);}};


var _1439=function(M){if(--M.cbt<0){throw _1439;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2011)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _1967=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-10][47];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+10),10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};











var _1828=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][16];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};









var _1429=function(M){if(--M.cbt<0){throw _1429;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_1708)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1711,M.p));
return((M.p).label)(M);}};

var _1427=function(M){if(--M.cbt<0){throw _1427;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1690)(M);}else{M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][32];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _1644=function(M){if(--M.cbt<0){throw _1644;}
if(M.a===0){return(_1641)(M);}else{M.e.push(M.v);
return(_1641)(M);}};


var _1423=function(M){if(--M.cbt<0){throw _1423;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(M.e[M.e.length-2]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1668,M.p));
return((M.p).label)(M);};

var _1409=function(M){if(--M.cbt<0){throw _1409;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-3][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.v=(1===M.e[M.e.length-2]);
if(M.v===false){return(_1592)(M);}else{M.e[M.e.length-1]=new RT.Closure(_1410,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"composed");
return(_1593)(M);}};


var _1418=function(M){if(--M.cbt<0){throw _1418;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1637,M.p));
return((M.p).label)(M);};


var _1397=function(M){if(--M.cbt<0){throw _1397;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1521,M.p));
return((M.p).label)(M);};


var _1410=function(M){if(--M.cbt<0){throw _1410;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1596,M.p));
return((M.p).label)(M);};


var _1408=function(M){if(--M.cbt<0){throw _1408;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1583)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1571=function(M){if(--M.cbt<0){throw _1571;}
M.e.length-=(M.a-1);
return(_1570)(M);};

var _1405=function(M){if(--M.cbt<0){throw _1405;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_1563)(M);}else{M.v=RT.VOID;
return(_1564)(M);}};

var _1550=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _1401=function(M){if(--M.cbt<0){throw _1401;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1539)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1402)(M);}};

var _1403=function(M){if(--M.cbt<0){throw _1403;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1552,M.p));
return((M.p).label)(M);};

var _1396=function(M){if(--M.cbt<0){throw _1396;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1517)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1397)(M);}};

var _1398=function(M){if(--M.cbt<0){throw _1398;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1525,M.p));
return((M.p).label)(M);};


var _1393=function(M){if(--M.cbt<0){throw _1393;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_1491)(M);}else{M.v=RT.VOID;
return(_1492)(M);}};

var _1485=function(M){if(--M.cbt<0){throw _1485;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2226)(M);}else{M.v=RT.VOID;
return(_2227)(M);}};

var _1484=function(M){if(--M.cbt<0){throw _1484;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2224)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1479=function(M){if(--M.cbt<0){throw _1479;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2208)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1471=function(M){if(--M.cbt<0){throw _1471;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][25];
M.e[M.e.length-1]=RT.makeSymbol("foldr");
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=RT.NULL;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2156,M.p));
return((M.p).label)(M);};

var _1467=function(M){if(--M.cbt<0){throw _1467;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][25];
M.e[M.e.length-1]=RT.makeSymbol("foldl");
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=RT.NULL;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2139,M.p));
return((M.p).label)(M);};

var _2121=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-2][26]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2126,M.p));
return((M.p).label)(M);};

var _1465=function(M){if(--M.cbt<0){throw _1465;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2113)(M);}else{M.v=RT.VOID;
return(_2114)(M);}};

var _1448=function(M){if(--M.cbt<0){throw _1448;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2058)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1449)(M);}};

var _1447=function(M){if(--M.cbt<0){throw _1447;}
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_2046)(M);}else{M.v=M.e[M.e.length-5];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1446,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2049,M.p));
return((M.p).label)(M);}};

var _1441=function(M){if(--M.cbt<0){throw _1441;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][0];
M.e[M.e.length-1]=RT.makeSymbol("remove");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-5][3];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1438=function(M){if(--M.cbt<0){throw _1438;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2006)(M);}else{M.v=RT.VOID;
return(_2007)(M);}};

var _1437=function(M){if(--M.cbt<0){throw _1437;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_1996)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1436=function(M){if(--M.cbt<0){throw _1436;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_1985)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1941=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1955=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][17];
M.e[M.e.length-1]=RT.makeSymbol("assq");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1435=function(M){if(--M.cbt<0){throw _1435;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1936)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1939,M.p));
return((M.p).label)(M);}};

var _1892=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1906=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][17];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1434=function(M){if(--M.cbt<0){throw _1434;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1887)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1890,M.p));
return((M.p).label)(M);}};

var _1843=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1857=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][17];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1433=function(M){if(--M.cbt<0){throw _1433;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1838)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1841,M.p));
return((M.p).label)(M);}};

var _1790=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1806=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][17];
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+9),9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1432=function(M){if(--M.cbt<0){throw _1432;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_1785)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1788,M.p));
return((M.p).label)(M);}};

var _1735=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1752=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][17];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1431=function(M){if(--M.cbt<0){throw _1431;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1730)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][22]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1733,M.p));
return((M.p).label)(M);}};

var _1430=function(M){if(--M.cbt<0){throw _1430;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){return(_1718)(M);}else{M.v=RT.VOID;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1428=function(M){if(--M.cbt<0){throw _1428;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_1698)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-9][54];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-11][29];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1701,M.p));
return((M.p).label)(M);}};

var _1426=function(M){if(--M.cbt<0){throw _1426;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"="))));
if(M.v===false){return(_1684)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1422=function(M){if(--M.cbt<0){throw _1422;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1662,M.p));
return((M.p).label)(M);};

var _1651=function(M){if(--M.cbt<0){throw _1651;}
if(M.a===0){return(_1648)(M);}else{M.e.push(M.v);
return(_1648)(M);}};

var _1417=function(M){if(--M.cbt<0){throw _1417;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.e.push(M.e[M.e.length-2]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1633,M.p));
return((M.p).label)(M);};

var _1623=function(M){
M.e.pop();
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1416=function(M){if(--M.cbt<0){throw _1416;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1621)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1412=function(M){if(--M.cbt<0){throw _1412;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1603,M.p));
return((M.p).label)(M);};

var _1560=function(M){if(--M.cbt<0){throw _1560;}
if(M.a===0){return(_1557)(M);}else{M.e.push(M.v);
return(_1557)(M);}};

var _1546=function(M){if(--M.cbt<0){throw _1546;}
if(M.a===0){return(_1543)(M);}else{M.e.push(M.v);
return(_1543)(M);}};

var _1402=function(M){if(--M.cbt<0){throw _1402;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(M.e[M.e.length-2]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1545,M.p));
return((M.p).label)(M);};

var _1395=function(M){if(--M.cbt<0){throw _1395;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1514,M.p));
return((M.p).label)(M);};

var _1394=function(M){if(--M.cbt<0){throw _1394;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-4][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-3][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1503)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-3][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.v=(1===M.e[M.e.length-2]);
if(M.v===false){return(_1506)(M);}else{M.e[M.e.length-1]=new RT.Closure(_1395,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"composed");
return(_1507)(M);}}};

var _1593=function(M){
M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1575=function(M){
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1563=function(M){
M.e.length+=6;
M.e[M.e.length-6]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7][1];
M.e[M.e.length-2]=RT.makeSymbol("compose1");
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1566,M.p));
return((M.p).label)(M);};

var _1543=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1539=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1540)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1403)(M);}};

var _2113=function(M){
M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2116,M.p));
return((M.p).label)(M);};

var _1511=function(M){
M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1507=function(M){
M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1495=function(M){
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][64];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][61];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1500,M.p));
return((M.p).label)(M);};

var _1491=function(M){
M.e.length+=6;
M.e[M.e.length-6]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7][1];
M.e[M.e.length-2]=RT.makeSymbol("compose");
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1494,M.p));
return((M.p).label)(M);};

var _2170=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("filter");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2171)(M);};

var _2153=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1471)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1473)(M);}};

var _2143=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1468,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2146,M.p));
return((M.p).label)(M);};

var _2136=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1467)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1469)(M);}};

var _1557=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2117=function(M){
M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=2;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2120,M.p));
return((M.p).label)(M);};

var _1518=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1397)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1399)(M);}};

var _1510=function(M){
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_1402,1,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_1403,2,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_1404,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:333:18");
M.e[M.e.length-4]=new RT.Closure(_1401,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=3;
return(_1511)(M);};

var _1506=function(M){
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_1397,1,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_1398,2,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_1399,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:333:18");
M.e[M.e.length-4]=new RT.Closure(_1396,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=3;
return(_1507)(M);};

var _1492=function(M){
M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_1495)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"car")).first;
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"cdr")).rest;
M.e[M.e.length-5]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12],0,"add1"));
M.v=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-13]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2079=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][46];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2175=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.NULL;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2173=function(M){
if(M.v===false){return(_2170)(M);}else{M.v=RT.VOID;
return(_2171)(M);}};

var _1583=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1408,3,[],"loop");
M.e.push(M.e[M.e.length-5]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1588,M.p));
return((M.p).label)(M);};

var _2306=function(M){if(--M.cbt<0){throw _2306;}
M.c.push(new RT.PromptFrame(_2315,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1463,3,[],"mapadd");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1569=function(M){
M.e.length+=6;
M.e[M.e.length-6]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7][1];
M.e[M.e.length-2]=RT.makeSymbol("compose1");
M.e[M.e.length-3]="procedure (arity 1)";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1572,M.p));
return((M.p).label)(M);};

var _1564=function(M){
M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_1567)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1569)(M);}else{M.v=RT.VOID;
return(_1570)(M);}}};

var _1540=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1402)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1404)(M);}};

var _1533=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1517=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1518)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1398)(M);}};

var _2099=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][51];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2093=function(M){
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][50];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1503=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-3][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.v=(1===M.e[M.e.length-2]);
if(M.v===false){return(_1510)(M);}else{M.e[M.e.length-1]=new RT.Closure(_1400,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"composed");
return(_1511)(M);}};

var _2129=function(M){if(--M.cbt<0){throw _2129;}
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][26]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2133,M.p));
return((M.p).label)(M);};

var _2078=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2079)(M);};

var _2080=function(M){
M.v=false;
return(_2081)(M);};

var _2075=function(M){
if(M.v===false){return(_2072)(M);}else{M.v=RT.VOID;
return(_2073)(M);}};

var _2063=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][9];
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2058=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1449)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1450)(M);}};

var _2036=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1446,3,[],"rloop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return(_1446)(M);};

var _2024=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][0];
M.e[M.e.length-1]=RT.makeSymbol("remove");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2019=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1441)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1442)(M);}};

var _2000=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][45];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1730=function(M){
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_1781)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1720=function(M){
M.e.length+=8;
M.e[M.e.length-8]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9][1];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]=M.e[M.e.length-14];
M.v=M.e[M.e.length-15];
M.p=M.e[M.e.length-8];
M.e[M.e.length-8]=M.v;
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1723,M.p));
return((M.p).label)(M);};

var _2224=function(M){
M.e.length+=4;
M.e[M.e.length-1]=RT.makeSymbol("compose");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.p=M.e[M.e.length-5][1];
M.a=4;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1698=function(M){
M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1690=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1695,M.p));
return((M.p).label)(M);};

var _1684=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7]);
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1687,M.p));
return((M.p).label)(M);};

var _1624=function(M){
M.e.length+=2;
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-7][44];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-6][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_1628)(M);}else{M.e[M.e.length-2]=new RT.Closure(_1419,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:387:34");
return(_1623)(M);}};

var _1648=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1626=function(M){
M.e[M.e.length-2]=new RT.Closure(_1418,(RT.makeArityAtLeast(0)),[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:385:34");
return(_1623)(M);};

var _1600=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1412)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1414)(M);}};

var _2174=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("filter");
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2175)(M);};

var _2172=function(M){
M.v=false;
return(_2173)(M);};

var _1592=function(M){
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_1412,1,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_1413,2,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_1414,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:333:18");
M.e[M.e.length-4]=new RT.Closure(_1411,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=3;
return(_1593)(M);};

var _2300=function(M){if(--M.cbt<0){throw _2300;}
M.c.push(new RT.PromptFrame(_2302,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1455,2,[M.e[M.e.length-1]],"bad-list");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1567=function(M){
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][62];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_1406,2,[],"pipeline1");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.c.push(new RT.CallFrame(_1577,M.p));
return(_1406)(M);};

var _2286=function(M){if(--M.cbt<0){throw _2286;}
M.c.push(new RT.PromptFrame(_2288,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1444,2,[M.e[M.e.length-1]],"remv");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2130=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.length+=2;
M.e[M.e.length-1]="given procedure does not accept ~a arguments: ";
M.e.length+=1;
M.e.push(M.e[M.e.length-8][26]);
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2135,M.p));
return((M.p).label)(M);};

var _2123=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][14];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2114=function(M){
M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){return(_2117)(M);}else{M.v=RT.VOID;
return(_2118)(M);}};

var _2107=function(M){
M.e.length+=2;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2110,M.p));
return((M.p).label)(M);};

var _2098=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2099)(M);};

var _2092=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("assoc");
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2093)(M);};

var _2095=function(M){
if(M.v===false){return(_2092)(M);}else{M.v=RT.VOID;
return(_2093)(M);}};

var _1458=function(M){if(--M.cbt<0){throw _1458;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2081=function(M){
if(M.v===false){return(_2078)(M);}else{M.v=RT.VOID;
return(_2079)(M);}};

var _2073=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][45];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2074=function(M){
M.v=false;
return(_2075)(M);};

var _2062=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("remove*");
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2063)(M);};

var _2064=function(M){
M.v=false;
return(_2065)(M);};

var _2046=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2053,M.p));
return((M.p).label)(M);};

var _2035=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2036)(M);};

var _1813=function(M){if(--M.cbt<0){throw _1813;}
if(M.v===false){return(_1808)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2023=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("remove");
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2024)(M);};

var _2013=function(M){
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1439,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2018,M.p));
return((M.p).label)(M);};

var _1998=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][14];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1987=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("findf");
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][14];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1957=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1962,M.p));
return((M.p).label)(M);};

var _1950=function(M){
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_1975)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1932=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][16];
M.e[M.e.length-1]=RT.makeSymbol("assv");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1908=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1913,M.p));
return((M.p).label)(M);};

var _1894=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1899,M.p));
return((M.p).label)(M);};

var _1859=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1864,M.p));
return((M.p).label)(M);};

var _1808=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-5][23]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1815,M.p));
return((M.p).label)(M);};

var _1801=function(M){
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_1828)(M);}else{M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1792=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1799,M.p));
return((M.p).label)(M);};

var _1781=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][16];
M.e[M.e.length-1]=RT.makeSymbol("assf");
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1737=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=1;
M.e.push(M.e[M.e.length-3][23]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1745,M.p));
return((M.p).label)(M);};

var _1725=function(M){
M.e.length+=7;
M.e[M.e.length-7]=M.e[M.e.length-8][52];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-14],0,"cdr")).rest;
M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-15],0,"add1"));
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(7+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1718=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_1720)(M);}else{M.v=RT.VOID;
return(_1721)(M);}};

var _2227=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2228)(M);}else{M.v=RT.VOID;
return(_2229)(M);}};

var _2222=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_1484)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_1487)(M);}};

var _2215=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][62];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2208=function(M){
M.e.length+=4;
M.e[M.e.length-1]=RT.makeSymbol("compose1");
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.p=M.e[M.e.length-5][1];
M.a=4;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2206=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_1479)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_1482)(M);}};

var _1657=function(M){
M.e[M.e.length-2]=new RT.Closure(_1423,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:372:28");
return(_1656)(M);};

var _1641=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2190=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-3][38];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=0;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1628=function(M){
M.e[M.e.length-2]=new RT.Closure(_1420,(RT.makeArityAtLeast(0)),[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:388:34");
return(_1623)(M);};

var _1599=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1600)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1413)(M);}};

var _2171=function(M){
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2174)(M);}else{M.v=RT.VOID;
return(_2175)(M);}};

var _2327=function(M){if(--M.cbt<0){throw _2327;}
M.c.push(new RT.PromptFrame(_2329,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1477,2,[M.e[M.e.length-1]],"build-list");
M.e[M.e.length-1][40]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2160=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_1472,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2163,M.p));
return((M.p).label)(M);};

var _2304=function(M){if(--M.cbt<0){throw _2304;}
M.c.push(new RT.PromptFrame(_2306,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1457,2,[M.e[M.e.length-2]],"assq");
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1458,2,[M.e[M.e.length-3]],"assv");
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=new RT.Closure(_1460,2,[M.e[M.e.length-6]],"...private/list.rkt:186:13");
M.e[M.e.length-2]=new RT.Closure(_1461,3,[M.e[M.e.length-6]],"...private/list.rkt:187:13");
M.e[M.e.length-3]=new RT.Closure(_1459,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"assoc");
M.e.length-=2;
M.e.length+=1;
M.e[M.e.length-1]=new RT.Closure(_1462,2,[M.e[M.e.length-5]],"assf");
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2312,M.p));
return((M.p).label)(M);};

var _1570=function(M){
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-7][63];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"car")).first;
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"cdr")).rest;
M.e[M.e.length-5]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-12],0,"add1"));
M.v=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-13]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2284=function(M){if(--M.cbt<0){throw _2284;}
M.c.push(new RT.PromptFrame(_2286,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1443,2,[M.e[M.e.length-1]],"remq");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2280=function(M){if(--M.cbt<0){throw _2280;}
M.c.push(new RT.PromptFrame(_2282,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1438,4,[M.e[M.e.length-1]],"do-remove");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2118=function(M){
M.v=(M.e[M.e.length-6]===RT.NULL);
if(M.v===false){return(_2121)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][5];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2123)(M);}else{M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2264=function(M){if(--M.cbt<0){throw _2264;}
M.c.push(new RT.PromptFrame(_2266,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1430,7,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2256=function(M){if(--M.cbt<0){throw _2256;}
M.c.push(new RT.PromptFrame(_2258,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_1426,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2101=function(M){
if(M.v===false){return(_2098)(M);}else{M.v=RT.VOID;
return(_2099)(M);}};

var _2100=function(M){
M.v=false;
return(_2101)(M);};

var _2094=function(M){
M.v=false;
return(_2095)(M);};

var _1457=function(M){if(--M.cbt<0){throw _1457;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][47];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1488=function(M){
M.c.push(new RT.PromptFrame(_1490,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/list.rkt"]=new RT.ModuleRecord("list",_2235);
return(_2234)(M);};

var _2072=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("memf");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2073)(M);};

var _2003=function(M){if(--M.cbt<0){throw _2003;}
if(M.v===false){return(_2000)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2065=function(M){
if(M.v===false){return(_2062)(M);}else{M.v=RT.VOID;
return(_2063)(M);}};

var _2050=function(M){
M.e.length+=5;
M.e[M.e.length-5]=new RT.Closure(_1447,5,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2034=function(M){
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2035)(M);}else{M.v=RT.VOID;
return(_2036)(M);}};

var _1811=function(M){if(--M.cbt<0){throw _1811;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1813,M.p));
return((M.p).label)(M);};

var _2026=function(M){
if(M.v===false){return(_2023)(M);}else{M.v=RT.VOID;
return(_2024)(M);}};


_1494.mvr=_1493;
_1535.mvr=_1536;
_1545.mvr=_1546;
_1552.mvr=_1553;
_1559.mvr=_1560;
_1566.mvr=_1565;
_1572.mvr=_1571;
_1643.mvr=_1644;
_1650.mvr=_1651;
_1668.mvr=_1669;
_1723.mvr=_1722;
_2116.mvr=_2115;
_2120.mvr=_2119;
_2129.mvr=_2128;
_2139.mvr=_2138;
_2150.mvr=_2149;
_2156.mvr=_2155;
_2167.mvr=_2166;
_2238.mvr=_2237;
_2240.mvr=_2239;
_2242.mvr=_2241;
_2244.mvr=_2243;
_2246.mvr=_2245;
_2248.mvr=_2247;
_2250.mvr=_2249;
_2252.mvr=_2251;
_2254.mvr=_2253;
_2256.mvr=_2255;
_2258.mvr=_2257;
_2260.mvr=_2259;
_2262.mvr=_2261;
_2264.mvr=_2263;
_2266.mvr=_2265;
_2268.mvr=_2267;
_2270.mvr=_2269;
_2272.mvr=_2271;
_2274.mvr=_2273;
_2276.mvr=_2275;
_2278.mvr=_2277;
_2280.mvr=_2279;
_2282.mvr=_2281;
_2284.mvr=_2283;
_2286.mvr=_2285;
_2288.mvr=_2287;
_2290.mvr=_2289;
_2292.mvr=_2291;
_2294.mvr=_2293;
_2296.mvr=_2295;
_2298.mvr=_2297;
_2300.mvr=_2299;
_2302.mvr=_2301;
_2304.mvr=_2303;
_2312.mvr=_2311;
_2306.mvr=_2305;
_2315.mvr=_2314;
_2317.mvr=_2316;
_2319.mvr=_2318;
_2321.mvr=_2320;
_2323.mvr=_2322;
_2325.mvr=_2324;
_2327.mvr=_2326;
_2329.mvr=_2328;
_2335.mvr=_2334;
_2331.mvr=_2330;
_1490.mvr=_1489;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2337, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/list.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/list.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/lang/unsafe/ops.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/lang/unsafe/ops.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/lang/unsafe/ops.rkt"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){
EXPORTS['unsafe-car'] =
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-car',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].first;
        });


EXPORTS['unsafe-cdr'] = 
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-cdr',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].rest;
        });
})(M, exports);
             modrec.namespace["unsafe-car1.1"] = exports["unsafe-car"];
modrec.namespace["unsafe-cdr2.3"] = exports["unsafe-cdr"];

             modrec.privateExports = exports;
             return M.c.pop().label(M);
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/hash.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2386=function(M){if(--M.cbt<0){throw _2386;}
M.e.length-=(M.a-1);
return(_2387)(M);};

var _2385=function(M){if(--M.cbt<0){throw _2385;}
M.c.push(new RT.PromptFrame(_2387,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2343,2,[M.e[M.e.length-1]],"hash-for-each");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2357=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("hash-map");
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2358)(M);};

var _2384=function(M){if(--M.cbt<0){throw _2384;}
M.e.length-=(M.a-1);
return(_2385)(M);};

var _2383=function(M){if(--M.cbt<0){throw _2383;}
M.c.push(new RT.PromptFrame(_2385,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2341,2,[M.e[M.e.length-1]],"hash-map");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2358=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2342,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.p=M.e[M.e.length-5][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return(_2342)(M);};

var _2355=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("hash-map");
M.e[M.e.length-2]="hash";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2356)(M);};

var _2382=function(M){if(--M.cbt<0){throw _2382;}
M.e.length-=(M.a-1);
return(_2383)(M);};

var _2376=function(M){
M.v=false;
return(_2377)(M);};

var _2356=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][2];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2359)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2360)(M);}};

var _2387=function(M){if(--M.cbt<0){throw _2387;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/hash.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2377=function(M){
if(M.v===false){return(_2374)(M);}else{M.v=RT.VOID;
return(_2375)(M);}};

var _2372=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("hash-for-each");
M.e[M.e.length-2]="hash";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2373)(M);};

var _2344=function(M){
M.c.push(new RT.PromptFrame(_2346,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/hash.rkt"]=new RT.ModuleRecord("hash",_2381);
return(_2380)(M);};

var _2374=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("hash-for-each");
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2375)(M);};

var _2373=function(M){
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][2];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2376)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_2377)(M);}};

var _2380=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2375=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.p=M.e[M.e.length-5][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2364=function(M){
M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["hash-ref"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2367,M.p));
return((M.p).label)(M);};

var _2347=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["hash-ref"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2350,M.p));
return((M.p).label)(M);};

var _2388=function(M){
return(_2344)(M);};

var _2371=function(M){if(--M.cbt<0){throw _2371;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2352=function(M){if(--M.cbt<0){throw _2352;}
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2381=function(M){
M.modules["whalesong/lang/private/hash.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["hash-map"]||M.primitives["hash-map"],M.primitives["raise-type-error"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["hash-keys"],M.params.currentNamespace["hash-for-each"]||M.primitives["hash-for-each"],M.primitives["void"],false]);M.e[M.e.length-1].names=["hash-map","raise-type-error","procedure?","procedure-arity-includes?","hash-keys","hash-for-each","void",false];
M.modules["whalesong/lang/private/hash.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2383,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2340,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2369=function(M){if(--M.cbt<0){throw _2369;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2342,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2371,M.p));
return((M.p).label)(M);};


var _2342=function(M){if(--M.cbt<0){throw _2342;}
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2364)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2367=function(M){if(--M.cbt<0){throw _2367;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2369,M.p));
return((M.p).label)(M);};


var _2340=function(M){if(--M.cbt<0){throw _2340;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2347)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2341=function(M){if(--M.cbt<0){throw _2341;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.primitives["hash?"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2355)(M);}else{M.v=RT.VOID;
return(_2356)(M);}};


var _2343=function(M){if(--M.cbt<0){throw _2343;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.primitives["hash?"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2372)(M);}else{M.v=RT.VOID;
return(_2373)(M);}};

var _2346=function(M){if(--M.cbt<0){throw _2346;}
};

var _2351=function(M){if(--M.cbt<0){throw _2351;}
M.e.length-=(M.a-1);
return(_2352)(M);};


var _2359=function(M){
M.v=false;
return(_2360)(M);};

var _2350=function(M){if(--M.cbt<0){throw _2350;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2352,M.p));
return((M.p).label)(M);};

var _2345=function(M){if(--M.cbt<0){throw _2345;}
M.e.length-=M.a;
return(_2346)(M);};

var _2360=function(M){
if(M.v===false){return(_2357)(M);}else{M.v=RT.VOID;
return(_2358)(M);}};

_2352.mvr=_2351;
_2383.mvr=_2382;
_2385.mvr=_2384;
_2387.mvr=_2386;
_2346.mvr=_2345;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2388, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/hash.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/hash.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/map.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _2404=function(M){if(--M.cbt<0){throw _2404;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2536)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2538)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2540)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2542)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2545,M.p));
return((M.p).label)(M);}}}}};

var _2511=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][9];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2402=function(M){if(--M.cbt<0){throw _2402;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2513)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2515)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_2514)(M);}}};

var _2492=function(M){
M.v=false;
return(_2491)(M);};

var _2494=function(M){
M.v=false;
return(_2491)(M);};

var _2480=function(M){
M.v=false;
return(_2481)(M);};

var _2395=function(M){if(--M.cbt<0){throw _2395;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_2467)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2452=function(M){
M.v=false;
return(_2451)(M);};

var _2454=function(M){
M.v=false;
return(_2451)(M);};

var _2433=function(M){
M.v=false;
return(_2434)(M);};

var _2391=function(M){if(--M.cbt<0){throw _2391;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2428)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2392)(M);}};

var _2641=function(M){if(--M.cbt<0){throw _2641;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/map.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2637=function(M){if(--M.cbt<0){throw _2637;}
M.c.push(new RT.PromptFrame(_2639,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_2402,2,[M.e[M.e.length-4]],".../private/map.rkt:66:11");
M.e[M.e.length-2]=new RT.Closure(_2404,3,[M.e[M.e.length-4]],".../private/map.rkt:77:11");
M.e[M.e.length-3]=new RT.Closure(_2406,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:91:11");
M.v=new RT.Closure(_2401,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"andmap");
M.e.length-=3;
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2620=function(M){if(--M.cbt<0){throw _2620;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2622)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2588=function(M){if(--M.cbt<0){throw _2588;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2590)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2531=function(M){if(--M.cbt<0){throw _2531;}
if(M.v===false){return(_2528)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2403,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2447=function(M){if(--M.cbt<0){throw _2447;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2640=function(M){if(--M.cbt<0){throw _2640;}
M.e.length-=(M.a-1);
return(_2641)(M);};

var _2636=function(M){if(--M.cbt<0){throw _2636;}
M.e.length-=(M.a-1);
return(_2637)(M);};

var _2630=function(M){if(--M.cbt<0){throw _2630;}
M.e.length-=(M.a-1);
return(_2631)(M);};




var _2574=function(M){
M.v=false;
return(_2573)(M);};

var _2407=function(M){if(--M.cbt<0){throw _2407;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2567)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2408)(M);}};

var _2548=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2405,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_2405)(M);};



var _2514=function(M){
if(M.v===false){return(_2511)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2517)(M);}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2401=function(M){if(--M.cbt<0){throw _2401;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2508)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2402)(M);}};


var _2482=function(M){
M.v=false;
return(_2481)(M);};




var _2442=function(M){
M.e.length+=2;
M.e.push(M.e[M.e.length-3]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2445,M.p));
return((M.p).label)(M);};

var _2429=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2392)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2396)(M);}};

var _2389=function(M){if(--M.cbt<0){throw _2389;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2416)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2412=function(M){if(--M.cbt<0){throw _2412;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][11];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2411=function(M){if(--M.cbt<0){throw _2411;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_2615)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2596=function(M){
M.v=false;
return(_2597)(M);};

var _2410=function(M){if(--M.cbt<0){throw _2410;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2596)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2598)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2600)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2602)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2605,M.p));
return((M.p).label)(M);}}}}};

var _2409=function(M){if(--M.cbt<0){throw _2409;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_2583)(M);}else{M.e.push(M.e[M.e.length-1]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2572=function(M){
M.v=false;
return(_2573)(M);};

var _2408=function(M){if(--M.cbt<0){throw _2408;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2572)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2574)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_2573)(M);}}};

var _2405=function(M){if(--M.cbt<0){throw _2405;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_2555)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2534=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][9];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2540=function(M){
M.v=false;
return(_2537)(M);};

var _2403=function(M){if(--M.cbt<0){throw _2403;}
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_2524)(M);}else{M.e.push(M.e[M.e.length-1]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2513=function(M){
M.v=false;
return(_2514)(M);};

var _2400=function(M){if(--M.cbt<0){throw _2400;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][7];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2490=function(M){
M.v=false;
return(_2491)(M);};

var _2399=function(M){if(--M.cbt<0){throw _2399;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2490)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2492)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2494)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2496)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2499,M.p));
return((M.p).label)(M);}}}}};

var _2398=function(M){if(--M.cbt<0){throw _2398;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2480)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2482)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_2481)(M);}}};

var _2396=function(M){if(--M.cbt<0){throw _2396;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2450=function(M){
M.v=false;
return(_2451)(M);};

var _2394=function(M){if(--M.cbt<0){throw _2394;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2450)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2452)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2454)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2456)(M);}else{M.e.length+=2;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2459,M.p));
return((M.p).label)(M);}}}}};

var _2393=function(M){if(--M.cbt<0){throw _2393;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_2442)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2392=function(M){if(--M.cbt<0){throw _2392;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][1];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2433)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_2435)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_2434)(M);}}};

var _2390=function(M){if(--M.cbt<0){throw _2390;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2422)(M);}else{M.p=M.e[M.e.length-1][6];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2631=function(M){if(--M.cbt<0){throw _2631;}
M.c.push(new RT.PromptFrame(_2633,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2390,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2415=function(M){if(--M.cbt<0){throw _2415;}
};

var _2545=function(M){if(--M.cbt<0){throw _2545;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2547,M.p));
return((M.p).label)(M);};

var _2499=function(M){if(--M.cbt<0){throw _2499;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2501,M.p));
return((M.p).label)(M);};

var _2470=function(M){if(--M.cbt<0){throw _2470;}
M.e[M.e.length-1]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2395,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2472,M.p));
return((M.p).label)(M);};

var _2445=function(M){if(--M.cbt<0){throw _2445;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2393,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2447,M.p));
return((M.p).label)(M);};

var _2632=function(M){if(--M.cbt<0){throw _2632;}
M.e.length-=(M.a-1);
return(_2633)(M);};

var _2628=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2608=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2411,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_2411)(M);};

var _2590=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2409,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2568=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2408)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2412)(M);}};

var _2542=function(M){
M.v=false;
return(_2537)(M);};

var _2509=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2402)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2406)(M);}};

var _2508=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2509)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2404)(M);}};

var _2478=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][7];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2476=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2398)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2400)(M);}};


var _2456=function(M){
M.v=false;
return(_2451)(M);};

var _2435=function(M){
M.v=false;
return(_2434)(M);};

var _2416=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2419,M.p));
return((M.p).label)(M);};

var _2642=function(M){
return(_2413)(M);};

var _2633=function(M){if(--M.cbt<0){throw _2633;}
M.c.push(new RT.PromptFrame(_2635,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_2392,2,[M.e[M.e.length-4]],".../private/map.rkt:12:11");
M.e[M.e.length-2]=new RT.Closure(_2394,3,[M.e[M.e.length-4]],".../private/map.rkt:21:11");
M.e[M.e.length-3]=new RT.Closure(_2396,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:33:11");
M.v=new RT.Closure(_2391,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"map");
M.e.length-=3;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2605=function(M){if(--M.cbt<0){throw _2605;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2607,M.p));
return((M.p).label)(M);};

var _2562=function(M){if(--M.cbt<0){throw _2562;}
if(M.v===false){return(_2559)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2405,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2501=function(M){if(--M.cbt<0){throw _2501;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_2491)(M);};

var _2459=function(M){if(--M.cbt<0){throw _2459;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2461,M.p));
return((M.p).label)(M);};

var _2419=function(M){if(--M.cbt<0){throw _2419;}
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][13];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2638=function(M){if(--M.cbt<0){throw _2638;}
M.e.length-=(M.a-1);
return(_2639)(M);};

var _2414=function(M){if(--M.cbt<0){throw _2414;}
M.e.length-=M.a;
return(_2415)(M);};

var _2622=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2411,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2597=function(M){
if(M.v===false){return(_2594)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2608)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2583=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2588,M.p));
return((M.p).label)(M);};

var _2576=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2409,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_2409)(M);};

var _2567=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2568)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2410)(M);}};

var _2555=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2562,M.p));
return((M.p).label)(M);};


var _2528=function(M){
M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2517=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2403,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_2403)(M);};

var _2488=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2496=function(M){
M.v=false;
return(_2491)(M);};

var _2475=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2476)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2399)(M);}};

var _2467=function(M){
M.e.length+=2;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2470,M.p));
return((M.p).label)(M);};

var _2448=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2431=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2428=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2429)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2394)(M);}};

var _2422=function(M){
M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2425,M.p));
return((M.p).label)(M);};

var _2639=function(M){if(--M.cbt<0){throw _2639;}
M.c.push(new RT.PromptFrame(_2641,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_2408,2,[M.e[M.e.length-4]],".../private/map.rkt:97:11");
M.e[M.e.length-2]=new RT.Closure(_2410,3,[M.e[M.e.length-4]],".../private/map.rkt:108:11");
M.e[M.e.length-3]=new RT.Closure(_2412,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:122:11");
M.v=new RT.Closure(_2407,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"ormap");
M.e.length-=3;
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2635=function(M){if(--M.cbt<0){throw _2635;}
M.c.push(new RT.PromptFrame(_2637,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_2398,2,[M.e[M.e.length-4]],".../private/map.rkt:39:11");
M.e[M.e.length-2]=new RT.Closure(_2399,3,[M.e[M.e.length-4]],".../private/map.rkt:48:11");
M.e[M.e.length-3]=new RT.Closure(_2400,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:60:11");
M.v=new RT.Closure(_2397,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"for-each");
M.e.length-=3;
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2607=function(M){if(--M.cbt<0){throw _2607;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_2597)(M);};

var _2547=function(M){if(--M.cbt<0){throw _2547;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_2537)(M);};

var _2472=function(M){if(--M.cbt<0){throw _2472;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2461=function(M){if(--M.cbt<0){throw _2461;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
return(_2451)(M);};

var _2425=function(M){if(--M.cbt<0){throw _2425;}
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2634=function(M){if(--M.cbt<0){throw _2634;}
M.e.length-=(M.a-1);
return(_2635)(M);};

var _2629=function(M){
M.modules["whalesong/lang/private/map.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["map2"]||M.primitives["map2"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["map"],M.primitives["length"],M.params.currentNamespace["for-each2"]||M.primitives["for-each2"],M.primitives["void"],M.primitives["for-each"],M.params.currentNamespace["andmap2"]||M.primitives["andmap2"],M.primitives["andmap"],M.params.currentNamespace["ormap2"]||M.primitives["ormap2"],M.primitives["ormap"],false,false]);M.e[M.e.length-1].names=["map2","procedure?","procedure-arity-includes?","map","length","for-each2","void","for-each","andmap2","andmap","ormap2","ormap",false,false];
M.modules["whalesong/lang/private/map.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_2631,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2389,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2615=function(M){
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"car")).first;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2620,M.p));
return((M.p).label)(M);};


var _2602=function(M){
M.v=false;
return(_2597)(M);};

var _2573=function(M){
if(M.v===false){return(_2570)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2576)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2559=function(M){
M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2537=function(M){
if(M.v===false){return(_2534)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2548)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2524=function(M){
M.e.push(M.e[M.e.length-1]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2531,M.p));
return((M.p).label)(M);};

var _2515=function(M){
M.v=false;
return(_2514)(M);};

var _2491=function(M){
if(M.v===false){return(_2488)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][13];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _2481=function(M){
if(M.v===false){return(_2478)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2397=function(M){if(--M.cbt<0){throw _2397;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2475)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2398)(M);}};

var _2451=function(M){
if(M.v===false){return(_2448)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2395,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_2395)(M);}};


var _2434=function(M){
if(M.v===false){return(_2431)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2393,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_2393)(M);}};

var _2424=function(M){if(--M.cbt<0){throw _2424;}
M.e.length-=(M.a-1);
return(_2425)(M);};

var _2418=function(M){if(--M.cbt<0){throw _2418;}
M.e.length-=(M.a-1);
return(_2419)(M);};

var _2413=function(M){
M.c.push(new RT.PromptFrame(_2415,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/map.rkt"]=new RT.ModuleRecord("map",_2629);
return(_2628)(M);};

var _2594=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][11];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2598=function(M){
M.v=false;
return(_2597)(M);};

var _2600=function(M){
M.v=false;
return(_2597)(M);};

var _2570=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][11];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2406=function(M){if(--M.cbt<0){throw _2406;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][9];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2536=function(M){
M.v=false;
return(_2537)(M);};

var _2538=function(M){
M.v=false;
return(_2537)(M);};

_2419.mvr=_2418;
_2425.mvr=_2424;
_2631.mvr=_2630;
_2633.mvr=_2632;
_2635.mvr=_2634;
_2637.mvr=_2636;
_2639.mvr=_2638;
_2641.mvr=_2640;
_2415.mvr=_2414;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_2642, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/map.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/map.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/list.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3037=function(M){
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][65];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3040,M.p));
return((M.p).label)(M);};

var _3253=function(M){if(--M.cbt<0){throw _3253;}
M.c.push(new RT.PromptFrame(_3255,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2679,2,[M.e[M.e.length-1]],"make-list");
M.e[M.e.length-1][18]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3043=function(M){
M.v=false;
return(_3044)(M);};

var _3035=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_3037)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2650=function(M){if(--M.cbt<0){throw _2650;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-5]);
M.p=M.e[M.e.length-2][20];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2795)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-8]);
M.p=M.e[M.e.length-4][26];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3263=function(M){if(--M.cbt<0){throw _3263;}
M.c.push(new RT.PromptFrame(_3265,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2684,2,[M.e[M.e.length-1]],"drop");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2647=function(M){if(--M.cbt<0){throw _2647;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2768)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2997=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][64];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][21];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2999,M.p));
return((M.p).label)(M);};

var _3229=function(M){if(--M.cbt<0){throw _3229;}
M.c.push(new RT.PromptFrame(_3231,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2666,1,[M.e[M.e.length-1]],"fifth");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3213=function(M){if(--M.cbt<0){throw _3213;}
M.c.push(new RT.PromptFrame(_3215,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2658,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2960=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][22];
M.e[M.e.length-1]=RT.makeSymbol("drop");
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3199=function(M){if(--M.cbt<0){throw _3199;}
M.c.push(new RT.PromptFrame(_3201,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2651,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][62]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2948=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][62];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2946=function(M){
M.p=M.e[M.e.length-7][3];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][23];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2936=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][61];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=RT.NULL;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2935=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("make-list");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2936)(M);};

var _2916=function(M){
M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2887=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2871=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("first");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2861=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2837=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2813=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][61];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"sub1"), 1);
M.v=RT.makePair(M.e[M.e.length-5],M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2807=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][22];
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2785=function(M){
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2788,M.p));
return((M.p).label)(M);};

var _3278=function(M){if(--M.cbt<0){throw _3278;}
M.e.length-=(M.a-1);
return(_3279)(M);};

var _3272=function(M){if(--M.cbt<0){throw _3272;}
M.e.length-=(M.a-1);
return(_3273)(M);};

var _3262=function(M){if(--M.cbt<0){throw _3262;}
M.e.length-=(M.a-1);
return(_3263)(M);};

var _2737=function(M){
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2734=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][69];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2739,M.p));
return((M.p).label)(M);};

var _2719=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2722,M.p));
return((M.p).label)(M);};

var _3042=function(M){
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_3051)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][40];
M.e[M.e.length-1]=M.primitives["list?"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3054,M.p));
return((M.p).label)(M);}};

var _3285=function(M){if(--M.cbt<0){throw _3285;}
M.c.push(new RT.PromptFrame(_3287,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2712,2,[M.e[M.e.length-1]],"filter-not");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3281=function(M){if(--M.cbt<0){throw _3281;}
M.c.push(new RT.PromptFrame(_3283,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2707,2,[M.e[M.e.length-1]],"partition");
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2695=function(M){if(--M.cbt<0){throw _2695;}
M.unspliceRestFromStack(1,(M.a-1));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["apply"];
M.e[M.e.length-2]=M.e[M.e.length-5][32];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3261=function(M){if(--M.cbt<0){throw _3261;}
M.c.push(new RT.PromptFrame(_3263,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2683,2,[M.e[M.e.length-1]],"split-at");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2690=function(M){if(--M.cbt<0){throw _2690;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_3007)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2691)(M);}};

var _3247=function(M){if(--M.cbt<0){throw _3247;}
M.c.push(new RT.PromptFrame(_3249,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2677,1,[],"cons?");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2996=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("split-at-right");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2997)(M);};


var _2981=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2688,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][21];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2983,M.p));
return((M.p).label)(M);};


var _3209=function(M){if(--M.cbt<0){throw _3209;}
M.c.push(new RT.PromptFrame(_3211,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2656,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3197=function(M){if(--M.cbt<0){throw _3197;}
M.c.push(new RT.PromptFrame(_3199,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2650,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3191=function(M){if(--M.cbt<0){throw _3191;}
M.c.push(new RT.PromptFrame(_3193,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2647,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][66]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2945=function(M){
M.e[M.e.length-3]=" (not a proper list)";
return(_2946)(M);};

var _2941=function(M){
M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3103=function(M){if(--M.cbt<0){throw _3103;}
M.e[M.e.length-3]=M.v;
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_3097)(M);};

var _2927=function(M){
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3067=function(M){if(--M.cbt<0){throw _3067;}
if(M.v===false){return(_3062)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2903=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2895=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2875=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("second");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2867=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2843=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2825=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][59];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2805=function(M){
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2807)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-7][62];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-11],0,"sub1"), 1);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2810,M.p));
return((M.p).label)(M);}};

var _2789=function(M){
M.v=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6]);
M.p=M.e[M.e.length-4][26];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _3270=function(M){if(--M.cbt<0){throw _3270;}
M.e.length-=(M.a-1);
return(_3271)(M);};


var _2756=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2759,M.p));
return((M.p).label)(M);};

var _2736=function(M){
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-8],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_2737)(M);};

var _3242=function(M){if(--M.cbt<0){throw _3242;}
M.e.length-=(M.a-1);
return(_3243)(M);};

var _3232=function(M){if(--M.cbt<0){throw _3232;}
M.e.length-=(M.a-1);
return(_3233)(M);};

var _3224=function(M){if(--M.cbt<0){throw _3224;}
M.e.length-=(M.a-1);
return(_3225)(M);};

var _3293=function(M){if(--M.cbt<0){throw _3293;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/list.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _2653=function(M){if(--M.cbt<0){throw _2653;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2817)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2819)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _3279=function(M){if(--M.cbt<0){throw _3279;}
M.c.push(new RT.PromptFrame(_3281,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2703,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"count");
M.e[M.e.length-1][44]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2697=function(M){if(--M.cbt<0){throw _2697;}
M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_3025)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2694=function(M){if(--M.cbt<0){throw _2694;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=5;
M.e[M.e.length-5]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6][32];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2692=function(M){if(--M.cbt<0){throw _2692;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4][32];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3245=function(M){if(--M.cbt<0){throw _3245;}
M.c.push(new RT.PromptFrame(_3247,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2676,1,[M.e[M.e.length-1]],"rest");
M.e[M.e.length-1][14]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3241=function(M){if(--M.cbt<0){throw _3241;}
M.c.push(new RT.PromptFrame(_3243,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2672,1,[M.e[M.e.length-1]],"last-pair");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2980=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("drop-right");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_2981)(M);};


var _3207=function(M){if(--M.cbt<0){throw _3207;}
M.c.push(new RT.PromptFrame(_3209,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2655,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3195=function(M){if(--M.cbt<0){throw _3195;}
M.c.push(new RT.PromptFrame(_3197,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2649,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3172=function(M){if(--M.cbt<0){throw _3172;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-1]);
M.p=M.e[M.e.length-3][49];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3174)(M);}else{M.v=RT.VOID;
return(_3175)(M);}};

var _2939=function(M){
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2941)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][21];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"sub1"), 1);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3114=function(M){if(--M.cbt<0){throw _3114;}
if(M.v===false){return(_3109)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-6][67];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.v=0;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3101=function(M){if(--M.cbt<0){throw _3101;}
return(_3099)(M);};

var _3060=function(M){if(--M.cbt<0){throw _3060;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][40];
M.v=new RT.Closure(_2701,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...14/lang/list.rkt:256:18");
M.a=1;
if(M.a===0){return(_3064)(M);}else{M.e.push(M.v);
return(_3064)(M);}};

var _2907=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3004=function(M){if(--M.cbt<0){throw _3004;}
M.e[M.e.length-3]=M.v;
return(_3000)(M);};

var _2983=function(M){if(--M.cbt<0){throw _2983;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2985)(M);}else{M.v=M.e[M.e.length-1];
return(_2984)(M);}};

var _2874=function(M){
if(M.v===false){return(_2871)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"car")).first;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2849=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2831=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2751=function(M){if(--M.cbt<0){throw _2751;}
if(M.v===false){return(_2748)(M);}else{M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-7][68];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3290=function(M){if(--M.cbt<0){throw _3290;}
M.e.length-=(M.a-1);
return(_3291)(M);};




var _3258=function(M){if(--M.cbt<0){throw _3258;}
M.e.length-=(M.a-1);
return(_3259)(M);};

var _2742=function(M){
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.e.length+=1;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-4]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2751,M.p));
return((M.p).label)(M);};

var _3240=function(M){if(--M.cbt<0){throw _3240;}
M.e.length-=(M.a-1);
return(_3241)(M);};

var _3230=function(M){if(--M.cbt<0){throw _3230;}
M.e.length-=(M.a-1);
return(_3231)(M);};

var _3222=function(M){if(--M.cbt<0){throw _3222;}
M.e.length-=(M.a-1);
return(_3223)(M);};

var _3216=function(M){if(--M.cbt<0){throw _3216;}
M.e.length-=(M.a-1);
return(_3217)(M);};

var _3033=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("add-between");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3167=function(M){
M.e.length+=5;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3168)(M);};

var _3163=function(M){
M.e.length+=5;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3164)(M);};


var _3140=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3141)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2710)(M);}};

var _3137=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][68];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.NULL;
M.v=RT.NULL;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3135=function(M){
if(M.v===false){return(_3132)(M);}else{M.v=RT.VOID;
return(_3133)(M);}};

var _3120=function(M){
M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3112=function(M){
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3114,M.p));
return((M.p).label)(M);};

var _2865=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("second");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=2;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2859=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("third");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=3;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2853=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=4;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2847=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("fifth");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=5;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2835=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("seventh");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=7;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2829=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=8;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2823=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("ninth");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=9;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3294=function(M){
return(_2716)(M);};


var _3277=function(M){if(--M.cbt<0){throw _3277;}
M.c.push(new RT.PromptFrame(_3279,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2699,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"filter-map");
M.e[M.e.length-1][36]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3275=function(M){if(--M.cbt<0){throw _3275;}
M.c.push(new RT.PromptFrame(_3277,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2698,2,[M.e[M.e.length-1]],"add-between");
M.e[M.e.length-1][34]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2693=function(M){if(--M.cbt<0){throw _2693;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5][32];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3007=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3008)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2692)(M);}};


var _3239=function(M){if(--M.cbt<0){throw _3239;}
M.c.push(new RT.PromptFrame(_3241,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2671,1,[M.e[M.e.length-1]],"tenth");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2688=function(M){if(--M.cbt<0){throw _2688;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2992)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2688,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2995,M.p));
return((M.p).label)(M);}};

var _3225=function(M){if(--M.cbt<0){throw _3225;}
M.c.push(new RT.PromptFrame(_3227,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2664,1,[M.e[M.e.length-1]],"third");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2686=function(M){if(--M.cbt<0){throw _2686;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2976)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2686,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3205=function(M){if(--M.cbt<0){throw _3205;}
M.c.push(new RT.PromptFrame(_3207,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2654,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2684=function(M){if(--M.cbt<0){throw _2684;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2955)(M);}else{M.v=RT.VOID;
return(_2956)(M);}};

var _3189=function(M){if(--M.cbt<0){throw _3189;}
M.c.push(new RT.PromptFrame(_3191,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2646,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][67]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2718=function(M){if(--M.cbt<0){throw _2718;}
};

var _3152=function(M){if(--M.cbt<0){throw _3152;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2678=function(M){if(--M.cbt<0){throw _2678;}
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3093=function(M){if(--M.cbt<0){throw _3093;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.pop();
M.p=M.e[M.e.length-3][38];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_3091)(M);};

var _3080=function(M){if(--M.cbt<0){throw _3080;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3082)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2702,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3085,M.p));
return((M.p).label)(M);}};

var _3048=function(M){if(--M.cbt<0){throw _3048;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.pop();
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_3042)(M);};

var _2999=function(M){if(--M.cbt<0){throw _2999;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3001)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_3000)(M);}};

var _2995=function(M){if(--M.cbt<0){throw _2995;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2810=function(M){if(--M.cbt<0){throw _2810;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2778=function(M){if(--M.cbt<0){throw _2778;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2780,M.p));
return((M.p).label)(M);};

var _2765=function(M){if(--M.cbt<0){throw _2765;}
if(M.v===false){return(_2760)(M);}else{M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-9],0,"add1"));
return(_2761)(M);}};

var _2729=function(M){if(--M.cbt<0){throw _2729;}
if(M.v===false){return(_2726)(M);}else{M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-14],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-14],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3288=function(M){if(--M.cbt<0){throw _3288;}
M.e.length-=(M.a-1);
return(_3289)(M);};




var _3256=function(M){if(--M.cbt<0){throw _3256;}
M.e.length-=(M.a-1);
return(_3257)(M);};

var _3250=function(M){if(--M.cbt<0){throw _3250;}
M.e.length-=(M.a-1);
return(_3251)(M);};

var _3238=function(M){if(--M.cbt<0){throw _3238;}
M.e.length-=(M.a-1);
return(_3239)(M);};


var _2709=function(M){if(--M.cbt<0){throw _2709;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][42];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3144,M.p));
return((M.p).label)(M);};

var _3214=function(M){if(--M.cbt<0){throw _3214;}
M.e.length-=(M.a-1);
return(_3215)(M);};

var _3210=function(M){if(--M.cbt<0){throw _3210;}
M.e.length-=(M.a-1);
return(_3211)(M);};

var _3204=function(M){if(--M.cbt<0){throw _3204;}
M.e.length-=(M.a-1);
return(_3205)(M);};

var _3196=function(M){if(--M.cbt<0){throw _3196;}
M.e.length-=(M.a-1);
return(_3197)(M);};

var _3182=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2715=function(M){if(--M.cbt<0){throw _2715;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.primitives[">"];
M.e[M.e.length-2]=RT.makeSymbol("argmax");
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3000=function(M){
M.e.pop();
M.v=RT.NULL;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3170=function(M){
if(M.v===false){return(_3167)(M);}else{M.v=RT.VOID;
return(_3168)(M);}};

var _3166=function(M){
if(M.v===false){return(_3163)(M);}else{M.v=RT.VOID;
return(_3164)(M);}};

var _3160=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][69];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.NULL;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3155=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("filter-not");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3156)(M);};

var _2676=function(M){if(--M.cbt<0){throw _2676;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2933)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_2934)(M);}};

var _2674=function(M){if(--M.cbt<0){throw _2674;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2922)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_2923)(M);}};

var _3136=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("partition");
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3137)(M);};

var _3134=function(M){
M.v=false;
return(_3135)(M);};

var _3124=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2706,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e.push(M.e[M.e.length-4]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3129,M.p));
return((M.p).label)(M);};

var _3109=function(M){
M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("count");
M.e[M.e.length-2]="all lists must have same size";
M.p=M.e[M.e.length-4][43];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3111=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_3112)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_3112)(M);}};

var _3096=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("count");
M.e[M.e.length-2]="proper list";
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][41];
M.e[M.e.length-1]=new RT.Closure(_2704,1,[],"...14/lang/list.rkt:279:12");
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3103,M.p));
return((M.p).label)(M);};

var _3098=function(M){
M.v=false;
return(_3099)(M);};

var _3090=function(M){
M.v=false;
return(_3091)(M);};

var _3077=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-2]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3080,M.p));
return((M.p).label)(M);};

var _2841=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=6;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3065=function(M){
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3067,M.p));
return((M.p).label)(M);};

var _3057=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2702,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return(_2702)(M);};

var _3049=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("filter-map");
M.e[M.e.length-2]="proper list";
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][41];
M.e[M.e.length-1]=new RT.Closure(_2700,1,[],"...14/lang/list.rkt:253:12");
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3056,M.p));
return((M.p).label)(M);};


var _3291=function(M){if(--M.cbt<0){throw _3291;}
M.c.push(new RT.PromptFrame(_3293,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2715,2,[M.e[M.e.length-1]],"argmax");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3273=function(M){if(--M.cbt<0){throw _3273;}
M.c.push(new RT.PromptFrame(_3275,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2696,1,[],"flatten");
M.e[M.e.length-1][33]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3010=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 5]).racketArity,M.a)){return(_2691)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 5];
return(_2695)(M);}};

var _3259=function(M){if(--M.cbt<0){throw _3259;}
M.c.push(new RT.PromptFrame(_3261,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2682,2,[M.e[M.e.length-1]],"take");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3237=function(M){if(--M.cbt<0){throw _3237;}
M.c.push(new RT.PromptFrame(_3239,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2670,1,[M.e[M.e.length-1]],"ninth");
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3235=function(M){if(--M.cbt<0){throw _3235;}
M.c.push(new RT.PromptFrame(_3237,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2669,1,[M.e[M.e.length-1]],"eighth");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3223=function(M){if(--M.cbt<0){throw _3223;}
M.c.push(new RT.PromptFrame(_3225,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2663,1,[M.e[M.e.length-1]],"second");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3219=function(M){if(--M.cbt<0){throw _3219;}
M.c.push(new RT.PromptFrame(_3221,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2661,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2685=function(M){if(--M.cbt<0){throw _2685;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2964)(M);}else{M.v=RT.VOID;
return(_2965)(M);}};

var _2956=function(M){
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][21];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2958,M.p));
return((M.p).label)(M);};

var _2683=function(M){if(--M.cbt<0){throw _2683;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2951)(M);}else{M.v=RT.VOID;
return(_2952)(M);}};

var _3187=function(M){if(--M.cbt<0){throw _3187;}
M.c.push(new RT.PromptFrame(_3189,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2645,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][68]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3144=function(M){if(--M.cbt<0){throw _3144;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2679=function(M){if(--M.cbt<0){throw _2679;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2935)(M);}else{M.v=RT.VOID;
return(_2936)(M);}};

var _3085=function(M){if(--M.cbt<0){throw _3085;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2922=function(M){
M.v=false;
return(_2923)(M);};

var _3046=function(M){if(--M.cbt<0){throw _3046;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.pop();
M.p=M.e[M.e.length-3][38];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_3044)(M);};

var _3040=function(M){if(--M.cbt<0){throw _3040;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2972=function(M){if(--M.cbt<0){throw _2972;}
return(_2968)(M);};

var _2967=function(M){if(--M.cbt<0){throw _2967;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2969)(M);}else{M.v=M.e[M.e.length-1];
return(_2968)(M);}};

var _2782=function(M){if(--M.cbt<0){throw _2782;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2771=function(M){if(--M.cbt<0){throw _2771;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2773,M.p));
return((M.p).label)(M);};

var _2722=function(M){if(--M.cbt<0){throw _2722;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-1]);
M.p=M.e[M.e.length-3][49];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2724)(M);}else{M.v=RT.VOID;
return(_2725)(M);}};

var _3286=function(M){if(--M.cbt<0){throw _3286;}
M.e.length-=(M.a-1);
return(_3287)(M);};

var _3284=function(M){if(--M.cbt<0){throw _3284;}
M.e.length-=(M.a-1);
return(_3285)(M);};

var _2768=function(M){
M.e.length+=1;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2771,M.p));
return((M.p).label)(M);};

var _3268=function(M){if(--M.cbt<0){throw _3268;}
M.e.length-=(M.a-1);
return(_3269)(M);};

var _3254=function(M){if(--M.cbt<0){throw _3254;}
M.e.length-=(M.a-1);
return(_3255)(M);};

var _3248=function(M){if(--M.cbt<0){throw _3248;}
M.e.length-=(M.a-1);
return(_3249)(M);};


var _2643=function(M){if(--M.cbt<0){throw _2643;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){return(_2719)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2707=function(M){if(--M.cbt<0){throw _2707;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][37];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3134)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][38];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_3135)(M);}};

var _2705=function(M){if(--M.cbt<0){throw _2705;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3123,M.p));
return((M.p).label)(M);};

var _3208=function(M){if(--M.cbt<0){throw _3208;}
M.e.length-=(M.a-1);
return(_3209)(M);};

var _3202=function(M){if(--M.cbt<0){throw _3202;}
M.e.length-=(M.a-1);
return(_3203)(M);};

var _3194=function(M){if(--M.cbt<0){throw _3194;}
M.e.length-=(M.a-1);
return(_3195)(M);};

var _3188=function(M){if(--M.cbt<0){throw _3188;}
M.e.length-=(M.a-1);
return(_3189)(M);};

var _3183=function(M){
M.modules["whalesong/lang/list.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["first"]||M.primitives["first"],M.primitives["raise-type-error"],M.params.currentNamespace["second"]||M.primitives["second"],M.primitives["format"],M.params.currentNamespace["third"]||M.primitives["third"],M.params.currentNamespace["fourth"]||M.primitives["fourth"],M.params.currentNamespace["fifth"]||M.primitives["fifth"],M.params.currentNamespace["sixth"]||M.primitives["sixth"],M.params.currentNamespace["seventh"]||M.primitives["seventh"],M.params.currentNamespace["eighth"]||M.primitives["eighth"],M.params.currentNamespace["ninth"]||M.primitives["ninth"],M.params.currentNamespace["tenth"]||M.primitives["tenth"],M.params.currentNamespace["last-pair"]||M.primitives["last-pair"],M.params.currentNamespace["last"]||M.primitives["last"],M.params.currentNamespace["rest"]||M.primitives["rest"],M.params.currentNamespace["cons?"]||M.primitives["cons?"],M.params.currentNamespace["empty?"]||M.primitives["empty?"],M.params.currentNamespace["empty"]||M.primitives["empty"],M.params.currentNamespace["make-list"]||M.primitives["make-list"],M.primitives["exact-nonnegative-integer?"],M.primitives["zero?"],M.params.currentNamespace["drop*"]||M.primitives["drop*"],M.params.currentNamespace["too-large"]||M.primitives["too-large"],M.primitives["raise-mismatch-error"],M.params.currentNamespace["take"]||M.primitives["take"],M.params.currentNamespace["split-at"]||M.primitives["split-at"],M.primitives["reverse"],M.params.currentNamespace["drop"]||M.primitives["drop"],M.params.currentNamespace["take-right"]||M.primitives["take-right"],M.params.currentNamespace["drop-right"]||M.primitives["drop-right"],M.params.currentNamespace["split-at-right"]||M.primitives["split-at-right"],M.params.currentNamespace["append*"]||M.primitives["append*"],M.primitives["append"],M.params.currentNamespace["flatten"]||M.primitives["flatten"],M.params.currentNamespace["add-between"]||M.primitives["add-between"],M.primitives["list*"],M.params.currentNamespace["filter-map"]||M.primitives["filter-map"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["length"],M.primitives["andmap"],M.primitives["ormap"],M.primitives["map"],M.primitives["error"],M.params.currentNamespace["count"]||M.primitives["count"],M.params.currentNamespace["partition"]||M.primitives["partition"],M.params.currentNamespace["append-map"]||M.primitives["append-map"],M.params.currentNamespace["filter-not"]||M.primitives["filter-not"],M.params.currentNamespace["mk-min"]||M.primitives["mk-min"],M.primitives["real?"],M.params.currentNamespace["argmin"]||M.primitives["argmin"],M.params.currentNamespace["argmax"]||M.primitives["argmax"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["first","raise-type-error","second","format","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","last-pair","last","rest","cons?","empty?","empty","make-list","exact-nonnegative-integer?","zero?","drop*","too-large","raise-mismatch-error","take","split-at","reverse","drop","take-right","drop-right","split-at-right","append*","append","flatten","add-between","list*","filter-map","procedure?","procedure-arity-includes?","length","andmap","ormap","map","error","count","partition","append-map","filter-not","mk-min","real?","argmin","argmax",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3185,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2643,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][70]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3175=function(M){
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-12],0,"car")).first;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-12],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3169=function(M){
M.v=false;
return(_3170)(M);};

var _3165=function(M){
M.v=false;
return(_3166)(M);};

var _3159=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("filter-not");
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3160)(M);};

var _3158=function(M){
if(M.v===false){return(_3155)(M);}else{M.v=RT.VOID;
return(_3156)(M);}};


var _2708=function(M){if(--M.cbt<0){throw _2708;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_3140)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2709)(M);}};

var _3133=function(M){
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_3136)(M);}else{M.v=RT.VOID;
return(_3137)(M);}};

var _3127=function(M){
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2667=function(M){if(--M.cbt<0){throw _2667;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2891)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=6;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2665=function(M){if(--M.cbt<0){throw _2665;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2883)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=4;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3104=function(M){
M.e.length+=3;
M.e[M.e.length-3]=new RT.Closure(_2706,3,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=0;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return(_2706)(M);};

var _3099=function(M){
if(M.v===false){return(_3096)(M);}else{M.v=RT.VOID;
return(_3097)(M);}};

var _3089=function(M){
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_3098)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][40];
M.e[M.e.length-1]=M.primitives["list?"];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3101,M.p));
return((M.p).label)(M);}};

var _3088=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("count");
M.e.length+=2;
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.length+=1;
M.e.push(M.e[M.e.length-7][39]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3095,M.p));
return((M.p).label)(M);};

var _3082=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2702,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3073=function(M){
M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3064=function(M){
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_3065)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_3065)(M);}};

var _3050=function(M){
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_3057)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][39]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3060,M.p));
return((M.p).label)(M);}};

var _3052=function(M){
if(M.v===false){return(_3049)(M);}else{M.v=RT.VOID;
return(_3050)(M);}};

var _2654=function(M){if(--M.cbt<0){throw _2654;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2823)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2825)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _3289=function(M){if(--M.cbt<0){throw _3289;}
M.c.push(new RT.PromptFrame(_3291,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2714,2,[M.e[M.e.length-1]],"argmin");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3027=function(M){
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3271=function(M){if(--M.cbt<0){throw _3271;}
M.c.push(new RT.PromptFrame(_3273,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e[M.e.length-1]=new RT.Closure(_2691,1,[M.e[M.e.length-6]],"...14/lang/list.rkt:162:15");
M.e[M.e.length-2]=new RT.Closure(_2692,2,[M.e[M.e.length-6]],"...14/lang/list.rkt:163:15");
M.e[M.e.length-3]=new RT.Closure(_2693,3,[M.e[M.e.length-6]],"...14/lang/list.rkt:164:15");
M.e[M.e.length-4]=new RT.Closure(_2694,4,[M.e[M.e.length-6]],"...14/lang/list.rkt:165:15");
M.e[M.e.length-5]=new RT.Closure(_2695,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...14/lang/list.rkt:166:15");
M.v=new RT.Closure(_2690,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))))),[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append*");
M.e.length-=5;
M.e[M.e.length-1][31]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3267=function(M){if(--M.cbt<0){throw _3267;}
M.c.push(new RT.PromptFrame(_3269,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2687,2,[M.e[M.e.length-1]],"drop-right");
M.e[M.e.length-1][29]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3257=function(M){if(--M.cbt<0){throw _3257;}
M.c.push(new RT.PromptFrame(_3259,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2681,3,[M.e[M.e.length-1]],"too-large");
M.e[M.e.length-1][22]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3251=function(M){if(--M.cbt<0){throw _3251;}
M.c.push(new RT.PromptFrame(_3253,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=RT.NULL;
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3233=function(M){if(--M.cbt<0){throw _3233;}
M.c.push(new RT.PromptFrame(_3235,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2668,1,[M.e[M.e.length-1]],"seventh");
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3221=function(M){if(--M.cbt<0){throw _3221;}
M.c.push(new RT.PromptFrame(_3223,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2662,1,[M.e[M.e.length-1]],"first");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3217=function(M){if(--M.cbt<0){throw _3217;}
M.c.push(new RT.PromptFrame(_3219,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2660,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2965=function(M){
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2686,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-6][21];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2967,M.p));
return((M.p).label)(M);};

var _3203=function(M){if(--M.cbt<0){throw _3203;}
M.c.push(new RT.PromptFrame(_3205,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2653,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2952=function(M){
M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][63];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.v=RT.NULL;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2682=function(M){if(--M.cbt<0){throw _2682;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2947)(M);}else{M.v=RT.VOID;
return(_2948)(M);}};

var _3129=function(M){if(--M.cbt<0){throw _3129;}
if(M.v===false){return(_3126)(M);}else{M.v=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"add1"));
return(_3127)(M);}};

var _3107=function(M){if(--M.cbt<0){throw _3107;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][40];
M.v=new RT.Closure(_2705,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...14/lang/list.rkt:282:18");
M.a=1;
if(M.a===0){return(_3111)(M);}else{M.e.push(M.v);
return(_3111)(M);}};

var _2933=function(M){
M.v=false;
return(_2934)(M);};

var _2920=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("last");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3056=function(M){if(--M.cbt<0){throw _3056;}
M.e[M.e.length-3]=M.v;
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_3050)(M);};

var _2891=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("sixth");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2883=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("fourth");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2788=function(M){if(--M.cbt<0){throw _2788;}
M.e[M.e.length-3]=M.v;
M.p=M.e[M.e.length-4][35];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2773=function(M){if(--M.cbt<0){throw _2773;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2775)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][66];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2778,M.p));
return((M.p).label)(M);}};

var _2759=function(M){if(--M.cbt<0){throw _2759;}
M.e[M.e.length-3]=M.v;
M.e.length+=3;
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-10],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-10][42];
M.e[M.e.length-1]=M.primitives["car"];
M.v=M.e[M.e.length-13];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2763,M.p));
return((M.p).label)(M);};



var _3282=function(M){if(--M.cbt<0){throw _3282;}
M.e.length-=(M.a-1);
return(_3283)(M);};

var _3276=function(M){if(--M.cbt<0){throw _3276;}
M.e.length-=(M.a-1);
return(_3277)(M);};

var _3266=function(M){if(--M.cbt<0){throw _3266;}
M.e.length-=(M.a-1);
return(_3267)(M);};


var _3246=function(M){if(--M.cbt<0){throw _3246;}
M.e.length-=(M.a-1);
return(_3247)(M);};

var _2725=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2729,M.p));
return((M.p).label)(M);};

var _3236=function(M){if(--M.cbt<0){throw _3236;}
M.e.length-=(M.a-1);
return(_3237)(M);};

var _3228=function(M){if(--M.cbt<0){throw _3228;}
M.e.length-=(M.a-1);
return(_3229)(M);};

var _3220=function(M){if(--M.cbt<0){throw _3220;}
M.e.length-=(M.a-1);
return(_3221)(M);};

var _3206=function(M){if(--M.cbt<0){throw _3206;}
M.e.length-=(M.a-1);
return(_3207)(M);};

var _3200=function(M){if(--M.cbt<0){throw _3200;}
M.e.length-=(M.a-1);
return(_3201)(M);};

var _3192=function(M){if(--M.cbt<0){throw _3192;}
M.e.length-=(M.a-1);
return(_3193)(M);};

var _3186=function(M){if(--M.cbt<0){throw _3186;}
M.e.length-=(M.a-1);
return(_3187)(M);};

var _2714=function(M){if(--M.cbt<0){throw _2714;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.primitives["<"];
M.e[M.e.length-2]=RT.makeSymbol("argmin");
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3174=function(M){
M.e.length+=5;
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.p=M.e[M.e.length-7][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3175)(M);};

var _2984=function(M){
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_2688)(M);};

var _2968=function(M){
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return(_2686)(M);};

var _3156=function(M){
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_3159)(M);}else{M.v=RT.VOID;
return(_3160)(M);}};

var _3157=function(M){
M.v=false;
return(_3158)(M);};

var _2711=function(M){if(--M.cbt<0){throw _2711;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7][42];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3152,M.p));
return((M.p).label)(M);};

var _2710=function(M){if(--M.cbt<0){throw _2710;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][42];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3148,M.p));
return((M.p).label)(M);};

var _3132=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("partition");
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3133)(M);};

var _3126=function(M){
M.v=M.e[M.e.length-6];
return(_3127)(M);};



var _2664=function(M){if(--M.cbt<0){throw _2664;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2879)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=3;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3097=function(M){
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_3104)(M);}else{M.e.length+=1;
M.e.push(M.e[M.e.length-2][39]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3107,M.p));
return((M.p).label)(M);}};


var _3091=function(M){
if(M.v===false){return(_3088)(M);}else{M.v=RT.VOID;
return(_3089)(M);}};



var _3062=function(M){
M.e.length+=2;
M.e[M.e.length-1]=RT.makeSymbol("filter-map");
M.e[M.e.length-2]="all lists must have same size";
M.p=M.e[M.e.length-4][43];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3051=function(M){
M.v=false;
return(_3052)(M);};

var _3041=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("filter-map");
M.e.length+=2;
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.length+=1;
M.e.push(M.e[M.e.length-7][39]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3048,M.p));
return((M.p).label)(M);};

var _3287=function(M){if(--M.cbt<0){throw _3287;}
M.c.push(new RT.PromptFrame(_3289,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2713,4,[M.e[M.e.length-1]],"mk-min");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3283=function(M){if(--M.cbt<0){throw _3283;}
M.c.push(new RT.PromptFrame(_3285,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=3;
M.e[M.e.length-1]=new RT.Closure(_2709,2,[M.e[M.e.length-4]],"...14/lang/list.rkt:318:15");
M.e[M.e.length-2]=new RT.Closure(_2710,3,[M.e[M.e.length-4]],"...14/lang/list.rkt:319:15");
M.e[M.e.length-3]=new RT.Closure(_2711,(RT.makeArityAtLeast(2)),[M.e[M.e.length-4]],"...14/lang/list.rkt:320:15");
M.v=new RT.Closure(_2708,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(2)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append-map");
M.e.length-=3;
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3269=function(M){if(--M.cbt<0){throw _3269;}
M.c.push(new RT.PromptFrame(_3271,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2689,2,[M.e[M.e.length-1]],"split-at-right");
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3265=function(M){if(--M.cbt<0){throw _3265;}
M.c.push(new RT.PromptFrame(_3267,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2685,2,[M.e[M.e.length-1]],"take-right");
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3255=function(M){if(--M.cbt<0){throw _3255;}
M.c.push(new RT.PromptFrame(_3257,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2680,2,[M.e[M.e.length-1]],"drop*");
M.e[M.e.length-1][21]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3249=function(M){if(--M.cbt<0){throw _3249;}
M.c.push(new RT.PromptFrame(_3251,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2678,1,[],"empty?");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3243=function(M){if(--M.cbt<0){throw _3243;}
M.c.push(new RT.PromptFrame(_3245,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2674,1,[M.e[M.e.length-1]],"last");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3231=function(M){if(--M.cbt<0){throw _3231;}
M.c.push(new RT.PromptFrame(_3233,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2667,1,[M.e[M.e.length-1]],"sixth");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3227=function(M){if(--M.cbt<0){throw _3227;}
M.c.push(new RT.PromptFrame(_3229,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2665,1,[M.e[M.e.length-1]],"fourth");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3215=function(M){if(--M.cbt<0){throw _3215;}
M.c.push(new RT.PromptFrame(_3217,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2659,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3211=function(M){if(--M.cbt<0){throw _3211;}
M.c.push(new RT.PromptFrame(_3213,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2657,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3201=function(M){if(--M.cbt<0){throw _3201;}
M.c.push(new RT.PromptFrame(_3203,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2652,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3193=function(M){if(--M.cbt<0){throw _3193;}
M.c.push(new RT.PromptFrame(_3195,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2648,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3185=function(M){if(--M.cbt<0){throw _3185;}
M.c.push(new RT.PromptFrame(_3187,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_2644,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][69]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3148=function(M){if(--M.cbt<0){throw _3148;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3123=function(M){if(--M.cbt<0){throw _3123;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3095=function(M){if(--M.cbt<0){throw _3095;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"add1"));
M.e.pop();
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
return(_3089)(M);};

var _3076=function(M){if(--M.cbt<0){throw _3076;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3054=function(M){if(--M.cbt<0){throw _3054;}
return(_3052)(M);};

var _3030=function(M){if(--M.cbt<0){throw _3030;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2988=function(M){if(--M.cbt<0){throw _2988;}
return(_2984)(M);};

var _2958=function(M){if(--M.cbt<0){throw _2958;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2960)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2780=function(M){if(--M.cbt<0){throw _2780;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2763=function(M){if(--M.cbt<0){throw _2763;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2765,M.p));
return((M.p).label)(M);};

var _2739=function(M){if(--M.cbt<0){throw _2739;}
if(M.v===false){return(_2736)(M);}else{M.v=M.e[M.e.length-7];
return(_2737)(M);}};

var _3292=function(M){if(--M.cbt<0){throw _3292;}
M.e.length-=(M.a-1);
return(_3293)(M);};

var _3280=function(M){if(--M.cbt<0){throw _3280;}
M.e.length-=(M.a-1);
return(_3281)(M);};

var _3274=function(M){if(--M.cbt<0){throw _3274;}
M.e.length-=(M.a-1);
return(_3275)(M);};

var _3264=function(M){if(--M.cbt<0){throw _3264;}
M.e.length-=(M.a-1);
return(_3265)(M);};

var _3260=function(M){if(--M.cbt<0){throw _3260;}
M.e.length-=(M.a-1);
return(_3261)(M);};

var _3252=function(M){if(--M.cbt<0){throw _3252;}
M.e.length-=(M.a-1);
return(_3253)(M);};

var _3244=function(M){if(--M.cbt<0){throw _3244;}
M.e.length-=(M.a-1);
return(_3245)(M);};

var _3234=function(M){if(--M.cbt<0){throw _3234;}
M.e.length-=(M.a-1);
return(_3235)(M);};

var _3226=function(M){if(--M.cbt<0){throw _3226;}
M.e.length-=(M.a-1);
return(_3227)(M);};

var _3218=function(M){if(--M.cbt<0){throw _3218;}
M.e.length-=(M.a-1);
return(_3219)(M);};

var _3212=function(M){if(--M.cbt<0){throw _3212;}
M.e.length-=(M.a-1);
return(_3213)(M);};

var _3198=function(M){if(--M.cbt<0){throw _3198;}
M.e.length-=(M.a-1);
return(_3199)(M);};

var _3190=function(M){if(--M.cbt<0){throw _3190;}
M.e.length-=(M.a-1);
return(_3191)(M);};

var _3184=function(M){if(--M.cbt<0){throw _3184;}
M.e.length-=(M.a-1);
return(_3185)(M);};

var _2717=function(M){if(--M.cbt<0){throw _2717;}
M.e.length-=M.a;
return(_2718)(M);};


var _3168=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-5]);
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3172,M.p));
return((M.p).label)(M);};

var _3164=function(M){
M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){return(_3169)(M);}else{M.v=RT.isPair(M.e[M.e.length-5]);
return(_3170)(M);}};

var _2713=function(M){if(--M.cbt<0){throw _2713;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][37];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3165)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][38];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_3166)(M);}};

var _2712=function(M){if(--M.cbt<0){throw _2712;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][37];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3157)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-3][38];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_3158)(M);}};


var _3141=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2709)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2711)(M);}};

var _2672=function(M){if(--M.cbt<0){throw _2672;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2911)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2673,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_2673)(M);}};

var _2669=function(M){if(--M.cbt<0){throw _2669;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2899)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=8;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _2706=function(M){if(--M.cbt<0){throw _2706;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_3124)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};






var _2702=function(M){if(--M.cbt<0){throw _2702;}
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_3077)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _3044=function(M){
if(M.v===false){return(_3041)(M);}else{M.v=RT.VOID;
return(_3042)(M);}};


var _3025=function(M){
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_3027)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2697,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2697,2,[],"loop");
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3030,M.p));
return((M.p).label)(M);}};

var _2696=function(M){if(--M.cbt<0){throw _2696;}
M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2697,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=RT.NULL;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+1),1);
M.c[M.c.length-1].p=M.p;
return(_2697)(M);};

var _3009=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_3010)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_2694)(M);}};

var _3008=function(M){
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_3009)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2693)(M);}};

var _3001=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-8][22];
M.e[M.e.length-1]=RT.makeSymbol("split-at-right");
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3004,M.p));
return((M.p).label)(M);};

var _2992=function(M){
M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2985=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][22];
M.e[M.e.length-1]=RT.makeSymbol("drop-right");
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2988,M.p));
return((M.p).label)(M);};

var _2976=function(M){
M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2969=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-7][22];
M.e[M.e.length-1]=RT.makeSymbol("take-right");
M.e[M.e.length-2]=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2972,M.p));
return((M.p).label)(M);};

var _2964=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("take-right");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2965)(M);};

var _2955=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("drop");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2956)(M);};

var _2951=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2952)(M);};

var _2947=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("take");
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2948)(M);};

var _2680=function(M){if(--M.cbt<0){throw _2680;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][20];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2939)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2931=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("rest");
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2934=function(M){
if(M.v===false){return(_2931)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-2],0,"cdr")).rest;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2923=function(M){
if(M.v===false){return(_2920)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2675,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return(_2675)(M);}};

var _2911=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("last-pair");
M.e[M.e.length-2]="pair";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2899=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("eighth");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2879=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("third");
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2873=function(M){
M.v=false;
return(_2874)(M);};

var _2855=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2819=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"sub1"), 1);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2799=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][22];
M.e[M.e.length-1]=RT.makeSymbol("split-at");
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2795=function(M){
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2799)(M);}else{M.e.length+=5;
M.e[M.e.length-5]=M.e[M.e.length-6][63];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-9],0,"cdr")).rest;
M.e[M.e.length-4]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"sub1"), 1);
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-11],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(5+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2775=function(M){
M.v=M.e[M.e.length-1];
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-5][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.primitives["cdr"];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2782,M.p));
return((M.p).label)(M);};

var _2761=function(M){
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2760=function(M){
M.v=M.e[M.e.length-9];
return(_2761)(M);};

var _2748=function(M){
M.e.length+=4;
M.e[M.e.length-4]=M.e[M.e.length-7][68];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-11]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(4+7),7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2726=function(M){
M.e.length+=6;
M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-14],0,"cdr")).rest;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(6+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2724=function(M){
M.e.length+=5;
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.p=M.e[M.e.length-7][1];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_2725)(M);};

var _2716=function(M){
M.c.push(new RT.PromptFrame(_2718,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/list.rkt"]=new RT.ModuleRecord("list",_3183);
return(_3182)(M);};

var _2704=function(M){if(--M.cbt<0){throw _2704;}
M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_3120)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2703=function(M){if(--M.cbt<0){throw _2703;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][37];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3090)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3093,M.p));
return((M.p).label)(M);}};

var _2701=function(M){if(--M.cbt<0){throw _2701;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3076,M.p));
return((M.p).label)(M);};

var _2700=function(M){if(--M.cbt<0){throw _2700;}
M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_3073)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2699=function(M){if(--M.cbt<0){throw _2699;}
M.unspliceRestFromStack(2,(M.a-2));
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][37];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3043)(M);}else{M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.length+=1;
M.e.push(M.e[M.e.length-4][39]);
M.v=M.e[M.e.length-8];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3046,M.p));
return((M.p).label)(M);}};

var _2698=function(M){if(--M.cbt<0){throw _2698;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_3033)(M);}else{M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_3035)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2691=function(M){if(--M.cbt<0){throw _2691;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][32];
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2689=function(M){if(--M.cbt<0){throw _2689;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2996)(M);}else{M.v=RT.VOID;
return(_2997)(M);}};

var _2687=function(M){if(--M.cbt<0){throw _2687;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2980)(M);}else{M.v=RT.VOID;
return(_2981)(M);}};

var _2681=function(M){if(--M.cbt<0){throw _2681;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.length+=3;
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=RT.isList(M.e[M.e.length-9]);
if(M.v===false){return(_2945)(M);}else{M.e[M.e.length-3]="";
return(_2946)(M);}};

var _2677=function(M){if(--M.cbt<0){throw _2677;}
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2675=function(M){if(--M.cbt<0){throw _2675;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2927)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2675,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2673=function(M){if(--M.cbt<0){throw _2673;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2916)(M);}else{M.e.length+=2;
M.e[M.e.length-2]=new RT.Closure(_2673,2,[],"loop");
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2671=function(M){if(--M.cbt<0){throw _2671;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2907)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=10;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2670=function(M){if(--M.cbt<0){throw _2670;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2903)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][59];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=9;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2668=function(M){if(--M.cbt<0){throw _2668;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2895)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=7;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2666=function(M){if(--M.cbt<0){throw _2666;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2887)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=5;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2663=function(M){if(--M.cbt<0){throw _2663;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_2875)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2662=function(M){if(--M.cbt<0){throw _2662;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_2873)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_2874)(M);}};

var _2661=function(M){if(--M.cbt<0){throw _2661;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2865)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2867)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2660=function(M){if(--M.cbt<0){throw _2660;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2859)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2861)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2659=function(M){if(--M.cbt<0){throw _2659;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2853)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2855)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2658=function(M){if(--M.cbt<0){throw _2658;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2847)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2849)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2657=function(M){if(--M.cbt<0){throw _2657;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2841)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2843)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2656=function(M){if(--M.cbt<0){throw _2656;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2835)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2837)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2655=function(M){if(--M.cbt<0){throw _2655;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2829)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_2831)(M);}else{M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"car")).first;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2817=function(M){
M.e.length+=3;
M.e[M.e.length-1]=RT.makeSymbol("tenth");
M.e.length+=2;
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=10;
M.p=M.e[M.e.length-6][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-4][1];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2652=function(M){if(--M.cbt<0){throw _2652;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][20];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2813)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2651=function(M){if(--M.cbt<0){throw _2651;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-5]);
M.p=M.e[M.e.length-2][20];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_2805)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2649=function(M){if(--M.cbt<0){throw _2649;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_2789)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][64];
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-5],0,"cdr")).rest;
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-6],0,"cdr")).rest;
M.e.length+=2;
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-7],0,"car")).first;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2648=function(M){if(--M.cbt<0){throw _2648;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2785)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2646=function(M){if(--M.cbt<0){throw _2646;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2756)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2645=function(M){if(--M.cbt<0){throw _2645;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2742)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6]);
M.p=M.e[M.e.length-4][26];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-7]);
M.p=M.e[M.e.length-4][26];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+5),5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2644=function(M){if(--M.cbt<0){throw _2644;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2734)(M);}else{M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-2][26];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

_3185.mvr=_3184;
_3187.mvr=_3186;
_3189.mvr=_3188;
_3191.mvr=_3190;
_3193.mvr=_3192;
_3195.mvr=_3194;
_3197.mvr=_3196;
_3199.mvr=_3198;
_3201.mvr=_3200;
_3203.mvr=_3202;
_3205.mvr=_3204;
_3207.mvr=_3206;
_3209.mvr=_3208;
_3211.mvr=_3210;
_3213.mvr=_3212;
_3215.mvr=_3214;
_3217.mvr=_3216;
_3219.mvr=_3218;
_3221.mvr=_3220;
_3223.mvr=_3222;
_3225.mvr=_3224;
_3227.mvr=_3226;
_3229.mvr=_3228;
_3231.mvr=_3230;
_3233.mvr=_3232;
_3235.mvr=_3234;
_3237.mvr=_3236;
_3239.mvr=_3238;
_3241.mvr=_3240;
_3243.mvr=_3242;
_3245.mvr=_3244;
_3247.mvr=_3246;
_3249.mvr=_3248;
_3251.mvr=_3250;
_3253.mvr=_3252;
_3255.mvr=_3254;
_3257.mvr=_3256;
_3259.mvr=_3258;
_3261.mvr=_3260;
_3263.mvr=_3262;
_3265.mvr=_3264;
_3267.mvr=_3266;
_3269.mvr=_3268;
_3271.mvr=_3270;
_3273.mvr=_3272;
_3275.mvr=_3274;
_3277.mvr=_3276;
_3279.mvr=_3278;
_3281.mvr=_3280;
_3283.mvr=_3282;
_3285.mvr=_3284;
_3287.mvr=_3286;
_3289.mvr=_3288;
_3291.mvr=_3290;
_3293.mvr=_3292;
_2718.mvr=_2717;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3294, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/list.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/list.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3321=function(M){if(--M.cbt<0){throw _3321;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3312=function(M){if(--M.cbt<0){throw _3312;}
M.c.push(new RT.PromptFrame(_3314,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][5];
M.p=M.e[M.e.length-1][4];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3318,M.p));
return((M.p).label)(M);};

var _3320=function(M){if(--M.cbt<0){throw _3320;}
M.e.length-=(M.a-1);
return(_3321)(M);};

var _3318=function(M){if(--M.cbt<0){throw _3318;}
M.a=1;
return(_3319)(M);};

var _3304=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3300=function(M){
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",289,13,6,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",300,13,17,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][0];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",310,13,27,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"+"), 1);
M.c.pop();
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3303,M.p));
return((M.p).label)(M);};

var _3314=function(M){if(--M.cbt<0){throw _3314;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/utilities/random.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3303=function(M){if(--M.cbt<0){throw _3303;}
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3297=function(M){
M.c.push(new RT.PromptFrame(_3299,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/utilities/random.rkt"]=new RT.ModuleRecord("random",_3305);
return(_3304)(M);};

var _3308=function(M){if(--M.cbt<0){throw _3308;}
M.e.push([M.params.currentNamespace["interval"]||M.primitives["interval"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.params.currentNamespace["random-in-interval"]||M.primitives["random-in-interval"],M.primitives["random"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["interval","traced-app-key","random-in-interval","random","run-tests","print-values"];
M.modules["root/utilities/random.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3310,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3295,2,[M.e[M.e.length-1]],"interval");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3305=function(M){
M.modules["root/utilities/random.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_3306)(M);}else{return(_3308)(M);}};

var _3319=function(M){if(--M.cbt<0){throw _3319;}
if(M.a===0){return(_3316)(M);}else{M.e.push(M.v);
return(_3316)(M);}};

var _3309=function(M){if(--M.cbt<0){throw _3309;}
M.e.length-=(M.a-1);
return(_3310)(M);};

var _3310=function(M){if(--M.cbt<0){throw _3310;}
M.c.push(new RT.PromptFrame(_3312,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3296,2,[M.e[M.e.length-1]],"random-in-interval");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3313=function(M){if(--M.cbt<0){throw _3313;}
M.e.length-=(M.a-1);
return(_3314)(M);};

var _3296=function(M){if(--M.cbt<0){throw _3296;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",474,18,2,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",482,18,10,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",490,18,18,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-6][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",493,18,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"-"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,"-"));
M.c.pop();
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"+"), M.e[M.e.length-2]);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-4][3];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.c.pop();
M.v=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"+"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"+"));
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3295=function(M){if(--M.cbt<0){throw _3295;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>",260,11,6,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,">="))));
M.c.pop();
if(M.v===false){return(_3300)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3307=function(M){if(--M.cbt<0){throw _3307;}
M.e.length-=(M.a-1);
return(_3308)(M);};

var _3298=function(M){if(--M.cbt<0){throw _3298;}
M.e.length-=M.a;
return(_3299)(M);};

var _3311=function(M){if(--M.cbt<0){throw _3311;}
M.e.length-=(M.a-1);
return(_3312)(M);};

var _3322=function(M){
return(_3297)(M);};

var _3299=function(M){if(--M.cbt<0){throw _3299;}
};

var _3316=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3321,M.p));
return((M.p).label)(M);};

var _3306=function(M){
if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_3308)(M);}else{M.c.push(new RT.CallFrame(_3308,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

_3308.mvr=_3307;
_3310.mvr=_3309;
_3312.mvr=_3311;
_3318.mvr=_3319;
_3321.mvr=_3320;
_3314.mvr=_3313;
_3299.mvr=_3298;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3322, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/random.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/whalesong.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3337=function(M){
if(M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked!==false){return(_3339)(M);}else{M.c.push(new RT.CallFrame(_3339,M.p));
return(M.modules["whalesong/lang/check-expect/check-expect.rkt"].label)(M);}};

var _3334=function(M){
if(M.modules["whalesong/lang/private/shared.rkt"].isInvoked!==false){return(_3336)(M);}else{M.c.push(new RT.CallFrame(_3336,M.p));
return(M.modules["whalesong/lang/private/shared.rkt"].label)(M);}};

var _3343=function(M){
if(M.modules["whalesong/lang/posn.rkt"].isInvoked!==false){return(_3345)(M);}else{M.c.push(new RT.CallFrame(_3345,M.p));
return(M.modules["whalesong/lang/posn.rkt"].label)(M);}};

var _3326=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3345=function(M){if(--M.cbt<0){throw _3345;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/whalesong.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/whalesong.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3328=function(M){
if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3330)(M);}else{M.c.push(new RT.CallFrame(_3330,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3323=function(M){
M.c.push(new RT.PromptFrame(_3325,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/whalesong.rkt"]=new RT.ModuleRecord("whalesong",_3327);
return(_3326)(M);};

var _3344=function(M){if(--M.cbt<0){throw _3344;}
M.e.length-=(M.a-1);
return(_3345)(M);};

var _3340=function(M){
if(M.modules["whalesong/lang/bool.rkt"].isInvoked!==false){return(_3342)(M);}else{M.c.push(new RT.CallFrame(_3342,M.p));
return(M.modules["whalesong/lang/bool.rkt"].label)(M);}};

var _3335=function(M){if(--M.cbt<0){throw _3335;}
M.e.length-=(M.a-1);
return(_3336)(M);};

var _3325=function(M){if(--M.cbt<0){throw _3325;}
};

var _3331=function(M){
if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_3333)(M);}else{M.c.push(new RT.CallFrame(_3333,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}};

var _3327=function(M){
M.modules["whalesong/lang/whalesong.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3328)(M);}else{return(_3330)(M);}};

var _3332=function(M){if(--M.cbt<0){throw _3332;}
M.e.length-=(M.a-1);
return(_3333)(M);};

var _3342=function(M){if(--M.cbt<0){throw _3342;}
if((M.modules["whalesong/lang/posn.rkt"]!==undefined)!==false){return(_3343)(M);}else{return(_3345)(M);}};

var _3324=function(M){if(--M.cbt<0){throw _3324;}
M.e.length-=M.a;
return(_3325)(M);};

var _3333=function(M){if(--M.cbt<0){throw _3333;}
if((M.modules["whalesong/lang/private/shared.rkt"]!==undefined)!==false){return(_3334)(M);}else{return(_3336)(M);}};

var _3330=function(M){if(--M.cbt<0){throw _3330;}
if((M.modules["whalesong/lang/private/traced-app.rkt"]!==undefined)!==false){return(_3331)(M);}else{return(_3333)(M);}};

var _3338=function(M){if(--M.cbt<0){throw _3338;}
M.e.length-=(M.a-1);
return(_3339)(M);};

var _3336=function(M){if(--M.cbt<0){throw _3336;}
if((M.modules["whalesong/lang/check-expect/check-expect.rkt"]!==undefined)!==false){return(_3337)(M);}else{return(_3339)(M);}};

var _3329=function(M){if(--M.cbt<0){throw _3329;}
M.e.length-=(M.a-1);
return(_3330)(M);};

var _3339=function(M){if(--M.cbt<0){throw _3339;}
if((M.modules["whalesong/lang/bool.rkt"]!==undefined)!==false){return(_3340)(M);}else{return(_3342)(M);}};

var _3346=function(M){
return(_3323)(M);};

var _3341=function(M){if(--M.cbt<0){throw _3341;}
M.e.length-=(M.a-1);
return(_3342)(M);};

_3330.mvr=_3329;
_3333.mvr=_3332;
_3336.mvr=_3335;
_3339.mvr=_3338;
_3342.mvr=_3341;
_3345.mvr=_3344;
_3325.mvr=_3324;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3346, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/whalesong.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/whalesong.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/shared.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3352=function(M){
if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_3354)(M);}else{M.c.push(new RT.CallFrame(_3354,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}};

var _3347=function(M){
M.c.push(new RT.PromptFrame(_3349,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/shared.rkt"]=new RT.ModuleRecord("shared",_3351);
return(_3350)(M);};

var _3350=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3349=function(M){if(--M.cbt<0){throw _3349;}
};

var _3354=function(M){if(--M.cbt<0){throw _3354;}
M.e.push([M.params.currentNamespace["undefined"]||M.primitives["undefined"]]);M.e[M.e.length-1].names=["undefined"];
M.modules["whalesong/lang/private/shared.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3356,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([undefined]);
M.v=M.e[M.e.length-1][0];
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3351=function(M){
M.modules["whalesong/lang/private/shared.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/private/traced-app.rkt"]!==undefined)!==false){return(_3352)(M);}else{return(_3354)(M);}};

var _3359=function(M){
return(_3347)(M);};

var _3353=function(M){if(--M.cbt<0){throw _3353;}
M.e.length-=(M.a-1);
return(_3354)(M);};

var _3348=function(M){if(--M.cbt<0){throw _3348;}
M.e.length-=M.a;
return(_3349)(M);};

var _3356=function(M){if(--M.cbt<0){throw _3356;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/shared.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3355=function(M){if(--M.cbt<0){throw _3355;}
M.e.length-=(M.a-1);
return(_3356)(M);};

_3354.mvr=_3353;
_3356.mvr=_3355;
_3349.mvr=_3348;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3359, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/shared.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/shared.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/traced-app.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3366=function(M){if(--M.cbt<0){throw _3366;}
M.c.push(new RT.PromptFrame(_3368,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push(RT.makeSymbol("traced-callee-key"));
M.p=M.primitives["gensym"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3365=function(M){if(--M.cbt<0){throw _3365;}
M.e.length-=(M.a-1);
return(_3366)(M);};

var _3361=function(M){if(--M.cbt<0){throw _3361;}
M.e.length-=M.a;
return(_3362)(M);};

var _3362=function(M){if(--M.cbt<0){throw _3362;}
};

var _3364=function(M){
M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["traced-app-key"]||M.primitives["traced-app-key"],M.params.currentNamespace["traced-callee-key"]||M.primitives["traced-callee-key"]]);M.e[M.e.length-1].names=["traced-app-key","traced-callee-key"];
M.modules["whalesong/lang/private/traced-app.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3366,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push(RT.makeSymbol("traced-app-key"));
M.p=M.primitives["gensym"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3360=function(M){
M.c.push(new RT.PromptFrame(_3362,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/traced-app.rkt"]=new RT.ModuleRecord("traced-app",_3364);
return(_3363)(M);};

var _3369=function(M){
return(_3360)(M);};

var _3367=function(M){if(--M.cbt<0){throw _3367;}
M.e.length-=(M.a-1);
return(_3368)(M);};

var _3368=function(M){if(--M.cbt<0){throw _3368;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/traced-app.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3363=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3366.mvr=_3365;
_3368.mvr=_3367;
_3362.mvr=_3361;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3369, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/traced-app.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/private/traced-app.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/check-expect/check-expect.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3374=function(M){if(--M.cbt<0){throw _3374;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=(M.e[M.e.length-2]===0);
if(M.v===false){return(_3435)(M);}else{M.v="zero tests";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3433=function(M){if(--M.cbt<0){throw _3433;}
M.e.length-=(M.a-1);
return(_3434)(M);};




var _3402=function(M){if(--M.cbt<0){throw _3402;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3404,M.p));
return((M.p).label)(M);};



var _3370=function(M){if(--M.cbt<0){throw _3370;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-1][17]);
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3383,M.p));
return((M.p).label)(M);};



var _3371=function(M){if(--M.cbt<0){throw _3371;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-2];
M.e.length+=1;
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3426,M.p));
return((M.p).label)(M);};

var _3465=function(M){if(--M.cbt<0){throw _3465;}
M.c.push(new RT.PromptFrame(_3467,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3376,0,[M.e[M.e.length-1]],"run-tests");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3373=function(M){if(--M.cbt<0){throw _3373;}
M.e.push.apply(M.e,M.p.closedVals);
M.e[M.e.length-1][0]=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1][0]);
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3462=function(M){if(--M.cbt<0){throw _3462;}
M.e.length-=(M.a-1);
return(_3463)(M);};

var _3375=function(M){if(--M.cbt<0){throw _3375;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-4][9];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){return(_3439)(M);}else{M.e.length+=2;
M.e.length+=1;
M.e.length+=1;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=0;
M.p=M.e[M.e.length-7][13];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.p=M.e[M.e.length-5][12];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.p=M.e[M.e.length-4][11];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.p=M.e[M.e.length-5][14];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-3][10];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3450=function(M){if(--M.cbt<0){throw _3450;}
M.e.length-=(M.a-1);
return(_3451)(M);};


var _3435=function(M){
M.v=(M.e[M.e.length-2]===1);
if(M.v===false){return(_3437)(M);}else{M.v="one test";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3472=function(M){if(--M.cbt<0){throw _3472;}
if((M.a-5)===0){return(_3474)(M);}else{RT.si_context_expected(5)(M);
}};

var _3466=function(M){if(--M.cbt<0){throw _3466;}
M.e.length-=(M.a-1);
return(_3467)(M);};

var _3454=function(M){if(--M.cbt<0){throw _3454;}
M.e.length-=(M.a-1);
return(_3455)(M);};

var _3449=function(M){
if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3451)(M);}else{M.c.push(new RT.CallFrame(_3451,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3448=function(M){
M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3449)(M);}else{return(_3451)(M);}};

var _3439=function(M){
M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3474=function(M){
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=M.e[M.e.length-5];
M.e.length+=4;
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("result");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3476,M.p));
return((M.p).label)(M);};

var _3431=function(M){
M.e.length+=3;
M.e[M.e.length-1]="check-expect: actual value ~s differs from ~s, the expected value\n";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=M.e[M.e.length-6][3];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e.push(M.e[M.e.length-3][4]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3434,M.p));
return((M.p).label)(M);};

var _3458=function(M){if(--M.cbt<0){throw _3458;}
M.e.length-=(M.a-1);
return(_3459)(M);};

_3476=RT.si_context_expected(4);

var _3393=function(M){
M.e.length+=2;
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(M.e[M.e.length-5][16]);
if (M.e[M.e.length-6][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[0]); }
M.v=M.e[M.e.length-6][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3396,M.p));
return((M.p).label)(M);};

var _3380=function(M){
M.e.length+=1;
M.e.push(M.e[M.e.length-2][20]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3410,M.p));
return((M.p).label)(M);};

var _3385=function(M){
M.e[M.e.length-1][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3469=function(M){if(--M.cbt<0){throw _3469;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/check-expect/check-expect.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3463=function(M){if(--M.cbt<0){throw _3463;}
M.c.push(new RT.PromptFrame(_3465,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3375,1,[M.e[M.e.length-1]],"capitalize");
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3455=function(M){if(--M.cbt<0){throw _3455;}
M.c.push(new RT.PromptFrame(_3457,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3371,4,[M.e[M.e.length-1]],"check-expect*");
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3444=function(M){if(--M.cbt<0){throw _3444;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">"),M.e[M.e.length-2])));
M.e.length-=2;
if(M.v===false){return(_3441)(M);}else{M.e.push("Running tests...\n");
M.p=M.e[M.e.length-2][3];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-4][27];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.e.length+=1;
if (M.e[M.e.length-5][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-5][22];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+1),1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3426=function(M){if(--M.cbt<0){throw _3426;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3429,M.p));
return((M.p).label)(M);};

var _3406=function(M){if(--M.cbt<0){throw _3406;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3408,M.p));
return((M.p).label)(M);};

var _3398=function(M){if(--M.cbt<0){throw _3398;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3400,M.p));
return((M.p).label)(M);};

var _3387=function(M){if(--M.cbt<0){throw _3387;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.equals(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"="))));
M.e.length-=2;
if(M.v===false){return(_3384)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.length+=1;
M.e.length+=1;
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3389,M.p));
return((M.p).label)(M);}};

var _3459=function(M){if(--M.cbt<0){throw _3459;}
M.c.push(new RT.PromptFrame(_3461,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3373,1,[M.e[M.e.length-1]],"accumulate-test!");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3429=function(M){if(--M.cbt<0){throw _3429;}
M.e[M.e.length-1]=M.v;
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=M.e[M.e.length-5][2];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
if(M.v===false){return(_3431)(M);}else{M.v=true;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3418=function(M){if(--M.cbt<0){throw _3418;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3410=function(M){if(--M.cbt<0){throw _3410;}
M.e[M.e.length-1]=M.v;
M.e.length+=1;
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3413,M.p));
return((M.p).label)(M);};


var _3389=function(M){if(--M.cbt<0){throw _3389;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){return(_3391)(M);}else{M.e[M.e.length-2]="The test passed!";
return(_3390)(M);}};

var _3372=function(M){if(--M.cbt<0){throw _3372;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=4;
M.e[M.e.length-1]="  at: ~s, line ~s, column ~s\n";
M.e.push(M.e[M.e.length-6]);
M.p=M.primitives["srcloc-source"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-6]);
M.p=M.primitives["srcloc-line"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.e.push(M.e[M.e.length-6]);
M.p=M.primitives["srcloc-column"];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.p=M.e[M.e.length-5][3];
M.a=4;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};







var _3460=function(M){if(--M.cbt<0){throw _3460;}
M.e.length-=(M.a-1);
return(_3461)(M);};

var _3376=function(M){if(--M.cbt<0){throw _3376;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3444,M.p));
return((M.p).label)(M);};



var _3467=function(M){if(--M.cbt<0){throw _3467;}
M.c.push(new RT.PromptFrame(_3469,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("unexpected-no-error");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.p=M.primitives["current-inspector"];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.NULL);
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("unexpected-no-error");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3473,M.p));
return((M.p).label)(M);};

var _3468=function(M){if(--M.cbt<0){throw _3468;}
M.e.length-=(M.a-1);
return(_3469)(M);};

var _3464=function(M){if(--M.cbt<0){throw _3464;}
M.e.length-=(M.a-1);
return(_3465)(M);};

var _3452=function(M){if(--M.cbt<0){throw _3452;}
M.e.length-=(M.a-1);
return(_3453)(M);};

var _3451=function(M){if(--M.cbt<0){throw _3451;}
M.e.push([M.params.currentNamespace["*tests*"]||M.primitives["*tests*"],M.params.currentNamespace["check-expect*"]||M.primitives["check-expect*"],M.primitives["equal?"],M.primitives["printf"],M.params.currentNamespace["display-location"]||M.primitives["display-location"],M.params.currentNamespace["accumulate-test!"]||M.primitives["accumulate-test!"],M.params.currentNamespace["test-suffixed"]||M.primitives["test-suffixed"],M.primitives["format"],M.params.currentNamespace["capitalize"]||M.primitives["capitalize"],M.primitives["string-length"],M.primitives["string-append"],M.primitives["string"],M.primitives["char-upcase"],M.primitives["string-ref"],M.primitives["substring"],M.params.currentNamespace["run-tests"]||M.primitives["run-tests"],M.primitives["length"],M.modules["whalesong/lang/list.rkt"].namespace["empty?"],M.primitives["display"],M.primitives["newline"],M.modules["whalesong/lang/list.rkt"].namespace["first"],M.modules["whalesong/lang/list.rkt"].namespace["rest"],M.primitives["reverse"],M.params.currentNamespace["struct:unexpected-no-error"]||M.primitives["struct:unexpected-no-error"],M.params.currentNamespace["make-unexpected-no-error"]||M.primitives["make-unexpected-no-error"],M.params.currentNamespace["unexpected-no-error?"]||M.primitives["unexpected-no-error?"],M.params.currentNamespace["unexpected-no-error-result"]||M.primitives["unexpected-no-error-result"],false]);M.e[M.e.length-1].names=["*tests*","check-expect*","equal?","printf","display-location","accumulate-test!","test-suffixed","format","capitalize","string-length","string-append","string","char-upcase","string-ref","substring","run-tests","length","empty?","display","newline","first","rest","reverse","struct:unexpected-no-error","make-unexpected-no-error","unexpected-no-error?","unexpected-no-error-result",false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3453,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3370,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3400=function(M){if(--M.cbt<0){throw _3400;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-3][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e.length+=2;
M.e[M.e.length-1]="~a passed.\n";
M.e.push(M.e[M.e.length-3][8]);
M.e.push(M.e[M.e.length-4][6]);
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3402,M.p));
return((M.p).label)(M);};

var _3437=function(M){
M.e.length+=2;
M.e[M.e.length-1]="~a tests";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=M.e[M.e.length-3][7];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3475=function(M){if(--M.cbt<0){throw _3475;}
if((M.a-4)===0){return(_3471)(M);}else{RT.si_context_expected(4)(M);
}};

var _3471=function(M){
M.e.splice(M.e.length-(3+5),5);
M.e[M.e.length-4][23]=M.v;
M.e[M.e.length-4][24]=M.e[M.e.length-1];
M.e[M.e.length-4][25]=M.e[M.e.length-2];
M.e[M.e.length-4][26]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3456=function(M){if(--M.cbt<0){throw _3456;}
M.e.length-=(M.a-1);
return(_3457)(M);};

var _3447=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3473=RT.si_context_expected(5);

var _3391=function(M){
M.v=(M.e[M.e.length-1]===2);
if(M.v===false){return(_3393)(M);}else{M.e[M.e.length-2]="Both tests passed!";
return(_3390)(M);}};

var _3384=function(M){
M.e.length+=2;
M.e[M.e.length-1]="Ran ~a.\n";
M.e.push(M.e[M.e.length-3][6]);
M.e.push(M.e[M.e.length-4][16]);
if (M.e[M.e.length-5][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[0]); }
M.v=M.e[M.e.length-5][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3398,M.p));
return((M.p).label)(M);};

var _3377=function(M){
M.c.push(new RT.PromptFrame(_3379,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"]=new RT.ModuleRecord("check-expect",_3448);
return(_3447)(M);};

var _3415=function(M){
M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][27];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,"add1"));
M.e.push(M.e[M.e.length-6][21]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3422,M.p));
return((M.p).label)(M);};

var _3441=function(M){
M.v=RT.VOID;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3390=function(M){
M.e.pop();
M.p=M.e[M.e.length-2][18];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.p=M.e[M.e.length-1][19];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
return(_3385)(M);};

var _3478=function(M){
return(_3377)(M);};

var _3461=function(M){if(--M.cbt<0){throw _3461;}
M.c.push(new RT.PromptFrame(_3463,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3374,1,[M.e[M.e.length-1]],"test-suffixed");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3453=function(M){if(--M.cbt<0){throw _3453;}
M.c.push(new RT.PromptFrame(_3455,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=RT.NULL;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3379=function(M){if(--M.cbt<0){throw _3379;}
};

var _3413=function(M){if(--M.cbt<0){throw _3413;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3415)(M);}else{M.e.length+=3;
M.e[M.e.length-3]=M.e[M.e.length-6][27];
M.e[M.e.length-1]=plt.baselib.numbers.add(1, RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"add1"));
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-6][21]);
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3418,M.p));
return((M.p).label)(M);}};

var _3408=function(M){if(--M.cbt<0){throw _3408;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-3][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
return(_3385)(M);};

var _3396=function(M){if(--M.cbt<0){throw _3396;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-5][7];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
return(_3390)(M);};

var _3383=function(M){if(--M.cbt<0){throw _3383;}
if(M.v===false){return(_3380)(M);}else{M.v=M.e[M.e.length-4];
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-3][16]);
if (M.e[M.e.length-4][0]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.v=M.e[M.e.length-4][0];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3387,M.p));
return((M.p).label)(M);}};

var _3457=function(M){if(--M.cbt<0){throw _3457;}
M.c.push(new RT.PromptFrame(_3459,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3372,1,[M.e[M.e.length-1]],"display-location");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3434=function(M){if(--M.cbt<0){throw _3434;}
M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3422=function(M){if(--M.cbt<0){throw _3422;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(3+6),6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3404=function(M){if(--M.cbt<0){throw _3404;}
M.e[M.e.length-2]=M.v;
M.p=M.e[M.e.length-3][3];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.e.length+=2;
M.e[M.e.length-1]="~a failed.\n";
M.e.push(M.e[M.e.length-3][8]);
M.e.push(M.e[M.e.length-4][6]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3406,M.p));
return((M.p).label)(M);};

var _3378=function(M){if(--M.cbt<0){throw _3378;}
M.e.length-=M.a;
return(_3379)(M);};

_3434.mvr=_3433;
_3451.mvr=_3450;
_3453.mvr=_3452;
_3455.mvr=_3454;
_3457.mvr=_3456;
_3459.mvr=_3458;
_3461.mvr=_3460;
_3463.mvr=_3462;
_3465.mvr=_3464;
_3467.mvr=_3466;
_3473.mvr=_3472;
_3476.mvr=_3475;
_3469.mvr=_3468;
_3379.mvr=_3378;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3478, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/bool.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3508=function(M){if(--M.cbt<0){throw _3508;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/bool.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3504=function(M){if(--M.cbt<0){throw _3504;}
M.c.push(new RT.PromptFrame(_3506,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3480,2,[M.e[M.e.length-1]],"boolean=?");
M.e[M.e.length-1][3]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3507=function(M){if(--M.cbt<0){throw _3507;}
M.e.length-=(M.a-1);
return(_3508)(M);};

var _3497=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3483=function(M){if(--M.cbt<0){throw _3483;}
M.e.length-=M.a;
return(_3484)(M);};

var _3505=function(M){if(--M.cbt<0){throw _3505;}
M.e.length-=(M.a-1);
return(_3506)(M);};

var _3498=function(M){
M.modules["whalesong/lang/bool.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["true"]||M.primitives["true"],M.params.currentNamespace["false"]||M.primitives["false"],M.params.currentNamespace["false?"]||M.primitives["false?"],M.params.currentNamespace["boolean=?"]||M.primitives["boolean=?"],M.primitives["boolean?"],M.primitives["raise-type-error"],M.params.currentNamespace["symbol=?"]||M.primitives["symbol=?"],M.primitives["symbol?"]]);M.e[M.e.length-1].names=["true","false","false?","boolean=?","boolean?","raise-type-error","symbol=?","symbol?"];
M.modules["whalesong/lang/bool.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3500,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=true;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3480=function(M){if(--M.cbt<0){throw _3480;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3487)(M);}else{M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
return(_3488)(M);}};

var _3482=function(M){
M.c.push(new RT.PromptFrame(_3484,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/bool.rkt"]=new RT.ModuleRecord("bool",_3498);
return(_3497)(M);};

var _3499=function(M){if(--M.cbt<0){throw _3499;}
M.e.length-=(M.a-1);
return(_3500)(M);};

var _3479=function(M){if(--M.cbt<0){throw _3479;}
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3481=function(M){if(--M.cbt<0){throw _3481;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][7];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3493)(M);}else{M.e.push(M.e[M.e.length-3]);
M.p=M.e[M.e.length-2][7];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
return(_3494)(M);}};

var _3501=function(M){if(--M.cbt<0){throw _3501;}
M.e.length-=(M.a-1);
return(_3502)(M);};

var _3502=function(M){if(--M.cbt<0){throw _3502;}
M.c.push(new RT.PromptFrame(_3504,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3479,1,[],"false?");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3503=function(M){if(--M.cbt<0){throw _3503;}
M.e.length-=(M.a-1);
return(_3504)(M);};

var _3509=function(M){
return(_3482)(M);};

var _3500=function(M){if(--M.cbt<0){throw _3500;}
M.c.push(new RT.PromptFrame(_3502,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=false;
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3484=function(M){if(--M.cbt<0){throw _3484;}
};

var _3485=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("boolean=?");
M.e[M.e.length-2]="boolean";
M.e.push(M.e[M.e.length-7]);
M.p=M.e[M.e.length-7][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3489)(M);}else{M.e[M.e.length-3]=1;
return(_3490)(M);}};

var _3495=function(M){
M.e[M.e.length-3]=0;
return(_3496)(M);};

var _3491=function(M){
M.e.length+=5;
M.e[M.e.length-1]=RT.makeSymbol("symbol=?");
M.e[M.e.length-2]="symbol";
M.e.push(M.e[M.e.length-7]);
M.p=M.e[M.e.length-7][7];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
if(M.v===false){return(_3495)(M);}else{M.e[M.e.length-3]=1;
return(_3496)(M);}};

var _3489=function(M){
M.e[M.e.length-3]=0;
return(_3490)(M);};

var _3506=function(M){if(--M.cbt<0){throw _3506;}
M.c.push(new RT.PromptFrame(_3508,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3481,2,[M.e[M.e.length-1]],"symbol=?");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3494=function(M){
if(M.v===false){return(_3491)(M);}else{M.v=RT.VOID;
return(_3492)(M);}};

var _3490=function(M){
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][5];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3486)(M);};

var _3496=function(M){
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.p=M.e[M.e.length-6][5];
M.a=5;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=5;
return(_3492)(M);};

var _3493=function(M){
M.v=false;
return(_3494)(M);};

var _3486=function(M){
M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3492=function(M){
M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3487=function(M){
M.v=false;
return(_3488)(M);};

var _3488=function(M){
if(M.v===false){return(_3485)(M);}else{M.v=RT.VOID;
return(_3486)(M);}};

_3500.mvr=_3499;
_3502.mvr=_3501;
_3504.mvr=_3503;
_3506.mvr=_3505;
_3508.mvr=_3507;
_3484.mvr=_3483;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3509, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/bool.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/bool.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/posn.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3516=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3530=function(M){
return(_3511)(M);};

var _3513=function(M){if(--M.cbt<0){throw _3513;}
};

var _3518=function(M){if(--M.cbt<0){throw _3518;}
M.e.length-=(M.a-1);
return(_3519)(M);};

_3526=RT.si_context_expected(7);

var _3528=function(M){if(--M.cbt<0){throw _3528;}
M.e.length-=(M.a-1);
return(_3529)(M);};

var _3525=function(M){if(--M.cbt<0){throw _3525;}
if((M.a-7)===0){return(_3521)(M);}else{RT.si_context_expected(7)(M);
}};

_3523=RT.si_context_expected(5);

var _3519=function(M){if(--M.cbt<0){throw _3519;}
M.c.push(new RT.PromptFrame(_3529,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3510,2,[M.e[M.e.length-1]],"make-posn");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3522=function(M){if(--M.cbt<0){throw _3522;}
if((M.a-5)===0){return(_3524)(M);}else{RT.si_context_expected(5)(M);
}};

var _3510=function(M){if(--M.cbt<0){throw _3510;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=2;
if (M.e[M.e.length-3][1]===undefined){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[1]); }
M.e[M.e.length-2]=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3511=function(M){
M.c.push(new RT.PromptFrame(_3513,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/posn.rkt"]=new RT.ModuleRecord("posn",_3517);
return(_3516)(M);};

var _3524=function(M){
M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.length+=7;
M.e[M.e.length-7]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("x");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=RT.makeSymbol("y");
M.p=M.primitives["make-struct-field-accessor"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=RT.makeSymbol("x");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=RT.makeSymbol("y");
M.p=M.primitives["make-struct-field-mutator"];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3526,M.p));
return((M.p).label)(M);};

var _3517=function(M){
M.modules["whalesong/lang/posn.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace["struct:posn"]||M.primitives["struct:posn"],M.params.currentNamespace["posn1.1"]||M.primitives["posn1.1"],M.params.currentNamespace["posn?"]||M.primitives["posn?"],M.params.currentNamespace["posn-x"]||M.primitives["posn-x"],M.params.currentNamespace["posn-y"]||M.primitives["posn-y"],M.params.currentNamespace["set-posn-x!"]||M.primitives["set-posn-x!"],M.params.currentNamespace["set-posn-y!"]||M.primitives["set-posn-y!"],M.params.currentNamespace["make-posn"]||M.primitives["make-posn"]]);M.e[M.e.length-1].names=["struct:posn","posn1.1","posn?","posn-x","posn-y","set-posn-x!","set-posn-y!","make-posn"];
M.modules["whalesong/lang/posn.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3519,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.length+=5;
M.e.length+=11;
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=RT.makeSymbol("posn");
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.v=RT.makeSymbol("posn");
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3523,M.p));
return((M.p).label)(M);};

var _3521=function(M){
M.e.splice(M.e.length-(6+5),5);
M.e[M.e.length-7][0]=M.v;
M.e[M.e.length-7][1]=M.e[M.e.length-1];
M.e[M.e.length-7][2]=M.e[M.e.length-2];
M.e[M.e.length-7][3]=M.e[M.e.length-3];
M.e[M.e.length-7][4]=M.e[M.e.length-4];
M.e[M.e.length-7][5]=M.e[M.e.length-5];
M.e[M.e.length-7][6]=M.e[M.e.length-6];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3512=function(M){if(--M.cbt<0){throw _3512;}
M.e.length-=M.a;
return(_3513)(M);};

var _3529=function(M){if(--M.cbt<0){throw _3529;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/posn.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

_3523.mvr=_3522;
_3526.mvr=_3525;
_3519.mvr=_3518;
_3529.mvr=_3528;
_3513.mvr=_3512;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3530, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/posn.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Library/Racket/planet/300/5.2.1/cache/dyoo/whalesong.plt/1/14/lang/posn.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3548=function(M){
return(_3531)(M);};

var _3546=function(M){if(--M.cbt<0){throw _3546;}
M.e.length-=(M.a-1);
return(_3547)(M);};

var _3537=function(M){if(--M.cbt<0){throw _3537;}
M.e.length-=(M.a-1);
return(_3538)(M);};

var _3532=function(M){if(--M.cbt<0){throw _3532;}
M.e.length-=M.a;
return(_3533)(M);};

var _3539=function(M){if(--M.cbt<0){throw _3539;}
M.e.length-=(M.a-1);
return(_3540)(M);};

var _3538=function(M){if(--M.cbt<0){throw _3538;}
M.e.push([M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["run-tests","print-values"];
M.modules["root/lang/do.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3540,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][1];
M.p=M.e[M.e.length-1][0];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3544,M.p));
return((M.p).label)(M);};

var _3535=function(M){
M.modules["root/lang/do.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_3536)(M);}else{return(_3538)(M);}};

var _3533=function(M){if(--M.cbt<0){throw _3533;}
};

var _3534=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3545=function(M){if(--M.cbt<0){throw _3545;}
if(M.a===0){return(_3542)(M);}else{M.e.push(M.v);
return(_3542)(M);}};

var _3542=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3547,M.p));
return((M.p).label)(M);};

var _3536=function(M){
if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_3538)(M);}else{M.c.push(new RT.CallFrame(_3538,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _3544=function(M){if(--M.cbt<0){throw _3544;}
M.a=1;
return(_3545)(M);};

var _3540=function(M){if(--M.cbt<0){throw _3540;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/lang/do.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3547=function(M){if(--M.cbt<0){throw _3547;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3531=function(M){
M.c.push(new RT.PromptFrame(_3533,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/lang/do.rkt"]=new RT.ModuleRecord("do",_3535);
return(_3534)(M);};

_3538.mvr=_3537;
_3544.mvr=_3545;
_3547.mvr=_3546;
_3540.mvr=_3539;
_3533.mvr=_3532;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3548, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3620=function(M){if(--M.cbt<0){throw _3620;}
M.c.push(new RT.PromptFrame(_3622,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3556,2,[M.e[M.e.length-1]],"string-append-n");
M.e[M.e.length-1][14]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3616=function(M){if(--M.cbt<0){throw _3616;}
M.c.push(new RT.PromptFrame(_3618,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3554,1,[M.e[M.e.length-1]],"string-trim-right");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3608=function(M){if(--M.cbt<0){throw _3608;}
M.c.push(new RT.PromptFrame(_3610,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3550,2,[M.e[M.e.length-1]],"doloop");
M.e[M.e.length-1][23]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3559=function(M){if(--M.cbt<0){throw _3559;}
M.e.length-=M.a;
return(_3560)(M);};

var _3556=function(M){if(--M.cbt<0){throw _3556;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",715,31,6,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<="),0)));
M.c.pop();
if(M.v===false){return(_3587)(M);}else{M.v="";
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3615=function(M){if(--M.cbt<0){throw _3615;}
M.e.length-=(M.a-1);
return(_3616)(M);};

var _3609=function(M){if(--M.cbt<0){throw _3609;}
M.e.length-=(M.a-1);
return(_3610)(M);};

var _3606=function(M){if(--M.cbt<0){throw _3606;}
M.e.push([M.params.currentNamespace["string-reverse"]||M.primitives["string-reverse"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.primitives["list->string"],M.primitives["reverse"],M.primitives["string->list"],M.params.currentNamespace["string-trim-left"]||M.primitives["string-trim-left"],M.primitives["string=?"],M.modules["root/lang/char.rkt"].namespace["char-whitespace?"],M.primitives["string-ref"],M.primitives["void"],M.primitives["substring"],M.primitives["string-length"],M.params.currentNamespace["string-trim-right"]||M.primitives["string-trim-right"],M.params.currentNamespace["string-trim-both"]||M.primitives["string-trim-both"],M.params.currentNamespace["string-append-n"]||M.primitives["string-append-n"],M.primitives["string-append"],M.params.currentNamespace["stringify"]||M.primitives["stringify"],M.modules["whalesong/lang/private/map.rkt"].namespace["map2"],M.primitives["number?"],M.primitives["number->string"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"],false,false,false]);M.e[M.e.length-1].names=["string-reverse","traced-app-key","list->string","reverse","string->list","string-trim-left","string=?","char-whitespace?","string-ref","void","substring","string-length","string-trim-right","string-trim-both","string-append-n","string-append","stringify","map2","number?","number->string","run-tests","print-values",false,false,false];
M.modules["root/utilities/string.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3608,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3549,1,[M.e[M.e.length-1]],"...ities/string.rkt:38:14");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3599=function(M){if(--M.cbt<0){throw _3599;}
M.e.length-=(M.a-1);
return(_3600)(M);};

var _3554=function(M){if(--M.cbt<0){throw _3554;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",444,19,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="";
M.p=M.e[M.e.length-3][6];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
if(M.v===false){return(_3579)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3550=function(M){if(--M.cbt<0){throw _3550;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",519,22,9,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",524,22,14,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][7]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",542,22,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-5][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",556,22,46,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-2]=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],0,"-"), 1);
M.c.pop();
M.p=M.e[M.e.length-5][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3566,M.p));
return((M.p).label)(M);};

var _3553=function(M){if(--M.cbt<0){throw _3553;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",259,12,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="";
M.p=M.e[M.e.length-3][6];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
if(M.v===false){return(_3575)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3605=function(M){if(--M.cbt<0){throw _3605;}
M.e.length-=(M.a-1);
return(_3606)(M);};

var _3549=function(M){if(--M.cbt<0){throw _3549;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",892,38,30,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][18];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
if(M.v===false){return(_3561)(M);}else{M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",904,38,42,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.p=M.e[M.e.length-2][19];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3555=function(M){if(--M.cbt<0){throw _3555;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",630,26,2,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][12]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",652,27,3,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][5]);
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3584,M.p));
return((M.p).label)(M);};

var _3597=function(M){
M.modules["root/utilities/string.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_3598)(M);}else{return(_3600)(M);}};

var _3625=function(M){if(--M.cbt<0){throw _3625;}
M.e.length-=(M.a-1);
return(_3626)(M);};

var _3630=function(M){if(--M.cbt<0){throw _3630;}
M.a=1;
return(_3631)(M);};


var _3631=function(M){if(--M.cbt<0){throw _3631;}
if(M.a===0){return(_3628)(M);}else{M.e.push(M.v);
return(_3628)(M);}};

var _3598=function(M){
if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_3600)(M);}else{M.c.push(new RT.CallFrame(_3600,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _3632=function(M){if(--M.cbt<0){throw _3632;}
M.e.length-=(M.a-1);
return(_3633)(M);};

var _3628=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3633,M.p));
return((M.p).label)(M);};

var _3579=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][23];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",482,21,14,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-4][11];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3569=function(M){
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",884,25,30,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][22];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",299,14,16,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.add(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"+"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3604=function(M){
if(M.modules["root/lang/char.rkt"].isInvoked!==false){return(_3606)(M);}else{M.c.push(new RT.CallFrame(_3606,M.p));
return(M.modules["root/lang/char.rkt"].label)(M);}};

var _3626=function(M){if(--M.cbt<0){throw _3626;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/utilities/string.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3622=function(M){if(--M.cbt<0){throw _3622;}
M.c.push(new RT.PromptFrame(_3624,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3557,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"stringify");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3610=function(M){if(--M.cbt<0){throw _3610;}
M.c.push(new RT.PromptFrame(_3612,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3551,2,[M.e[M.e.length-1]],"doloop");
M.e[M.e.length-1][22]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3590=function(M){if(--M.cbt<0){throw _3590;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",788,34,8,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.p=M.e[M.e.length-4][15];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3572=function(M){if(--M.cbt<0){throw _3572;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.c.pop();
if(M.v===false){return(_3569)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",839,24,24,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][9];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.c.pop();
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",369,16,9,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",384,16,24,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.p=M.e[M.e.length-5][11];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.c.pop();
M.p=M.e[M.e.length-4][10];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3621=function(M){if(--M.cbt<0){throw _3621;}
M.e.length-=(M.a-1);
return(_3622)(M);};

var _3617=function(M){if(--M.cbt<0){throw _3617;}
M.e.length-=(M.a-1);
return(_3618)(M);};

var _3611=function(M){if(--M.cbt<0){throw _3611;}
M.e.length-=(M.a-1);
return(_3612)(M);};

var _3614=function(M){if(--M.cbt<0){throw _3614;}
M.c.push(new RT.PromptFrame(_3616,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3553,1,[M.e[M.e.length-1]],"string-trim-left");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3600=function(M){if(--M.cbt<0){throw _3600;}
if((M.modules["root/lang/do.rkt"]!==undefined)!==false){return(_3601)(M);}else{return(_3603)(M);}};



var _3613=function(M){if(--M.cbt<0){throw _3613;}
M.e.length-=(M.a-1);
return(_3614)(M);};

var _3607=function(M){if(--M.cbt<0){throw _3607;}
M.e.length-=(M.a-1);
return(_3608)(M);};

var _3603=function(M){if(--M.cbt<0){throw _3603;}
if((M.modules["root/lang/char.rkt"]!==undefined)!==false){return(_3604)(M);}else{return(_3606)(M);}};

var _3557=function(M){if(--M.cbt<0){throw _3557;}
M.unspliceRestFromStack(0,M.a);
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",841,37,2,104]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3][15];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",871,38,9,73]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-5][17];
M.e[M.e.length-1]=M.e[M.e.length-5][24];
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3593,M.p));
return((M.p).label)(M);};

var _3552=function(M){if(--M.cbt<0){throw _3552;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",180,9,2,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",194,9,16,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",203,9,25,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.p=M.e[M.e.length-4][4];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-3][3];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.c.pop();
M.p=M.e[M.e.length-2][2];
M.a=1;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3551=function(M){if(--M.cbt<0){throw _3551;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",318,15,9,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",323,15,14,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][7]);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",341,15,32,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.p=M.e[M.e.length-5][8];
M.a=2;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=2;
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3572,M.p));
return((M.p).label)(M);};



var _3602=function(M){if(--M.cbt<0){throw _3602;}
M.e.length-=(M.a-1);
return(_3603)(M);};

var _3593=function(M){if(--M.cbt<0){throw _3593;}
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3584=function(M){if(--M.cbt<0){throw _3584;}
M.c.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(1+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3587=function(M){
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",748,33,15,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-4][14];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-4][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",769,33,36,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"-"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3590,M.p));
return((M.p).label)(M);};

var _3633=function(M){if(--M.cbt<0){throw _3633;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3624=function(M){if(--M.cbt<0){throw _3624;}
M.c.push(new RT.PromptFrame(_3626,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][21];
M.p=M.e[M.e.length-1][20];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3630,M.p));
return((M.p).label)(M);};

var _3561=function(M){
M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3601=function(M){
if(M.modules["root/lang/do.rkt"].isInvoked!==false){return(_3603)(M);}else{M.c.push(new RT.CallFrame(_3603,M.p));
return(M.modules["root/lang/do.rkt"].label)(M);}};

var _3596=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3575=function(M){
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][22];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=0;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3563=function(M){
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",884,25,30,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=2;
M.e[M.e.length-2]=M.e[M.e.length-3][23];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",500,21,32,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.subtract(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"-"), 1);
M.c.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(2+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3558=function(M){
M.c.push(new RT.PromptFrame(_3560,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/utilities/string.rkt"]=new RT.ModuleRecord("string",_3597);
return(_3596)(M);};

var _3634=function(M){
return(_3558)(M);};

var _3618=function(M){if(--M.cbt<0){throw _3618;}
M.c.push(new RT.PromptFrame(_3620,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3555,1,[M.e[M.e.length-1]],"string-trim-both");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3612=function(M){if(--M.cbt<0){throw _3612;}
M.c.push(new RT.PromptFrame(_3614,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3552,1,[M.e[M.e.length-1]],"string-reverse");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3560=function(M){if(--M.cbt<0){throw _3560;}
};

var _3566=function(M){if(--M.cbt<0){throw _3566;}
M.e[M.e.length-1]=M.v;
M.c.pop();
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.c.pop();
if(M.v===false){return(_3563)(M);}else{M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/do.rkt>",839,24,24,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][9];
M.a=0;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.c.pop();
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>",576,23,9,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=3;
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.p=M.e[M.e.length-4][10];
M.a=3;
RT.checkPrimitiveArity(M);
M.v=M.p._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3623=function(M){if(--M.cbt<0){throw _3623;}
M.e.length-=(M.a-1);
return(_3624)(M);};

var _3619=function(M){if(--M.cbt<0){throw _3619;}
M.e.length-=(M.a-1);
return(_3620)(M);};

_3600.mvr=_3599;
_3603.mvr=_3602;
_3606.mvr=_3605;
_3608.mvr=_3607;
_3610.mvr=_3609;
_3612.mvr=_3611;
_3614.mvr=_3613;
_3616.mvr=_3615;
_3618.mvr=_3617;
_3620.mvr=_3619;
_3622.mvr=_3621;
_3624.mvr=_3623;
_3630.mvr=_3631;
_3633.mvr=_3632;
_3626.mvr=_3625;
_3560.mvr=_3559;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3634, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/utilities/string.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3658=function(M){if(--M.cbt<0){throw _3658;}
if(M.a===0){return(_3655)(M);}else{M.e.push(M.v);
return(_3655)(M);}};

var _3647=function(M){
if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_3649)(M);}else{M.c.push(new RT.CallFrame(_3649,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _3657=function(M){if(--M.cbt<0){throw _3657;}
M.a=1;
return(_3658)(M);};

var _3659=function(M){if(--M.cbt<0){throw _3659;}
M.e.length-=(M.a-1);
return(_3660)(M);};

var _3660=function(M){if(--M.cbt<0){throw _3660;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3655=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3660,M.p));
return((M.p).label)(M);};

var _3645=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3636=function(M){
M.c.push(new RT.PromptFrame(_3638,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/lang/char.rkt"]=new RT.ModuleRecord("char",_3646);
return(_3645)(M);};

var _3643=function(M){
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>",146,8,6,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===RT.makeChar("\t"));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3640=function(M){
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>",122,7,6,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(M.e[M.e.length-4]===RT.makeChar("\n"));
M.c.pop();
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3643)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3661=function(M){
return(_3636)(M);};

var _3653=function(M){if(--M.cbt<0){throw _3653;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/lang/char.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3652=function(M){if(--M.cbt<0){throw _3652;}
M.e.length-=(M.a-1);
return(_3653)(M);};

var _3650=function(M){if(--M.cbt<0){throw _3650;}
M.e.length-=(M.a-1);
return(_3651)(M);};

var _3637=function(M){if(--M.cbt<0){throw _3637;}
M.e.length-=M.a;
return(_3638)(M);};

var _3635=function(M){if(--M.cbt<0){throw _3635;}
M.e.push.apply(M.e,M.p.closedVals);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>",100,6,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(M.e[M.e.length-3]===RT.makeChar(" "));
M.c.pop();
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3640)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3649=function(M){if(--M.cbt<0){throw _3649;}
M.e.push([M.params.currentNamespace["char-whitespace?"]||M.primitives["char-whitespace?"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["char-whitespace?","traced-app-key","run-tests","print-values"];
M.modules["root/lang/char.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3651,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3635,1,[M.e[M.e.length-1]],"char-whitespace?");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3646=function(M){
M.modules["root/lang/char.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_3647)(M);}else{return(_3649)(M);}};

var _3638=function(M){if(--M.cbt<0){throw _3638;}
};

var _3648=function(M){if(--M.cbt<0){throw _3648;}
M.e.length-=(M.a-1);
return(_3649)(M);};

var _3651=function(M){if(--M.cbt<0){throw _3651;}
M.c.push(new RT.PromptFrame(_3653,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][3];
M.p=M.e[M.e.length-1][2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3657,M.p));
return((M.p).label)(M);};

_3649.mvr=_3648;
_3651.mvr=_3650;
_3657.mvr=_3658;
_3660.mvr=_3659;
_3653.mvr=_3652;
_3638.mvr=_3637;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3661, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/char.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3691=function(M){if(--M.cbt<0){throw _3691;}
M.a=1;
return(_3692)(M);};

var _3685=function(M){if(--M.cbt<0){throw _3685;}
M.c.push(new RT.PromptFrame(_3687,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][6];
M.p=M.e[M.e.length-1][5];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3691,M.p));
return((M.p).label)(M);};

var _3693=function(M){if(--M.cbt<0){throw _3693;}
M.e.length-=(M.a-1);
return(_3694)(M);};

var _3687=function(M){if(--M.cbt<0){throw _3687;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/lang/primitives.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3683=function(M){if(--M.cbt<0){throw _3683;}
M.c.push(new RT.PromptFrame(_3685,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3665,1,[M.e[M.e.length-1]],"caddr");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3686=function(M){if(--M.cbt<0){throw _3686;}
M.e.length-=(M.a-1);
return(_3687)(M);};

var _3692=function(M){if(--M.cbt<0){throw _3692;}
if(M.a===0){return(_3689)(M);}else{M.e.push(M.v);
return(_3689)(M);}};

var _3681=function(M){if(--M.cbt<0){throw _3681;}
M.c.push(new RT.PromptFrame(_3683,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3664,1,[M.e[M.e.length-1]],"cadr");
M.e[M.e.length-1][3]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3674=function(M){
M.modules["root/lang/primitives.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_3675)(M);}else{return(_3677)(M);}};

var _3684=function(M){if(--M.cbt<0){throw _3684;}
M.e.length-=(M.a-1);
return(_3685)(M);};

var _3664=function(M){if(--M.cbt<0){throw _3664;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",166,12,2,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",171,12,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-3],0,"cdr")).rest;
M.c.pop();
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3665=function(M){if(--M.cbt<0){throw _3665;}
M.e.push.apply(M.e,M.p.closedVals);
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",202,15,2,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-2][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",207,15,7,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.length+=1;
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-3][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",212,15,12,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e[M.e.length-1]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-4],0,"cdr")).rest;
M.c.pop();
M.e[M.e.length-2]=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"cdr")).rest;
M.e.pop();
M.c.pop();
M.v=(RT.testArgument(M,"pair",RT.isPair,M.e[M.e.length-1],0,"car")).first;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3682=function(M){if(--M.cbt<0){throw _3682;}
M.e.length-=(M.a-1);
return(_3683)(M);};

var _3677=function(M){if(--M.cbt<0){throw _3677;}
M.e.push([M.params.currentNamespace["min"]||M.primitives["min"],M.modules["whalesong/lang/private/traced-app.rkt"].namespace["traced-app-key"],M.params.currentNamespace["max"]||M.primitives["max"],M.params.currentNamespace["cadr"]||M.primitives["cadr"],M.params.currentNamespace["caddr"]||M.primitives["caddr"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].namespace["run-tests"],M.modules["collects/racket/private/modbeg.rkt"].namespace["print-values"]]);M.e[M.e.length-1].names=["min","traced-app-key","max","cadr","caddr","run-tests","print-values"];
M.modules["root/lang/primitives.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3679,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3662,2,[M.e[M.e.length-1]],"min");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3667=function(M){if(--M.cbt<0){throw _3667;}
M.e.length-=M.a;
return(_3668)(M);};

var _3680=function(M){if(--M.cbt<0){throw _3680;}
M.e.length-=(M.a-1);
return(_3681)(M);};

var _3663=function(M){if(--M.cbt<0){throw _3663;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",132,9,6,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.greaterThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,">"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,">"))));
M.c.pop();
if(M.v===false){return(_3671)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3668=function(M){if(--M.cbt<0){throw _3668;}
};

var _3662=function(M){if(--M.cbt<0){throw _3662;}
M.e.push.apply(M.e,M.p.closedVals);
M.c.push(new RT.Frame());
M.v=M.e[M.e.length-1][1];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(5,["#<path:/Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>",93,6,8,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"<"))));
M.c.pop();
if(M.v===false){return(_3669)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3676=function(M){if(--M.cbt<0){throw _3676;}
M.e.length-=(M.a-1);
return(_3677)(M);};

var _3689=function(M){
M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3694,M.p));
return((M.p).label)(M);};

var _3678=function(M){if(--M.cbt<0){throw _3678;}
M.e.length-=(M.a-1);
return(_3679)(M);};

var _3679=function(M){if(--M.cbt<0){throw _3679;}
M.c.push(new RT.PromptFrame(_3681,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.v=new RT.Closure(_3663,2,[M.e[M.e.length-1]],"max");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3671=function(M){
M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3695=function(M){
return(_3666)(M);};

var _3675=function(M){
if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_3677)(M);}else{M.c.push(new RT.CallFrame(_3677,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _3694=function(M){if(--M.cbt<0){throw _3694;}
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3673=function(M){
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3669=function(M){
M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3666=function(M){
M.c.push(new RT.PromptFrame(_3668,RT.DEFAULT_CONTINUATION_PROMPT_TAG));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/lang/primitives.rkt"]=new RT.ModuleRecord("primitives",_3674);
return(_3673)(M);};

_3677.mvr=_3676;
_3679.mvr=_3678;
_3681.mvr=_3680;
_3683.mvr=_3682;
_3685.mvr=_3684;
_3691.mvr=_3692;
_3694.mvr=_3693;
_3687.mvr=_3686;
_3668.mvr=_3667;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3695, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/stxmat-exercises/lang/primitives.rkt>");
                          }
                     },
                     {});